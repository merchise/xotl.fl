---
stages:
  - pre-check
  - test doc
  - test
  - check
  - build
  - publish
  - clean up

check code smells:
  image: python:3.6
  script:
    - pip install tox
    - tox -e system-lint
  stage: pre-check
  allow_failure: true
  only:
    - master
    - merge_requests

.run_tox_tests: &run_tox_tests
  image: python:$PYTHON
  stage: test
  script:
    - pip install tox
    - tox -e system-unit

.run_tox_staticcheck: &run_tox_staticcheck
  image: python:3.6
  stage: pre-check
  script:
    - pip install tox
    - tox -e 3.6-staticcheck

.run_tox_doctest: &run_tox_doctest
  image: python:3.6
  stage: test
  script:
    - pip install tox
    - tox -e 3.6-doctest

run tests with Python 3.6:
  <<: *run_tox_tests
  variables:
    PYTHON: "3.6"
  only:
    - master
    - merge_requests

run tests with Python 3.7:
  <<: *run_tox_tests
  variables:
    PYTHON: "3.7"
  only:
    - master
    - merge_requests

run tests with Python 3.8:
  <<: *run_tox_tests
  variables:
    PYTHON: "3.8"
  only:
    - master
    - merge_requests

run tests with Python 3.9:
  <<: *run_tox_tests
  variables:
    PYTHON: "3.9"
  only:
    - master
    - merge_requests

run static checks in MRs:
  <<: *run_tox_staticcheck
  only:
    - merge_requests

run doctests:
  <<: *run_tox_doctest
  only:
    - master
    - merge_requests
  allow_failure: true


run coverage tests:
  image: python:3.6
  stage: test
  script:
    - pip install tox
    - tox -e 3.6-coverage
  allow_failure: true
  only:
    - master
    - merge_requests


check signature of tag:
  image: alpine
  stage: check
  script:
    - apk add --virtual .build-deps \
      --repository http://dl-cdn.alpinelinux.org/alpine/v3.11/community \
      --repository http://dl-cdn.alpinelinux.org/alpine/v3.11/main \
      git gnupg
    - gpg --recv-key $GNUPG_KEY
    - git verify-tag $CI_COMMIT_REF_NAME
  only:
    - tags

build source distribution:
  image: python:3.6-alpine
  stage: build
  script:
    - rm -f dist/*
    - python setup.py sdist
  artifacts:
    paths:
      - dist/
  only:
    - tags

build binary distribution:
  image: python:3.6-alpine
  stage: build
  script:
    - pip install wheel
    - python setup.py bdist_wheel
  artifacts:
    paths:
      - dist/
  only:
    - tags

publish_locally:
  stage: publish
  script:
    - ssh manu@gestion.lahavane.com "mkdir -p Repos/$CI_PROJECT_NAME"
    - scp dist/* manu@gestion.lahavane.com:Repos/$CI_PROJECT_NAME/
  tags:
    - repo.lahavane.com
  only:
    - tags
  environment:
    name: repo.lahavane.com
    url: http://repo.lahavane.com/pypi/$CI_PROJECT_NAME
  dependencies:
    - check signature of tag
    - build source distribution
    - build binary distribution


publish_pypi:
  image: python:3.6
  stage: publish
  script:
    - pip install twine
    - twine upload -u "$PYPI_USERNAME" -p "$PYPI_PASSWORD" dist/*
  only:
    - tags
  dependencies:
    - check signature of tag
    - build source distribution
    - build binary distribution
  environment:
    name: pypi
    url: https://pypi.python.org/pypi/$CI_PROJECT_NAME


.build-doc: &build-documentation
  image: python:3.6
  stage: build
  script:
    - |
      apt-get update
      apt-get install -y --no-install-recommends git make
      pip install -e .
      pip install sphinx sphinx-rtd-theme
      make -C docs/ html
      mkdir -p public
      cp -r docs/build/html/* public/
  artifacts:
    paths:
      - docs/build
      - public
    expire_in: 4 days

build documentation:
  <<: *build-documentation
  needs: []
  only:  &when-building-documentation-only
    refs:
      - tags
      - /^releases-/
      - master
      - merge_requests

publish in our rtd:
  image: alpine
  variables:
    GIT_STRATEGY: none
  stage: publish
  script:
    - |
      apk add openssh rsync
      mkdir -p $HOME/.ssh
      chmod 700 $HOME/.ssh
      cp $RSA_KEY_FILE $HOME/.ssh/id_rsa
      chmod 600 $HOME/.ssh/id_rsa
      cp $SSH_CONFIG_FILE $HOME/.ssh/config
      ssh docs.lahavane.com mkdir -p /data/$CI_PROJECT_NAME/.$CI_COMMIT_SHA
      rsync -auvp -e ssh ./docs/build/html/ docs.lahavane.com:/data/$CI_PROJECT_NAME/.$CI_COMMIT_SHA/
      ssh docs.lahavane.com "cd /data/$CI_PROJECT_NAME; rm -r $CI_COMMIT_REF_NAME; ln -s .$CI_COMMIT_SHA $CI_COMMIT_REF_NAME"
      ssh docs.lahavane.com "cd /data/$CI_PROJECT_NAME; ls -al | grep -oE '\.([0-9]|[a-z])*$' | sort | uniq -c | grep '1 ' | grep -oE '\.([0-9]|[a-z])*$' | xargs rm -rf"
  needs:
    - build documentation
  environment:
    name: docs.lahavane.com
    url: https://docs.lahavane.com/$CI_PROJECT_NAME/$CI_COMMIT_REF_NAME
  tags:
    - gitlab.merchise.org
  only:
    <<: *when-building-documentation-only


pages:
  <<: *build-documentation
  needs: []
  only:
    - master


automatically remove MR documentation from our RTD server after 4 hours:
  stage: clean up
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: on_success
    - when: never
  trigger:
    include: ci/cleanup.yml
