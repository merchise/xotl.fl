---
stages:
  - test
  - coverage
  - build
  - publish
  - clean up

workflow:
  auto_cancel:
    on_new_commit: interruptible
    on_job_failure: all

.x-code: &code
  - pyproject.toml
  - requirements-dev-*.lock
  - src/**/*.py
  - src/**/*.pyi
  - .gitlab-ci.yml
  - tox.ini
  - mypy.ini

.x-code-and-docs: &code-and-docs
  - docs/**/*.rst
  - docs/**/*.css
  - docs/source/conf.py
  - pyproject.toml
  - requirements-dev-*.lock
  - src/**/*.py
  - src/**/*.pyi
  - .gitlab-ci.yml
  - tox.ini
  - mypy.ini

check code smells:
  interruptible: true
  image: python:3.8
  script:
    - pip install tox
    - tox -e system-lint
  stage: test
  tags:
    - docker
  rules:
    - if: $CI_SERVER_HOST != "gitlab.merchise.org"
      when: never
    - if: $CI_MERGE_REQUEST_IID || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes: *code

.run_tox_tests: &run_tox_tests
  interruptible: true
  image: python:$PYTHON
  stage: test
  script:
    - pip install tox
    - tox -e system-${suite}${xotl_version} -- -n auto --maxprocesses=4
  tags:
    - docker
  artifacts:
    name: "coverage-$PYTHON"
    paths:
      - .coverage

tests:
  <<: *run_tox_tests
  variables:
    suite: "unit"
    PYTHON_WORKERS: auto
    PYTHON_MAXWORKERS: 4
  parallel:
    matrix:
      - PYTHON: ["3.8", "3.11", "3.12"]
        xotl_version: ["-2.2", "-3.1", "-3.0"]
  rules:
    - if: $CI_SERVER_HOST != "gitlab.merchise.org"
      when: never
    - if: $CI_MERGE_REQUEST_IID || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes: *code


.run_tox_staticcheck: &run_tox_staticcheck
  interruptible: true
  image: python:$PYTHON
  stage: test
  tags:
    - docker
  script:
    - pip install tox
    - tox -e system-staticcheck

run static checks:
  <<: *run_tox_staticcheck
  rules:
    - if: $CI_SERVER_HOST != "gitlab.merchise.org"
      when: never
    - if: $CI_MERGE_REQUEST_IID || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes: *code
  parallel:
    matrix:
      - PYTHON: ["3.8", "3.11", "3.12"]


.run_tox_doctest: &run_tox_doctest
  interruptible: true
  image: python:$PYTHON
  stage: test
  tags:
    - docker
  script:
    - pip install tox
    - tox -e system-doctest


run doctests:
  <<: *run_tox_doctest
  rules:
    - if: $CI_SERVER_HOST != "gitlab.merchise.org"
      when: never
    - if: $CI_MERGE_REQUEST_IID || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes: *code-and-docs
  parallel:
    matrix:
      - PYTHON: ["3.8", "3.11", "3.12"]

coverage:
  interruptible: true
  needs:
    - check code smells
    - run static checks
    - tests
  image: python:3.12
  stage: coverage
  script:
    - |
      pip install -r requirements-dev-py312.lock
      coverage report --precision=2 --rcfile=pyproject.toml --fail-under=95 | tee report.txt
      echo "Total coverage: " $(grep '^TOTAL' report.txt | awk '{print $4}')
  coverage: '/Total coverage[:].*/'
  artifacts:
    name: "coverage-3.12"
    expire_in: 1 day
    paths:
      - .coverage
  tags:
    - docker
  rules:
    - if: $CI_MERGE_REQUEST_IID || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes: *code

build distributions:
  image: python:3.8
  stage: build
  script:
    - apt-get update; apt-get install -y git
    - pip install hatch
    - hatch build
  artifacts:
    paths:
      - dist/
  tags:
    - docker
  rules:
    - if: $CI_SERVER_HOST != "gitlab.merchise.org"
      when: never
    - if: $CI_MERGE_REQUEST_IID
      changes: *code
    - if: $CI_COMMIT_TAG =~ /^\d+(\.\d+)*(a\d+|b\d+|rc\d+)?(\.post\d+)?$/


.build-doc: &build-documentation
  image: python:3.12
  stage: build
  script:
    - pip install -r requirements-dev-py312.lock
    - make -C docs html
    - mkdir -p public
    - cp -r docs/build/html/* public/
  tags:
    - docker
  artifacts:
    paths:
      - docs/build/html
      - public/

build documentation:
  <<: *build-documentation
  interruptible: true
  needs: []
  rules:
    - if: $CI_SERVER_HOST != "gitlab.merchise.org"
      when: never
    - if: $CI_MERGE_REQUEST_IID || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes: *code-and-docs

pages:
  <<: *build-documentation
  needs: []
  rules:
    - if: $CI_SERVER_HOST != "gitlab.com"
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

publish_pypi:
  variables:
    GIT_STRATEGY: none
  image: python:3.11
  stage: publish
  script:
    - pip install twine
    - twine upload -u "$PYPI_USERNAME" -p "$PYPI_PASSWORD" dist/*
  tags:
    - docker
  rules:
    - if: $CI_SERVER_HOST != "gitlab.merchise.org"
      when: never
    - if: $CI_COMMIT_TAG =~ /^\d+(\.\d+)*(a\d+|b\d+|rc\d+)?(\.post\d+)?$/
  needs:
    - build distributions
  environment:
    name: pypi
    url: https://pypi.org/project/$CI_PROJECT_NAME


publish in our rtd:
  interruptible: true
  variables:
    GIT_STRATEGY: none
  stage: publish
  needs:
    - build documentation
  image: alpine
  script:
    - |
      apk add openssh rsync
      mkdir -p $HOME/.ssh
      chmod 700 $HOME/.ssh
      cp $RSA_KEY_FILE $HOME/.ssh/id_rsa
      chmod 600 $HOME/.ssh/id_rsa
      cp $SSH_CONFIG_FILE $HOME/.ssh/config
      ssh docs.lahavane.com mkdir -p /data/$CI_PROJECT_NAME/.$CI_COMMIT_SHA
      rsync -auvp -e ssh docs/build/html/ docs.lahavane.com:/data/$CI_PROJECT_NAME/.$CI_COMMIT_SHA/
      ssh docs.lahavane.com "cd /data/$CI_PROJECT_NAME; rm -r $CI_COMMIT_REF_NAME; ln -s .$CI_COMMIT_SHA $CI_COMMIT_REF_NAME"
      ssh docs.lahavane.com "cd /data/$CI_PROJECT_NAME; ls -al | grep -oE '\.([0-9]|[a-z])*$' | sort | uniq -c | grep '1 ' | grep -oE '\.([0-9]|[a-z])*$' | xargs rm -rf"
  environment:
    name: docs.lahavane.com
    url: http://docs.lahavane.com/$CI_PROJECT_NAME/$CI_COMMIT_REF_NAME
  rules:
    - if: $CI_SERVER_HOST != "gitlab.merchise.org"
      when: never
    - if: $CI_MERGE_REQUEST_IID || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes: *code-and-docs
  tags:
    - docker


automatically remove MR documentation from our RTD server after 4 hours:
  stage: clean up
  rules:
    - if: $CI_SERVER_HOST != "gitlab.merchise.org"
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: never
    - if: $CI_MERGE_REQUEST_IID
      when: always
    - when: never
  trigger:
    include: ci/cleanup.yml
