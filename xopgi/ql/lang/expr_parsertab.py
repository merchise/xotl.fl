
# expr_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'st_exprrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FLOAT IDENTIFIER KEYWORD_CLASS KEYWORD_DATA KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LPAREN MINUS OPERATOR PADDING PERCENT PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATORexpr_factor : expr_factor SPACE expr_factor\n    expr_term9 : expr_factor infix_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infix_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infix_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infix_operator_2 expr_term6\n               | expr_term6\n\n    expr_term0 : expr infix_operator_0 expr_term0\n               | expr_term2\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | unit_value\n                | letexpr\n                | where_expr\n                | lambda_expr\n\n    st_type_expr : type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    unit_value : LPAREN RPAREN\n    char : CHARstring : STRINGidentifier : IDENTIFIERenclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : LPAREN DOT_OPERATOR RPAREN\n                     | LPAREN operator RPAREN\n    \n    infix_operator_9 : DOT_OPERATOR\n\n    infix_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infix_operator_6 : PLUS\n                     | MINUS\n\n    infix_operator_2 : OPERATOR\n                     | ARROW\n\n    infix_operator_0 : TICK_OPERATOR\n\n    operator : infix_operator_0\n             | infix_operator_2\n             | infix_operator_6\n             | infix_operator_7\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH parameters ARROW expr\n    parameters : IDENTIFIER _parameters\n    _parameters : SPACE IDENTIFIER _parameters_parameters : empty\n    pattern : parametersequation : pattern EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    program : st_expr\n               | st_type_expr\n    type_expr : type_function_expr\n                 | type_termtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_factor : IDENTIFIERtype_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET_maybe_padding : PADDING\n                      | empty\n    '
    
_lr_action_items = {'IDENTIFIER':([0,11,25,27,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,60,69,74,75,84,85,86,91,93,99,101,104,],[24,24,24,71,24,-52,24,-50,-51,24,-48,-49,24,-44,-45,-46,-47,24,24,-43,24,24,71,71,71,-38,-41,-42,24,103,71,24,24,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,73,76,77,78,79,80,81,82,83,84,85,86,88,91,95,96,98,100,101,102,104,105,106,108,109,],[25,-12,-13,-11,-9,-7,-5,57,-14,-15,25,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,25,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,25,-52,25,-50,-51,25,-48,-49,25,-44,-45,-46,-47,25,25,-40,-43,25,57,-34,-10,-8,-6,-4,-2,-1,-62,-63,-64,-38,-41,-42,-65,25,-76,-77,-72,-74,25,-66,25,-65,-71,-75,-73,]),'KEYWORD_LET':([0,11,25,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,84,85,86,91,101,104,],[26,26,26,26,-52,26,-50,-51,26,-48,-49,26,-44,-45,-46,-47,26,26,-43,26,-38,-41,-42,26,26,26,]),'BACKSLASH':([0,11,25,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,84,85,86,91,101,104,],[27,27,27,27,-52,27,-50,-51,27,-48,-49,27,-44,-45,-46,-47,27,27,-43,27,-38,-41,-42,27,27,27,]),'BASE10_INTEGER':([0,11,25,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,84,85,86,91,101,104,],[28,28,28,28,-52,28,-50,-51,28,-48,-49,28,-44,-45,-46,-47,28,28,-43,28,-38,-41,-42,28,28,28,]),'BASE16_INTEGER':([0,11,25,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,84,85,86,91,101,104,],[29,29,29,29,-52,29,-50,-51,29,-48,-49,29,-44,-45,-46,-47,29,29,-43,29,-38,-41,-42,29,29,29,]),'BASE8_INTEGER':([0,11,25,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,84,85,86,91,101,104,],[30,30,30,30,-52,30,-50,-51,30,-48,-49,30,-44,-45,-46,-47,30,30,-43,30,-38,-41,-42,30,30,30,]),'BASE2_INTEGER':([0,11,25,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,84,85,86,91,101,104,],[31,31,31,31,-52,31,-50,-51,31,-48,-49,31,-44,-45,-46,-47,31,31,-43,31,-38,-41,-42,31,31,31,]),'FLOAT':([0,11,25,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,84,85,86,91,101,104,],[32,32,32,32,-52,32,-50,-51,32,-48,-49,32,-44,-45,-46,-47,32,32,-43,32,-38,-41,-42,32,32,32,]),'STRING':([0,11,25,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,60,84,85,86,91,101,104,],[33,33,33,33,-52,33,-50,-51,33,-48,-49,33,-44,-45,-46,-47,33,33,-43,33,33,-38,-41,-42,33,33,33,]),'CHAR':([0,11,25,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,60,84,85,86,91,101,104,],[34,34,34,34,-52,34,-50,-51,34,-48,-49,34,-44,-45,-46,-47,34,34,-43,34,34,-38,-41,-42,34,34,34,]),'DATE':([0,11,25,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,84,85,86,91,101,104,],[35,35,35,35,-52,35,-50,-51,35,-48,-49,35,-44,-45,-46,-47,35,35,-43,35,-38,-41,-42,35,35,35,]),'DATETIME':([0,11,25,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,84,85,86,91,101,104,],[36,36,36,36,-52,36,-50,-51,36,-48,-49,36,-44,-45,-46,-47,36,36,-43,36,-38,-41,-42,36,36,36,]),'DATE_INTERVAL':([0,11,25,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,84,85,86,91,101,104,],[37,37,37,37,-52,37,-50,-51,37,-48,-49,37,-44,-45,-46,-47,37,37,-43,37,-38,-41,-42,37,37,37,]),'DATETIME_INTERVAL':([0,11,25,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,84,85,86,91,101,104,],[38,38,38,38,-52,38,-50,-51,38,-48,-49,38,-44,-45,-46,-47,38,38,-43,38,-38,-41,-42,38,38,38,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,33,34,35,36,37,38,55,58,62,73,76,77,78,79,80,81,82,83,84,85,86,88,95,96,98,100,102,105,106,108,109,],[0,-12,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-40,-39,-34,-10,-8,-6,-4,-2,-1,-62,-63,-64,-38,-41,-42,-65,-76,-77,-72,-74,-66,-65,-71,-75,-73,]),'SPACE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,28,29,30,31,32,33,34,35,36,37,38,40,55,58,62,71,73,76,77,78,79,80,81,82,83,84,85,86,88,95,96,97,98,100,102,103,105,106,108,109,],[-12,-13,-11,-9,-7,-5,54,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,69,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,74,-40,54,-34,93,-10,-8,-6,-4,-2,-1,-62,-63,-64,-38,-41,-42,-65,-76,-77,104,-72,-74,-66,93,-65,-71,-75,-73,]),'DOT_OPERATOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,55,57,58,62,73,76,77,78,79,80,81,82,83,84,85,86,88,95,96,98,100,102,105,106,108,109,],[-12,-13,-11,-9,-7,-5,56,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,63,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-40,63,56,-34,-10,-8,-6,-4,-2,-1,-62,-63,-64,-38,-41,-42,-65,-76,-77,-72,-74,-66,-65,-71,-75,-73,]),'STAR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,55,57,58,62,73,76,77,78,79,80,81,82,83,84,85,86,88,95,96,98,100,102,105,106,108,109,],[-12,-13,-11,-9,49,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,49,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-40,49,-3,-34,-10,-8,49,-4,-2,-1,-62,-63,-64,-38,-41,-42,-65,-76,-77,-72,-74,-66,-65,-71,-75,-73,]),'SLASH':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,55,57,58,62,73,76,77,78,79,80,81,82,83,84,85,86,88,95,96,98,100,102,105,106,108,109,],[-12,-13,-11,-9,50,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,50,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-40,50,-3,-34,-10,-8,50,-4,-2,-1,-62,-63,-64,-38,-41,-42,-65,-76,-77,-72,-74,-66,-65,-71,-75,-73,]),'DOUBLESLASH':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,55,57,58,62,73,76,77,78,79,80,81,82,83,84,85,86,88,95,96,98,100,102,105,106,108,109,],[-12,-13,-11,-9,51,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,51,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-40,51,-3,-34,-10,-8,51,-4,-2,-1,-62,-63,-64,-38,-41,-42,-65,-76,-77,-72,-74,-66,-65,-71,-75,-73,]),'PERCENT':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,55,57,58,62,73,76,77,78,79,80,81,82,83,84,85,86,88,95,96,98,100,102,105,106,108,109,],[-12,-13,-11,-9,52,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,52,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-40,52,-3,-34,-10,-8,52,-4,-2,-1,-62,-63,-64,-38,-41,-42,-65,-76,-77,-72,-74,-66,-65,-71,-75,-73,]),'PLUS':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,55,57,58,62,73,76,77,78,79,80,81,82,83,84,85,86,88,95,96,98,100,102,105,106,108,109,],[-12,-13,-11,46,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,46,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-40,46,-3,-34,-10,46,-6,-4,-2,-1,-62,-63,-64,-38,-41,-42,-65,-76,-77,-72,-74,-66,-65,-71,-75,-73,]),'MINUS':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,55,57,58,62,73,76,77,78,79,80,81,82,83,84,85,86,88,95,96,98,100,102,105,106,108,109,],[-12,-13,-11,47,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,47,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-40,47,-3,-34,-10,47,-6,-4,-2,-1,-62,-63,-64,-38,-41,-42,-65,-76,-77,-72,-74,-66,-65,-71,-75,-73,]),'OPERATOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,55,57,58,62,73,76,77,78,79,80,81,82,83,84,85,86,88,95,96,98,100,102,105,106,108,109,],[-12,-13,43,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,43,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-40,43,-3,-34,-10,-8,-6,-4,-2,-1,-62,-63,-64,-38,-41,-42,-65,-76,-77,-72,-74,-66,-65,-71,-75,-73,]),'ARROW':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,55,57,58,62,70,71,73,76,77,78,79,80,81,82,83,84,85,86,88,92,94,95,96,98,100,102,103,105,106,107,108,109,],[-12,-13,44,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,44,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-40,44,-3,-34,91,-65,-10,-8,-6,-4,-2,-1,-62,-63,-64,-38,-41,-42,-65,-67,-69,-76,-77,-72,-74,-66,-65,-65,-71,-68,-75,-73,]),'KEYWORD_WHERE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,33,34,35,36,37,38,55,58,59,61,62,72,73,76,77,78,79,80,81,82,83,84,85,86,88,95,96,98,100,102,105,106,108,109,],[40,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-40,-3,40,40,-34,40,-10,-8,-6,-4,-2,-1,-62,-63,-64,-38,-41,-42,-65,-76,-77,-72,-74,40,-65,40,-75,-73,]),'TICK_OPERATOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,55,57,58,59,61,62,72,73,76,77,78,79,80,81,82,83,84,85,86,88,95,96,98,100,102,105,106,108,109,],[41,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,41,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-40,41,-3,41,41,-34,41,-10,-8,-6,-4,-2,-1,-62,-63,-64,-38,-41,-42,-65,-76,-77,-72,-74,41,-65,41,-75,-73,]),'RPAREN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,41,43,44,46,47,49,50,51,52,55,58,61,62,63,64,65,66,67,68,73,76,77,78,79,80,81,82,83,84,85,86,88,95,96,98,100,102,105,106,108,109,],[-12,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,62,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-52,-50,-51,-48,-49,-44,-45,-46,-47,-40,-39,84,-34,85,86,-53,-54,-55,-56,-10,-8,-6,-4,-2,-1,-62,-63,-64,-38,-41,-42,-65,-76,-77,-72,-74,-66,-65,-71,-75,-73,]),'PADDING':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,33,34,35,36,37,38,40,55,58,62,73,76,77,78,79,80,81,82,83,84,85,86,88,95,96,98,100,102,105,106,108,109,],[-12,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,75,-40,-39,-34,-10,-8,-6,-4,-2,-1,-62,-63,-64,-38,-41,-42,99,-76,-77,-72,-74,-66,99,-71,-75,-73,]),'KEYWORD_IN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,33,34,35,36,37,38,55,58,62,73,76,77,78,79,80,81,82,83,84,85,86,87,88,95,96,98,100,102,105,106,108,109,],[-12,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-40,-39,-34,-10,-8,-6,-4,-2,-1,-62,-63,-64,-38,-41,-42,97,-65,-76,-77,-72,-74,-66,-65,-71,-75,-73,]),'ANNOTATION':([16,28,29,30,31,32,],[60,-57,-58,-59,-60,-61,]),'EQ':([71,89,90,92,94,103,107,],[-65,101,-70,-67,-69,-65,-68,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'st_expr':([0,104,],[1,108,]),'expr':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[2,59,61,72,59,59,59,59,59,61,102,106,2,]),'expr_term0':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[3,3,3,73,3,3,3,3,3,3,3,3,3,]),'expr_term2':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[4,4,4,4,4,4,4,4,4,4,4,4,4,]),'expr_term6':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[5,5,5,5,76,5,5,5,5,5,5,5,5,]),'expr_term7':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[6,6,6,6,6,77,6,6,6,6,6,6,6,]),'expr_term9':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[7,7,7,7,7,7,78,79,7,7,7,7,7,]),'expr_factor':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[8,58,8,8,8,8,8,8,80,8,8,8,8,]),'literal':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[9,9,9,9,9,9,9,9,9,9,9,9,9,]),'identifier':([0,11,25,39,42,45,48,53,54,57,60,91,101,104,],[10,10,10,10,10,10,10,10,10,10,83,10,10,10,]),'enclosed_expr':([0,8,11,25,39,42,45,48,53,54,57,58,80,91,101,104,],[11,55,11,11,11,11,11,11,11,11,11,55,55,11,11,11,]),'unit_value':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[12,12,12,12,12,12,12,12,12,12,12,12,12,]),'letexpr':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[13,13,13,13,13,13,13,13,13,13,13,13,13,]),'where_expr':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[14,14,14,14,14,14,14,14,14,14,14,14,14,]),'lambda_expr':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[15,15,15,15,15,15,15,15,15,15,15,15,15,]),'number':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[16,16,16,16,16,16,16,16,16,16,16,16,16,]),'concrete_number':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[17,17,17,17,17,17,17,17,17,17,17,17,17,]),'string':([0,11,25,39,42,45,48,53,54,57,60,91,101,104,],[18,18,18,18,18,18,18,18,18,18,81,18,18,18,]),'char':([0,11,25,39,42,45,48,53,54,57,60,91,101,104,],[19,19,19,19,19,19,19,19,19,19,82,19,19,19,]),'date':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[20,20,20,20,20,20,20,20,20,20,20,20,20,]),'datetime':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[21,21,21,21,21,21,21,21,21,21,21,21,21,]),'date_interval':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[22,22,22,22,22,22,22,22,22,22,22,22,22,]),'datetime_interval':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[23,23,23,23,23,23,23,23,23,23,23,23,23,]),'infix_operator_0':([2,25,57,59,61,72,102,106,],[39,65,65,39,39,39,39,39,]),'infix_operator_2':([4,25,57,],[42,66,66,]),'infix_operator_6':([5,25,57,76,],[45,67,67,45,]),'infix_operator_7':([6,25,57,77,],[48,68,68,48,]),'infix_operator_9':([8,58,80,],[53,53,53,]),'operator':([25,57,],[64,64,]),'parameters':([27,69,74,75,99,],[70,90,90,90,90,]),'equations':([69,74,75,],[87,95,96,]),'equation':([69,74,75,99,],[88,88,88,105,]),'pattern':([69,74,75,99,],[89,89,89,89,]),'_parameters':([71,103,],[92,107,]),'empty':([71,88,103,105,],[94,100,94,100,]),'_equation_set':([88,105,],[98,109,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> st_expr","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','parsers.py',392),
  ('expr_term9 -> expr_factor infix_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','parsers.py',399),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','parsers.py',400),
  ('expr_term7 -> expr_term7 infix_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','parsers.py',402),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','parsers.py',403),
  ('expr_term6 -> expr_term6 infix_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','parsers.py',405),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','parsers.py',406),
  ('expr_term2 -> expr_term2 infix_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','parsers.py',408),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','parsers.py',409),
  ('expr_term0 -> expr infix_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','parsers.py',411),
  ('expr_term0 -> expr_term2','expr_term0',1,'p_expressions_precedence_rules','parsers.py',412),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','parsers.py',425),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','parsers.py',427),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','parsers.py',429),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','parsers.py',430),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','parsers.py',431),
  ('expr_factor -> unit_value','expr_factor',1,'p_standalone_definitions','parsers.py',432),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','parsers.py',433),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','parsers.py',434),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','parsers.py',435),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','parsers.py',437),
  ('literal -> number','literal',1,'p_literals','parsers.py',445),
  ('literal -> concrete_number','literal',1,'p_literals','parsers.py',446),
  ('literal -> string','literal',1,'p_literals','parsers.py',447),
  ('literal -> char','literal',1,'p_literals','parsers.py',448),
  ('literal -> date','literal',1,'p_literals','parsers.py',449),
  ('literal -> datetime','literal',1,'p_literals','parsers.py',450),
  ('literal -> date_interval','literal',1,'p_literals','parsers.py',451),
  ('literal -> datetime_interval','literal',1,'p_literals','parsers.py',452),
  ('date -> DATE','date',1,'p_date','parsers.py',458),
  ('datetime -> DATETIME','datetime',1,'p_datetime','parsers.py',464),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','parsers.py',470),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','parsers.py',476),
  ('unit_value -> LPAREN RPAREN','unit_value',2,'p_unit_value','parsers.py',482),
  ('char -> CHAR','char',1,'p_char','parsers.py',488),
  ('string -> STRING','string',1,'p_string','parsers.py',493),
  ('identifier -> IDENTIFIER','identifier',1,'p_variable','parsers.py',498),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','parsers.py',503),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','parsers.py',508),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','parsers.py',509),
  ('enclosed_expr -> LPAREN DOT_OPERATOR RPAREN','enclosed_expr',3,'p_operators_as_expressios','parsers.py',515),
  ('enclosed_expr -> LPAREN operator RPAREN','enclosed_expr',3,'p_operators_as_expressios','parsers.py',516),
  ('infix_operator_9 -> DOT_OPERATOR','infix_operator_9',1,'p_operator','parsers.py',526),
  ('infix_operator_7 -> STAR','infix_operator_7',1,'p_operator','parsers.py',528),
  ('infix_operator_7 -> SLASH','infix_operator_7',1,'p_operator','parsers.py',529),
  ('infix_operator_7 -> DOUBLESLASH','infix_operator_7',1,'p_operator','parsers.py',530),
  ('infix_operator_7 -> PERCENT','infix_operator_7',1,'p_operator','parsers.py',531),
  ('infix_operator_6 -> PLUS','infix_operator_6',1,'p_operator','parsers.py',533),
  ('infix_operator_6 -> MINUS','infix_operator_6',1,'p_operator','parsers.py',534),
  ('infix_operator_2 -> OPERATOR','infix_operator_2',1,'p_operator','parsers.py',536),
  ('infix_operator_2 -> ARROW','infix_operator_2',1,'p_operator','parsers.py',537),
  ('infix_operator_0 -> TICK_OPERATOR','infix_operator_0',1,'p_operator','parsers.py',539),
  ('operator -> infix_operator_0','operator',1,'p_operator','parsers.py',541),
  ('operator -> infix_operator_2','operator',1,'p_operator','parsers.py',542),
  ('operator -> infix_operator_6','operator',1,'p_operator','parsers.py',543),
  ('operator -> infix_operator_7','operator',1,'p_operator','parsers.py',544),
  ('number -> BASE10_INTEGER','number',1,'p_integer','parsers.py',551),
  ('number -> BASE16_INTEGER','number',1,'p_integer','parsers.py',552),
  ('number -> BASE8_INTEGER','number',1,'p_integer','parsers.py',553),
  ('number -> BASE2_INTEGER','number',1,'p_integer','parsers.py',554),
  ('number -> FLOAT','number',1,'p_float','parsers.py',583),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','parsers.py',588),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','parsers.py',589),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','parsers.py',590),
  ('empty -> <empty>','empty',0,'p_empty','parsers.py',599),
  ('lambda_expr -> BACKSLASH parameters ARROW expr','lambda_expr',4,'p_lambda_definition','parsers.py',604),
  ('parameters -> IDENTIFIER _parameters','parameters',2,'p_parameters','parsers.py',612),
  ('_parameters -> SPACE IDENTIFIER _parameters','_parameters',3,'p__params','parsers.py',620),
  ('_parameters -> empty','_parameters',1,'p_empty__parameters','parsers.py',627),
  ('pattern -> parameters','pattern',1,'p_pattern','parsers.py',676),
  ('equation -> pattern EQ expr','equation',3,'p_equation','parsers.py',691),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','parsers.py',701),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','parsers.py',710),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','parsers.py',719),
  ('letexpr -> KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','parsers.py',729),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','parsers.py',737),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','parsers.py',738),
  ('program -> st_expr','program',1,'p_program','parsers.py',789),
  ('program -> st_type_expr','program',1,'p_program','parsers.py',790),
  ('type_expr -> type_function_expr','type_expr',1,'p_type_expr','parsers.py',796),
  ('type_expr -> type_term','type_expr',1,'p_type_expr','parsers.py',797),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','parsers.py',802),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','parsers.py',803),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','parsers.py',813),
  ('type_term -> type_factor','type_term',1,'p_type_term','parsers.py',814),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','parsers.py',819),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','parsers.py',831),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','parsers.py',832),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','parsers.py',840),
  ('type_factor -> IDENTIFIER','type_factor',1,'p_type_identifier','parsers.py',845),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','parsers.py',854),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','parsers.py',859),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','parsers.py',864),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','parsers.py',865),
]
