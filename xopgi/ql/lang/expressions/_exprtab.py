
# _exprtab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'st_exprrightARROWleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON DOT_OPERATOR DOUBLESLASH EOF EQ FLOAT IDENTIFIER KEYWORD_IN KEYWORD_LET KEYWORD_LETREC LPAREN MINUS OPERATOR PADDING PERCENT PLUS RPAREN SLASH SPACE STAR STRING TICK_OPERATORst_expr : expr\n               | PADDING expr\n               | expr EOF\n               | PADDING expr EOF\n    expr :  number\n             | concrete_number\n             | string\n             | char\n             | identifier\n             | enclosed_expr\n    char : CHARstring : STRINGidentifier : IDENTIFIERenclosed_expr : LPAREN expr RPARENexpr : expr TICK_OPERATOR exprexpr : expr SPACE exprexpr : enclosed_expr expr\n            | expr enclosed_expr\n    \n    expr : expr DOT_OPERATOR expr\n    enclosed_expr : LPAREN DOT_OPERATOR RPAREN\n                     | LPAREN operator RPAREN\n    expr : expr operator expr\n\n    \n    operator :  PLUS\n              | MINUS\n              | STAR\n              | SLASH\n              | DOUBLESLASH\n              | PERCENT\n              | ARROW\n              | OPERATOR\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : PLUS numbernumber : MINUS numbernumber : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : expr : BACKSLASH parameters ARROW expr\n    parameters : IDENTIFIER _parameters\n    _parameters : SPACE IDENTIFIER _parameters_parameters : empty\n    pattern : IDENTIFIER _pattern_params\n    _pattern_params : SPACE IDENTIFIER _pattern_params\n    \n    _pattern_params : empty\n    _pattern_params : SPACE\n    equation : pattern EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr     : KEYWORD_LET equations KEYWORD_IN expr\n    letrecexpr  : KEYWORD_LETREC equations KEYWORD_IN expr\n    '
    
_lr_action_items = {'PADDING':([0,],[3,]),'BACKSLASH':([0,3,9,21,23,24,26,27,28,29,30,31,32,33,34,35,56,60,61,62,],[10,10,10,10,10,10,10,10,-23,-24,-25,-26,-27,-28,-29,-30,10,-14,-20,-21,]),'BASE10_INTEGER':([0,3,9,15,16,21,23,24,26,27,28,29,30,31,32,33,34,35,46,47,56,60,61,62,],[11,11,11,11,11,11,11,11,11,11,-23,-24,-25,-26,-27,-28,-29,-30,11,11,11,-14,-20,-21,]),'BASE16_INTEGER':([0,3,9,15,16,21,23,24,26,27,28,29,30,31,32,33,34,35,46,47,56,60,61,62,],[12,12,12,12,12,12,12,12,12,12,-23,-24,-25,-26,-27,-28,-29,-30,12,12,12,-14,-20,-21,]),'BASE8_INTEGER':([0,3,9,15,16,21,23,24,26,27,28,29,30,31,32,33,34,35,46,47,56,60,61,62,],[13,13,13,13,13,13,13,13,13,13,-23,-24,-25,-26,-27,-28,-29,-30,13,13,13,-14,-20,-21,]),'BASE2_INTEGER':([0,3,9,15,16,21,23,24,26,27,28,29,30,31,32,33,34,35,46,47,56,60,61,62,],[14,14,14,14,14,14,14,14,14,14,-23,-24,-25,-26,-27,-28,-29,-30,14,14,14,-14,-20,-21,]),'PLUS':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,41,42,43,46,47,48,49,50,51,53,54,55,56,60,61,62,63,],[15,28,15,-5,-6,-7,-8,-9,15,-31,-32,-33,-34,15,15,-37,-12,-11,-13,46,15,15,-18,15,15,-23,-24,-25,-26,-27,-28,-29,-30,28,28,-35,-36,28,15,15,28,-16,-19,28,-38,-39,-40,15,-14,-20,-21,28,]),'MINUS':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,41,42,43,46,47,48,49,50,51,53,54,55,56,60,61,62,63,],[16,29,16,-5,-6,-7,-8,-9,16,-31,-32,-33,-34,16,16,-37,-12,-11,-13,47,16,16,-18,16,16,-23,-24,-25,-26,-27,-28,-29,-30,29,29,-35,-36,29,16,16,29,-16,-19,29,-38,-39,-40,16,-14,-20,-21,29,]),'FLOAT':([0,3,9,15,16,21,23,24,26,27,28,29,30,31,32,33,34,35,46,47,56,60,61,62,],[17,17,17,17,17,17,17,17,17,17,-23,-24,-25,-26,-27,-28,-29,-30,17,17,17,-14,-20,-21,]),'STRING':([0,3,9,21,23,24,26,27,28,29,30,31,32,33,34,35,37,56,60,61,62,],[18,18,18,18,18,18,18,18,-23,-24,-25,-26,-27,-28,-29,-30,18,18,-14,-20,-21,]),'CHAR':([0,3,9,21,23,24,26,27,28,29,30,31,32,33,34,35,37,56,60,61,62,],[19,19,19,19,19,19,19,19,-23,-24,-25,-26,-27,-28,-29,-30,19,19,-14,-20,-21,]),'IDENTIFIER':([0,3,9,10,21,23,24,26,27,28,29,30,31,32,33,34,35,37,56,58,60,61,62,],[20,20,20,40,20,20,20,20,20,-23,-24,-25,-26,-27,-28,-29,-30,20,20,64,-14,-20,-21,]),'LPAREN':([0,2,3,4,5,6,7,8,9,11,12,13,14,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,41,42,43,48,49,50,51,53,54,55,56,60,61,62,63,],[21,21,21,-5,-6,-7,-8,-9,21,-31,-32,-33,-34,-37,-12,-11,-13,21,21,21,-18,21,21,-23,-24,-25,-26,-27,-28,-29,-30,21,21,-35,-36,21,-15,-16,-19,21,-38,-39,-40,21,-14,-20,-21,-42,]),'$end':([1,2,4,5,6,7,8,9,11,12,13,14,17,18,19,20,22,25,36,38,41,42,48,49,50,51,52,53,54,55,60,61,62,63,],[0,-1,-5,-6,-7,-8,-9,-10,-31,-32,-33,-34,-37,-12,-11,-13,-3,-18,-2,-17,-35,-36,-15,-16,-19,-22,-4,-38,-39,-40,-14,-20,-21,-42,]),'EOF':([2,4,5,6,7,8,9,11,12,13,14,17,18,19,20,25,36,38,41,42,48,49,50,51,53,54,55,60,61,62,63,],[22,-5,-6,-7,-8,-9,-10,-31,-32,-33,-34,-37,-12,-11,-13,-18,52,-17,-35,-36,-15,-16,-19,-22,-38,-39,-40,-14,-20,-21,-42,]),'TICK_OPERATOR':([2,4,5,6,7,8,9,11,12,13,14,17,18,19,20,25,36,38,41,42,43,48,49,50,51,53,54,55,60,61,62,63,],[23,-5,-6,-7,-8,-9,-10,-31,-32,-33,-34,-37,-12,-11,-13,-18,23,23,-35,-36,23,-15,-16,-19,23,-38,-39,-40,-14,-20,-21,23,]),'SPACE':([2,4,5,6,7,8,9,11,12,13,14,17,18,19,20,25,36,38,40,41,42,43,48,49,50,51,53,54,55,60,61,62,63,64,],[24,-5,-6,-7,-8,-9,-10,-31,-32,-33,-34,-37,-12,-11,-13,-18,24,24,58,-35,-36,24,24,-16,24,24,-38,-39,-40,-14,-20,-21,24,58,]),'DOT_OPERATOR':([2,4,5,6,7,8,9,11,12,13,14,17,18,19,20,21,25,36,38,41,42,43,48,49,50,51,53,54,55,60,61,62,63,],[26,-5,-6,-7,-8,-9,-10,-31,-32,-33,-34,-37,-12,-11,-13,44,-18,26,26,-35,-36,26,26,-16,26,26,-38,-39,-40,-14,-20,-21,26,]),'STAR':([2,4,5,6,7,8,9,11,12,13,14,17,18,19,20,21,25,36,38,41,42,43,48,49,50,51,53,54,55,60,61,62,63,],[30,-5,-6,-7,-8,-9,-10,-31,-32,-33,-34,-37,-12,-11,-13,30,-18,30,30,-35,-36,30,30,-16,-19,30,-38,-39,-40,-14,-20,-21,30,]),'SLASH':([2,4,5,6,7,8,9,11,12,13,14,17,18,19,20,21,25,36,38,41,42,43,48,49,50,51,53,54,55,60,61,62,63,],[31,-5,-6,-7,-8,-9,-10,-31,-32,-33,-34,-37,-12,-11,-13,31,-18,31,31,-35,-36,31,31,-16,-19,31,-38,-39,-40,-14,-20,-21,31,]),'DOUBLESLASH':([2,4,5,6,7,8,9,11,12,13,14,17,18,19,20,21,25,36,38,41,42,43,48,49,50,51,53,54,55,60,61,62,63,],[32,-5,-6,-7,-8,-9,-10,-31,-32,-33,-34,-37,-12,-11,-13,32,-18,32,32,-35,-36,32,32,-16,-19,32,-38,-39,-40,-14,-20,-21,32,]),'PERCENT':([2,4,5,6,7,8,9,11,12,13,14,17,18,19,20,21,25,36,38,41,42,43,48,49,50,51,53,54,55,60,61,62,63,],[33,-5,-6,-7,-8,-9,-10,-31,-32,-33,-34,-37,-12,-11,-13,33,-18,33,33,-35,-36,33,33,-16,-19,33,-38,-39,-40,-14,-20,-21,33,]),'ARROW':([2,4,5,6,7,8,9,11,12,13,14,17,18,19,20,21,25,36,38,39,40,41,42,43,48,49,50,51,53,54,55,57,59,60,61,62,63,64,65,],[34,-5,-6,-7,-8,-9,-10,-31,-32,-33,-34,-37,-12,-11,-13,34,-18,34,34,56,-41,-35,-36,34,-15,-16,-19,34,-38,-39,-40,-43,-45,-14,-20,-21,34,-41,-44,]),'OPERATOR':([2,4,5,6,7,8,9,11,12,13,14,17,18,19,20,21,25,36,38,41,42,43,48,49,50,51,53,54,55,60,61,62,63,],[35,-5,-6,-7,-8,-9,-10,-31,-32,-33,-34,-37,-12,-11,-13,35,-18,35,35,-35,-36,35,35,-16,-19,35,-38,-39,-40,-14,-20,-21,35,]),'RPAREN':([4,5,6,7,8,9,11,12,13,14,17,18,19,20,25,30,31,32,33,34,35,38,41,42,43,44,45,46,47,48,49,50,51,53,54,55,60,61,62,63,],[-5,-6,-7,-8,-9,-10,-31,-32,-33,-34,-37,-12,-11,-13,-18,-25,-26,-27,-28,-29,-30,-17,-35,-36,60,61,62,-23,-24,-15,-16,-19,-22,-38,-39,-40,-14,-20,-21,-42,]),'ANNOTATION':([4,11,12,13,14,17,41,42,],[37,-31,-32,-33,-34,-37,-35,-36,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'st_expr':([0,],[1,]),'expr':([0,3,9,21,23,24,26,27,56,],[2,36,38,43,48,49,50,51,63,]),'number':([0,3,9,15,16,21,23,24,26,27,46,47,56,],[4,4,4,41,42,4,4,4,4,4,41,42,4,]),'concrete_number':([0,3,9,21,23,24,26,27,56,],[5,5,5,5,5,5,5,5,5,]),'string':([0,3,9,21,23,24,26,27,37,56,],[6,6,6,6,6,6,6,6,53,6,]),'char':([0,3,9,21,23,24,26,27,37,56,],[7,7,7,7,7,7,7,7,54,7,]),'identifier':([0,3,9,21,23,24,26,27,37,56,],[8,8,8,8,8,8,8,8,55,8,]),'enclosed_expr':([0,2,3,9,21,23,24,26,27,36,38,43,48,49,50,51,56,63,],[9,25,9,9,9,9,9,9,9,25,25,25,25,25,25,25,9,25,]),'operator':([2,21,36,38,43,48,49,50,51,63,],[27,45,27,27,27,27,27,27,27,27,]),'parameters':([10,],[39,]),'_parameters':([40,64,],[57,65,]),'empty':([40,64,],[59,59,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> st_expr","S'",1,None,None,None),
  ('st_expr -> expr','st_expr',1,'p_standalone_expr','parser.py',279),
  ('st_expr -> PADDING expr','st_expr',2,'p_standalone_expr','parser.py',280),
  ('st_expr -> expr EOF','st_expr',2,'p_standalone_expr','parser.py',281),
  ('st_expr -> PADDING expr EOF','st_expr',3,'p_standalone_expr','parser.py',282),
  ('expr -> number','expr',1,'p_literals_and_basic','parser.py',295),
  ('expr -> concrete_number','expr',1,'p_literals_and_basic','parser.py',296),
  ('expr -> string','expr',1,'p_literals_and_basic','parser.py',297),
  ('expr -> char','expr',1,'p_literals_and_basic','parser.py',298),
  ('expr -> identifier','expr',1,'p_literals_and_basic','parser.py',299),
  ('expr -> enclosed_expr','expr',1,'p_literals_and_basic','parser.py',300),
  ('char -> CHAR','char',1,'p_char','parser.py',306),
  ('string -> STRING','string',1,'p_string','parser.py',311),
  ('identifier -> IDENTIFIER','identifier',1,'p_variable','parser.py',316),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','parser.py',321),
  ('expr -> expr TICK_OPERATOR expr','expr',3,'p_infix_application','parser.py',326),
  ('expr -> expr SPACE expr','expr',3,'p_application','parser.py',331),
  ('expr -> enclosed_expr expr','expr',2,'p_application_after_paren','parser.py',336),
  ('expr -> expr enclosed_expr','expr',2,'p_application_after_paren','parser.py',337),
  ('expr -> expr DOT_OPERATOR expr','expr',3,'p_compose','parser.py',344),
  ('enclosed_expr -> LPAREN DOT_OPERATOR RPAREN','enclosed_expr',3,'p_operators_as_expressios','parser.py',351),
  ('enclosed_expr -> LPAREN operator RPAREN','enclosed_expr',3,'p_operators_as_expressios','parser.py',352),
  ('expr -> expr operator expr','expr',3,'p_user_operator_expr','parser.py',359),
  ('operator -> PLUS','operator',1,'p_operator','parser.py',368),
  ('operator -> MINUS','operator',1,'p_operator','parser.py',369),
  ('operator -> STAR','operator',1,'p_operator','parser.py',370),
  ('operator -> SLASH','operator',1,'p_operator','parser.py',371),
  ('operator -> DOUBLESLASH','operator',1,'p_operator','parser.py',372),
  ('operator -> PERCENT','operator',1,'p_operator','parser.py',373),
  ('operator -> ARROW','operator',1,'p_operator','parser.py',374),
  ('operator -> OPERATOR','operator',1,'p_operator','parser.py',375),
  ('number -> BASE10_INTEGER','number',1,'p_integer','parser.py',382),
  ('number -> BASE16_INTEGER','number',1,'p_integer','parser.py',383),
  ('number -> BASE8_INTEGER','number',1,'p_integer','parser.py',384),
  ('number -> BASE2_INTEGER','number',1,'p_integer','parser.py',385),
  ('number -> PLUS number','number',2,'p_pos_number','parser.py',407),
  ('number -> MINUS number','number',2,'p_neg_number','parser.py',412),
  ('number -> FLOAT','number',1,'p_float','parser.py',420),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','parser.py',425),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','parser.py',426),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','parser.py',427),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',436),
  ('expr -> BACKSLASH parameters ARROW expr','expr',4,'p_lambda_definition','parser.py',441),
  ('parameters -> IDENTIFIER _parameters','parameters',2,'p_parameters','parser.py',452),
  ('_parameters -> SPACE IDENTIFIER _parameters','_parameters',3,'p__params','parser.py',460),
  ('_parameters -> empty','_parameters',1,'p_empty__parameters','parser.py',467),
  ('pattern -> IDENTIFIER _pattern_params','pattern',2,'p_pattern','parser.py',492),
  ('_pattern_params -> SPACE IDENTIFIER _pattern_params','_pattern_params',3,'p_pattern_param','parser.py',498),
  ('_pattern_params -> empty','_pattern_params',1,'p_empty_pattern_param','parser.py',507),
  ('_pattern_params -> SPACE','_pattern_params',1,'p_empty_pattern_param','parser.py',508),
  ('equation -> pattern EQ expr','equation',3,'p_equation','parser.py',523),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','parser.py',533),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','parser.py',542),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','parser.py',551),
  ('letexpr -> KEYWORD_LET equations KEYWORD_IN expr','letexpr',4,'p_let_expr','parser.py',558),
  ('letrecexpr -> KEYWORD_LETREC equations KEYWORD_IN expr','letrecexpr',4,'p_let_expr','parser.py',559),
]
