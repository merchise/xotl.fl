
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'st_exprrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FLOAT IDENTIFIER KEYWORD_CLASS KEYWORD_DATA KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LPAREN MINUS OPERATOR PADDING PERCENT PLUS RPAREN SLASH SPACE STAR STRING TICK_OPERATORexpr_factor : expr_factor SPACE expr_factor\n    expr_term9 : expr_factor infix_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infix_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infix_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infix_operator_2 expr_term6\n               | expr_term6\n\n    expr_term0 : expr infix_operator_0 expr_term0\n               | expr_term2\n\n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | unit_value\n                | letexpr\n                | where_expr\n                | lambda_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    unit_value : LPAREN RPAREN\n    char : CHARstring : STRINGidentifier : IDENTIFIERenclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : LPAREN DOT_OPERATOR RPAREN\n                     | LPAREN operator RPAREN\n    \n    infix_operator_9 : DOT_OPERATOR\n\n    infix_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infix_operator_6 : PLUS\n                     | MINUS\n\n    infix_operator_2 : OPERATOR\n                     | ARROW\n\n    infix_operator_0 : TICK_OPERATOR\n\n    operator : infix_operator_0\n             | infix_operator_2\n             | infix_operator_6\n             | infix_operator_7\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH parameters ARROW expr\n    parameters : IDENTIFIER _parameters\n    _parameters : SPACE IDENTIFIER _parameters_parameters : empty\n    pattern : parametersequation : pattern EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    '
    
_lr_action_items = {'IDENTIFIER':([0,11,25,27,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,60,69,74,75,84,85,86,91,93,99,101,104,],[24,24,24,71,24,-51,24,-49,-50,24,-47,-48,24,-43,-44,-45,-46,24,24,-42,24,24,71,71,71,-37,-40,-41,24,103,71,24,24,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,73,76,77,78,79,80,81,82,83,84,85,86,88,91,95,96,98,100,101,102,104,105,106,108,109,],[25,-12,-13,-11,-9,-7,-5,57,-14,-15,25,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,25,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,25,-51,25,-49,-50,25,-47,-48,25,-43,-44,-45,-46,25,25,-39,-42,25,57,-33,-10,-8,-6,-4,-2,-1,-61,-62,-63,-37,-40,-41,-64,25,-75,-76,-71,-73,25,-65,25,-64,-70,-74,-72,]),'KEYWORD_LET':([0,11,25,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,84,85,86,91,101,104,],[26,26,26,26,-51,26,-49,-50,26,-47,-48,26,-43,-44,-45,-46,26,26,-42,26,-37,-40,-41,26,26,26,]),'BACKSLASH':([0,11,25,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,84,85,86,91,101,104,],[27,27,27,27,-51,27,-49,-50,27,-47,-48,27,-43,-44,-45,-46,27,27,-42,27,-37,-40,-41,27,27,27,]),'BASE10_INTEGER':([0,11,25,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,84,85,86,91,101,104,],[28,28,28,28,-51,28,-49,-50,28,-47,-48,28,-43,-44,-45,-46,28,28,-42,28,-37,-40,-41,28,28,28,]),'BASE16_INTEGER':([0,11,25,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,84,85,86,91,101,104,],[29,29,29,29,-51,29,-49,-50,29,-47,-48,29,-43,-44,-45,-46,29,29,-42,29,-37,-40,-41,29,29,29,]),'BASE8_INTEGER':([0,11,25,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,84,85,86,91,101,104,],[30,30,30,30,-51,30,-49,-50,30,-47,-48,30,-43,-44,-45,-46,30,30,-42,30,-37,-40,-41,30,30,30,]),'BASE2_INTEGER':([0,11,25,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,84,85,86,91,101,104,],[31,31,31,31,-51,31,-49,-50,31,-47,-48,31,-43,-44,-45,-46,31,31,-42,31,-37,-40,-41,31,31,31,]),'FLOAT':([0,11,25,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,84,85,86,91,101,104,],[32,32,32,32,-51,32,-49,-50,32,-47,-48,32,-43,-44,-45,-46,32,32,-42,32,-37,-40,-41,32,32,32,]),'STRING':([0,11,25,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,60,84,85,86,91,101,104,],[33,33,33,33,-51,33,-49,-50,33,-47,-48,33,-43,-44,-45,-46,33,33,-42,33,33,-37,-40,-41,33,33,33,]),'CHAR':([0,11,25,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,60,84,85,86,91,101,104,],[34,34,34,34,-51,34,-49,-50,34,-47,-48,34,-43,-44,-45,-46,34,34,-42,34,34,-37,-40,-41,34,34,34,]),'DATE':([0,11,25,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,84,85,86,91,101,104,],[35,35,35,35,-51,35,-49,-50,35,-47,-48,35,-43,-44,-45,-46,35,35,-42,35,-37,-40,-41,35,35,35,]),'DATETIME':([0,11,25,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,84,85,86,91,101,104,],[36,36,36,36,-51,36,-49,-50,36,-47,-48,36,-43,-44,-45,-46,36,36,-42,36,-37,-40,-41,36,36,36,]),'DATE_INTERVAL':([0,11,25,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,84,85,86,91,101,104,],[37,37,37,37,-51,37,-49,-50,37,-47,-48,37,-43,-44,-45,-46,37,37,-42,37,-37,-40,-41,37,37,37,]),'DATETIME_INTERVAL':([0,11,25,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,84,85,86,91,101,104,],[38,38,38,38,-51,38,-49,-50,38,-47,-48,38,-43,-44,-45,-46,38,38,-42,38,-37,-40,-41,38,38,38,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,33,34,35,36,37,38,55,58,62,73,76,77,78,79,80,81,82,83,84,85,86,88,95,96,98,100,102,105,106,108,109,],[0,-12,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,-39,-38,-33,-10,-8,-6,-4,-2,-1,-61,-62,-63,-37,-40,-41,-64,-75,-76,-71,-73,-65,-64,-70,-74,-72,]),'SPACE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,28,29,30,31,32,33,34,35,36,37,38,40,55,58,62,71,73,76,77,78,79,80,81,82,83,84,85,86,88,95,96,97,98,100,102,103,105,106,108,109,],[-12,-13,-11,-9,-7,-5,54,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,69,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,74,-39,54,-33,93,-10,-8,-6,-4,-2,-1,-61,-62,-63,-37,-40,-41,-64,-75,-76,104,-71,-73,-65,93,-64,-70,-74,-72,]),'DOT_OPERATOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,55,57,58,62,73,76,77,78,79,80,81,82,83,84,85,86,88,95,96,98,100,102,105,106,108,109,],[-12,-13,-11,-9,-7,-5,56,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,63,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,-39,63,56,-33,-10,-8,-6,-4,-2,-1,-61,-62,-63,-37,-40,-41,-64,-75,-76,-71,-73,-65,-64,-70,-74,-72,]),'STAR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,55,57,58,62,73,76,77,78,79,80,81,82,83,84,85,86,88,95,96,98,100,102,105,106,108,109,],[-12,-13,-11,-9,49,-5,-3,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,49,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,-39,49,-3,-33,-10,-8,49,-4,-2,-1,-61,-62,-63,-37,-40,-41,-64,-75,-76,-71,-73,-65,-64,-70,-74,-72,]),'SLASH':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,55,57,58,62,73,76,77,78,79,80,81,82,83,84,85,86,88,95,96,98,100,102,105,106,108,109,],[-12,-13,-11,-9,50,-5,-3,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,50,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,-39,50,-3,-33,-10,-8,50,-4,-2,-1,-61,-62,-63,-37,-40,-41,-64,-75,-76,-71,-73,-65,-64,-70,-74,-72,]),'DOUBLESLASH':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,55,57,58,62,73,76,77,78,79,80,81,82,83,84,85,86,88,95,96,98,100,102,105,106,108,109,],[-12,-13,-11,-9,51,-5,-3,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,51,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,-39,51,-3,-33,-10,-8,51,-4,-2,-1,-61,-62,-63,-37,-40,-41,-64,-75,-76,-71,-73,-65,-64,-70,-74,-72,]),'PERCENT':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,55,57,58,62,73,76,77,78,79,80,81,82,83,84,85,86,88,95,96,98,100,102,105,106,108,109,],[-12,-13,-11,-9,52,-5,-3,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,52,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,-39,52,-3,-33,-10,-8,52,-4,-2,-1,-61,-62,-63,-37,-40,-41,-64,-75,-76,-71,-73,-65,-64,-70,-74,-72,]),'PLUS':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,55,57,58,62,73,76,77,78,79,80,81,82,83,84,85,86,88,95,96,98,100,102,105,106,108,109,],[-12,-13,-11,46,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,46,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,-39,46,-3,-33,-10,46,-6,-4,-2,-1,-61,-62,-63,-37,-40,-41,-64,-75,-76,-71,-73,-65,-64,-70,-74,-72,]),'MINUS':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,55,57,58,62,73,76,77,78,79,80,81,82,83,84,85,86,88,95,96,98,100,102,105,106,108,109,],[-12,-13,-11,47,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,47,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,-39,47,-3,-33,-10,47,-6,-4,-2,-1,-61,-62,-63,-37,-40,-41,-64,-75,-76,-71,-73,-65,-64,-70,-74,-72,]),'OPERATOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,55,57,58,62,73,76,77,78,79,80,81,82,83,84,85,86,88,95,96,98,100,102,105,106,108,109,],[-12,-13,43,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,43,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,-39,43,-3,-33,-10,-8,-6,-4,-2,-1,-61,-62,-63,-37,-40,-41,-64,-75,-76,-71,-73,-65,-64,-70,-74,-72,]),'ARROW':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,55,57,58,62,70,71,73,76,77,78,79,80,81,82,83,84,85,86,88,92,94,95,96,98,100,102,103,105,106,107,108,109,],[-12,-13,44,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,44,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,-39,44,-3,-33,91,-64,-10,-8,-6,-4,-2,-1,-61,-62,-63,-37,-40,-41,-64,-66,-68,-75,-76,-71,-73,-65,-64,-64,-70,-67,-74,-72,]),'KEYWORD_WHERE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,33,34,35,36,37,38,55,58,59,61,62,72,73,76,77,78,79,80,81,82,83,84,85,86,88,95,96,98,100,102,105,106,108,109,],[40,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,-39,-3,40,40,-33,40,-10,-8,-6,-4,-2,-1,-61,-62,-63,-37,-40,-41,-64,-75,-76,-71,-73,40,-64,40,-74,-72,]),'TICK_OPERATOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,55,57,58,59,61,62,72,73,76,77,78,79,80,81,82,83,84,85,86,88,95,96,98,100,102,105,106,108,109,],[41,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,41,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,-39,41,-3,41,41,-33,41,-10,-8,-6,-4,-2,-1,-61,-62,-63,-37,-40,-41,-64,-75,-76,-71,-73,41,-64,41,-74,-72,]),'RPAREN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,41,43,44,46,47,49,50,51,52,55,58,61,62,63,64,65,66,67,68,73,76,77,78,79,80,81,82,83,84,85,86,88,95,96,98,100,102,105,106,108,109,],[-12,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,62,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,-51,-49,-50,-47,-48,-43,-44,-45,-46,-39,-38,84,-33,85,86,-52,-53,-54,-55,-10,-8,-6,-4,-2,-1,-61,-62,-63,-37,-40,-41,-64,-75,-76,-71,-73,-65,-64,-70,-74,-72,]),'PADDING':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,33,34,35,36,37,38,40,55,58,62,73,76,77,78,79,80,81,82,83,84,85,86,88,95,96,98,100,102,105,106,108,109,],[-12,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,75,-39,-38,-33,-10,-8,-6,-4,-2,-1,-61,-62,-63,-37,-40,-41,99,-75,-76,-71,-73,-65,99,-70,-74,-72,]),'KEYWORD_IN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,33,34,35,36,37,38,55,58,62,73,76,77,78,79,80,81,82,83,84,85,86,87,88,95,96,98,100,102,105,106,108,109,],[-12,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,-39,-38,-33,-10,-8,-6,-4,-2,-1,-61,-62,-63,-37,-40,-41,97,-64,-75,-76,-71,-73,-65,-64,-70,-74,-72,]),'ANNOTATION':([16,28,29,30,31,32,],[60,-56,-57,-58,-59,-60,]),'EQ':([71,89,90,92,94,103,107,],[-64,101,-69,-66,-68,-64,-67,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'st_expr':([0,104,],[1,108,]),'expr':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[2,59,61,72,59,59,59,59,59,61,102,106,2,]),'expr_term0':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[3,3,3,73,3,3,3,3,3,3,3,3,3,]),'expr_term2':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[4,4,4,4,4,4,4,4,4,4,4,4,4,]),'expr_term6':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[5,5,5,5,76,5,5,5,5,5,5,5,5,]),'expr_term7':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[6,6,6,6,6,77,6,6,6,6,6,6,6,]),'expr_term9':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[7,7,7,7,7,7,78,79,7,7,7,7,7,]),'expr_factor':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[8,58,8,8,8,8,8,8,80,8,8,8,8,]),'literal':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[9,9,9,9,9,9,9,9,9,9,9,9,9,]),'identifier':([0,11,25,39,42,45,48,53,54,57,60,91,101,104,],[10,10,10,10,10,10,10,10,10,10,83,10,10,10,]),'enclosed_expr':([0,8,11,25,39,42,45,48,53,54,57,58,80,91,101,104,],[11,55,11,11,11,11,11,11,11,11,11,55,55,11,11,11,]),'unit_value':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[12,12,12,12,12,12,12,12,12,12,12,12,12,]),'letexpr':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[13,13,13,13,13,13,13,13,13,13,13,13,13,]),'where_expr':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[14,14,14,14,14,14,14,14,14,14,14,14,14,]),'lambda_expr':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[15,15,15,15,15,15,15,15,15,15,15,15,15,]),'number':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[16,16,16,16,16,16,16,16,16,16,16,16,16,]),'concrete_number':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[17,17,17,17,17,17,17,17,17,17,17,17,17,]),'string':([0,11,25,39,42,45,48,53,54,57,60,91,101,104,],[18,18,18,18,18,18,18,18,18,18,81,18,18,18,]),'char':([0,11,25,39,42,45,48,53,54,57,60,91,101,104,],[19,19,19,19,19,19,19,19,19,19,82,19,19,19,]),'date':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[20,20,20,20,20,20,20,20,20,20,20,20,20,]),'datetime':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[21,21,21,21,21,21,21,21,21,21,21,21,21,]),'date_interval':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[22,22,22,22,22,22,22,22,22,22,22,22,22,]),'datetime_interval':([0,11,25,39,42,45,48,53,54,57,91,101,104,],[23,23,23,23,23,23,23,23,23,23,23,23,23,]),'infix_operator_0':([2,25,57,59,61,72,102,106,],[39,65,65,39,39,39,39,39,]),'infix_operator_2':([4,25,57,],[42,66,66,]),'infix_operator_6':([5,25,57,76,],[45,67,67,45,]),'infix_operator_7':([6,25,57,77,],[48,68,68,48,]),'infix_operator_9':([8,58,80,],[53,53,53,]),'operator':([25,57,],[64,64,]),'parameters':([27,69,74,75,99,],[70,90,90,90,90,]),'equations':([69,74,75,],[87,95,96,]),'equation':([69,74,75,99,],[88,88,88,105,]),'pattern':([69,74,75,99,],[89,89,89,89,]),'_parameters':([71,103,],[92,107,]),'empty':([71,88,103,105,],[94,100,94,100,]),'_equation_set':([88,105,],[98,109,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> st_expr","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','parser.py',378),
  ('expr_term9 -> expr_factor infix_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','parser.py',384),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','parser.py',385),
  ('expr_term7 -> expr_term7 infix_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','parser.py',387),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','parser.py',388),
  ('expr_term6 -> expr_term6 infix_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','parser.py',390),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','parser.py',391),
  ('expr_term2 -> expr_term2 infix_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','parser.py',393),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','parser.py',394),
  ('expr_term0 -> expr infix_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','parser.py',396),
  ('expr_term0 -> expr_term2','expr_term0',1,'p_expressions_precedence_rules','parser.py',397),
  ('st_expr -> expr','st_expr',1,'p_standalone_expr','parser.py',409),
  ('expr -> expr_term0','expr',1,'p_standalone_expr','parser.py',411),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_expr','parser.py',413),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_expr','parser.py',414),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_expr','parser.py',415),
  ('expr_factor -> unit_value','expr_factor',1,'p_standalone_expr','parser.py',416),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_expr','parser.py',417),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_expr','parser.py',418),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_expr','parser.py',419),
  ('literal -> number','literal',1,'p_literals','parser.py',427),
  ('literal -> concrete_number','literal',1,'p_literals','parser.py',428),
  ('literal -> string','literal',1,'p_literals','parser.py',429),
  ('literal -> char','literal',1,'p_literals','parser.py',430),
  ('literal -> date','literal',1,'p_literals','parser.py',431),
  ('literal -> datetime','literal',1,'p_literals','parser.py',432),
  ('literal -> date_interval','literal',1,'p_literals','parser.py',433),
  ('literal -> datetime_interval','literal',1,'p_literals','parser.py',434),
  ('date -> DATE','date',1,'p_date','parser.py',440),
  ('datetime -> DATETIME','datetime',1,'p_datetime','parser.py',446),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','parser.py',452),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','parser.py',458),
  ('unit_value -> LPAREN RPAREN','unit_value',2,'p_unit_value','parser.py',464),
  ('char -> CHAR','char',1,'p_char','parser.py',470),
  ('string -> STRING','string',1,'p_string','parser.py',475),
  ('identifier -> IDENTIFIER','identifier',1,'p_variable','parser.py',480),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','parser.py',485),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','parser.py',490),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','parser.py',491),
  ('enclosed_expr -> LPAREN DOT_OPERATOR RPAREN','enclosed_expr',3,'p_operators_as_expressios','parser.py',497),
  ('enclosed_expr -> LPAREN operator RPAREN','enclosed_expr',3,'p_operators_as_expressios','parser.py',498),
  ('infix_operator_9 -> DOT_OPERATOR','infix_operator_9',1,'p_operator','parser.py',509),
  ('infix_operator_7 -> STAR','infix_operator_7',1,'p_operator','parser.py',511),
  ('infix_operator_7 -> SLASH','infix_operator_7',1,'p_operator','parser.py',512),
  ('infix_operator_7 -> DOUBLESLASH','infix_operator_7',1,'p_operator','parser.py',513),
  ('infix_operator_7 -> PERCENT','infix_operator_7',1,'p_operator','parser.py',514),
  ('infix_operator_6 -> PLUS','infix_operator_6',1,'p_operator','parser.py',516),
  ('infix_operator_6 -> MINUS','infix_operator_6',1,'p_operator','parser.py',517),
  ('infix_operator_2 -> OPERATOR','infix_operator_2',1,'p_operator','parser.py',519),
  ('infix_operator_2 -> ARROW','infix_operator_2',1,'p_operator','parser.py',520),
  ('infix_operator_0 -> TICK_OPERATOR','infix_operator_0',1,'p_operator','parser.py',522),
  ('operator -> infix_operator_0','operator',1,'p_operator','parser.py',524),
  ('operator -> infix_operator_2','operator',1,'p_operator','parser.py',525),
  ('operator -> infix_operator_6','operator',1,'p_operator','parser.py',526),
  ('operator -> infix_operator_7','operator',1,'p_operator','parser.py',527),
  ('number -> BASE10_INTEGER','number',1,'p_integer','parser.py',534),
  ('number -> BASE16_INTEGER','number',1,'p_integer','parser.py',535),
  ('number -> BASE8_INTEGER','number',1,'p_integer','parser.py',536),
  ('number -> BASE2_INTEGER','number',1,'p_integer','parser.py',537),
  ('number -> FLOAT','number',1,'p_float','parser.py',566),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','parser.py',571),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','parser.py',572),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','parser.py',573),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',582),
  ('lambda_expr -> BACKSLASH parameters ARROW expr','lambda_expr',4,'p_lambda_definition','parser.py',587),
  ('parameters -> IDENTIFIER _parameters','parameters',2,'p_parameters','parser.py',595),
  ('_parameters -> SPACE IDENTIFIER _parameters','_parameters',3,'p__params','parser.py',603),
  ('_parameters -> empty','_parameters',1,'p_empty__parameters','parser.py',610),
  ('pattern -> parameters','pattern',1,'p_pattern','parser.py',659),
  ('equation -> pattern EQ expr','equation',3,'p_equation','parser.py',674),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','parser.py',684),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','parser.py',693),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','parser.py',702),
  ('letexpr -> KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','parser.py',712),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','parser.py',720),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','parser.py',721),
]
