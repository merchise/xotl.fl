
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'st_exprrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FLOAT IDENTIFIER KEYWORD_CLASS KEYWORD_DATA KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LPAREN MINUS OPERATOR PADDING PERCENT PLUS RPAREN SLASH SPACE STAR STRING TICK_OPERATORexpr_factor : expr_factor SPACE expr_factor\n    expr_term9 : expr_factor infix_operator_9 expr_factor\n               | expr_factor infix_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term9 infix_operator_7 expr_term9\n               | expr_term7 infix_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term7 infix_operator_6 expr_term7\n               | expr_term6 infix_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term6 infix_operator_2 expr_term6\n               | expr_term2 infix_operator_2 expr_term6\n               | expr_term6\n\n    expr_term0 : expr_term2 infix_operator_0 expr_term2\n               | expr_term0 infix_operator_0 expr_term2\n               | expr_term2\n\n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | unit_value\n                | letexpr\n                | where_expr\n                | lambda_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    unit_value : LPAREN RPAREN\n    char : CHARstring : STRINGidentifier : IDENTIFIERenclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : LPAREN DOT_OPERATOR RPAREN\n                     | LPAREN operator RPAREN\n    \n    infix_operator_9 : DOT_OPERATOR\n\n    infix_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infix_operator_6 : PLUS\n                     | MINUS\n\n    infix_operator_2 : OPERATOR\n                     | ARROW\n\n    infix_operator_0 : TICK_OPERATOR\n\n    operator : infix_operator_0\n             | infix_operator_2\n             | infix_operator_6\n             | infix_operator_7\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH parameters ARROW expr\n    parameters : IDENTIFIER _parameters\n    _parameters : SPACE IDENTIFIER _parameters_parameters : empty\n    pattern : parametersequation : pattern EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    '
    
_lr_action_items = {'IDENTIFIER':([0,11,25,27,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,64,73,76,77,92,93,94,99,101,107,109,112,],[24,24,24,75,24,-56,24,24,-54,-55,24,24,-52,-53,24,24,-48,-49,-50,-51,24,24,24,-47,24,24,75,75,75,-42,-45,-46,24,111,75,24,24,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,66,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,99,103,104,106,108,109,110,112,113,114,116,117,],[25,-17,-18,-16,-13,-10,-7,61,-19,-20,25,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-41,25,-61,-62,-63,-64,-65,-40,-39,-34,-35,-36,-37,25,-56,25,25,-54,-55,25,25,-52,-53,25,25,-48,-49,-50,-51,25,25,25,-44,-47,25,61,-38,-15,-14,-12,-11,-9,-8,-6,-5,61,-3,-1,-66,-67,-68,-42,-45,-46,-69,25,-80,-81,-76,-78,25,-70,25,-69,-75,-79,-77,]),'KEYWORD_LET':([0,11,25,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,92,93,94,99,109,112,],[26,26,26,26,-56,26,26,-54,-55,26,26,-52,-53,26,26,-48,-49,-50,-51,26,26,26,-47,26,-42,-45,-46,26,26,26,]),'BACKSLASH':([0,11,25,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,92,93,94,99,109,112,],[27,27,27,27,-56,27,27,-54,-55,27,27,-52,-53,27,27,-48,-49,-50,-51,27,27,27,-47,27,-42,-45,-46,27,27,27,]),'BASE10_INTEGER':([0,11,25,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,92,93,94,99,109,112,],[28,28,28,28,-56,28,28,-54,-55,28,28,-52,-53,28,28,-48,-49,-50,-51,28,28,28,-47,28,-42,-45,-46,28,28,28,]),'BASE16_INTEGER':([0,11,25,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,92,93,94,99,109,112,],[29,29,29,29,-56,29,29,-54,-55,29,29,-52,-53,29,29,-48,-49,-50,-51,29,29,29,-47,29,-42,-45,-46,29,29,29,]),'BASE8_INTEGER':([0,11,25,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,92,93,94,99,109,112,],[30,30,30,30,-56,30,30,-54,-55,30,30,-52,-53,30,30,-48,-49,-50,-51,30,30,30,-47,30,-42,-45,-46,30,30,30,]),'BASE2_INTEGER':([0,11,25,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,92,93,94,99,109,112,],[31,31,31,31,-56,31,31,-54,-55,31,31,-52,-53,31,31,-48,-49,-50,-51,31,31,31,-47,31,-42,-45,-46,31,31,31,]),'FLOAT':([0,11,25,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,92,93,94,99,109,112,],[32,32,32,32,-56,32,32,-54,-55,32,32,-52,-53,32,32,-48,-49,-50,-51,32,32,32,-47,32,-42,-45,-46,32,32,32,]),'STRING':([0,11,25,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,64,92,93,94,99,109,112,],[33,33,33,33,-56,33,33,-54,-55,33,33,-52,-53,33,33,-48,-49,-50,-51,33,33,33,-47,33,33,-42,-45,-46,33,33,33,]),'CHAR':([0,11,25,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,64,92,93,94,99,109,112,],[34,34,34,34,-56,34,34,-54,-55,34,34,-52,-53,34,34,-48,-49,-50,-51,34,34,34,-47,34,34,-42,-45,-46,34,34,34,]),'DATE':([0,11,25,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,92,93,94,99,109,112,],[35,35,35,35,-56,35,35,-54,-55,35,35,-52,-53,35,35,-48,-49,-50,-51,35,35,35,-47,35,-42,-45,-46,35,35,35,]),'DATETIME':([0,11,25,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,92,93,94,99,109,112,],[36,36,36,36,-56,36,36,-54,-55,36,36,-52,-53,36,36,-48,-49,-50,-51,36,36,36,-47,36,-42,-45,-46,36,36,36,]),'DATE_INTERVAL':([0,11,25,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,92,93,94,99,109,112,],[37,37,37,37,-56,37,37,-54,-55,37,37,-52,-53,37,37,-48,-49,-50,-51,37,37,37,-47,37,-42,-45,-46,37,37,37,]),'DATETIME_INTERVAL':([0,11,25,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,92,93,94,99,109,112,],[38,38,38,38,-56,38,38,-54,-55,38,38,-52,-53,38,38,-48,-49,-50,-51,38,38,38,-47,38,-42,-45,-46,38,38,38,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,33,34,35,36,37,38,59,62,66,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,103,104,106,108,110,113,114,116,117,],[0,-17,-18,-16,-13,-10,-7,-4,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-41,-61,-62,-63,-64,-65,-40,-39,-34,-35,-36,-37,-44,-43,-38,-15,-14,-12,-11,-9,-8,-6,-5,-2,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,-70,-69,-75,-79,-77,]),'SPACE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,28,29,30,31,32,33,34,35,36,37,38,39,59,62,66,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,103,104,105,106,108,110,111,113,114,116,117,],[-17,-18,-16,-13,-10,-7,58,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-41,73,-61,-62,-63,-64,-65,-40,-39,-34,-35,-36,-37,76,-44,58,-38,101,-15,-14,-12,-11,-9,-8,-6,-5,58,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,112,-76,-78,-70,101,-69,-75,-79,-77,]),'DOT_OPERATOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,59,61,62,66,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,103,104,106,108,110,113,114,116,117,],[-17,-18,-16,-13,-10,-7,60,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-41,67,-61,-62,-63,-64,-65,-40,-39,-34,-35,-36,-37,-44,67,60,-38,-15,-14,-12,-11,-9,-8,-6,-5,60,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,-70,-69,-75,-79,-77,]),'STAR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,59,61,62,66,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,103,104,106,108,110,113,114,116,117,],[-17,-18,-16,-13,52,52,-4,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-41,52,-61,-62,-63,-64,-65,-40,-39,-34,-35,-36,-37,-44,52,-4,-38,-15,-14,-12,-11,52,52,52,52,-2,52,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,-70,-69,-75,-79,-77,]),'SLASH':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,59,61,62,66,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,103,104,106,108,110,113,114,116,117,],[-17,-18,-16,-13,53,53,-4,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-41,53,-61,-62,-63,-64,-65,-40,-39,-34,-35,-36,-37,-44,53,-4,-38,-15,-14,-12,-11,53,53,53,53,-2,53,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,-70,-69,-75,-79,-77,]),'DOUBLESLASH':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,59,61,62,66,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,103,104,106,108,110,113,114,116,117,],[-17,-18,-16,-13,54,54,-4,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-41,54,-61,-62,-63,-64,-65,-40,-39,-34,-35,-36,-37,-44,54,-4,-38,-15,-14,-12,-11,54,54,54,54,-2,54,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,-70,-69,-75,-79,-77,]),'PERCENT':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,59,61,62,66,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,103,104,106,108,110,113,114,116,117,],[-17,-18,-16,-13,55,55,-4,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-41,55,-61,-62,-63,-64,-65,-40,-39,-34,-35,-36,-37,-44,55,-4,-38,-15,-14,-12,-11,55,55,55,55,-2,55,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,-70,-69,-75,-79,-77,]),'PLUS':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,59,61,62,66,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,103,104,106,108,110,113,114,116,117,],[-17,-18,-16,48,48,-7,-4,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-41,48,-61,-62,-63,-64,-65,-40,-39,-34,-35,-36,-37,-44,48,-4,-38,-15,-14,48,48,48,48,-6,-5,-2,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,-70,-69,-75,-79,-77,]),'MINUS':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,59,61,62,66,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,103,104,106,108,110,113,114,116,117,],[-17,-18,-16,49,49,-7,-4,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-41,49,-61,-62,-63,-64,-65,-40,-39,-34,-35,-36,-37,-44,49,-4,-38,-15,-14,49,49,49,49,-6,-5,-2,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,-70,-69,-75,-79,-77,]),'OPERATOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,59,61,62,66,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,103,104,106,108,110,113,114,116,117,],[-17,-18,44,44,-10,-7,-4,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-41,44,-61,-62,-63,-64,-65,-40,-39,-34,-35,-36,-37,-44,44,-4,-38,44,44,44,44,-9,-8,-6,-5,-2,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,-70,-69,-75,-79,-77,]),'ARROW':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,59,61,62,66,74,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,100,102,103,104,106,108,110,111,113,114,115,116,117,],[-17,-18,45,45,-10,-7,-4,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-41,45,-61,-62,-63,-64,-65,-40,-39,-34,-35,-36,-37,-44,45,-4,-38,99,-69,45,45,45,45,-9,-8,-6,-5,-2,-3,-1,-66,-67,-68,-42,-45,-46,-69,-71,-73,-80,-81,-76,-78,-70,-69,-69,-75,-72,-79,-77,]),'TICK_OPERATOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,59,61,62,66,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,103,104,106,108,110,113,114,116,117,],[-17,41,41,-13,-10,-7,-4,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-41,41,-61,-62,-63,-64,-65,-40,-39,-34,-35,-36,-37,-44,41,-4,-38,41,41,-12,-11,-9,-8,-6,-5,-2,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,-70,-69,-75,-79,-77,]),'KEYWORD_WHERE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,33,34,35,36,37,38,59,62,63,65,66,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,103,104,106,108,110,113,114,116,117,],[39,-18,-16,-13,-10,-7,-4,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-41,-61,-62,-63,-64,-65,-40,-39,-34,-35,-36,-37,-44,-4,39,39,-38,-15,-14,-12,-11,-9,-8,-6,-5,-2,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,39,-69,39,-79,-77,]),'RPAREN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,41,44,45,48,49,52,53,54,55,59,62,65,66,67,68,69,70,71,72,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,103,104,106,108,110,113,114,116,117,],[-17,-18,-16,-13,-10,-7,-4,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-41,66,-61,-62,-63,-64,-65,-40,-39,-34,-35,-36,-37,-56,-54,-55,-52,-53,-48,-49,-50,-51,-44,-43,92,-38,93,94,-57,-58,-59,-60,-15,-14,-12,-11,-9,-8,-6,-5,-2,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,-70,-69,-75,-79,-77,]),'PADDING':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,33,34,35,36,37,38,39,59,62,66,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,103,104,106,108,110,113,114,116,117,],[-17,-18,-16,-13,-10,-7,-4,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-41,-61,-62,-63,-64,-65,-40,-39,-34,-35,-36,-37,77,-44,-43,-38,-15,-14,-12,-11,-9,-8,-6,-5,-2,-3,-1,-66,-67,-68,-42,-45,-46,107,-80,-81,-76,-78,-70,107,-75,-79,-77,]),'KEYWORD_IN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,33,34,35,36,37,38,59,62,66,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,104,106,108,110,113,114,116,117,],[-17,-18,-16,-13,-10,-7,-4,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-41,-61,-62,-63,-64,-65,-40,-39,-34,-35,-36,-37,-44,-43,-38,-15,-14,-12,-11,-9,-8,-6,-5,-2,-3,-1,-66,-67,-68,-42,-45,-46,105,-69,-80,-81,-76,-78,-70,-69,-75,-79,-77,]),'ANNOTATION':([16,28,29,30,31,32,],[64,-61,-62,-63,-64,-65,]),'EQ':([75,97,98,100,102,111,115,],[-69,109,-74,-71,-73,-69,-72,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'st_expr':([0,112,],[1,116,]),'expr':([0,11,25,40,42,43,46,47,50,51,56,57,58,61,99,109,112,],[2,63,65,63,63,63,63,63,63,63,63,63,63,65,110,114,2,]),'expr_term0':([0,11,25,40,42,43,46,47,50,51,56,57,58,61,99,109,112,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'expr_term2':([0,11,25,40,42,43,46,47,50,51,56,57,58,61,99,109,112,],[4,4,4,78,79,4,4,4,4,4,4,4,4,4,4,4,4,]),'expr_term6':([0,11,25,40,42,43,46,47,50,51,56,57,58,61,99,109,112,],[5,5,5,5,5,80,81,5,5,5,5,5,5,5,5,5,5,]),'expr_term7':([0,11,25,40,42,43,46,47,50,51,56,57,58,61,99,109,112,],[6,6,6,6,6,6,6,82,83,6,6,6,6,6,6,6,6,]),'expr_term9':([0,11,25,40,42,43,46,47,50,51,56,57,58,61,99,109,112,],[7,7,7,7,7,7,7,7,7,84,85,87,7,7,7,7,7,]),'expr_factor':([0,11,25,40,42,43,46,47,50,51,56,57,58,61,99,109,112,],[8,62,8,8,8,8,8,8,8,8,8,86,88,8,8,8,8,]),'literal':([0,11,25,40,42,43,46,47,50,51,56,57,58,61,99,109,112,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'identifier':([0,11,25,40,42,43,46,47,50,51,56,57,58,61,64,99,109,112,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,91,10,10,10,]),'enclosed_expr':([0,8,11,25,40,42,43,46,47,50,51,56,57,58,61,62,86,88,99,109,112,],[11,59,11,11,11,11,11,11,11,11,11,11,11,11,11,59,59,59,11,11,11,]),'unit_value':([0,11,25,40,42,43,46,47,50,51,56,57,58,61,99,109,112,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'letexpr':([0,11,25,40,42,43,46,47,50,51,56,57,58,61,99,109,112,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'where_expr':([0,11,25,40,42,43,46,47,50,51,56,57,58,61,99,109,112,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'lambda_expr':([0,11,25,40,42,43,46,47,50,51,56,57,58,61,99,109,112,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'number':([0,11,25,40,42,43,46,47,50,51,56,57,58,61,99,109,112,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'concrete_number':([0,11,25,40,42,43,46,47,50,51,56,57,58,61,99,109,112,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'string':([0,11,25,40,42,43,46,47,50,51,56,57,58,61,64,99,109,112,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,89,18,18,18,]),'char':([0,11,25,40,42,43,46,47,50,51,56,57,58,61,64,99,109,112,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,90,19,19,19,]),'date':([0,11,25,40,42,43,46,47,50,51,56,57,58,61,99,109,112,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'datetime':([0,11,25,40,42,43,46,47,50,51,56,57,58,61,99,109,112,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'date_interval':([0,11,25,40,42,43,46,47,50,51,56,57,58,61,99,109,112,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'datetime_interval':([0,11,25,40,42,43,46,47,50,51,56,57,58,61,99,109,112,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'infix_operator_0':([3,4,25,61,78,79,],[40,42,69,69,42,42,]),'infix_operator_2':([4,5,25,61,78,79,80,81,],[43,46,70,70,43,43,46,46,]),'infix_operator_6':([5,6,25,61,80,81,82,83,],[47,50,71,71,47,47,50,50,]),'infix_operator_7':([6,7,25,61,82,83,84,85,87,],[51,56,72,72,51,51,56,56,56,]),'infix_operator_9':([8,62,86,88,],[57,57,57,57,]),'operator':([25,61,],[68,68,]),'parameters':([27,73,76,77,107,],[74,98,98,98,98,]),'equations':([73,76,77,],[95,103,104,]),'equation':([73,76,77,107,],[96,96,96,113,]),'pattern':([73,76,77,107,],[97,97,97,97,]),'_parameters':([75,111,],[100,115,]),'empty':([75,96,111,113,],[102,108,102,108,]),'_equation_set':([96,113,],[106,117,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> st_expr","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','parser.py',357),
  ('expr_term9 -> expr_factor infix_operator_9 expr_factor','expr_term9',3,'p_expressions_precedence_rules','parser.py',364),
  ('expr_term9 -> expr_factor infix_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','parser.py',365),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','parser.py',366),
  ('expr_term7 -> expr_term9 infix_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','parser.py',368),
  ('expr_term7 -> expr_term7 infix_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','parser.py',369),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','parser.py',370),
  ('expr_term6 -> expr_term7 infix_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','parser.py',372),
  ('expr_term6 -> expr_term6 infix_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','parser.py',373),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','parser.py',374),
  ('expr_term2 -> expr_term6 infix_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','parser.py',376),
  ('expr_term2 -> expr_term2 infix_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','parser.py',377),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','parser.py',378),
  ('expr_term0 -> expr_term2 infix_operator_0 expr_term2','expr_term0',3,'p_expressions_precedence_rules','parser.py',380),
  ('expr_term0 -> expr_term0 infix_operator_0 expr_term2','expr_term0',3,'p_expressions_precedence_rules','parser.py',381),
  ('expr_term0 -> expr_term2','expr_term0',1,'p_expressions_precedence_rules','parser.py',382),
  ('st_expr -> expr','st_expr',1,'p_standalone_expr','parser.py',394),
  ('expr -> expr_term0','expr',1,'p_standalone_expr','parser.py',396),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_expr','parser.py',398),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_expr','parser.py',399),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_expr','parser.py',400),
  ('expr_factor -> unit_value','expr_factor',1,'p_standalone_expr','parser.py',401),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_expr','parser.py',402),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_expr','parser.py',403),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_expr','parser.py',404),
  ('literal -> number','literal',1,'p_literals','parser.py',412),
  ('literal -> concrete_number','literal',1,'p_literals','parser.py',413),
  ('literal -> string','literal',1,'p_literals','parser.py',414),
  ('literal -> char','literal',1,'p_literals','parser.py',415),
  ('literal -> date','literal',1,'p_literals','parser.py',416),
  ('literal -> datetime','literal',1,'p_literals','parser.py',417),
  ('literal -> date_interval','literal',1,'p_literals','parser.py',418),
  ('literal -> datetime_interval','literal',1,'p_literals','parser.py',419),
  ('date -> DATE','date',1,'p_date','parser.py',425),
  ('datetime -> DATETIME','datetime',1,'p_datetime','parser.py',431),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','parser.py',437),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','parser.py',443),
  ('unit_value -> LPAREN RPAREN','unit_value',2,'p_unit_value','parser.py',449),
  ('char -> CHAR','char',1,'p_char','parser.py',455),
  ('string -> STRING','string',1,'p_string','parser.py',460),
  ('identifier -> IDENTIFIER','identifier',1,'p_variable','parser.py',465),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','parser.py',470),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','parser.py',475),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','parser.py',476),
  ('enclosed_expr -> LPAREN DOT_OPERATOR RPAREN','enclosed_expr',3,'p_operators_as_expressios','parser.py',482),
  ('enclosed_expr -> LPAREN operator RPAREN','enclosed_expr',3,'p_operators_as_expressios','parser.py',483),
  ('infix_operator_9 -> DOT_OPERATOR','infix_operator_9',1,'p_operator','parser.py',494),
  ('infix_operator_7 -> STAR','infix_operator_7',1,'p_operator','parser.py',496),
  ('infix_operator_7 -> SLASH','infix_operator_7',1,'p_operator','parser.py',497),
  ('infix_operator_7 -> DOUBLESLASH','infix_operator_7',1,'p_operator','parser.py',498),
  ('infix_operator_7 -> PERCENT','infix_operator_7',1,'p_operator','parser.py',499),
  ('infix_operator_6 -> PLUS','infix_operator_6',1,'p_operator','parser.py',501),
  ('infix_operator_6 -> MINUS','infix_operator_6',1,'p_operator','parser.py',502),
  ('infix_operator_2 -> OPERATOR','infix_operator_2',1,'p_operator','parser.py',504),
  ('infix_operator_2 -> ARROW','infix_operator_2',1,'p_operator','parser.py',505),
  ('infix_operator_0 -> TICK_OPERATOR','infix_operator_0',1,'p_operator','parser.py',507),
  ('operator -> infix_operator_0','operator',1,'p_operator','parser.py',509),
  ('operator -> infix_operator_2','operator',1,'p_operator','parser.py',510),
  ('operator -> infix_operator_6','operator',1,'p_operator','parser.py',511),
  ('operator -> infix_operator_7','operator',1,'p_operator','parser.py',512),
  ('number -> BASE10_INTEGER','number',1,'p_integer','parser.py',519),
  ('number -> BASE16_INTEGER','number',1,'p_integer','parser.py',520),
  ('number -> BASE8_INTEGER','number',1,'p_integer','parser.py',521),
  ('number -> BASE2_INTEGER','number',1,'p_integer','parser.py',522),
  ('number -> FLOAT','number',1,'p_float','parser.py',544),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','parser.py',549),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','parser.py',550),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','parser.py',551),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',560),
  ('lambda_expr -> BACKSLASH parameters ARROW expr','lambda_expr',4,'p_lambda_definition','parser.py',565),
  ('parameters -> IDENTIFIER _parameters','parameters',2,'p_parameters','parser.py',573),
  ('_parameters -> SPACE IDENTIFIER _parameters','_parameters',3,'p__params','parser.py',581),
  ('_parameters -> empty','_parameters',1,'p_empty__parameters','parser.py',588),
  ('pattern -> parameters','pattern',1,'p_pattern','parser.py',637),
  ('equation -> pattern EQ expr','equation',3,'p_equation','parser.py',652),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','parser.py',662),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','parser.py',671),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','parser.py',680),
  ('letexpr -> KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','parser.py',690),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','parser.py',698),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','parser.py',699),
]
