
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'st_exprrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON DOT_OPERATOR DOUBLESLASH EQ FLOAT IDENTIFIER KEYWORD_IN KEYWORD_LET KEYWORD_WHERE LPAREN MINUS OPERATOR PADDING PERCENT PLUS RPAREN SLASH SPACE STAR STRING TICK_OPERATORst_expr : expr\n    expr :  number\n             | concrete_number\n             | string\n             | char\n             | identifier\n             | enclosed_expr\n             | letexpr\n             | where_expr\n    char : CHARstring : STRINGidentifier : IDENTIFIERenclosed_expr : LPAREN expr RPARENexpr : expr TICK_OPERATOR exprexpr : expr SPACE exprexpr : enclosed_expr expr\n            | expr enclosed_expr\n    \n    expr : expr DOT_OPERATOR expr\n    enclosed_expr : LPAREN DOT_OPERATOR RPAREN\n                     | LPAREN operator RPAREN\n    expr : expr operator expr\n\n    \n    operator :  PLUS\n              | MINUS\n              | STAR\n              | SLASH\n              | DOUBLESLASH\n              | PERCENT\n              | ARROW\n              | OPERATOR\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : PLUS numbernumber : MINUS numbernumber : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : expr : BACKSLASH parameters ARROW expr\n    parameters : IDENTIFIER _parameters\n    _parameters : SPACE IDENTIFIER _parameters_parameters : empty\n    pattern : parametersequation : pattern EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    '

_lr_action_items = {'BACKSLASH':([0,8,22,24,25,27,28,30,31,32,33,34,35,36,37,59,63,64,65,78,80,],[11,11,11,11,11,11,11,-22,-23,-24,-25,-26,-27,-28,-29,11,-13,-19,-20,11,11,]),'BASE10_INTEGER':([0,8,16,17,22,24,25,27,28,30,31,32,33,34,35,36,37,47,48,59,63,64,65,78,80,],[12,12,12,12,12,12,12,12,12,-22,-23,-24,-25,-26,-27,-28,-29,12,12,12,-13,-19,-20,12,12,]),'BASE16_INTEGER':([0,8,16,17,22,24,25,27,28,30,31,32,33,34,35,36,37,47,48,59,63,64,65,78,80,],[13,13,13,13,13,13,13,13,13,-22,-23,-24,-25,-26,-27,-28,-29,13,13,13,-13,-19,-20,13,13,]),'BASE8_INTEGER':([0,8,16,17,22,24,25,27,28,30,31,32,33,34,35,36,37,47,48,59,63,64,65,78,80,],[14,14,14,14,14,14,14,14,14,-22,-23,-24,-25,-26,-27,-28,-29,14,14,14,-13,-19,-20,14,14,]),'BASE2_INTEGER':([0,8,16,17,22,24,25,27,28,30,31,32,33,34,35,36,37,47,48,59,63,64,65,78,80,],[15,15,15,15,15,15,15,15,15,-22,-23,-24,-25,-26,-27,-28,-29,15,15,15,-13,-19,-20,15,15,]),'PLUS':([0,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,30,31,32,33,34,35,36,37,39,42,43,44,47,48,50,51,52,53,56,57,58,59,63,64,65,67,70,71,72,75,77,78,80,81,82,83,84,],[16,30,-2,-3,-4,-5,-6,16,-8,-9,-30,-31,-32,-33,16,16,-36,-11,-10,-12,47,16,16,-17,16,16,-22,-23,-24,-25,-26,-27,-28,-29,30,-34,-35,30,16,16,30,-15,-18,30,-37,-38,-39,16,-13,-19,-20,-40,-51,-52,30,-47,-49,16,16,-40,30,-50,-48,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,30,31,32,33,34,35,36,37,39,42,43,44,47,48,50,51,52,53,56,57,58,59,63,64,65,67,70,71,72,75,77,78,80,81,82,83,84,],[17,31,-2,-3,-4,-5,-6,17,-8,-9,-30,-31,-32,-33,17,17,-36,-11,-10,-12,48,17,17,-17,17,17,-22,-23,-24,-25,-26,-27,-28,-29,31,-34,-35,31,17,17,31,-15,-18,31,-37,-38,-39,17,-13,-19,-20,-40,-51,-52,31,-47,-49,17,17,-40,31,-50,-48,]),'FLOAT':([0,8,16,17,22,24,25,27,28,30,31,32,33,34,35,36,37,47,48,59,63,64,65,78,80,],[18,18,18,18,18,18,18,18,18,-22,-23,-24,-25,-26,-27,-28,-29,18,18,18,-13,-19,-20,18,18,]),'STRING':([0,8,22,24,25,27,28,30,31,32,33,34,35,36,37,38,59,63,64,65,78,80,],[19,19,19,19,19,19,19,-22,-23,-24,-25,-26,-27,-28,-29,19,19,-13,-19,-20,19,19,]),'CHAR':([0,8,22,24,25,27,28,30,31,32,33,34,35,36,37,38,59,63,64,65,78,80,],[20,20,20,20,20,20,20,-22,-23,-24,-25,-26,-27,-28,-29,20,20,-13,-19,-20,20,20,]),'IDENTIFIER':([0,8,11,22,24,25,27,28,30,31,32,33,34,35,36,37,38,49,54,55,59,61,63,64,65,76,78,80,],[21,21,41,21,21,21,21,21,-22,-23,-24,-25,-26,-27,-28,-29,21,41,41,41,21,73,-13,-19,-20,41,21,21,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,12,13,14,15,18,19,20,21,22,24,25,26,27,28,30,31,32,33,34,35,36,37,39,42,43,44,50,51,52,53,56,57,58,59,63,64,65,67,70,71,72,75,77,78,80,81,82,83,84,],[22,22,-2,-3,-4,-5,-6,22,-8,-9,-30,-31,-32,-33,-36,-11,-10,-12,22,22,22,-17,22,22,-22,-23,-24,-25,-26,-27,-28,-29,22,-34,-35,22,-14,-15,-18,22,-37,-38,-39,22,-13,-19,-20,-40,-51,-52,-41,-47,-49,22,22,-40,22,-50,-48,]),'KEYWORD_LET':([0,8,22,24,25,27,28,30,31,32,33,34,35,36,37,59,63,64,65,78,80,],[23,23,23,23,23,23,23,-22,-23,-24,-25,-26,-27,-28,-29,23,-13,-19,-20,23,23,]),'$end':([1,2,3,4,5,6,7,8,9,10,12,13,14,15,18,19,20,21,26,39,42,43,50,51,52,53,56,57,58,63,64,65,67,70,71,72,75,77,81,82,83,84,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-30,-31,-32,-33,-36,-11,-10,-12,-17,-16,-34,-35,-14,-15,-18,-21,-37,-38,-39,-13,-19,-20,-40,-51,-52,-41,-47,-49,-40,-46,-50,-48,]),'TICK_OPERATOR':([2,3,4,5,6,7,8,9,10,12,13,14,15,18,19,20,21,26,39,42,43,44,50,51,52,53,56,57,58,63,64,65,67,70,71,72,75,77,81,82,83,84,],[24,-2,-3,-4,-5,-6,-7,-8,-9,-30,-31,-32,-33,-36,-11,-10,-12,-17,24,-34,-35,24,-14,-15,-18,24,-37,-38,-39,-13,-19,-20,-40,-51,-52,24,-47,-49,-40,24,-50,-48,]),'SPACE':([2,3,4,5,6,7,8,9,10,12,13,14,15,18,19,20,21,23,26,29,39,41,42,43,44,50,51,52,53,56,57,58,63,64,65,67,70,71,72,73,74,75,77,81,82,83,84,],[25,-2,-3,-4,-5,-6,-7,-8,-9,-30,-31,-32,-33,-36,-11,-10,-12,49,-17,54,25,61,-34,-35,25,25,-15,25,25,-37,-38,-39,-13,-19,-20,-40,-51,-52,25,61,80,-47,-49,-40,25,-50,-48,]),'DOT_OPERATOR':([2,3,4,5,6,7,8,9,10,12,13,14,15,18,19,20,21,22,26,39,42,43,44,50,51,52,53,56,57,58,63,64,65,67,70,71,72,75,77,81,82,83,84,],[27,-2,-3,-4,-5,-6,-7,-8,-9,-30,-31,-32,-33,-36,-11,-10,-12,45,-17,27,-34,-35,27,27,-15,27,27,-37,-38,-39,-13,-19,-20,-40,-51,-52,27,-47,-49,-40,27,-50,-48,]),'KEYWORD_WHERE':([2,3,4,5,6,7,8,9,10,12,13,14,15,18,19,20,21,26,39,42,43,44,50,51,52,53,56,57,58,63,64,65,67,70,71,72,75,77,81,82,83,84,],[29,-2,-3,-4,-5,-6,-7,-8,-9,-30,-31,-32,-33,-36,-11,-10,-12,-17,29,-34,-35,29,-14,-15,-18,29,-37,-38,-39,-13,-19,-20,-40,-51,-52,29,-47,-49,-40,29,-50,-48,]),'STAR':([2,3,4,5,6,7,8,9,10,12,13,14,15,18,19,20,21,22,26,39,42,43,44,50,51,52,53,56,57,58,63,64,65,67,70,71,72,75,77,81,82,83,84,],[32,-2,-3,-4,-5,-6,-7,-8,-9,-30,-31,-32,-33,-36,-11,-10,-12,32,-17,32,-34,-35,32,32,-15,-18,32,-37,-38,-39,-13,-19,-20,-40,-51,-52,32,-47,-49,-40,32,-50,-48,]),'SLASH':([2,3,4,5,6,7,8,9,10,12,13,14,15,18,19,20,21,22,26,39,42,43,44,50,51,52,53,56,57,58,63,64,65,67,70,71,72,75,77,81,82,83,84,],[33,-2,-3,-4,-5,-6,-7,-8,-9,-30,-31,-32,-33,-36,-11,-10,-12,33,-17,33,-34,-35,33,33,-15,-18,33,-37,-38,-39,-13,-19,-20,-40,-51,-52,33,-47,-49,-40,33,-50,-48,]),'DOUBLESLASH':([2,3,4,5,6,7,8,9,10,12,13,14,15,18,19,20,21,22,26,39,42,43,44,50,51,52,53,56,57,58,63,64,65,67,70,71,72,75,77,81,82,83,84,],[34,-2,-3,-4,-5,-6,-7,-8,-9,-30,-31,-32,-33,-36,-11,-10,-12,34,-17,34,-34,-35,34,34,-15,-18,34,-37,-38,-39,-13,-19,-20,-40,-51,-52,34,-47,-49,-40,34,-50,-48,]),'PERCENT':([2,3,4,5,6,7,8,9,10,12,13,14,15,18,19,20,21,22,26,39,42,43,44,50,51,52,53,56,57,58,63,64,65,67,70,71,72,75,77,81,82,83,84,],[35,-2,-3,-4,-5,-6,-7,-8,-9,-30,-31,-32,-33,-36,-11,-10,-12,35,-17,35,-34,-35,35,35,-15,-18,35,-37,-38,-39,-13,-19,-20,-40,-51,-52,35,-47,-49,-40,35,-50,-48,]),'ARROW':([2,3,4,5,6,7,8,9,10,12,13,14,15,18,19,20,21,22,26,39,40,41,42,43,44,50,51,52,53,56,57,58,60,62,63,64,65,67,70,71,72,73,75,77,79,81,82,83,84,],[36,-2,-3,-4,-5,-6,-7,-8,-9,-30,-31,-32,-33,-36,-11,-10,-12,36,-17,36,59,-40,-34,-35,36,-14,-15,-18,36,-37,-38,-39,-42,-44,-13,-19,-20,-40,-51,-52,36,-40,-47,-49,-43,-40,36,-50,-48,]),'OPERATOR':([2,3,4,5,6,7,8,9,10,12,13,14,15,18,19,20,21,22,26,39,42,43,44,50,51,52,53,56,57,58,63,64,65,67,70,71,72,75,77,81,82,83,84,],[37,-2,-3,-4,-5,-6,-7,-8,-9,-30,-31,-32,-33,-36,-11,-10,-12,37,-17,37,-34,-35,37,37,-15,-18,37,-37,-38,-39,-13,-19,-20,-40,-51,-52,37,-47,-49,-40,37,-50,-48,]),'RPAREN':([2,3,4,5,6,7,8,9,10,12,13,14,15,18,19,20,21,26,32,33,34,35,36,37,39,42,43,44,45,46,47,48,50,51,52,53,56,57,58,63,64,65,67,70,71,72,75,77,81,82,83,84,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-30,-31,-32,-33,-36,-11,-10,-12,-17,-24,-25,-26,-27,-28,-29,-16,-34,-35,63,64,65,-22,-23,-14,-15,-18,-21,-37,-38,-39,-13,-19,-20,-40,-51,-52,-41,-47,-49,-40,-46,-50,-48,]),'PADDING':([2,3,4,5,6,7,8,9,10,12,13,14,15,18,19,20,21,26,29,39,42,43,50,51,52,53,56,57,58,63,64,65,67,70,71,72,75,77,81,82,83,84,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-30,-31,-32,-33,-36,-11,-10,-12,-17,55,-16,-34,-35,-14,-15,-18,-21,-37,-38,-39,-13,-19,-20,76,-51,-52,-41,-47,-49,76,-46,-50,-48,]),'KEYWORD_IN':([2,3,4,5,6,7,8,9,10,12,13,14,15,18,19,20,21,26,39,42,43,50,51,52,53,56,57,58,63,64,65,66,67,70,71,72,75,77,81,82,83,84,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-30,-31,-32,-33,-36,-11,-10,-12,-17,-16,-34,-35,-14,-15,-18,-21,-37,-38,-39,-13,-19,-20,74,-40,-51,-52,-41,-47,-49,-40,-46,-50,-48,]),'ANNOTATION':([3,12,13,14,15,18,42,43,],[38,-30,-31,-32,-33,-36,-34,-35,]),'EQ':([41,60,62,68,69,73,79,],[-40,-42,-44,78,-45,-40,-43,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'st_expr':([0,80,],[1,83,]),'expr':([0,8,22,24,25,27,28,59,78,80,],[2,39,44,50,51,52,53,72,82,2,]),'number':([0,8,16,17,22,24,25,27,28,47,48,59,78,80,],[3,3,42,43,3,3,3,3,3,42,43,3,3,3,]),'concrete_number':([0,8,22,24,25,27,28,59,78,80,],[4,4,4,4,4,4,4,4,4,4,]),'string':([0,8,22,24,25,27,28,38,59,78,80,],[5,5,5,5,5,5,5,56,5,5,5,]),'char':([0,8,22,24,25,27,28,38,59,78,80,],[6,6,6,6,6,6,6,57,6,6,6,]),'identifier':([0,8,22,24,25,27,28,38,59,78,80,],[7,7,7,7,7,7,7,58,7,7,7,]),'enclosed_expr':([0,2,8,22,24,25,27,28,39,44,50,51,52,53,59,72,78,80,82,],[8,26,8,8,8,8,8,8,26,26,26,26,26,26,8,26,8,8,26,]),'letexpr':([0,8,22,24,25,27,28,59,78,80,],[9,9,9,9,9,9,9,9,9,9,]),'where_expr':([0,8,22,24,25,27,28,59,78,80,],[10,10,10,10,10,10,10,10,10,10,]),'operator':([2,22,39,44,50,51,52,53,72,82,],[28,46,28,28,28,28,28,28,28,28,]),'parameters':([11,49,54,55,76,],[40,69,69,69,69,]),'_parameters':([41,73,],[60,79,]),'empty':([41,67,73,81,],[62,77,62,77,]),'equations':([49,54,55,],[66,70,71,]),'equation':([49,54,55,76,],[67,67,67,81,]),'pattern':([49,54,55,76,],[68,68,68,68,]),'_equation_set':([67,81,],[75,84,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> st_expr","S'",1,None,None,None),
  ('st_expr -> expr','st_expr',1,'p_standalone_expr','parser.py',304),
  ('expr -> number','expr',1,'p_literals_and_basic','parser.py',311),
  ('expr -> concrete_number','expr',1,'p_literals_and_basic','parser.py',312),
  ('expr -> string','expr',1,'p_literals_and_basic','parser.py',313),
  ('expr -> char','expr',1,'p_literals_and_basic','parser.py',314),
  ('expr -> identifier','expr',1,'p_literals_and_basic','parser.py',315),
  ('expr -> enclosed_expr','expr',1,'p_literals_and_basic','parser.py',316),
  ('expr -> letexpr','expr',1,'p_literals_and_basic','parser.py',317),
  ('expr -> where_expr','expr',1,'p_literals_and_basic','parser.py',318),
  ('char -> CHAR','char',1,'p_char','parser.py',324),
  ('string -> STRING','string',1,'p_string','parser.py',329),
  ('identifier -> IDENTIFIER','identifier',1,'p_variable','parser.py',334),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','parser.py',339),
  ('expr -> expr TICK_OPERATOR expr','expr',3,'p_infix_application','parser.py',344),
  ('expr -> expr SPACE expr','expr',3,'p_application','parser.py',349),
  ('expr -> enclosed_expr expr','expr',2,'p_application_after_paren','parser.py',354),
  ('expr -> expr enclosed_expr','expr',2,'p_application_after_paren','parser.py',355),
  ('expr -> expr DOT_OPERATOR expr','expr',3,'p_compose','parser.py',362),
  ('enclosed_expr -> LPAREN DOT_OPERATOR RPAREN','enclosed_expr',3,'p_operators_as_expressios','parser.py',369),
  ('enclosed_expr -> LPAREN operator RPAREN','enclosed_expr',3,'p_operators_as_expressios','parser.py',370),
  ('expr -> expr operator expr','expr',3,'p_user_operator_expr','parser.py',377),
  ('operator -> PLUS','operator',1,'p_operator','parser.py',386),
  ('operator -> MINUS','operator',1,'p_operator','parser.py',387),
  ('operator -> STAR','operator',1,'p_operator','parser.py',388),
  ('operator -> SLASH','operator',1,'p_operator','parser.py',389),
  ('operator -> DOUBLESLASH','operator',1,'p_operator','parser.py',390),
  ('operator -> PERCENT','operator',1,'p_operator','parser.py',391),
  ('operator -> ARROW','operator',1,'p_operator','parser.py',392),
  ('operator -> OPERATOR','operator',1,'p_operator','parser.py',393),
  ('number -> BASE10_INTEGER','number',1,'p_integer','parser.py',400),
  ('number -> BASE16_INTEGER','number',1,'p_integer','parser.py',401),
  ('number -> BASE8_INTEGER','number',1,'p_integer','parser.py',402),
  ('number -> BASE2_INTEGER','number',1,'p_integer','parser.py',403),
  ('number -> PLUS number','number',2,'p_pos_number','parser.py',425),
  ('number -> MINUS number','number',2,'p_neg_number','parser.py',430),
  ('number -> FLOAT','number',1,'p_float','parser.py',438),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','parser.py',443),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','parser.py',444),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','parser.py',445),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',454),
  ('expr -> BACKSLASH parameters ARROW expr','expr',4,'p_lambda_definition','parser.py',459),
  ('parameters -> IDENTIFIER _parameters','parameters',2,'p_parameters','parser.py',467),
  ('_parameters -> SPACE IDENTIFIER _parameters','_parameters',3,'p__params','parser.py',475),
  ('_parameters -> empty','_parameters',1,'p_empty__parameters','parser.py',482),
  ('pattern -> parameters','pattern',1,'p_pattern','parser.py',531),
  ('equation -> pattern EQ expr','equation',3,'p_equation','parser.py',546),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','parser.py',556),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','parser.py',565),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','parser.py',574),
  ('letexpr -> KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','parser.py',581),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','parser.py',589),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','parser.py',590),
]
