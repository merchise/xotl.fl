
# program_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FLOAT IDENTIFIER KEYWORD_CLASS KEYWORD_DATA KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LPAREN MINUS OPERATOR PADDING PERCENT PLUS RPAREN SLASH SPACE STAR STRING TICK_OPERATORexpr_factor : expr_factor SPACE expr_factor\n    expr_term9 : expr_factor infix_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infix_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infix_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infix_operator_2 expr_term6\n               | expr_term6\n\n    expr_term0 : expr infix_operator_0 expr_term0\n               | expr_term2\n\n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | unit_value\n                | letexpr\n                | where_expr\n                | lambda_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    unit_value : LPAREN RPAREN\n    char : CHARstring : STRINGidentifier : IDENTIFIERenclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : LPAREN DOT_OPERATOR RPAREN\n                     | LPAREN operator RPAREN\n    \n    infix_operator_9 : DOT_OPERATOR\n\n    infix_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infix_operator_6 : PLUS\n                     | MINUS\n\n    infix_operator_2 : OPERATOR\n                     | ARROW\n\n    infix_operator_0 : TICK_OPERATOR\n\n    operator : infix_operator_0\n             | infix_operator_2\n             | infix_operator_6\n             | infix_operator_7\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH parameters ARROW expr\n    parameters : IDENTIFIER _parameters\n    _parameters : SPACE IDENTIFIER _parameters_parameters : empty\n    pattern : parametersequation : pattern EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    program : st_expr'
    
_lr_action_items = {'IDENTIFIER':([0,12,26,28,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,61,70,75,76,85,86,87,92,94,100,102,105,],[25,25,25,72,25,-51,25,-49,-50,25,-47,-48,25,-43,-44,-45,-46,25,25,-42,25,25,72,72,72,-37,-40,-41,25,104,72,25,25,]),'LPAREN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,74,77,78,79,80,81,82,83,84,85,86,87,89,92,96,97,99,101,102,103,105,106,107,109,110,],[26,-12,-13,-11,-9,-7,-5,58,-14,-15,26,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,26,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,26,-51,26,-49,-50,26,-47,-48,26,-43,-44,-45,-46,26,26,-39,-42,26,58,-33,-10,-8,-6,-4,-2,-1,-61,-62,-63,-37,-40,-41,-64,26,-75,-76,-71,-73,26,-65,26,-64,-70,-74,-72,]),'KEYWORD_LET':([0,12,26,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,85,86,87,92,102,105,],[27,27,27,27,-51,27,-49,-50,27,-47,-48,27,-43,-44,-45,-46,27,27,-42,27,-37,-40,-41,27,27,27,]),'BACKSLASH':([0,12,26,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,85,86,87,92,102,105,],[28,28,28,28,-51,28,-49,-50,28,-47,-48,28,-43,-44,-45,-46,28,28,-42,28,-37,-40,-41,28,28,28,]),'BASE10_INTEGER':([0,12,26,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,85,86,87,92,102,105,],[29,29,29,29,-51,29,-49,-50,29,-47,-48,29,-43,-44,-45,-46,29,29,-42,29,-37,-40,-41,29,29,29,]),'BASE16_INTEGER':([0,12,26,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,85,86,87,92,102,105,],[30,30,30,30,-51,30,-49,-50,30,-47,-48,30,-43,-44,-45,-46,30,30,-42,30,-37,-40,-41,30,30,30,]),'BASE8_INTEGER':([0,12,26,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,85,86,87,92,102,105,],[31,31,31,31,-51,31,-49,-50,31,-47,-48,31,-43,-44,-45,-46,31,31,-42,31,-37,-40,-41,31,31,31,]),'BASE2_INTEGER':([0,12,26,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,85,86,87,92,102,105,],[32,32,32,32,-51,32,-49,-50,32,-47,-48,32,-43,-44,-45,-46,32,32,-42,32,-37,-40,-41,32,32,32,]),'FLOAT':([0,12,26,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,85,86,87,92,102,105,],[33,33,33,33,-51,33,-49,-50,33,-47,-48,33,-43,-44,-45,-46,33,33,-42,33,-37,-40,-41,33,33,33,]),'STRING':([0,12,26,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,61,85,86,87,92,102,105,],[34,34,34,34,-51,34,-49,-50,34,-47,-48,34,-43,-44,-45,-46,34,34,-42,34,34,-37,-40,-41,34,34,34,]),'CHAR':([0,12,26,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,61,85,86,87,92,102,105,],[35,35,35,35,-51,35,-49,-50,35,-47,-48,35,-43,-44,-45,-46,35,35,-42,35,35,-37,-40,-41,35,35,35,]),'DATE':([0,12,26,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,85,86,87,92,102,105,],[36,36,36,36,-51,36,-49,-50,36,-47,-48,36,-43,-44,-45,-46,36,36,-42,36,-37,-40,-41,36,36,36,]),'DATETIME':([0,12,26,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,85,86,87,92,102,105,],[37,37,37,37,-51,37,-49,-50,37,-47,-48,37,-43,-44,-45,-46,37,37,-42,37,-37,-40,-41,37,37,37,]),'DATE_INTERVAL':([0,12,26,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,85,86,87,92,102,105,],[38,38,38,38,-51,38,-49,-50,38,-47,-48,38,-43,-44,-45,-46,38,38,-42,38,-37,-40,-41,38,38,38,]),'DATETIME_INTERVAL':([0,12,26,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,85,86,87,92,102,105,],[39,39,39,39,-51,39,-49,-50,39,-47,-48,39,-43,-44,-45,-46,39,39,-42,39,-37,-40,-41,39,39,39,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,29,30,31,32,33,34,35,36,37,38,39,56,59,63,74,77,78,79,80,81,82,83,84,85,86,87,89,96,97,99,101,103,106,107,109,110,],[0,-77,-12,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,-39,-38,-33,-10,-8,-6,-4,-2,-1,-61,-62,-63,-37,-40,-41,-64,-75,-76,-71,-73,-65,-64,-70,-74,-72,]),'SPACE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,29,30,31,32,33,34,35,36,37,38,39,41,56,59,63,72,74,77,78,79,80,81,82,83,84,85,86,87,89,96,97,98,99,101,103,104,106,107,109,110,],[-12,-13,-11,-9,-7,-5,55,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,70,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,75,-39,55,-33,94,-10,-8,-6,-4,-2,-1,-61,-62,-63,-37,-40,-41,-64,-75,-76,105,-71,-73,-65,94,-64,-70,-74,-72,]),'DOT_OPERATOR':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,56,58,59,63,74,77,78,79,80,81,82,83,84,85,86,87,89,96,97,99,101,103,106,107,109,110,],[-12,-13,-11,-9,-7,-5,57,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,64,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,-39,64,57,-33,-10,-8,-6,-4,-2,-1,-61,-62,-63,-37,-40,-41,-64,-75,-76,-71,-73,-65,-64,-70,-74,-72,]),'STAR':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,56,58,59,63,74,77,78,79,80,81,82,83,84,85,86,87,89,96,97,99,101,103,106,107,109,110,],[-12,-13,-11,-9,50,-5,-3,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,50,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,-39,50,-3,-33,-10,-8,50,-4,-2,-1,-61,-62,-63,-37,-40,-41,-64,-75,-76,-71,-73,-65,-64,-70,-74,-72,]),'SLASH':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,56,58,59,63,74,77,78,79,80,81,82,83,84,85,86,87,89,96,97,99,101,103,106,107,109,110,],[-12,-13,-11,-9,51,-5,-3,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,51,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,-39,51,-3,-33,-10,-8,51,-4,-2,-1,-61,-62,-63,-37,-40,-41,-64,-75,-76,-71,-73,-65,-64,-70,-74,-72,]),'DOUBLESLASH':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,56,58,59,63,74,77,78,79,80,81,82,83,84,85,86,87,89,96,97,99,101,103,106,107,109,110,],[-12,-13,-11,-9,52,-5,-3,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,52,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,-39,52,-3,-33,-10,-8,52,-4,-2,-1,-61,-62,-63,-37,-40,-41,-64,-75,-76,-71,-73,-65,-64,-70,-74,-72,]),'PERCENT':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,56,58,59,63,74,77,78,79,80,81,82,83,84,85,86,87,89,96,97,99,101,103,106,107,109,110,],[-12,-13,-11,-9,53,-5,-3,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,53,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,-39,53,-3,-33,-10,-8,53,-4,-2,-1,-61,-62,-63,-37,-40,-41,-64,-75,-76,-71,-73,-65,-64,-70,-74,-72,]),'PLUS':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,56,58,59,63,74,77,78,79,80,81,82,83,84,85,86,87,89,96,97,99,101,103,106,107,109,110,],[-12,-13,-11,47,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,47,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,-39,47,-3,-33,-10,47,-6,-4,-2,-1,-61,-62,-63,-37,-40,-41,-64,-75,-76,-71,-73,-65,-64,-70,-74,-72,]),'MINUS':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,56,58,59,63,74,77,78,79,80,81,82,83,84,85,86,87,89,96,97,99,101,103,106,107,109,110,],[-12,-13,-11,48,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,48,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,-39,48,-3,-33,-10,48,-6,-4,-2,-1,-61,-62,-63,-37,-40,-41,-64,-75,-76,-71,-73,-65,-64,-70,-74,-72,]),'OPERATOR':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,56,58,59,63,74,77,78,79,80,81,82,83,84,85,86,87,89,96,97,99,101,103,106,107,109,110,],[-12,-13,44,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,44,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,-39,44,-3,-33,-10,-8,-6,-4,-2,-1,-61,-62,-63,-37,-40,-41,-64,-75,-76,-71,-73,-65,-64,-70,-74,-72,]),'ARROW':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,56,58,59,63,71,72,74,77,78,79,80,81,82,83,84,85,86,87,89,93,95,96,97,99,101,103,104,106,107,108,109,110,],[-12,-13,45,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,45,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,-39,45,-3,-33,92,-64,-10,-8,-6,-4,-2,-1,-61,-62,-63,-37,-40,-41,-64,-66,-68,-75,-76,-71,-73,-65,-64,-64,-70,-67,-74,-72,]),'KEYWORD_WHERE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,29,30,31,32,33,34,35,36,37,38,39,56,59,60,62,63,73,74,77,78,79,80,81,82,83,84,85,86,87,89,96,97,99,101,103,106,107,109,110,],[41,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,-39,-3,41,41,-33,41,-10,-8,-6,-4,-2,-1,-61,-62,-63,-37,-40,-41,-64,-75,-76,-71,-73,41,-64,41,-74,-72,]),'TICK_OPERATOR':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,56,58,59,60,62,63,73,74,77,78,79,80,81,82,83,84,85,86,87,89,96,97,99,101,103,106,107,109,110,],[42,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,42,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,-39,42,-3,42,42,-33,42,-10,-8,-6,-4,-2,-1,-61,-62,-63,-37,-40,-41,-64,-75,-76,-71,-73,42,-64,42,-74,-72,]),'RPAREN':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,42,44,45,47,48,50,51,52,53,56,59,62,63,64,65,66,67,68,69,74,77,78,79,80,81,82,83,84,85,86,87,89,96,97,99,101,103,106,107,109,110,],[-12,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,63,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,-51,-49,-50,-47,-48,-43,-44,-45,-46,-39,-38,85,-33,86,87,-52,-53,-54,-55,-10,-8,-6,-4,-2,-1,-61,-62,-63,-37,-40,-41,-64,-75,-76,-71,-73,-65,-64,-70,-74,-72,]),'PADDING':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,29,30,31,32,33,34,35,36,37,38,39,41,56,59,63,74,77,78,79,80,81,82,83,84,85,86,87,89,96,97,99,101,103,106,107,109,110,],[-12,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,76,-39,-38,-33,-10,-8,-6,-4,-2,-1,-61,-62,-63,-37,-40,-41,100,-75,-76,-71,-73,-65,100,-70,-74,-72,]),'KEYWORD_IN':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,29,30,31,32,33,34,35,36,37,38,39,56,59,63,74,77,78,79,80,81,82,83,84,85,86,87,88,89,96,97,99,101,103,106,107,109,110,],[-12,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-36,-56,-57,-58,-59,-60,-35,-34,-29,-30,-31,-32,-39,-38,-33,-10,-8,-6,-4,-2,-1,-61,-62,-63,-37,-40,-41,98,-64,-75,-76,-71,-73,-65,-64,-70,-74,-72,]),'ANNOTATION':([17,29,30,31,32,33,],[61,-56,-57,-58,-59,-60,]),'EQ':([72,90,91,93,95,104,108,],[-64,102,-69,-66,-68,-64,-67,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'st_expr':([0,105,],[2,109,]),'expr':([0,12,26,40,43,46,49,54,55,58,92,102,105,],[3,60,62,73,60,60,60,60,60,62,103,107,3,]),'expr_term0':([0,12,26,40,43,46,49,54,55,58,92,102,105,],[4,4,4,74,4,4,4,4,4,4,4,4,4,]),'expr_term2':([0,12,26,40,43,46,49,54,55,58,92,102,105,],[5,5,5,5,5,5,5,5,5,5,5,5,5,]),'expr_term6':([0,12,26,40,43,46,49,54,55,58,92,102,105,],[6,6,6,6,77,6,6,6,6,6,6,6,6,]),'expr_term7':([0,12,26,40,43,46,49,54,55,58,92,102,105,],[7,7,7,7,7,78,7,7,7,7,7,7,7,]),'expr_term9':([0,12,26,40,43,46,49,54,55,58,92,102,105,],[8,8,8,8,8,8,79,80,8,8,8,8,8,]),'expr_factor':([0,12,26,40,43,46,49,54,55,58,92,102,105,],[9,59,9,9,9,9,9,9,81,9,9,9,9,]),'literal':([0,12,26,40,43,46,49,54,55,58,92,102,105,],[10,10,10,10,10,10,10,10,10,10,10,10,10,]),'identifier':([0,12,26,40,43,46,49,54,55,58,61,92,102,105,],[11,11,11,11,11,11,11,11,11,11,84,11,11,11,]),'enclosed_expr':([0,9,12,26,40,43,46,49,54,55,58,59,81,92,102,105,],[12,56,12,12,12,12,12,12,12,12,12,56,56,12,12,12,]),'unit_value':([0,12,26,40,43,46,49,54,55,58,92,102,105,],[13,13,13,13,13,13,13,13,13,13,13,13,13,]),'letexpr':([0,12,26,40,43,46,49,54,55,58,92,102,105,],[14,14,14,14,14,14,14,14,14,14,14,14,14,]),'where_expr':([0,12,26,40,43,46,49,54,55,58,92,102,105,],[15,15,15,15,15,15,15,15,15,15,15,15,15,]),'lambda_expr':([0,12,26,40,43,46,49,54,55,58,92,102,105,],[16,16,16,16,16,16,16,16,16,16,16,16,16,]),'number':([0,12,26,40,43,46,49,54,55,58,92,102,105,],[17,17,17,17,17,17,17,17,17,17,17,17,17,]),'concrete_number':([0,12,26,40,43,46,49,54,55,58,92,102,105,],[18,18,18,18,18,18,18,18,18,18,18,18,18,]),'string':([0,12,26,40,43,46,49,54,55,58,61,92,102,105,],[19,19,19,19,19,19,19,19,19,19,82,19,19,19,]),'char':([0,12,26,40,43,46,49,54,55,58,61,92,102,105,],[20,20,20,20,20,20,20,20,20,20,83,20,20,20,]),'date':([0,12,26,40,43,46,49,54,55,58,92,102,105,],[21,21,21,21,21,21,21,21,21,21,21,21,21,]),'datetime':([0,12,26,40,43,46,49,54,55,58,92,102,105,],[22,22,22,22,22,22,22,22,22,22,22,22,22,]),'date_interval':([0,12,26,40,43,46,49,54,55,58,92,102,105,],[23,23,23,23,23,23,23,23,23,23,23,23,23,]),'datetime_interval':([0,12,26,40,43,46,49,54,55,58,92,102,105,],[24,24,24,24,24,24,24,24,24,24,24,24,24,]),'infix_operator_0':([3,26,58,60,62,73,103,107,],[40,66,66,40,40,40,40,40,]),'infix_operator_2':([5,26,58,],[43,67,67,]),'infix_operator_6':([6,26,58,77,],[46,68,68,46,]),'infix_operator_7':([7,26,58,78,],[49,69,69,49,]),'infix_operator_9':([9,59,81,],[54,54,54,]),'operator':([26,58,],[65,65,]),'parameters':([28,70,75,76,100,],[71,91,91,91,91,]),'equations':([70,75,76,],[88,96,97,]),'equation':([70,75,76,100,],[89,89,89,106,]),'pattern':([70,75,76,100,],[90,90,90,90,]),'_parameters':([72,104,],[93,108,]),'empty':([72,89,104,106,],[95,101,95,101,]),'_equation_set':([89,106,],[99,110,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','parser.py',378),
  ('expr_term9 -> expr_factor infix_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','parser.py',385),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','parser.py',386),
  ('expr_term7 -> expr_term7 infix_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','parser.py',388),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','parser.py',389),
  ('expr_term6 -> expr_term6 infix_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','parser.py',391),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','parser.py',392),
  ('expr_term2 -> expr_term2 infix_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','parser.py',394),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','parser.py',395),
  ('expr_term0 -> expr infix_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','parser.py',397),
  ('expr_term0 -> expr_term2','expr_term0',1,'p_expressions_precedence_rules','parser.py',398),
  ('st_expr -> expr','st_expr',1,'p_standalone_expr','parser.py',410),
  ('expr -> expr_term0','expr',1,'p_standalone_expr','parser.py',412),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_expr','parser.py',414),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_expr','parser.py',415),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_expr','parser.py',416),
  ('expr_factor -> unit_value','expr_factor',1,'p_standalone_expr','parser.py',417),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_expr','parser.py',418),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_expr','parser.py',419),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_expr','parser.py',420),
  ('literal -> number','literal',1,'p_literals','parser.py',428),
  ('literal -> concrete_number','literal',1,'p_literals','parser.py',429),
  ('literal -> string','literal',1,'p_literals','parser.py',430),
  ('literal -> char','literal',1,'p_literals','parser.py',431),
  ('literal -> date','literal',1,'p_literals','parser.py',432),
  ('literal -> datetime','literal',1,'p_literals','parser.py',433),
  ('literal -> date_interval','literal',1,'p_literals','parser.py',434),
  ('literal -> datetime_interval','literal',1,'p_literals','parser.py',435),
  ('date -> DATE','date',1,'p_date','parser.py',441),
  ('datetime -> DATETIME','datetime',1,'p_datetime','parser.py',447),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','parser.py',453),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','parser.py',459),
  ('unit_value -> LPAREN RPAREN','unit_value',2,'p_unit_value','parser.py',465),
  ('char -> CHAR','char',1,'p_char','parser.py',471),
  ('string -> STRING','string',1,'p_string','parser.py',476),
  ('identifier -> IDENTIFIER','identifier',1,'p_variable','parser.py',481),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','parser.py',486),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','parser.py',491),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','parser.py',492),
  ('enclosed_expr -> LPAREN DOT_OPERATOR RPAREN','enclosed_expr',3,'p_operators_as_expressios','parser.py',498),
  ('enclosed_expr -> LPAREN operator RPAREN','enclosed_expr',3,'p_operators_as_expressios','parser.py',499),
  ('infix_operator_9 -> DOT_OPERATOR','infix_operator_9',1,'p_operator','parser.py',509),
  ('infix_operator_7 -> STAR','infix_operator_7',1,'p_operator','parser.py',511),
  ('infix_operator_7 -> SLASH','infix_operator_7',1,'p_operator','parser.py',512),
  ('infix_operator_7 -> DOUBLESLASH','infix_operator_7',1,'p_operator','parser.py',513),
  ('infix_operator_7 -> PERCENT','infix_operator_7',1,'p_operator','parser.py',514),
  ('infix_operator_6 -> PLUS','infix_operator_6',1,'p_operator','parser.py',516),
  ('infix_operator_6 -> MINUS','infix_operator_6',1,'p_operator','parser.py',517),
  ('infix_operator_2 -> OPERATOR','infix_operator_2',1,'p_operator','parser.py',519),
  ('infix_operator_2 -> ARROW','infix_operator_2',1,'p_operator','parser.py',520),
  ('infix_operator_0 -> TICK_OPERATOR','infix_operator_0',1,'p_operator','parser.py',522),
  ('operator -> infix_operator_0','operator',1,'p_operator','parser.py',524),
  ('operator -> infix_operator_2','operator',1,'p_operator','parser.py',525),
  ('operator -> infix_operator_6','operator',1,'p_operator','parser.py',526),
  ('operator -> infix_operator_7','operator',1,'p_operator','parser.py',527),
  ('number -> BASE10_INTEGER','number',1,'p_integer','parser.py',534),
  ('number -> BASE16_INTEGER','number',1,'p_integer','parser.py',535),
  ('number -> BASE8_INTEGER','number',1,'p_integer','parser.py',536),
  ('number -> BASE2_INTEGER','number',1,'p_integer','parser.py',537),
  ('number -> FLOAT','number',1,'p_float','parser.py',566),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','parser.py',571),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','parser.py',572),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','parser.py',573),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',582),
  ('lambda_expr -> BACKSLASH parameters ARROW expr','lambda_expr',4,'p_lambda_definition','parser.py',587),
  ('parameters -> IDENTIFIER _parameters','parameters',2,'p_parameters','parser.py',595),
  ('_parameters -> SPACE IDENTIFIER _parameters','_parameters',3,'p__params','parser.py',603),
  ('_parameters -> empty','_parameters',1,'p_empty__parameters','parser.py',610),
  ('pattern -> parameters','pattern',1,'p_pattern','parser.py',659),
  ('equation -> pattern EQ expr','equation',3,'p_equation','parser.py',674),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','parser.py',684),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','parser.py',693),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','parser.py',702),
  ('letexpr -> KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','parser.py',712),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','parser.py',720),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','parser.py',721),
  ('program -> st_expr','program',1,'p_program','parser.py',770),
]
