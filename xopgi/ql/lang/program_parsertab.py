
# program_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FLOAT IDENTIFIER KEYWORD_CLASS KEYWORD_DATA KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LPAREN MINUS OPERATOR PADDING PERCENT PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATORexpr_factor : expr_factor SPACE expr_factor\n    expr_term9 : expr_factor infix_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infix_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infix_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infix_operator_2 expr_term6\n               | expr_term6\n\n    expr_term0 : expr infix_operator_0 expr_term0\n               | expr_term2\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | unit_value\n                | letexpr\n                | where_expr\n                | lambda_expr\n\n    st_type_expr : type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    unit_value : LPAREN RPAREN\n    char : CHARstring : STRINGidentifier : IDENTIFIERenclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : LPAREN DOT_OPERATOR RPAREN\n                     | LPAREN operator RPAREN\n    \n    infix_operator_9 : DOT_OPERATOR\n\n    infix_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infix_operator_6 : PLUS\n                     | MINUS\n\n    infix_operator_2 : OPERATOR\n                     | ARROW\n\n    infix_operator_0 : TICK_OPERATOR\n\n    operator : infix_operator_0\n             | infix_operator_2\n             | infix_operator_6\n             | infix_operator_7\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH parameters ARROW expr\n    parameters : IDENTIFIER _parameters\n    _parameters : SPACE IDENTIFIER _parameters_parameters : empty\n    pattern : parametersequation : pattern EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    program : st_expr\n               | st_type_expr\n    type_expr : type_function_expr\n                 | type_termtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_factor : IDENTIFIERtype_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET_maybe_padding : PADDING\n                      | empty\n    '
    
_lr_action_items = {'IDENTIFIER':([0,14,15,21,35,47,49,50,51,52,53,55,56,57,58,59,60,65,66,71,72,73,74,76,77,78,79,81,82,85,86,91,92,93,97,100,101,102,114,116,122,129,131,137,],[13,75,-65,75,88,75,-52,-65,75,-50,-51,96,75,-48,-49,75,96,-93,-94,-44,-45,-46,-47,96,75,75,75,-43,75,75,88,88,88,96,-65,-38,-41,-42,75,133,96,88,75,75,]),'LPAREN':([0,4,6,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,55,56,57,58,59,60,61,65,66,71,72,73,74,75,76,77,78,79,80,81,82,83,90,93,94,97,98,100,101,102,104,105,106,107,108,109,111,114,118,119,122,128,130,131,132,137,138,139,142,143,],[14,-12,-13,-11,-9,-37,59,-65,-7,-5,82,-14,-15,59,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,59,-52,-65,59,-50,-51,97,59,-48,-49,59,97,-34,-93,-94,-44,-45,-46,-47,-37,97,59,59,59,-40,-43,59,82,-10,97,-8,-65,-6,-38,-41,-42,-4,-2,-1,-62,-63,-64,-65,59,-76,-77,97,-72,-74,59,-66,59,-65,-71,-75,-73,]),'LBRACKET':([0,14,15,50,55,60,65,66,76,93,97,122,],[15,-65,-65,-65,15,15,-93,-94,15,15,-65,15,]),'KEYWORD_LET':([0,14,21,47,49,51,52,53,56,57,58,59,71,72,73,74,77,78,79,81,82,100,101,102,114,131,137,],[34,34,34,34,-52,34,-50,-51,34,-48,-49,34,-44,-45,-46,-47,34,34,34,-43,34,-38,-41,-42,34,34,34,]),'BACKSLASH':([0,14,21,47,49,51,52,53,56,57,58,59,71,72,73,74,77,78,79,81,82,100,101,102,114,131,137,],[35,35,35,35,-52,35,-50,-51,35,-48,-49,35,-44,-45,-46,-47,35,35,35,-43,35,-38,-41,-42,35,35,35,]),'BASE10_INTEGER':([0,14,21,47,49,51,52,53,56,57,58,59,71,72,73,74,77,78,79,81,82,100,101,102,114,131,137,],[36,36,36,36,-52,36,-50,-51,36,-48,-49,36,-44,-45,-46,-47,36,36,36,-43,36,-38,-41,-42,36,36,36,]),'BASE16_INTEGER':([0,14,21,47,49,51,52,53,56,57,58,59,71,72,73,74,77,78,79,81,82,100,101,102,114,131,137,],[37,37,37,37,-52,37,-50,-51,37,-48,-49,37,-44,-45,-46,-47,37,37,37,-43,37,-38,-41,-42,37,37,37,]),'BASE8_INTEGER':([0,14,21,47,49,51,52,53,56,57,58,59,71,72,73,74,77,78,79,81,82,100,101,102,114,131,137,],[38,38,38,38,-52,38,-50,-51,38,-48,-49,38,-44,-45,-46,-47,38,38,38,-43,38,-38,-41,-42,38,38,38,]),'BASE2_INTEGER':([0,14,21,47,49,51,52,53,56,57,58,59,71,72,73,74,77,78,79,81,82,100,101,102,114,131,137,],[39,39,39,39,-52,39,-50,-51,39,-48,-49,39,-44,-45,-46,-47,39,39,39,-43,39,-38,-41,-42,39,39,39,]),'FLOAT':([0,14,21,47,49,51,52,53,56,57,58,59,71,72,73,74,77,78,79,81,82,100,101,102,114,131,137,],[40,40,40,40,-52,40,-50,-51,40,-48,-49,40,-44,-45,-46,-47,40,40,40,-43,40,-38,-41,-42,40,40,40,]),'STRING':([0,14,21,47,49,51,52,53,56,57,58,59,71,72,73,74,77,78,79,81,82,85,100,101,102,114,131,137,],[41,41,41,41,-52,41,-50,-51,41,-48,-49,41,-44,-45,-46,-47,41,41,41,-43,41,41,-38,-41,-42,41,41,41,]),'CHAR':([0,14,21,47,49,51,52,53,56,57,58,59,71,72,73,74,77,78,79,81,82,85,100,101,102,114,131,137,],[42,42,42,42,-52,42,-50,-51,42,-48,-49,42,-44,-45,-46,-47,42,42,42,-43,42,42,-38,-41,-42,42,42,42,]),'DATE':([0,14,21,47,49,51,52,53,56,57,58,59,71,72,73,74,77,78,79,81,82,100,101,102,114,131,137,],[43,43,43,43,-52,43,-50,-51,43,-48,-49,43,-44,-45,-46,-47,43,43,43,-43,43,-38,-41,-42,43,43,43,]),'DATETIME':([0,14,21,47,49,51,52,53,56,57,58,59,71,72,73,74,77,78,79,81,82,100,101,102,114,131,137,],[44,44,44,44,-52,44,-50,-51,44,-48,-49,44,-44,-45,-46,-47,44,44,44,-43,44,-38,-41,-42,44,44,44,]),'DATE_INTERVAL':([0,14,21,47,49,51,52,53,56,57,58,59,71,72,73,74,77,78,79,81,82,100,101,102,114,131,137,],[45,45,45,45,-52,45,-50,-51,45,-48,-49,45,-44,-45,-46,-47,45,45,45,-43,45,-38,-41,-42,45,45,45,]),'DATETIME_INTERVAL':([0,14,21,47,49,51,52,53,56,57,58,59,71,72,73,74,77,78,79,81,82,100,101,102,114,131,137,],[46,46,46,46,-52,46,-50,-51,46,-48,-49,46,-44,-45,-46,-47,46,46,46,-43,46,-38,-41,-42,46,46,46,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,45,46,54,61,75,80,83,90,94,95,96,98,100,101,102,104,105,106,107,108,109,111,118,119,120,121,123,124,128,130,132,134,135,136,138,139,141,142,143,],[0,-78,-79,-12,-21,-13,-80,-81,-11,-84,-85,-9,-37,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-86,-34,-37,-40,-39,-10,-8,-65,-90,-6,-38,-41,-42,-4,-2,-1,-62,-63,-64,-65,-76,-77,-83,-82,-88,-89,-72,-74,-66,-65,-91,-92,-65,-71,-87,-75,-73,]),'SPACE':([4,6,9,11,12,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,48,61,75,80,83,88,90,94,95,96,98,100,101,102,104,105,106,107,108,109,111,118,119,127,128,130,132,133,134,135,136,138,139,142,143,],[-12,-13,-11,55,-9,-37,-7,-5,79,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,86,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,91,-34,-37,-40,79,116,-10,-8,122,-90,-6,-38,-41,-42,-4,-2,-1,-62,-63,-64,-65,-76,-77,137,-72,-74,-66,116,122,-91,-92,-65,-71,-75,-73,]),'DOT_OPERATOR':([4,6,9,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,45,46,59,61,75,80,82,83,90,94,98,100,101,102,104,105,106,107,108,109,111,118,119,128,130,132,138,139,142,143,],[-12,-13,-11,-9,-37,63,-7,-5,81,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,63,-34,-37,-40,63,81,-10,-8,-6,-38,-41,-42,-4,-2,-1,-62,-63,-64,-65,-76,-77,-72,-74,-66,-65,-71,-75,-73,]),'STAR':([4,6,9,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,45,46,59,61,75,80,82,83,90,94,98,100,101,102,104,105,106,107,108,109,111,118,119,128,130,132,138,139,142,143,],[-12,-13,-11,-9,-37,71,71,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,71,-34,-37,-40,71,-3,-10,-8,71,-38,-41,-42,-4,-2,-1,-62,-63,-64,-65,-76,-77,-72,-74,-66,-65,-71,-75,-73,]),'SLASH':([4,6,9,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,45,46,59,61,75,80,82,83,90,94,98,100,101,102,104,105,106,107,108,109,111,118,119,128,130,132,138,139,142,143,],[-12,-13,-11,-9,-37,72,72,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,72,-34,-37,-40,72,-3,-10,-8,72,-38,-41,-42,-4,-2,-1,-62,-63,-64,-65,-76,-77,-72,-74,-66,-65,-71,-75,-73,]),'DOUBLESLASH':([4,6,9,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,45,46,59,61,75,80,82,83,90,94,98,100,101,102,104,105,106,107,108,109,111,118,119,128,130,132,138,139,142,143,],[-12,-13,-11,-9,-37,73,73,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,73,-34,-37,-40,73,-3,-10,-8,73,-38,-41,-42,-4,-2,-1,-62,-63,-64,-65,-76,-77,-72,-74,-66,-65,-71,-75,-73,]),'PERCENT':([4,6,9,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,45,46,59,61,75,80,82,83,90,94,98,100,101,102,104,105,106,107,108,109,111,118,119,128,130,132,138,139,142,143,],[-12,-13,-11,-9,-37,74,74,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,74,-34,-37,-40,74,-3,-10,-8,74,-38,-41,-42,-4,-2,-1,-62,-63,-64,-65,-76,-77,-72,-74,-66,-65,-71,-75,-73,]),'PLUS':([4,6,9,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,45,46,59,61,75,80,82,83,90,94,98,100,101,102,104,105,106,107,108,109,111,118,119,128,130,132,138,139,142,143,],[-12,-13,-11,57,-37,57,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,57,-34,-37,-40,57,-3,-10,57,-6,-38,-41,-42,-4,-2,-1,-62,-63,-64,-65,-76,-77,-72,-74,-66,-65,-71,-75,-73,]),'MINUS':([4,6,9,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,45,46,59,61,75,80,82,83,90,94,98,100,101,102,104,105,106,107,108,109,111,118,119,128,130,132,138,139,142,143,],[-12,-13,-11,58,-37,58,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,58,-34,-37,-40,58,-3,-10,58,-6,-38,-41,-42,-4,-2,-1,-62,-63,-64,-65,-76,-77,-72,-74,-66,-65,-71,-75,-73,]),'OPERATOR':([4,6,9,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,45,46,59,61,75,80,82,83,90,94,98,100,101,102,104,105,106,107,108,109,111,118,119,128,130,132,138,139,142,143,],[-12,-13,52,-9,-37,52,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,52,-34,-37,-40,52,-3,-10,-8,-6,-38,-41,-42,-4,-2,-1,-62,-63,-64,-65,-76,-77,-72,-74,-66,-65,-71,-75,-73,]),'ARROW':([4,6,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,45,46,54,59,61,75,80,82,83,87,88,90,94,95,96,98,100,101,102,104,105,106,107,108,109,111,115,117,118,119,120,123,124,128,130,132,133,134,135,136,138,139,140,141,142,143,],[-12,-13,50,53,-84,-85,-9,-37,53,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-86,53,-34,-37,-40,53,-3,114,-65,-10,-8,-65,-90,-6,-38,-41,-42,-4,-2,-1,-62,-63,-64,-65,-67,-69,-76,-77,50,-88,-89,-72,-74,-66,-65,-65,-91,-92,-65,-71,-68,-87,-75,-73,]),'KEYWORD_WHERE':([4,6,9,12,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,45,46,61,62,75,80,83,84,89,90,94,98,100,101,102,104,105,106,107,108,109,111,118,119,128,130,132,138,139,142,143,],[48,-13,-11,-9,-37,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-34,48,-37,-40,-3,48,48,-10,-8,-6,-38,-41,-42,-4,-2,-1,-62,-63,-64,-65,-76,-77,-72,-74,48,-65,48,-75,-73,]),'TICK_OPERATOR':([4,6,9,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,45,46,59,61,62,75,80,82,83,84,89,90,94,98,100,101,102,104,105,106,107,108,109,111,118,119,128,130,132,138,139,142,143,],[49,-13,-11,-9,-37,49,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,49,-34,49,-37,-40,49,-3,49,49,-10,-8,-6,-38,-41,-42,-4,-2,-1,-62,-63,-64,-65,-76,-77,-72,-74,49,-65,49,-75,-73,]),'RPAREN':([4,6,7,8,9,10,11,12,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,45,46,49,52,53,54,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,80,83,90,94,95,96,98,99,100,101,102,104,105,106,107,108,109,111,118,119,120,121,123,124,125,128,130,132,134,135,136,138,139,141,142,143,],[-12,-13,-80,-81,-11,-84,-85,-9,61,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-52,-50,-51,-86,-48,-49,61,-34,100,101,102,-93,-94,-53,-54,-55,-56,-44,-45,-46,-47,-37,-40,-39,-10,-8,-65,-90,-6,-65,-38,-41,-42,-4,-2,-1,-62,-63,-64,-65,-76,-77,-83,-82,-88,-89,135,-72,-74,-66,-65,-91,-92,-65,-71,-87,-75,-73,]),'PADDING':([4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,45,46,48,50,54,61,75,80,83,90,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,118,119,120,121,123,124,128,130,132,134,135,136,138,139,141,142,143,],[-12,-13,-80,-81,-11,-84,-85,-9,65,65,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,92,65,-86,-34,-37,-40,-39,-10,-8,-65,-90,65,-6,65,-38,-41,-42,65,-4,-2,-1,-62,-63,-64,129,-76,-77,-83,-82,-88,-89,-72,-74,-66,-65,-91,-92,129,-71,-87,-75,-73,]),'KEYWORD_IN':([4,6,9,12,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,45,46,61,75,80,83,90,94,98,100,101,102,104,105,106,107,108,109,110,111,118,119,128,130,132,138,139,142,143,],[-12,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-34,-37,-40,-39,-10,-8,-6,-38,-41,-42,-4,-2,-1,-62,-63,-64,127,-65,-76,-77,-72,-74,-66,-65,-71,-75,-73,]),'RBRACKET':([7,8,10,11,54,65,66,95,96,103,120,121,123,124,126,134,135,136,141,],[-80,-81,-84,-85,-86,-93,-94,-65,-90,-65,-83,-82,-88,-89,136,-65,-91,-92,-87,]),'ANNOTATION':([26,36,37,38,39,40,],[85,-57,-58,-59,-60,-61,]),'EQ':([88,112,113,115,117,133,140,],[-65,131,-70,-67,-69,-65,-68,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'st_expr':([0,137,],[2,142,]),'st_type_expr':([0,],[3,]),'expr':([0,14,21,47,51,56,59,77,78,79,82,114,131,137,],[4,62,84,89,84,84,62,84,84,84,62,132,139,4,]),'type_expr':([0,60,76,],[5,99,103,]),'expr_term0':([0,14,21,47,51,56,59,77,78,79,82,114,131,137,],[6,6,6,90,6,6,6,6,6,6,6,6,6,6,]),'type_function_expr':([0,60,76,93,],[7,7,7,121,]),'type_term':([0,60,76,93,],[8,8,8,120,]),'expr_term2':([0,14,21,47,51,56,59,77,78,79,82,114,131,137,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'type_app_expression':([0,60,76,93,],[10,10,10,10,]),'type_factor':([0,55,60,76,93,122,],[11,95,11,11,11,134,]),'expr_term6':([0,14,21,47,51,56,59,77,78,79,82,114,131,137,],[12,12,12,12,94,12,12,12,12,12,12,12,12,12,]),'expr_term7':([0,14,21,47,51,56,59,77,78,79,82,114,131,137,],[16,16,16,16,16,98,16,16,16,16,16,16,16,16,]),'expr_term9':([0,14,21,47,51,56,59,77,78,79,82,114,131,137,],[17,17,17,17,17,17,17,104,105,17,17,17,17,17,]),'expr_factor':([0,14,21,47,51,56,59,77,78,79,82,114,131,137,],[18,18,83,18,18,18,18,18,18,106,18,18,18,18,]),'literal':([0,14,21,47,51,56,59,77,78,79,82,114,131,137,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'identifier':([0,14,21,47,51,56,59,77,78,79,82,85,114,131,137,],[20,20,20,20,20,20,20,20,20,20,20,109,20,20,20,]),'enclosed_expr':([0,14,18,21,47,51,56,59,77,78,79,82,83,106,114,131,137,],[21,21,80,21,21,21,21,21,21,21,21,21,80,80,21,21,21,]),'unit_value':([0,14,21,47,51,56,59,77,78,79,82,114,131,137,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'letexpr':([0,14,21,47,51,56,59,77,78,79,82,114,131,137,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'where_expr':([0,14,21,47,51,56,59,77,78,79,82,114,131,137,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'lambda_expr':([0,14,21,47,51,56,59,77,78,79,82,114,131,137,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'number':([0,14,21,47,51,56,59,77,78,79,82,114,131,137,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'concrete_number':([0,14,21,47,51,56,59,77,78,79,82,114,131,137,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'string':([0,14,21,47,51,56,59,77,78,79,82,85,114,131,137,],[28,28,28,28,28,28,28,28,28,28,28,107,28,28,28,]),'char':([0,14,21,47,51,56,59,77,78,79,82,85,114,131,137,],[29,29,29,29,29,29,29,29,29,29,29,108,29,29,29,]),'date':([0,14,21,47,51,56,59,77,78,79,82,114,131,137,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'datetime':([0,14,21,47,51,56,59,77,78,79,82,114,131,137,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'date_interval':([0,14,21,47,51,56,59,77,78,79,82,114,131,137,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'datetime_interval':([0,14,21,47,51,56,59,77,78,79,82,114,131,137,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'infix_operator_0':([4,14,59,62,82,84,89,132,139,],[47,67,67,47,67,47,47,47,47,]),'infix_operator_2':([9,14,59,82,],[51,68,68,68,]),'_app_args_non_empty':([11,],[54,]),'infix_operator_6':([12,14,59,82,94,],[56,69,69,69,56,]),'_maybe_padding':([14,15,50,97,99,103,],[60,76,93,60,125,126,]),'operator':([14,59,82,],[64,64,64,]),'empty':([14,15,50,88,95,97,99,103,111,133,134,138,],[66,66,66,117,124,66,66,66,130,117,124,130,]),'infix_operator_7':([14,16,59,82,98,],[70,77,70,70,77,]),'infix_operator_9':([18,83,106,],[78,78,78,]),'parameters':([35,86,91,92,129,],[87,113,113,113,113,]),'equations':([86,91,92,],[110,118,119,]),'equation':([86,91,92,129,],[111,111,111,138,]),'pattern':([86,91,92,129,],[112,112,112,112,]),'_parameters':([88,133,],[115,140,]),'_app_args':([95,134,],[123,141,]),'_equation_set':([111,138,],[128,143,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','parsers.py',392),
  ('expr_term9 -> expr_factor infix_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','parsers.py',399),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','parsers.py',400),
  ('expr_term7 -> expr_term7 infix_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','parsers.py',402),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','parsers.py',403),
  ('expr_term6 -> expr_term6 infix_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','parsers.py',405),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','parsers.py',406),
  ('expr_term2 -> expr_term2 infix_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','parsers.py',408),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','parsers.py',409),
  ('expr_term0 -> expr infix_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','parsers.py',411),
  ('expr_term0 -> expr_term2','expr_term0',1,'p_expressions_precedence_rules','parsers.py',412),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','parsers.py',425),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','parsers.py',427),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','parsers.py',429),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','parsers.py',430),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','parsers.py',431),
  ('expr_factor -> unit_value','expr_factor',1,'p_standalone_definitions','parsers.py',432),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','parsers.py',433),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','parsers.py',434),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','parsers.py',435),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','parsers.py',437),
  ('literal -> number','literal',1,'p_literals','parsers.py',445),
  ('literal -> concrete_number','literal',1,'p_literals','parsers.py',446),
  ('literal -> string','literal',1,'p_literals','parsers.py',447),
  ('literal -> char','literal',1,'p_literals','parsers.py',448),
  ('literal -> date','literal',1,'p_literals','parsers.py',449),
  ('literal -> datetime','literal',1,'p_literals','parsers.py',450),
  ('literal -> date_interval','literal',1,'p_literals','parsers.py',451),
  ('literal -> datetime_interval','literal',1,'p_literals','parsers.py',452),
  ('date -> DATE','date',1,'p_date','parsers.py',458),
  ('datetime -> DATETIME','datetime',1,'p_datetime','parsers.py',464),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','parsers.py',470),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','parsers.py',476),
  ('unit_value -> LPAREN RPAREN','unit_value',2,'p_unit_value','parsers.py',482),
  ('char -> CHAR','char',1,'p_char','parsers.py',488),
  ('string -> STRING','string',1,'p_string','parsers.py',493),
  ('identifier -> IDENTIFIER','identifier',1,'p_variable','parsers.py',498),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','parsers.py',503),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','parsers.py',508),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','parsers.py',509),
  ('enclosed_expr -> LPAREN DOT_OPERATOR RPAREN','enclosed_expr',3,'p_operators_as_expressios','parsers.py',515),
  ('enclosed_expr -> LPAREN operator RPAREN','enclosed_expr',3,'p_operators_as_expressios','parsers.py',516),
  ('infix_operator_9 -> DOT_OPERATOR','infix_operator_9',1,'p_operator','parsers.py',526),
  ('infix_operator_7 -> STAR','infix_operator_7',1,'p_operator','parsers.py',528),
  ('infix_operator_7 -> SLASH','infix_operator_7',1,'p_operator','parsers.py',529),
  ('infix_operator_7 -> DOUBLESLASH','infix_operator_7',1,'p_operator','parsers.py',530),
  ('infix_operator_7 -> PERCENT','infix_operator_7',1,'p_operator','parsers.py',531),
  ('infix_operator_6 -> PLUS','infix_operator_6',1,'p_operator','parsers.py',533),
  ('infix_operator_6 -> MINUS','infix_operator_6',1,'p_operator','parsers.py',534),
  ('infix_operator_2 -> OPERATOR','infix_operator_2',1,'p_operator','parsers.py',536),
  ('infix_operator_2 -> ARROW','infix_operator_2',1,'p_operator','parsers.py',537),
  ('infix_operator_0 -> TICK_OPERATOR','infix_operator_0',1,'p_operator','parsers.py',539),
  ('operator -> infix_operator_0','operator',1,'p_operator','parsers.py',541),
  ('operator -> infix_operator_2','operator',1,'p_operator','parsers.py',542),
  ('operator -> infix_operator_6','operator',1,'p_operator','parsers.py',543),
  ('operator -> infix_operator_7','operator',1,'p_operator','parsers.py',544),
  ('number -> BASE10_INTEGER','number',1,'p_integer','parsers.py',551),
  ('number -> BASE16_INTEGER','number',1,'p_integer','parsers.py',552),
  ('number -> BASE8_INTEGER','number',1,'p_integer','parsers.py',553),
  ('number -> BASE2_INTEGER','number',1,'p_integer','parsers.py',554),
  ('number -> FLOAT','number',1,'p_float','parsers.py',583),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','parsers.py',588),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','parsers.py',589),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','parsers.py',590),
  ('empty -> <empty>','empty',0,'p_empty','parsers.py',599),
  ('lambda_expr -> BACKSLASH parameters ARROW expr','lambda_expr',4,'p_lambda_definition','parsers.py',604),
  ('parameters -> IDENTIFIER _parameters','parameters',2,'p_parameters','parsers.py',612),
  ('_parameters -> SPACE IDENTIFIER _parameters','_parameters',3,'p__params','parsers.py',620),
  ('_parameters -> empty','_parameters',1,'p_empty__parameters','parsers.py',627),
  ('pattern -> parameters','pattern',1,'p_pattern','parsers.py',676),
  ('equation -> pattern EQ expr','equation',3,'p_equation','parsers.py',691),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','parsers.py',701),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','parsers.py',710),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','parsers.py',719),
  ('letexpr -> KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','parsers.py',729),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','parsers.py',737),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','parsers.py',738),
  ('program -> st_expr','program',1,'p_program','parsers.py',789),
  ('program -> st_type_expr','program',1,'p_program','parsers.py',790),
  ('type_expr -> type_function_expr','type_expr',1,'p_type_expr','parsers.py',796),
  ('type_expr -> type_term','type_expr',1,'p_type_expr','parsers.py',797),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','parsers.py',802),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','parsers.py',803),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','parsers.py',813),
  ('type_term -> type_factor','type_term',1,'p_type_term','parsers.py',814),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','parsers.py',819),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','parsers.py',831),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','parsers.py',832),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','parsers.py',840),
  ('type_factor -> IDENTIFIER','type_factor',1,'p_type_identifier','parsers.py',845),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','parsers.py',854),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','parsers.py',859),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','parsers.py',864),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','parsers.py',865),
]
