
# program_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FLOAT KEYWORD_CLASS KEYWORD_DATA KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LOWER_IDENTIFIER LPAREN MINUS NEWLINE OPERATOR PADDING PERCENT PIPE PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATOR UNDER_IDENTIFIER UPPER_IDENTIFIERexpr_factor : expr_factor SPACE expr_factor\n    expr_term9 : expr_factor infix_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infix_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infix_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infix_operator_2 expr_term6\n               | expr_term6\n\n    expr_term0 : expr infix_operator_0 expr_term0\n               | expr_term2\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | unit_value\n                | letexpr\n                | where_expr\n                | lambda_expr\n\n    st_type_expr : type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    unit_value : LPAREN RPAREN\n    char : CHARstring : STRINGidentifier : _identifier\n\n    _identifier : UNDER_IDENTIFIER\n                   | UPPER_IDENTIFIER\n                   | LOWER_IDENTIFIER\n\n    enclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : LPAREN DOT_OPERATOR RPAREN\n                     | LPAREN operator RPAREN\n    \n    infix_operator_9 : DOT_OPERATOR\n\n    infix_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infix_operator_6 : PLUS\n                     | MINUS\n\n    infix_operator_2 : OPERATOR\n                     | ARROW\n\n    infix_operator_0 : TICK_OPERATOR\n\n    operator : infix_operator_0\n             | infix_operator_2\n             | infix_operator_6\n             | infix_operator_7\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH parameters ARROW expr\n    parameters : _identifier _parameters\n       _parameters : SPACE _identifier _parameters\n    _parameters : empty\n    pattern : parametersequation : pattern EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    type_expr : type_function_expr\n                 | type_termtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_variable : LOWER_IDENTIFIERtype_cons : UPPER_IDENTIFIERtype_factor : type_variable\n                   | type_cons\n\n    type_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET_maybe_padding : PADDING\n                      | empty\n    program : definitions\n    definitions : definition _definition_set\n    _definition_set : NEWLINE definition _definition_set\n    _definition_set : empty\n    definition : nametype_decl\n                  | valuedef\n                  | datatype_definition\n    valuedef : equation\n    nametype_decl : _identifier COLON COLON st_type_expr\n    datatype_definition : _datatype_lhs EQ _data_rhs\n    _datatype_lhs : KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params\n    _cons_params : SPACE LOWER_IDENTIFIER _cons_params\n    _cons_params : empty\n    _data_rhs : data_cons _data_conses\n       _data_conses : _maybe_padding PIPE data_cons _data_conses\n    _data_conses : emptydata_cons : _data_cons_data_cons : UPPER_IDENTIFIER _cons_args_cons_args : SPACE cons_arg _cons_args\n    _cons_args : empty\n    cons_arg : type_variable\n       cons_arg : type_cons\n       cons_arg : _cons_arg_factor\n    _cons_arg_factor : LPAREN type_expr RPAREN\n    _cons_arg_factor : LBRACKET type_expr RBRACKET\n    '
    
_lr_action_items = {'UNDER_IDENTIFIER':([0,17,21,24,42,56,58,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,113,122,143,144,153,154,155,158,172,186,],[10,10,10,10,10,10,10,10,-55,10,-53,-54,10,-51,-52,10,-47,-48,-49,-50,10,10,-46,10,10,10,10,10,-41,-44,-45,10,10,10,]),'UPPER_IDENTIFIER':([0,17,21,23,24,25,27,42,56,58,80,81,88,90,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,113,122,128,130,131,132,133,134,139,140,143,144,153,154,155,158,160,172,178,186,],[11,11,11,32,11,70,83,11,11,11,-68,-68,-97,83,11,-55,11,-53,-54,11,-51,-52,11,-47,-48,-49,-50,11,11,-46,11,11,11,-68,83,83,-98,83,32,83,83,11,11,-41,-44,-45,11,83,11,83,11,]),'LOWER_IDENTIFIER':([0,17,21,24,27,42,56,58,80,81,88,90,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,113,122,125,128,130,131,132,133,139,140,143,144,153,154,155,158,160,172,178,186,],[12,12,12,12,82,12,12,12,-68,-68,-97,82,12,-55,12,-53,-54,12,-51,-52,12,-47,-48,-49,-50,12,12,-46,12,12,12,159,-68,82,82,-98,82,82,82,12,12,-41,-44,-45,12,82,12,82,12,]),'KEYWORD_DATA':([0,17,],[14,14,]),'$end':([1,2,3,4,5,6,8,10,11,12,16,18,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,82,83,85,87,89,91,108,111,115,129,135,136,137,138,142,145,146,147,148,149,150,151,152,153,154,155,157,161,164,165,168,169,171,173,174,176,177,179,180,183,184,185,187,188,189,190,191,192,193,194,],[0,-99,-68,-103,-104,-105,-106,-38,-39,-40,-100,-102,-68,-108,-68,-115,-68,-74,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-101,-107,-21,-81,-82,-85,-86,-93,-94,-91,-92,-112,-114,-116,-118,-43,-42,-34,-87,-68,-119,-120,-121,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,-68,-68,-68,-117,-79,-80,-75,-77,-69,-84,-83,-89,-90,-113,-122,-123,-68,-68,-95,-96,-78,-12,-76,-88,]),'NEWLINE':([3,4,5,6,8,10,11,12,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,82,83,85,87,89,91,108,111,115,129,135,136,137,138,142,145,146,147,148,149,150,151,152,153,154,155,157,161,164,165,168,169,171,173,174,176,177,179,180,183,184,185,187,188,189,190,191,192,193,194,],[17,-103,-104,-105,-106,-38,-39,-40,17,-108,-68,-115,-68,-74,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-107,-21,-81,-82,-85,-86,-93,-94,-91,-92,-112,-114,-116,-118,-43,-42,-34,-87,-68,-119,-120,-121,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,-68,-68,-68,-117,-79,-80,-75,-77,-69,-84,-83,-89,-90,-113,-122,-123,-68,-68,-95,-96,-78,-12,-76,-88,]),'COLON':([7,10,11,12,19,],[19,-38,-39,-40,27,]),'SPACE':([7,10,11,12,14,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,59,60,61,62,63,64,65,66,67,68,69,70,77,78,79,82,83,93,108,111,115,124,135,136,137,138,142,145,146,147,148,149,150,151,152,153,154,155,157,159,161,168,169,170,171,173,174,184,185,187,188,189,190,191,192,193,],[21,-38,-39,-40,25,21,90,-74,-13,-11,-9,-7,-5,107,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,122,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,125,130,-93,-94,-91,-92,143,-43,107,-34,21,90,-119,-120,-121,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,-68,125,178,-79,-80,186,-75,-77,-69,-122,-123,-68,178,-95,-96,-78,-12,-76,]),'EQ':([7,9,10,11,12,13,15,20,22,28,70,84,124,126,127,159,175,],[-68,23,-38,-39,-40,24,-73,-70,-72,-68,-68,-71,-68,-109,-111,-68,-110,]),'ARROW':([10,11,12,20,22,28,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,82,83,84,108,110,111,115,123,124,129,142,145,146,147,148,149,150,151,152,153,154,155,157,161,168,169,171,173,174,176,179,180,187,188,189,190,191,192,193,194,],[-38,-39,-40,-70,-72,-68,-74,-13,97,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,97,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,128,-85,-86,-93,-94,-91,-92,-71,-43,97,-3,-34,158,-68,-87,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,-68,-68,-79,-80,-75,-77,-69,128,-89,-90,-68,-68,-95,-96,-78,-12,-76,-88,]),'KEYWORD_WHERE':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,59,60,61,62,63,64,65,66,67,68,69,108,111,112,114,115,141,142,145,146,147,148,149,150,151,152,153,154,155,157,168,169,171,173,174,187,191,192,193,],[-38,-39,-40,93,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-43,-3,93,93,-34,93,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,-68,-79,-80,-75,-77,93,-68,-78,93,-76,]),'TICK_OPERATOR':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,69,108,110,111,112,114,115,141,142,145,146,147,148,149,150,151,152,153,154,155,157,168,169,171,173,174,187,191,192,193,],[-38,-39,-40,94,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,94,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-43,94,-3,94,94,-34,94,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,-68,-79,-80,-75,-77,94,-68,-78,94,-76,]),'PADDING':([10,11,12,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,59,60,61,62,63,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,89,91,93,108,111,115,128,129,135,136,137,138,142,145,146,147,148,149,150,151,152,153,154,155,157,161,162,163,164,165,168,169,171,173,174,176,177,179,180,184,185,187,188,189,190,191,192,193,194,],[-38,-39,-40,88,-115,-68,-74,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-81,-82,-85,-86,-93,-94,88,88,-91,-92,-116,-118,144,-43,-42,-34,88,-87,-68,-119,-120,-121,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,172,-68,88,88,88,-117,-79,-80,-75,-77,-69,-84,-83,-89,-90,-122,-123,172,-68,-95,-96,-78,-12,-76,-88,]),'KEYWORD_IN':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,59,60,61,62,63,64,65,66,67,68,69,108,111,115,142,145,146,147,148,149,150,151,152,153,154,155,156,157,168,169,171,173,174,187,191,192,193,],[-38,-39,-40,-74,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-43,-42,-34,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,170,-68,-79,-80,-75,-77,-69,-68,-78,-12,-76,]),'DOT_OPERATOR':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,69,108,110,111,115,142,145,146,147,148,149,150,151,152,153,154,155,157,168,169,171,173,174,187,191,192,193,],[-38,-39,-40,-74,-13,-11,-9,-7,-5,109,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,116,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-43,116,109,-34,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,-68,-79,-80,-75,-77,-69,-68,-78,-12,-76,]),'LPAREN':([10,11,12,24,27,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,69,80,81,88,90,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,128,130,131,132,133,139,140,142,145,146,147,148,149,150,151,152,153,154,155,157,158,160,168,169,171,173,174,178,186,187,191,192,193,],[-38,-39,-40,56,80,-74,-13,-11,-9,-7,-5,110,-14,-15,56,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,56,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-68,-68,-97,139,56,-55,56,-53,-54,56,-51,-52,56,-47,-48,-49,-50,56,56,-43,-46,56,110,-34,-68,80,80,-98,80,80,80,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,-68,56,80,-79,-80,-75,-77,-69,80,56,-68,-78,-12,-76,]),'STAR':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,69,108,110,111,115,142,145,146,147,148,149,150,151,152,153,154,155,157,168,169,171,173,174,187,191,192,193,],[-38,-39,-40,-74,-13,-11,-9,102,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,102,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-43,102,-3,-34,-10,-8,102,-4,-2,-1,-65,-66,-67,-41,-44,-45,-68,-79,-80,-75,-77,-69,-68,-78,-12,-76,]),'SLASH':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,69,108,110,111,115,142,145,146,147,148,149,150,151,152,153,154,155,157,168,169,171,173,174,187,191,192,193,],[-38,-39,-40,-74,-13,-11,-9,103,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,103,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-43,103,-3,-34,-10,-8,103,-4,-2,-1,-65,-66,-67,-41,-44,-45,-68,-79,-80,-75,-77,-69,-68,-78,-12,-76,]),'DOUBLESLASH':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,69,108,110,111,115,142,145,146,147,148,149,150,151,152,153,154,155,157,168,169,171,173,174,187,191,192,193,],[-38,-39,-40,-74,-13,-11,-9,104,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,104,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-43,104,-3,-34,-10,-8,104,-4,-2,-1,-65,-66,-67,-41,-44,-45,-68,-79,-80,-75,-77,-69,-68,-78,-12,-76,]),'PERCENT':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,69,108,110,111,115,142,145,146,147,148,149,150,151,152,153,154,155,157,168,169,171,173,174,187,191,192,193,],[-38,-39,-40,-74,-13,-11,-9,105,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,105,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-43,105,-3,-34,-10,-8,105,-4,-2,-1,-65,-66,-67,-41,-44,-45,-68,-79,-80,-75,-77,-69,-68,-78,-12,-76,]),'PLUS':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,69,108,110,111,115,142,145,146,147,148,149,150,151,152,153,154,155,157,168,169,171,173,174,187,191,192,193,],[-38,-39,-40,-74,-13,-11,99,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,99,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-43,99,-3,-34,-10,99,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,-68,-79,-80,-75,-77,-69,-68,-78,-12,-76,]),'MINUS':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,69,108,110,111,115,142,145,146,147,148,149,150,151,152,153,154,155,157,168,169,171,173,174,187,191,192,193,],[-38,-39,-40,-74,-13,-11,100,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,100,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-43,100,-3,-34,-10,100,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,-68,-79,-80,-75,-77,-69,-68,-78,-12,-76,]),'OPERATOR':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,69,108,110,111,115,142,145,146,147,148,149,150,151,152,153,154,155,157,168,169,171,173,174,187,191,192,193,],[-38,-39,-40,-74,-13,96,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,96,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-43,96,-3,-34,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,-68,-79,-80,-75,-77,-69,-68,-78,-12,-76,]),'RPAREN':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,69,74,75,76,77,78,79,82,83,88,94,96,97,99,100,102,103,104,105,108,111,114,115,116,117,118,119,120,121,129,132,142,145,146,147,148,149,150,151,152,153,154,155,157,161,162,166,168,169,171,173,174,176,177,179,180,181,187,188,189,190,191,192,193,194,],[-38,-39,-40,-74,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,115,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-81,-82,-85,-86,-93,-94,-91,-92,-97,-55,-53,-54,-51,-52,-47,-48,-49,-50,-43,-42,153,-34,154,155,-56,-57,-58,-59,-87,-98,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,-68,-68,-68,184,-79,-80,-75,-77,-69,-84,-83,-89,-90,189,-68,-68,-95,-96,-78,-12,-76,-88,]),'KEYWORD_LET':([24,42,56,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,153,154,155,158,186,],[57,57,57,57,-55,57,-53,-54,57,-51,-52,57,-47,-48,-49,-50,57,57,-46,57,-41,-44,-45,57,57,]),'BACKSLASH':([24,42,56,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,153,154,155,158,186,],[58,58,58,58,-55,58,-53,-54,58,-51,-52,58,-47,-48,-49,-50,58,58,-46,58,-41,-44,-45,58,58,]),'BASE10_INTEGER':([24,42,56,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,153,154,155,158,186,],[59,59,59,59,-55,59,-53,-54,59,-51,-52,59,-47,-48,-49,-50,59,59,-46,59,-41,-44,-45,59,59,]),'BASE16_INTEGER':([24,42,56,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,153,154,155,158,186,],[60,60,60,60,-55,60,-53,-54,60,-51,-52,60,-47,-48,-49,-50,60,60,-46,60,-41,-44,-45,60,60,]),'BASE8_INTEGER':([24,42,56,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,153,154,155,158,186,],[61,61,61,61,-55,61,-53,-54,61,-51,-52,61,-47,-48,-49,-50,61,61,-46,61,-41,-44,-45,61,61,]),'BASE2_INTEGER':([24,42,56,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,153,154,155,158,186,],[62,62,62,62,-55,62,-53,-54,62,-51,-52,62,-47,-48,-49,-50,62,62,-46,62,-41,-44,-45,62,62,]),'FLOAT':([24,42,56,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,153,154,155,158,186,],[63,63,63,63,-55,63,-53,-54,63,-51,-52,63,-47,-48,-49,-50,63,63,-46,63,-41,-44,-45,63,63,]),'STRING':([24,42,56,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,113,153,154,155,158,186,],[64,64,64,64,-55,64,-53,-54,64,-51,-52,64,-47,-48,-49,-50,64,64,-46,64,64,-41,-44,-45,64,64,]),'CHAR':([24,42,56,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,113,153,154,155,158,186,],[65,65,65,65,-55,65,-53,-54,65,-51,-52,65,-47,-48,-49,-50,65,65,-46,65,65,-41,-44,-45,65,65,]),'DATE':([24,42,56,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,153,154,155,158,186,],[66,66,66,66,-55,66,-53,-54,66,-51,-52,66,-47,-48,-49,-50,66,66,-46,66,-41,-44,-45,66,66,]),'DATETIME':([24,42,56,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,153,154,155,158,186,],[67,67,67,67,-55,67,-53,-54,67,-51,-52,67,-47,-48,-49,-50,67,67,-46,67,-41,-44,-45,67,67,]),'DATE_INTERVAL':([24,42,56,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,153,154,155,158,186,],[68,68,68,68,-55,68,-53,-54,68,-51,-52,68,-47,-48,-49,-50,68,68,-46,68,-41,-44,-45,68,68,]),'DATETIME_INTERVAL':([24,42,56,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,153,154,155,158,186,],[69,69,69,69,-55,69,-53,-54,69,-51,-52,69,-47,-48,-49,-50,69,69,-46,69,-41,-44,-45,69,69,]),'LBRACKET':([27,80,81,88,90,128,130,131,132,133,139,140,160,178,],[81,-68,-68,-97,140,-68,81,81,-98,81,81,81,81,81,]),'PIPE':([30,31,32,82,83,86,87,88,89,91,135,136,137,138,164,165,184,185,],[-68,-115,-68,-91,-92,134,-98,-97,-116,-118,-68,-119,-120,-121,-68,-117,-122,-123,]),'ANNOTATION':([47,59,60,61,62,63,],[113,-60,-61,-62,-63,-64,]),'RBRACKET':([74,75,76,77,78,79,82,83,88,129,132,161,163,167,176,177,179,180,182,188,189,190,194,],[-81,-82,-85,-86,-93,-94,-91,-92,-97,-87,-98,-68,-68,185,-84,-83,-89,-90,190,-68,-95,-96,-88,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'definitions':([0,],[2,]),'definition':([0,17,],[3,26,]),'nametype_decl':([0,17,],[4,4,]),'valuedef':([0,17,],[5,5,]),'datatype_definition':([0,17,],[6,6,]),'_identifier':([0,17,21,24,42,56,58,92,95,98,101,106,107,110,113,122,143,144,158,172,186,],[7,7,28,55,55,55,124,55,55,55,55,55,55,55,55,124,124,124,55,124,55,]),'equation':([0,17,122,143,144,172,],[8,8,157,157,157,187,]),'_datatype_lhs':([0,17,],[9,9,]),'pattern':([0,17,122,143,144,172,],[13,13,13,13,13,13,]),'parameters':([0,17,58,122,143,144,172,],[15,15,123,15,15,15,15,]),'_definition_set':([3,26,],[16,71,]),'empty':([3,7,26,28,30,32,70,80,81,124,128,135,157,159,161,162,163,164,187,188,],[18,22,18,22,87,91,127,132,132,22,132,91,173,127,180,132,132,87,173,180,]),'_parameters':([7,28,124,],[20,84,20,]),'_data_rhs':([23,],[29,]),'data_cons':([23,134,],[30,164,]),'_data_cons':([23,134,],[31,31,]),'expr':([24,42,56,92,95,98,101,106,107,110,158,186,],[33,112,114,141,112,112,112,112,112,114,174,192,]),'expr_term0':([24,42,56,92,95,98,101,106,107,110,158,186,],[34,34,34,142,34,34,34,34,34,34,34,34,]),'expr_term2':([24,42,56,92,95,98,101,106,107,110,158,186,],[35,35,35,35,35,35,35,35,35,35,35,35,]),'expr_term6':([24,42,56,92,95,98,101,106,107,110,158,186,],[36,36,36,36,145,36,36,36,36,36,36,36,]),'expr_term7':([24,42,56,92,95,98,101,106,107,110,158,186,],[37,37,37,37,37,146,37,37,37,37,37,37,]),'expr_term9':([24,42,56,92,95,98,101,106,107,110,158,186,],[38,38,38,38,38,38,147,148,38,38,38,38,]),'expr_factor':([24,42,56,92,95,98,101,106,107,110,158,186,],[39,111,39,39,39,39,39,39,149,39,39,39,]),'literal':([24,42,56,92,95,98,101,106,107,110,158,186,],[40,40,40,40,40,40,40,40,40,40,40,40,]),'identifier':([24,42,56,92,95,98,101,106,107,110,113,158,186,],[41,41,41,41,41,41,41,41,41,41,152,41,41,]),'enclosed_expr':([24,39,42,56,92,95,98,101,106,107,110,111,149,158,186,],[42,108,42,42,42,42,42,42,42,42,42,108,108,42,42,]),'unit_value':([24,42,56,92,95,98,101,106,107,110,158,186,],[43,43,43,43,43,43,43,43,43,43,43,43,]),'letexpr':([24,42,56,92,95,98,101,106,107,110,158,186,],[44,44,44,44,44,44,44,44,44,44,44,44,]),'where_expr':([24,42,56,92,95,98,101,106,107,110,158,186,],[45,45,45,45,45,45,45,45,45,45,45,45,]),'lambda_expr':([24,42,56,92,95,98,101,106,107,110,158,186,],[46,46,46,46,46,46,46,46,46,46,46,46,]),'number':([24,42,56,92,95,98,101,106,107,110,158,186,],[47,47,47,47,47,47,47,47,47,47,47,47,]),'concrete_number':([24,42,56,92,95,98,101,106,107,110,158,186,],[48,48,48,48,48,48,48,48,48,48,48,48,]),'string':([24,42,56,92,95,98,101,106,107,110,113,158,186,],[49,49,49,49,49,49,49,49,49,49,150,49,49,]),'char':([24,42,56,92,95,98,101,106,107,110,113,158,186,],[50,50,50,50,50,50,50,50,50,50,151,50,50,]),'date':([24,42,56,92,95,98,101,106,107,110,158,186,],[51,51,51,51,51,51,51,51,51,51,51,51,]),'datetime':([24,42,56,92,95,98,101,106,107,110,158,186,],[52,52,52,52,52,52,52,52,52,52,52,52,]),'date_interval':([24,42,56,92,95,98,101,106,107,110,158,186,],[53,53,53,53,53,53,53,53,53,53,53,53,]),'datetime_interval':([24,42,56,92,95,98,101,106,107,110,158,186,],[54,54,54,54,54,54,54,54,54,54,54,54,]),'st_type_expr':([27,],[72,]),'type_expr':([27,131,133,139,140,],[73,162,163,166,167,]),'type_function_expr':([27,131,133,139,140,160,],[74,74,74,74,74,177,]),'type_term':([27,131,133,139,140,160,],[75,75,75,75,75,176,]),'type_app_expression':([27,131,133,139,140,160,],[76,76,76,76,76,76,]),'type_factor':([27,130,131,133,139,140,160,178,],[77,161,77,77,77,77,77,188,]),'type_variable':([27,90,130,131,133,139,140,160,178,],[78,136,78,78,78,78,78,78,78,]),'type_cons':([27,90,130,131,133,139,140,160,178,],[79,137,79,79,79,79,79,79,79,]),'_data_conses':([30,164,],[85,183,]),'_maybe_padding':([30,80,81,128,162,163,164,],[86,131,133,160,181,182,86,]),'_cons_args':([32,135,],[89,165,]),'infix_operator_0':([33,56,110,112,114,141,174,192,],[92,118,118,92,92,92,92,92,]),'infix_operator_2':([35,56,110,],[95,119,119,]),'infix_operator_6':([36,56,110,145,],[98,120,120,98,]),'infix_operator_7':([37,56,110,146,],[101,121,121,101,]),'infix_operator_9':([39,111,149,],[106,106,106,]),'operator':([56,110,],[117,117,]),'_cons_params':([70,159,],[126,175,]),'_app_args_non_empty':([77,],[129,]),'cons_arg':([90,],[135,]),'_cons_arg_factor':([90,],[138,]),'equations':([122,143,144,],[156,168,169,]),'_equation_set':([157,187,],[171,193,]),'_app_args':([161,188,],[179,194,]),'st_expr':([186,],[191,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','parsers.py',474),
  ('expr_term9 -> expr_factor infix_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','parsers.py',481),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','parsers.py',482),
  ('expr_term7 -> expr_term7 infix_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','parsers.py',484),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','parsers.py',485),
  ('expr_term6 -> expr_term6 infix_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','parsers.py',487),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','parsers.py',488),
  ('expr_term2 -> expr_term2 infix_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','parsers.py',490),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','parsers.py',491),
  ('expr_term0 -> expr infix_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','parsers.py',493),
  ('expr_term0 -> expr_term2','expr_term0',1,'p_expressions_precedence_rules','parsers.py',494),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','parsers.py',507),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','parsers.py',509),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','parsers.py',511),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','parsers.py',512),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','parsers.py',513),
  ('expr_factor -> unit_value','expr_factor',1,'p_standalone_definitions','parsers.py',514),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','parsers.py',515),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','parsers.py',516),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','parsers.py',517),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','parsers.py',519),
  ('literal -> number','literal',1,'p_literals','parsers.py',527),
  ('literal -> concrete_number','literal',1,'p_literals','parsers.py',528),
  ('literal -> string','literal',1,'p_literals','parsers.py',529),
  ('literal -> char','literal',1,'p_literals','parsers.py',530),
  ('literal -> date','literal',1,'p_literals','parsers.py',531),
  ('literal -> datetime','literal',1,'p_literals','parsers.py',532),
  ('literal -> date_interval','literal',1,'p_literals','parsers.py',533),
  ('literal -> datetime_interval','literal',1,'p_literals','parsers.py',534),
  ('date -> DATE','date',1,'p_date','parsers.py',540),
  ('datetime -> DATETIME','datetime',1,'p_datetime','parsers.py',546),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','parsers.py',552),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','parsers.py',558),
  ('unit_value -> LPAREN RPAREN','unit_value',2,'p_unit_value','parsers.py',564),
  ('char -> CHAR','char',1,'p_char','parsers.py',570),
  ('string -> STRING','string',1,'p_string','parsers.py',575),
  ('identifier -> _identifier','identifier',1,'p_variable','parsers.py',580),
  ('_identifier -> UNDER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',587),
  ('_identifier -> UPPER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',588),
  ('_identifier -> LOWER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',589),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','parsers.py',596),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','parsers.py',601),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','parsers.py',602),
  ('enclosed_expr -> LPAREN DOT_OPERATOR RPAREN','enclosed_expr',3,'p_operators_as_expressios','parsers.py',608),
  ('enclosed_expr -> LPAREN operator RPAREN','enclosed_expr',3,'p_operators_as_expressios','parsers.py',609),
  ('infix_operator_9 -> DOT_OPERATOR','infix_operator_9',1,'p_operator','parsers.py',619),
  ('infix_operator_7 -> STAR','infix_operator_7',1,'p_operator','parsers.py',621),
  ('infix_operator_7 -> SLASH','infix_operator_7',1,'p_operator','parsers.py',622),
  ('infix_operator_7 -> DOUBLESLASH','infix_operator_7',1,'p_operator','parsers.py',623),
  ('infix_operator_7 -> PERCENT','infix_operator_7',1,'p_operator','parsers.py',624),
  ('infix_operator_6 -> PLUS','infix_operator_6',1,'p_operator','parsers.py',626),
  ('infix_operator_6 -> MINUS','infix_operator_6',1,'p_operator','parsers.py',627),
  ('infix_operator_2 -> OPERATOR','infix_operator_2',1,'p_operator','parsers.py',629),
  ('infix_operator_2 -> ARROW','infix_operator_2',1,'p_operator','parsers.py',630),
  ('infix_operator_0 -> TICK_OPERATOR','infix_operator_0',1,'p_operator','parsers.py',632),
  ('operator -> infix_operator_0','operator',1,'p_operator','parsers.py',634),
  ('operator -> infix_operator_2','operator',1,'p_operator','parsers.py',635),
  ('operator -> infix_operator_6','operator',1,'p_operator','parsers.py',636),
  ('operator -> infix_operator_7','operator',1,'p_operator','parsers.py',637),
  ('number -> BASE10_INTEGER','number',1,'p_integer','parsers.py',644),
  ('number -> BASE16_INTEGER','number',1,'p_integer','parsers.py',645),
  ('number -> BASE8_INTEGER','number',1,'p_integer','parsers.py',646),
  ('number -> BASE2_INTEGER','number',1,'p_integer','parsers.py',647),
  ('number -> FLOAT','number',1,'p_float','parsers.py',676),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','parsers.py',681),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','parsers.py',682),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','parsers.py',683),
  ('empty -> <empty>','empty',0,'p_empty','parsers.py',692),
  ('lambda_expr -> BACKSLASH parameters ARROW expr','lambda_expr',4,'p_lambda_definition','parsers.py',697),
  ('parameters -> _identifier _parameters','parameters',2,'p_parameters','parsers.py',705),
  ('_parameters -> SPACE _identifier _parameters','_parameters',3,'p_parameters','parsers.py',706),
  ('_parameters -> empty','_parameters',1,'p_empty__parameters','parsers.py',715),
  ('pattern -> parameters','pattern',1,'p_pattern','parsers.py',721),
  ('equation -> pattern EQ expr','equation',3,'p_equation','parsers.py',727),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','parsers.py',737),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','parsers.py',746),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','parsers.py',755),
  ('letexpr -> KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','parsers.py',765),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','parsers.py',773),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','parsers.py',774),
  ('type_expr -> type_function_expr','type_expr',1,'p_type_expr','parsers.py',784),
  ('type_expr -> type_term','type_expr',1,'p_type_expr','parsers.py',785),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','parsers.py',790),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','parsers.py',791),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','parsers.py',801),
  ('type_term -> type_factor','type_term',1,'p_type_term','parsers.py',802),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','parsers.py',807),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','parsers.py',819),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','parsers.py',820),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','parsers.py',828),
  ('type_variable -> LOWER_IDENTIFIER','type_variable',1,'p_type_variable','parsers.py',833),
  ('type_cons -> UPPER_IDENTIFIER','type_cons',1,'p_type_cons','parsers.py',838),
  ('type_factor -> type_variable','type_factor',1,'p_type_factor_identifier','parsers.py',843),
  ('type_factor -> type_cons','type_factor',1,'p_type_factor_identifier','parsers.py',844),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','parsers.py',851),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','parsers.py',856),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','parsers.py',861),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','parsers.py',862),
  ('program -> definitions','program',1,'p_program','parsers.py',868),
  ('definitions -> definition _definition_set','definitions',2,'p_definitions','parsers.py',884),
  ('_definition_set -> NEWLINE definition _definition_set','_definition_set',3,'p_definition_set','parsers.py',892),
  ('_definition_set -> empty','_definition_set',1,'p_definition_set2','parsers.py',900),
  ('definition -> nametype_decl','definition',1,'p_definition','parsers.py',906),
  ('definition -> valuedef','definition',1,'p_definition','parsers.py',907),
  ('definition -> datatype_definition','definition',1,'p_definition','parsers.py',908),
  ('valuedef -> equation','valuedef',1,'p_valuedef','parsers.py',914),
  ('nametype_decl -> _identifier COLON COLON st_type_expr','nametype_decl',4,'p_nametype_decl','parsers.py',920),
  ('datatype_definition -> _datatype_lhs EQ _data_rhs','datatype_definition',3,'p_datatype_definition','parsers.py',929),
  ('_datatype_lhs -> KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params','_datatype_lhs',4,'p_datatype_lhs','parsers.py',937),
  ('_cons_params -> SPACE LOWER_IDENTIFIER _cons_params','_cons_params',3,'p_datatype_cons_params','parsers.py',946),
  ('_cons_params -> empty','_cons_params',1,'p_datatype_cons_params_empty','parsers.py',955),
  ('_data_rhs -> data_cons _data_conses','_data_rhs',2,'p_datatype_body','parsers.py',961),
  ('_data_conses -> _maybe_padding PIPE data_cons _data_conses','_data_conses',4,'p_datatype_body','parsers.py',962),
  ('_data_conses -> empty','_data_conses',1,'p_datatype_conses_empty','parsers.py',971),
  ('data_cons -> _data_cons','data_cons',1,'p_data_cons','parsers.py',1003),
  ('_data_cons -> UPPER_IDENTIFIER _cons_args','_data_cons',2,'p_bare_data_cons','parsers.py',1009),
  ('_cons_args -> SPACE cons_arg _cons_args','_cons_args',3,'p_data_cons_args','parsers.py',1014),
  ('_cons_args -> empty','_cons_args',1,'p_data_cons_args_empty','parsers.py',1023),
  ('cons_arg -> type_variable','cons_arg',1,'p_cons_arg','parsers.py',1029),
  ('cons_arg -> type_cons','cons_arg',1,'p_cons_arg','parsers.py',1030),
  ('cons_arg -> _cons_arg_factor','cons_arg',1,'p_cons_arg','parsers.py',1031),
  ('_cons_arg_factor -> LPAREN type_expr RPAREN','_cons_arg_factor',3,'p_cons_arg_factor','parsers.py',1037),
  ('_cons_arg_factor -> LBRACKET type_expr RBRACKET','_cons_arg_factor',3,'p_cons_arg_factor_list','parsers.py',1043),
]
