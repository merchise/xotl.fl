
# program_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FLOAT IDENTIFIER KEYWORD_CLASS KEYWORD_DATA KEYWORD_DEF KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LPAREN MINUS OPERATOR PADDING PERCENT PIPE PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATORexpr_factor : expr_factor SPACE expr_factor\n    expr_term9 : expr_factor infix_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infix_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infix_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infix_operator_2 expr_term6\n               | expr_term6\n\n    expr_term0 : expr infix_operator_0 expr_term0\n               | expr_term2\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | unit_value\n                | letexpr\n                | where_expr\n                | lambda_expr\n\n    st_type_expr : type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    unit_value : LPAREN RPAREN\n    char : CHARstring : STRINGidentifier : IDENTIFIERenclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : LPAREN DOT_OPERATOR RPAREN\n                     | LPAREN operator RPAREN\n    \n    infix_operator_9 : DOT_OPERATOR\n\n    infix_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infix_operator_6 : PLUS\n                     | MINUS\n\n    infix_operator_2 : OPERATOR\n                     | ARROW\n\n    infix_operator_0 : TICK_OPERATOR\n\n    operator : infix_operator_0\n             | infix_operator_2\n             | infix_operator_6\n             | infix_operator_7\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH parameters ARROW expr\n    parameters : IDENTIFIER _parameters\n    _parameters : SPACE IDENTIFIER _parameters_parameters : empty\n    pattern : parametersequation : pattern EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    type_expr : type_function_expr\n                 | type_termtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_factor : IDENTIFIERtype_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET_maybe_padding : PADDING\n                      | empty\n    program : definitions\n    definitions : definition _definition_set\n    _definition_set : PADDING definition _definition_set\n    _definition_set : empty\n     definition : function_definition\n                   | datatype_definition\n    function_definition : functype_decl PADDING funcdef\n                           | funcdef\n    funcdef : KEYWORD_DEF equations\n    functype_decl : IDENTIFIER COLON COLON st_type_expr\n    datatype_definition : KEYWORD_DATA IDENTIFIER _cons_args EQ _data_body\n    _cons_args : IDENTIFIER _cons_args\n    _cons_args : empty\n    _data_body   : data_cons _data_conses\n       _data_conses : _maybe_padding PIPE data_cons _data_conses\n    _data_conses : emptydata_cons : IDENTIFIER _cons_args'
    
_lr_action_items = {'KEYWORD_DATA':([0,12,],[8,8,]),'IDENTIFIER':([0,8,10,12,15,24,27,29,31,33,37,45,46,57,71,73,86,89,91,92,93,94,95,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,118,127,134,140,141,150,151,152,154,155,158,171,],[9,15,21,9,24,24,38,21,70,85,86,-65,-65,70,70,21,24,-65,38,38,-91,-92,38,70,-52,70,-50,-51,70,-48,-49,70,-44,-45,-46,-47,70,70,-43,70,70,21,38,21,21,-38,-41,-42,70,86,38,70,]),'KEYWORD_DEF':([0,12,14,],[10,10,10,]),'$end':([1,2,3,4,5,7,11,13,17,18,22,23,24,26,28,30,35,36,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,75,76,77,78,79,80,81,82,83,84,86,87,88,96,113,116,120,130,131,133,139,142,143,144,145,146,147,148,149,150,151,152,163,164,166,167,172,174,175,],[0,-93,-65,-97,-98,-100,-94,-96,-101,-65,-65,-99,-65,-105,-72,-74,-95,-104,-65,-71,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-65,-103,-65,-73,-40,-39,-34,-109,-106,-108,-10,-8,-6,-4,-2,-1,-62,-63,-64,-38,-41,-42,-76,-77,-66,-65,-107,-75,-12,]),'PADDING':([3,4,5,6,7,17,18,22,23,24,26,28,30,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,96,98,113,116,120,130,131,133,135,136,137,139,142,143,144,145,146,147,148,149,150,151,152,156,157,159,160,163,164,166,167,168,169,170,172,173,174,175,],[12,-97,-98,14,-100,-101,29,12,-99,-65,-105,-72,-74,-104,-88,-102,-21,-78,-79,-82,-83,93,93,29,-71,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-65,-103,93,93,-84,-73,141,-40,-39,-34,-109,-106,-108,-65,93,93,-10,-8,-6,-4,-2,-1,-62,-63,-64,-38,-41,-42,-81,-80,-86,-87,-76,-77,-66,93,-65,-89,-90,-107,-85,-75,-12,]),'COLON':([9,16,],[16,27,]),'EQ':([15,19,20,21,24,25,26,32,34,36,85,129,],[-65,31,-70,-65,-65,37,-105,-67,-69,-104,-65,-68,]),'KEYWORD_IN':([18,28,30,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,75,76,77,78,79,80,81,82,83,84,96,113,116,120,139,142,143,144,145,146,147,148,149,150,151,152,153,163,164,166,174,175,],[-65,-72,-74,-65,-71,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-73,-40,-39,-34,-10,-8,-6,-4,-2,-1,-62,-63,-64,-38,-41,-42,165,-76,-77,-66,-75,-12,]),'SPACE':([18,21,28,30,38,44,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,74,75,76,77,78,79,80,81,82,83,84,85,96,98,113,116,120,135,139,142,143,144,145,146,147,148,149,150,151,152,163,164,165,166,168,169,170,174,175,],[-65,33,-72,-74,-88,91,-65,-71,-13,-11,-9,-7,-5,112,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,127,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,33,-73,140,-40,112,-34,158,-10,-8,-6,-4,-2,-1,-62,-63,-64,-38,-41,-42,-76,-77,171,-66,158,-89,-90,-75,-12,]),'DOT_OPERATOR':([18,28,30,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,96,113,115,116,120,139,142,143,144,145,146,147,148,149,150,151,152,163,164,166,174,175,],[-65,-72,-74,-65,-71,-13,-11,-9,-7,-5,114,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,121,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-73,-40,121,114,-34,-10,-8,-6,-4,-2,-1,-62,-63,-64,-38,-41,-42,-76,-77,-66,-75,-12,]),'LPAREN':([18,27,28,30,31,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,89,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,134,139,142,143,144,145,146,147,148,149,150,151,152,154,158,163,164,166,171,174,175,],[-65,45,-72,-74,71,-65,-65,-65,-71,-13,-11,-9,-7,-5,115,-14,-15,71,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,71,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-65,45,45,-91,-92,45,-73,71,-52,71,-50,-51,71,-48,-49,71,-44,-45,-46,-47,71,71,-40,-43,71,115,-34,45,-10,-8,-6,-4,-2,-1,-62,-63,-64,-38,-41,-42,71,45,-76,-77,-66,71,-75,-12,]),'STAR':([18,28,30,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,96,113,115,116,120,139,142,143,144,145,146,147,148,149,150,151,152,163,164,166,174,175,],[-65,-72,-74,-65,-71,-13,-11,-9,107,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,107,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-73,-40,107,-3,-34,-10,-8,107,-4,-2,-1,-62,-63,-64,-38,-41,-42,-76,-77,-66,-75,-12,]),'SLASH':([18,28,30,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,96,113,115,116,120,139,142,143,144,145,146,147,148,149,150,151,152,163,164,166,174,175,],[-65,-72,-74,-65,-71,-13,-11,-9,108,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,108,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-73,-40,108,-3,-34,-10,-8,108,-4,-2,-1,-62,-63,-64,-38,-41,-42,-76,-77,-66,-75,-12,]),'DOUBLESLASH':([18,28,30,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,96,113,115,116,120,139,142,143,144,145,146,147,148,149,150,151,152,163,164,166,174,175,],[-65,-72,-74,-65,-71,-13,-11,-9,109,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,109,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-73,-40,109,-3,-34,-10,-8,109,-4,-2,-1,-62,-63,-64,-38,-41,-42,-76,-77,-66,-75,-12,]),'PERCENT':([18,28,30,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,96,113,115,116,120,139,142,143,144,145,146,147,148,149,150,151,152,163,164,166,174,175,],[-65,-72,-74,-65,-71,-13,-11,-9,110,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,110,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-73,-40,110,-3,-34,-10,-8,110,-4,-2,-1,-62,-63,-64,-38,-41,-42,-76,-77,-66,-75,-12,]),'PLUS':([18,28,30,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,96,113,115,116,120,139,142,143,144,145,146,147,148,149,150,151,152,163,164,166,174,175,],[-65,-72,-74,-65,-71,-13,-11,104,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,104,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-73,-40,104,-3,-34,-10,104,-6,-4,-2,-1,-62,-63,-64,-38,-41,-42,-76,-77,-66,-75,-12,]),'MINUS':([18,28,30,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,96,113,115,116,120,139,142,143,144,145,146,147,148,149,150,151,152,163,164,166,174,175,],[-65,-72,-74,-65,-71,-13,-11,105,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,105,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-73,-40,105,-3,-34,-10,105,-6,-4,-2,-1,-62,-63,-64,-38,-41,-42,-76,-77,-66,-75,-12,]),'OPERATOR':([18,28,30,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,96,113,115,116,120,139,142,143,144,145,146,147,148,149,150,151,152,163,164,166,174,175,],[-65,-72,-74,-65,-71,-13,101,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,101,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-73,-40,101,-3,-34,-10,-8,-6,-4,-2,-1,-62,-63,-64,-38,-41,-42,-76,-77,-66,-75,-12,]),'ARROW':([18,21,28,30,32,34,38,42,43,44,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,90,96,113,115,116,120,128,129,135,139,142,143,144,145,146,147,148,149,150,151,152,156,159,160,163,164,166,168,169,170,173,174,175,],[-65,-65,-72,-74,-67,-69,-88,89,-82,-83,-65,-71,-13,102,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,102,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-65,-84,-73,-40,102,-3,-34,154,-68,-65,-10,-8,-6,-4,-2,-1,-62,-63,-64,-38,-41,-42,89,-86,-87,-76,-77,-66,-65,-89,-90,-85,-75,-12,]),'KEYWORD_WHERE':([18,28,30,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,75,76,77,78,79,80,81,82,83,84,96,113,116,117,119,120,138,139,142,143,144,145,146,147,148,149,150,151,152,163,164,166,174,175,],[-65,-72,-74,-65,98,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-73,-40,-3,98,98,-34,98,-10,-8,-6,-4,-2,-1,-62,-63,-64,-38,-41,-42,-76,-77,98,-75,98,]),'TICK_OPERATOR':([18,28,30,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,96,113,115,116,117,119,120,138,139,142,143,144,145,146,147,148,149,150,151,152,163,164,166,174,175,],[-65,-72,-74,-65,99,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,99,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-73,-40,99,-3,99,99,-34,99,-10,-8,-6,-4,-2,-1,-62,-63,-64,-38,-41,-42,-76,-77,99,-75,99,]),'RPAREN':([18,28,30,38,41,42,43,44,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,90,93,94,96,99,101,102,104,105,107,108,109,110,113,116,119,120,121,122,123,124,125,126,135,136,139,142,143,144,145,146,147,148,149,150,151,152,156,157,159,160,161,163,164,166,168,169,170,173,174,175,],[-65,-72,-74,-88,-78,-79,-82,-83,-65,-71,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,120,-57,-58,-59,-60,-61,-36,-35,-30,-31,-32,-33,-84,-91,-92,-73,-52,-50,-51,-48,-49,-44,-45,-46,-47,-40,-39,150,-34,151,152,-53,-54,-55,-56,-65,-65,-10,-8,-6,-4,-2,-1,-62,-63,-64,-38,-41,-42,-81,-80,-86,-87,169,-76,-77,-66,-65,-89,-90,-85,-75,-12,]),'PIPE':([24,26,36,86,88,93,130,132,133,167,],[-65,-105,-104,-65,-65,-91,-109,155,-92,-65,]),'LBRACKET':([27,45,46,89,91,92,93,94,95,134,158,],[46,-65,-65,-65,46,46,-91,-92,46,46,46,]),'KEYWORD_LET':([31,57,71,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,150,151,152,154,171,],[72,72,72,72,-52,72,-50,-51,72,-48,-49,72,-44,-45,-46,-47,72,72,-43,72,-38,-41,-42,72,72,]),'BACKSLASH':([31,57,71,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,150,151,152,154,171,],[73,73,73,73,-52,73,-50,-51,73,-48,-49,73,-44,-45,-46,-47,73,73,-43,73,-38,-41,-42,73,73,]),'BASE10_INTEGER':([31,57,71,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,150,151,152,154,171,],[74,74,74,74,-52,74,-50,-51,74,-48,-49,74,-44,-45,-46,-47,74,74,-43,74,-38,-41,-42,74,74,]),'BASE16_INTEGER':([31,57,71,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,150,151,152,154,171,],[75,75,75,75,-52,75,-50,-51,75,-48,-49,75,-44,-45,-46,-47,75,75,-43,75,-38,-41,-42,75,75,]),'BASE8_INTEGER':([31,57,71,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,150,151,152,154,171,],[76,76,76,76,-52,76,-50,-51,76,-48,-49,76,-44,-45,-46,-47,76,76,-43,76,-38,-41,-42,76,76,]),'BASE2_INTEGER':([31,57,71,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,150,151,152,154,171,],[77,77,77,77,-52,77,-50,-51,77,-48,-49,77,-44,-45,-46,-47,77,77,-43,77,-38,-41,-42,77,77,]),'FLOAT':([31,57,71,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,150,151,152,154,171,],[78,78,78,78,-52,78,-50,-51,78,-48,-49,78,-44,-45,-46,-47,78,78,-43,78,-38,-41,-42,78,78,]),'STRING':([31,57,71,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,118,150,151,152,154,171,],[79,79,79,79,-52,79,-50,-51,79,-48,-49,79,-44,-45,-46,-47,79,79,-43,79,79,-38,-41,-42,79,79,]),'CHAR':([31,57,71,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,118,150,151,152,154,171,],[80,80,80,80,-52,80,-50,-51,80,-48,-49,80,-44,-45,-46,-47,80,80,-43,80,80,-38,-41,-42,80,80,]),'DATE':([31,57,71,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,150,151,152,154,171,],[81,81,81,81,-52,81,-50,-51,81,-48,-49,81,-44,-45,-46,-47,81,81,-43,81,-38,-41,-42,81,81,]),'DATETIME':([31,57,71,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,150,151,152,154,171,],[82,82,82,82,-52,82,-50,-51,82,-48,-49,82,-44,-45,-46,-47,82,82,-43,82,-38,-41,-42,82,82,]),'DATE_INTERVAL':([31,57,71,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,150,151,152,154,171,],[83,83,83,83,-52,83,-50,-51,83,-48,-49,83,-44,-45,-46,-47,83,83,-43,83,-38,-41,-42,83,83,]),'DATETIME_INTERVAL':([31,57,71,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,150,151,152,154,171,],[84,84,84,84,-52,84,-50,-51,84,-48,-49,84,-44,-45,-46,-47,84,84,-43,84,-38,-41,-42,84,84,]),'RBRACKET':([38,41,42,43,44,90,93,94,135,137,156,157,159,160,162,168,169,170,173,],[-88,-78,-79,-82,-83,-84,-91,-92,-65,-65,-81,-80,-86,-87,170,-65,-89,-90,-85,]),'ANNOTATION':([62,74,75,76,77,78,],[118,-57,-58,-59,-60,-61,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'definitions':([0,],[2,]),'definition':([0,12,],[3,22,]),'function_definition':([0,12,],[4,4,]),'datatype_definition':([0,12,],[5,5,]),'functype_decl':([0,12,],[6,6,]),'funcdef':([0,12,14,],[7,7,23,]),'_definition_set':([3,22,],[11,35,]),'empty':([3,15,18,21,22,24,45,46,47,85,86,88,89,135,136,137,167,168,],[13,26,30,34,13,26,94,94,30,34,26,133,94,160,94,94,133,160,]),'equations':([10,127,140,141,],[17,153,163,164,]),'equation':([10,29,127,140,141,],[18,47,18,18,18,]),'pattern':([10,29,127,140,141,],[19,19,19,19,19,]),'parameters':([10,29,73,127,140,141,],[20,20,128,20,20,20,]),'_cons_args':([15,24,86,],[25,36,130,]),'_equation_set':([18,47,],[28,96,]),'_parameters':([21,85,],[32,129,]),'st_type_expr':([27,],[39,]),'type_expr':([27,92,95,],[40,136,137,]),'type_function_expr':([27,92,95,134,],[41,41,41,157,]),'type_term':([27,92,95,134,],[42,42,42,156,]),'type_app_expression':([27,92,95,134,],[43,43,43,43,]),'type_factor':([27,91,92,95,134,158,],[44,135,44,44,44,168,]),'expr':([31,57,71,97,100,103,106,111,112,115,154,171,],[48,117,119,138,117,117,117,117,117,119,166,175,]),'expr_term0':([31,57,71,97,100,103,106,111,112,115,154,171,],[49,49,49,139,49,49,49,49,49,49,49,49,]),'expr_term2':([31,57,71,97,100,103,106,111,112,115,154,171,],[50,50,50,50,50,50,50,50,50,50,50,50,]),'expr_term6':([31,57,71,97,100,103,106,111,112,115,154,171,],[51,51,51,51,142,51,51,51,51,51,51,51,]),'expr_term7':([31,57,71,97,100,103,106,111,112,115,154,171,],[52,52,52,52,52,143,52,52,52,52,52,52,]),'expr_term9':([31,57,71,97,100,103,106,111,112,115,154,171,],[53,53,53,53,53,53,144,145,53,53,53,53,]),'expr_factor':([31,57,71,97,100,103,106,111,112,115,154,171,],[54,116,54,54,54,54,54,54,146,54,54,54,]),'literal':([31,57,71,97,100,103,106,111,112,115,154,171,],[55,55,55,55,55,55,55,55,55,55,55,55,]),'identifier':([31,57,71,97,100,103,106,111,112,115,118,154,171,],[56,56,56,56,56,56,56,56,56,56,149,56,56,]),'enclosed_expr':([31,54,57,71,97,100,103,106,111,112,115,116,146,154,171,],[57,113,57,57,57,57,57,57,57,57,57,113,113,57,57,]),'unit_value':([31,57,71,97,100,103,106,111,112,115,154,171,],[58,58,58,58,58,58,58,58,58,58,58,58,]),'letexpr':([31,57,71,97,100,103,106,111,112,115,154,171,],[59,59,59,59,59,59,59,59,59,59,59,59,]),'where_expr':([31,57,71,97,100,103,106,111,112,115,154,171,],[60,60,60,60,60,60,60,60,60,60,60,60,]),'lambda_expr':([31,57,71,97,100,103,106,111,112,115,154,171,],[61,61,61,61,61,61,61,61,61,61,61,61,]),'number':([31,57,71,97,100,103,106,111,112,115,154,171,],[62,62,62,62,62,62,62,62,62,62,62,62,]),'concrete_number':([31,57,71,97,100,103,106,111,112,115,154,171,],[63,63,63,63,63,63,63,63,63,63,63,63,]),'string':([31,57,71,97,100,103,106,111,112,115,118,154,171,],[64,64,64,64,64,64,64,64,64,64,147,64,64,]),'char':([31,57,71,97,100,103,106,111,112,115,118,154,171,],[65,65,65,65,65,65,65,65,65,65,148,65,65,]),'date':([31,57,71,97,100,103,106,111,112,115,154,171,],[66,66,66,66,66,66,66,66,66,66,66,66,]),'datetime':([31,57,71,97,100,103,106,111,112,115,154,171,],[67,67,67,67,67,67,67,67,67,67,67,67,]),'date_interval':([31,57,71,97,100,103,106,111,112,115,154,171,],[68,68,68,68,68,68,68,68,68,68,68,68,]),'datetime_interval':([31,57,71,97,100,103,106,111,112,115,154,171,],[69,69,69,69,69,69,69,69,69,69,69,69,]),'_data_body':([37,],[87,]),'data_cons':([37,155,],[88,167,]),'_app_args_non_empty':([44,],[90,]),'_maybe_padding':([45,46,88,89,136,137,167,],[92,95,132,134,161,162,132,]),'infix_operator_0':([48,71,115,117,119,138,166,175,],[97,123,123,97,97,97,97,97,]),'infix_operator_2':([50,71,115,],[100,124,124,]),'infix_operator_6':([51,71,115,142,],[103,125,125,103,]),'infix_operator_7':([52,71,115,143,],[106,126,126,106,]),'infix_operator_9':([54,116,146,],[111,111,111,]),'operator':([71,115,],[122,122,]),'_data_conses':([88,167,],[131,172,]),'_app_args':([135,168,],[159,173,]),'st_expr':([171,],[174,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','parsers.py',410),
  ('expr_term9 -> expr_factor infix_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','parsers.py',417),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','parsers.py',418),
  ('expr_term7 -> expr_term7 infix_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','parsers.py',420),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','parsers.py',421),
  ('expr_term6 -> expr_term6 infix_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','parsers.py',423),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','parsers.py',424),
  ('expr_term2 -> expr_term2 infix_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','parsers.py',426),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','parsers.py',427),
  ('expr_term0 -> expr infix_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','parsers.py',429),
  ('expr_term0 -> expr_term2','expr_term0',1,'p_expressions_precedence_rules','parsers.py',430),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','parsers.py',443),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','parsers.py',445),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','parsers.py',447),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','parsers.py',448),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','parsers.py',449),
  ('expr_factor -> unit_value','expr_factor',1,'p_standalone_definitions','parsers.py',450),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','parsers.py',451),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','parsers.py',452),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','parsers.py',453),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','parsers.py',455),
  ('literal -> number','literal',1,'p_literals','parsers.py',463),
  ('literal -> concrete_number','literal',1,'p_literals','parsers.py',464),
  ('literal -> string','literal',1,'p_literals','parsers.py',465),
  ('literal -> char','literal',1,'p_literals','parsers.py',466),
  ('literal -> date','literal',1,'p_literals','parsers.py',467),
  ('literal -> datetime','literal',1,'p_literals','parsers.py',468),
  ('literal -> date_interval','literal',1,'p_literals','parsers.py',469),
  ('literal -> datetime_interval','literal',1,'p_literals','parsers.py',470),
  ('date -> DATE','date',1,'p_date','parsers.py',476),
  ('datetime -> DATETIME','datetime',1,'p_datetime','parsers.py',482),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','parsers.py',488),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','parsers.py',494),
  ('unit_value -> LPAREN RPAREN','unit_value',2,'p_unit_value','parsers.py',500),
  ('char -> CHAR','char',1,'p_char','parsers.py',506),
  ('string -> STRING','string',1,'p_string','parsers.py',511),
  ('identifier -> IDENTIFIER','identifier',1,'p_variable','parsers.py',516),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','parsers.py',521),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','parsers.py',526),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','parsers.py',527),
  ('enclosed_expr -> LPAREN DOT_OPERATOR RPAREN','enclosed_expr',3,'p_operators_as_expressios','parsers.py',533),
  ('enclosed_expr -> LPAREN operator RPAREN','enclosed_expr',3,'p_operators_as_expressios','parsers.py',534),
  ('infix_operator_9 -> DOT_OPERATOR','infix_operator_9',1,'p_operator','parsers.py',544),
  ('infix_operator_7 -> STAR','infix_operator_7',1,'p_operator','parsers.py',546),
  ('infix_operator_7 -> SLASH','infix_operator_7',1,'p_operator','parsers.py',547),
  ('infix_operator_7 -> DOUBLESLASH','infix_operator_7',1,'p_operator','parsers.py',548),
  ('infix_operator_7 -> PERCENT','infix_operator_7',1,'p_operator','parsers.py',549),
  ('infix_operator_6 -> PLUS','infix_operator_6',1,'p_operator','parsers.py',551),
  ('infix_operator_6 -> MINUS','infix_operator_6',1,'p_operator','parsers.py',552),
  ('infix_operator_2 -> OPERATOR','infix_operator_2',1,'p_operator','parsers.py',554),
  ('infix_operator_2 -> ARROW','infix_operator_2',1,'p_operator','parsers.py',555),
  ('infix_operator_0 -> TICK_OPERATOR','infix_operator_0',1,'p_operator','parsers.py',557),
  ('operator -> infix_operator_0','operator',1,'p_operator','parsers.py',559),
  ('operator -> infix_operator_2','operator',1,'p_operator','parsers.py',560),
  ('operator -> infix_operator_6','operator',1,'p_operator','parsers.py',561),
  ('operator -> infix_operator_7','operator',1,'p_operator','parsers.py',562),
  ('number -> BASE10_INTEGER','number',1,'p_integer','parsers.py',569),
  ('number -> BASE16_INTEGER','number',1,'p_integer','parsers.py',570),
  ('number -> BASE8_INTEGER','number',1,'p_integer','parsers.py',571),
  ('number -> BASE2_INTEGER','number',1,'p_integer','parsers.py',572),
  ('number -> FLOAT','number',1,'p_float','parsers.py',601),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','parsers.py',606),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','parsers.py',607),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','parsers.py',608),
  ('empty -> <empty>','empty',0,'p_empty','parsers.py',617),
  ('lambda_expr -> BACKSLASH parameters ARROW expr','lambda_expr',4,'p_lambda_definition','parsers.py',622),
  ('parameters -> IDENTIFIER _parameters','parameters',2,'p_parameters','parsers.py',630),
  ('_parameters -> SPACE IDENTIFIER _parameters','_parameters',3,'p__params','parsers.py',638),
  ('_parameters -> empty','_parameters',1,'p_empty__parameters','parsers.py',645),
  ('pattern -> parameters','pattern',1,'p_pattern','parsers.py',694),
  ('equation -> pattern EQ expr','equation',3,'p_equation','parsers.py',709),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','parsers.py',719),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','parsers.py',728),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','parsers.py',737),
  ('letexpr -> KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','parsers.py',747),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','parsers.py',755),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','parsers.py',756),
  ('type_expr -> type_function_expr','type_expr',1,'p_type_expr','parsers.py',766),
  ('type_expr -> type_term','type_expr',1,'p_type_expr','parsers.py',767),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','parsers.py',772),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','parsers.py',773),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','parsers.py',783),
  ('type_term -> type_factor','type_term',1,'p_type_term','parsers.py',784),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','parsers.py',789),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','parsers.py',801),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','parsers.py',802),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','parsers.py',810),
  ('type_factor -> IDENTIFIER','type_factor',1,'p_type_identifier','parsers.py',815),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','parsers.py',824),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','parsers.py',829),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','parsers.py',834),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','parsers.py',835),
  ('program -> definitions','program',1,'p_program','parsers.py',841),
  ('definitions -> definition _definition_set','definitions',2,'p_definitions','parsers.py',857),
  ('_definition_set -> PADDING definition _definition_set','_definition_set',3,'p_definition_set','parsers.py',865),
  ('_definition_set -> empty','_definition_set',1,'p_definition_set2','parsers.py',873),
  ('definition -> function_definition','definition',1,'p_definition','parsers.py',879),
  ('definition -> datatype_definition','definition',1,'p_definition','parsers.py',880),
  ('function_definition -> functype_decl PADDING funcdef','function_definition',3,'p_function_definition','parsers.py',886),
  ('function_definition -> funcdef','function_definition',1,'p_function_definition','parsers.py',887),
  ('funcdef -> KEYWORD_DEF equations','funcdef',2,'p_funcdef','parsers.py',898),
  ('functype_decl -> IDENTIFIER COLON COLON st_type_expr','functype_decl',4,'p_functype_decl','parsers.py',914),
  ('datatype_definition -> KEYWORD_DATA IDENTIFIER _cons_args EQ _data_body','datatype_definition',5,'p_datatype_definition','parsers.py',920),
  ('_cons_args -> IDENTIFIER _cons_args','_cons_args',2,'p_datatype_cons_args','parsers.py',930),
  ('_cons_args -> empty','_cons_args',1,'p_datatype_cons_args2','parsers.py',941),
  ('_data_body -> data_cons _data_conses','_data_body',2,'p_datatype_body','parsers.py',947),
  ('_data_conses -> _maybe_padding PIPE data_cons _data_conses','_data_conses',4,'p_datatype_body','parsers.py',948),
  ('_data_conses -> empty','_data_conses',1,'p_datatype_conses_empty','parsers.py',957),
  ('data_cons -> IDENTIFIER _cons_args','data_cons',2,'p_data_cons','parsers.py',968),
]
