
# program_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FLOAT KEYWORD_CLASS KEYWORD_DATA KEYWORD_DEF KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LOWER_IDENTIFIER LPAREN MINUS OPERATOR PADDING PERCENT PIPE PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATOR UNDER_IDENTIFIER UPPER_IDENTIFIERexpr_factor : expr_factor SPACE expr_factor\n    expr_term9 : expr_factor infix_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infix_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infix_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infix_operator_2 expr_term6\n               | expr_term6\n\n    expr_term0 : expr infix_operator_0 expr_term0\n               | expr_term2\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | unit_value\n                | letexpr\n                | where_expr\n                | lambda_expr\n\n    st_type_expr : type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    unit_value : LPAREN RPAREN\n    char : CHARstring : STRINGidentifier : _identifier\n\n    _identifier : UNDER_IDENTIFIER\n                   | UPPER_IDENTIFIER\n                   | LOWER_IDENTIFIER\n\n    enclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : LPAREN DOT_OPERATOR RPAREN\n                     | LPAREN operator RPAREN\n    \n    infix_operator_9 : DOT_OPERATOR\n\n    infix_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infix_operator_6 : PLUS\n                     | MINUS\n\n    infix_operator_2 : OPERATOR\n                     | ARROW\n\n    infix_operator_0 : TICK_OPERATOR\n\n    operator : infix_operator_0\n             | infix_operator_2\n             | infix_operator_6\n             | infix_operator_7\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH parameters ARROW expr\n    parameters : _identifier _parameters\n       _parameters : SPACE _identifier _parameters\n    _parameters : empty\n    pattern : parametersequation : pattern EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    type_expr : type_function_expr\n                 | type_termtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_variable : LOWER_IDENTIFIERtype_cons : UPPER_IDENTIFIERtype_factor : type_variable\n                   | type_cons\n\n    type_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET_maybe_padding : PADDING\n                      | empty\n    program : definitions\n    definitions : definition _definition_set\n    _definition_set : PADDING definition _definition_set\n    _definition_set : empty\n    definition : nametype_decl\n                  | valuedef\n                  | datatype_definition\n    valuedef : KEYWORD_DEF equations\n    nametype_decl : _identifier COLON COLON st_type_expr\n    datatype_definition : _datatype_lhs EQ _data_rhs\n    _datatype_lhs : KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params\n    _cons_params : SPACE LOWER_IDENTIFIER _cons_params\n    _cons_params : empty\n    _data_rhs : data_cons _data_conses\n       _data_conses : _maybe_padding PIPE data_cons _data_conses\n    _data_conses : emptydata_cons : _data_cons_data_cons : UPPER_IDENTIFIER _cons_args_cons_args : SPACE cons_arg _cons_args\n    _cons_args : empty\n    cons_arg : type_variable\n       cons_arg : type_cons\n       cons_arg : _cons_arg_factor\n    _cons_arg_factor : LPAREN type_expr RPAREN\n    _cons_arg_factor : LBRACKET type_expr RBRACKET\n    '
    
_lr_action_items = {'KEYWORD_DEF':([0,15,],[8,8,]),'UNDER_IDENTIFIER':([0,8,15,28,30,32,62,76,78,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,129,138,155,156,165,166,167,169,192,],[10,10,10,10,10,10,10,10,10,10,-55,10,-53,-54,10,-51,-52,10,-47,-48,-49,-50,10,10,-46,10,10,10,10,10,-41,-44,-45,10,10,]),'UPPER_IDENTIFIER':([0,8,15,23,24,26,28,30,32,48,49,62,76,78,94,96,101,103,104,105,106,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,129,138,141,146,147,149,155,156,165,166,167,169,177,192,],[11,11,11,37,38,51,11,11,11,-68,-68,11,11,11,-97,51,-68,51,51,-98,51,11,-55,11,-53,-54,11,-51,-52,11,-47,-48,-49,-50,11,11,-46,11,11,11,37,51,51,51,11,11,-41,-44,-45,11,51,11,]),'LOWER_IDENTIFIER':([0,8,15,26,28,30,32,48,49,62,76,78,94,96,98,101,103,104,105,106,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,129,138,146,147,149,155,156,165,166,167,169,177,192,],[12,12,12,50,12,12,12,-68,-68,12,12,12,-97,50,148,-68,50,50,-98,50,12,-55,12,-53,-54,12,-51,-52,12,-47,-48,-49,-50,12,12,-46,12,12,12,50,50,50,12,12,-41,-44,-45,12,50,12,]),'KEYWORD_DATA':([0,15,],[13,13,]),'$end':([1,2,3,4,5,6,10,11,12,14,16,18,19,25,27,29,34,35,36,37,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,80,81,82,83,84,85,86,87,88,89,91,93,95,97,102,107,124,127,131,142,143,144,145,150,154,157,158,159,160,161,162,163,164,165,166,167,170,171,175,176,178,179,182,183,185,186,187,188,189,190,191,193,194,195,],[0,-99,-68,-103,-104,-105,-38,-39,-40,-100,-102,-106,-68,-68,-75,-77,-108,-68,-115,-68,-101,-107,-21,-81,-82,-85,-86,-93,-94,-91,-92,-68,-74,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-112,-114,-116,-118,-87,-76,-43,-42,-34,-68,-119,-120,-121,-68,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,-68,-117,-84,-83,-89,-90,-79,-80,-69,-113,-122,-123,-68,-95,-96,-88,-78,-12,]),'PADDING':([3,4,5,6,10,11,12,18,19,25,27,29,34,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,80,81,82,83,84,85,86,87,88,89,91,93,95,97,101,102,107,109,124,127,131,142,143,144,145,150,151,152,154,157,158,159,160,161,162,163,164,165,166,167,170,171,175,176,178,179,182,183,185,186,187,188,189,190,191,193,194,195,],[15,-103,-104,-105,-38,-39,-40,-106,28,15,-75,-77,-108,94,-115,-68,-107,-21,-81,-82,-85,-86,-93,-94,94,94,-91,-92,28,-74,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-112,-114,-116,-118,94,-87,-76,156,-43,-42,-34,-68,-119,-120,-121,-68,94,94,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,94,-117,-84,-83,-89,-90,-79,-80,-69,-113,-122,-123,-68,-95,-96,-88,-78,-12,]),'COLON':([7,10,11,12,17,],[17,-38,-39,-40,26,]),'EQ':([9,10,11,12,20,21,22,31,33,38,90,99,100,140,148,174,],[23,-38,-39,-40,30,-73,-68,-70,-72,-68,-68,-109,-111,-71,-68,-110,]),'SPACE':([10,11,12,13,19,22,27,29,37,38,45,46,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,85,86,87,88,89,90,107,109,124,127,131,142,143,144,145,148,150,154,157,158,159,160,161,162,163,164,165,166,167,182,183,184,185,187,188,189,190,191,194,195,],[-38,-39,-40,24,-68,32,-75,-77,96,98,103,-93,-94,-91,-92,-68,-74,-13,-11,-9,-7,-5,123,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,138,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,32,-76,155,-43,123,-34,96,-119,-120,-121,98,177,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,-79,-80,192,-69,-122,-123,177,-95,-96,-78,-12,]),'KEYWORD_IN':([10,11,12,19,27,29,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,80,81,82,83,84,85,86,87,88,89,107,124,127,131,154,157,158,159,160,161,162,163,164,165,166,167,168,182,183,185,194,195,],[-38,-39,-40,-68,-75,-77,-68,-74,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-76,-43,-42,-34,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,184,-79,-80,-69,-78,-12,]),'DOT_OPERATOR':([10,11,12,19,27,29,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,107,124,126,127,131,154,157,158,159,160,161,162,163,164,165,166,167,182,183,185,194,195,],[-38,-39,-40,-68,-75,-77,-68,-74,-13,-11,-9,-7,-5,125,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,132,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-76,-43,132,125,-34,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,-79,-80,-69,-78,-12,]),'LPAREN':([10,11,12,19,26,27,29,30,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,94,96,101,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,131,146,147,149,154,157,158,159,160,161,162,163,164,165,166,167,169,177,182,183,185,192,194,195,],[-38,-39,-40,-68,48,-75,-77,76,-68,-68,-68,-74,-13,-11,-9,-7,-5,126,-14,-15,76,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,76,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-97,146,-68,48,48,-98,48,-76,76,-55,76,-53,-54,76,-51,-52,76,-47,-48,-49,-50,76,76,-43,-46,76,126,-34,48,48,48,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,76,48,-79,-80,-69,76,-78,-12,]),'STAR':([10,11,12,19,27,29,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,107,124,126,127,131,154,157,158,159,160,161,162,163,164,165,166,167,182,183,185,194,195,],[-38,-39,-40,-68,-75,-77,-68,-74,-13,-11,-9,118,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,118,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-76,-43,118,-3,-34,-10,-8,118,-4,-2,-1,-65,-66,-67,-41,-44,-45,-79,-80,-69,-78,-12,]),'SLASH':([10,11,12,19,27,29,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,107,124,126,127,131,154,157,158,159,160,161,162,163,164,165,166,167,182,183,185,194,195,],[-38,-39,-40,-68,-75,-77,-68,-74,-13,-11,-9,119,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,119,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-76,-43,119,-3,-34,-10,-8,119,-4,-2,-1,-65,-66,-67,-41,-44,-45,-79,-80,-69,-78,-12,]),'DOUBLESLASH':([10,11,12,19,27,29,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,107,124,126,127,131,154,157,158,159,160,161,162,163,164,165,166,167,182,183,185,194,195,],[-38,-39,-40,-68,-75,-77,-68,-74,-13,-11,-9,120,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,120,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-76,-43,120,-3,-34,-10,-8,120,-4,-2,-1,-65,-66,-67,-41,-44,-45,-79,-80,-69,-78,-12,]),'PERCENT':([10,11,12,19,27,29,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,107,124,126,127,131,154,157,158,159,160,161,162,163,164,165,166,167,182,183,185,194,195,],[-38,-39,-40,-68,-75,-77,-68,-74,-13,-11,-9,121,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,121,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-76,-43,121,-3,-34,-10,-8,121,-4,-2,-1,-65,-66,-67,-41,-44,-45,-79,-80,-69,-78,-12,]),'PLUS':([10,11,12,19,27,29,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,107,124,126,127,131,154,157,158,159,160,161,162,163,164,165,166,167,182,183,185,194,195,],[-38,-39,-40,-68,-75,-77,-68,-74,-13,-11,115,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,115,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-76,-43,115,-3,-34,-10,115,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,-79,-80,-69,-78,-12,]),'MINUS':([10,11,12,19,27,29,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,107,124,126,127,131,154,157,158,159,160,161,162,163,164,165,166,167,182,183,185,194,195,],[-38,-39,-40,-68,-75,-77,-68,-74,-13,-11,116,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,116,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-76,-43,116,-3,-34,-10,116,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,-79,-80,-69,-78,-12,]),'OPERATOR':([10,11,12,19,27,29,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,107,124,126,127,131,154,157,158,159,160,161,162,163,164,165,166,167,182,183,185,194,195,],[-38,-39,-40,-68,-75,-77,-68,-74,-13,112,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,112,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-76,-43,112,-3,-34,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,-79,-80,-69,-78,-12,]),'ARROW':([10,11,12,19,22,27,29,31,33,43,44,45,46,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,102,107,124,126,127,131,139,140,150,154,157,158,159,160,161,162,163,164,165,166,167,175,178,179,182,183,185,189,190,191,193,194,195,],[-38,-39,-40,-68,-68,-75,-77,-70,-72,101,-85,-86,-93,-94,-91,-92,-68,-74,-13,113,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,113,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-68,-87,-76,-43,113,-3,-34,169,-71,-68,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,101,-89,-90,-79,-80,-69,-68,-95,-96,-88,-78,-12,]),'KEYWORD_WHERE':([10,11,12,19,27,29,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,80,81,82,83,84,85,86,87,88,89,107,124,127,128,130,131,153,154,157,158,159,160,161,162,163,164,165,166,167,182,183,185,194,195,],[-38,-39,-40,-68,-75,-77,-68,109,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-76,-43,-3,109,109,-34,109,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,-79,-80,109,-78,109,]),'TICK_OPERATOR':([10,11,12,19,27,29,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,107,124,126,127,128,130,131,153,154,157,158,159,160,161,162,163,164,165,166,167,182,183,185,194,195,],[-38,-39,-40,-68,-75,-77,-68,110,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,110,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-76,-43,110,-3,110,110,-34,110,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,-79,-80,110,-78,110,]),'RPAREN':([10,11,12,19,27,29,42,43,44,45,46,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,94,102,105,107,110,112,113,115,116,118,119,120,121,124,127,130,131,132,133,134,135,136,137,150,151,154,157,158,159,160,161,162,163,164,165,166,167,172,175,176,178,179,180,182,183,185,189,190,191,193,194,195,],[-38,-39,-40,-68,-75,-77,-81,-82,-85,-86,-93,-94,-91,-92,-68,-74,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,131,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-97,-87,-98,-76,-55,-53,-54,-51,-52,-47,-48,-49,-50,-43,-42,165,-34,166,167,-56,-57,-58,-59,-68,-68,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,187,-84,-83,-89,-90,190,-79,-80,-69,-68,-95,-96,-88,-78,-12,]),'LBRACKET':([26,48,49,94,96,101,103,104,105,106,146,147,149,177,],[49,-68,-68,-97,147,-68,49,49,-98,49,49,49,49,49,]),'KEYWORD_LET':([30,62,76,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,165,166,167,169,192,],[77,77,77,77,-55,77,-53,-54,77,-51,-52,77,-47,-48,-49,-50,77,77,-46,77,-41,-44,-45,77,77,]),'BACKSLASH':([30,62,76,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,165,166,167,169,192,],[78,78,78,78,-55,78,-53,-54,78,-51,-52,78,-47,-48,-49,-50,78,78,-46,78,-41,-44,-45,78,78,]),'BASE10_INTEGER':([30,62,76,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,165,166,167,169,192,],[79,79,79,79,-55,79,-53,-54,79,-51,-52,79,-47,-48,-49,-50,79,79,-46,79,-41,-44,-45,79,79,]),'BASE16_INTEGER':([30,62,76,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,165,166,167,169,192,],[80,80,80,80,-55,80,-53,-54,80,-51,-52,80,-47,-48,-49,-50,80,80,-46,80,-41,-44,-45,80,80,]),'BASE8_INTEGER':([30,62,76,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,165,166,167,169,192,],[81,81,81,81,-55,81,-53,-54,81,-51,-52,81,-47,-48,-49,-50,81,81,-46,81,-41,-44,-45,81,81,]),'BASE2_INTEGER':([30,62,76,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,165,166,167,169,192,],[82,82,82,82,-55,82,-53,-54,82,-51,-52,82,-47,-48,-49,-50,82,82,-46,82,-41,-44,-45,82,82,]),'FLOAT':([30,62,76,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,165,166,167,169,192,],[83,83,83,83,-55,83,-53,-54,83,-51,-52,83,-47,-48,-49,-50,83,83,-46,83,-41,-44,-45,83,83,]),'STRING':([30,62,76,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,129,165,166,167,169,192,],[84,84,84,84,-55,84,-53,-54,84,-51,-52,84,-47,-48,-49,-50,84,84,-46,84,84,-41,-44,-45,84,84,]),'CHAR':([30,62,76,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,129,165,166,167,169,192,],[85,85,85,85,-55,85,-53,-54,85,-51,-52,85,-47,-48,-49,-50,85,85,-46,85,85,-41,-44,-45,85,85,]),'DATE':([30,62,76,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,165,166,167,169,192,],[86,86,86,86,-55,86,-53,-54,86,-51,-52,86,-47,-48,-49,-50,86,86,-46,86,-41,-44,-45,86,86,]),'DATETIME':([30,62,76,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,165,166,167,169,192,],[87,87,87,87,-55,87,-53,-54,87,-51,-52,87,-47,-48,-49,-50,87,87,-46,87,-41,-44,-45,87,87,]),'DATE_INTERVAL':([30,62,76,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,165,166,167,169,192,],[88,88,88,88,-55,88,-53,-54,88,-51,-52,88,-47,-48,-49,-50,88,88,-46,88,-41,-44,-45,88,88,]),'DATETIME_INTERVAL':([30,62,76,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,165,166,167,169,192,],[89,89,89,89,-55,89,-53,-54,89,-51,-52,89,-47,-48,-49,-50,89,89,-46,89,-41,-44,-45,89,89,]),'PIPE':([35,36,37,50,51,92,93,94,95,97,142,143,144,145,170,171,187,188,],[-68,-115,-68,-91,-92,141,-98,-97,-116,-118,-68,-119,-120,-121,-68,-117,-122,-123,]),'RBRACKET':([42,43,44,45,46,47,50,51,94,102,105,150,152,173,175,176,178,179,181,189,190,191,193,],[-81,-82,-85,-86,-93,-94,-91,-92,-97,-87,-98,-68,-68,188,-84,-83,-89,-90,191,-68,-95,-96,-88,]),'ANNOTATION':([67,79,80,81,82,83,],[129,-60,-61,-62,-63,-64,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'definitions':([0,],[2,]),'definition':([0,15,],[3,25,]),'nametype_decl':([0,15,],[4,4,]),'valuedef':([0,15,],[5,5,]),'datatype_definition':([0,15,],[6,6,]),'_identifier':([0,8,15,28,30,32,62,76,78,108,111,114,117,122,123,126,129,138,155,156,169,192,],[7,22,7,22,75,90,75,75,22,75,75,75,75,75,75,75,75,22,22,22,75,75,]),'_datatype_lhs':([0,15,],[9,9,]),'_definition_set':([3,25,],[14,39,]),'empty':([3,19,22,25,35,37,38,48,49,52,90,101,142,148,150,151,152,170,189,],[16,29,33,16,93,97,100,105,105,29,33,105,97,100,179,105,105,93,179,]),'equations':([8,138,155,156,],[18,168,182,183,]),'equation':([8,28,138,155,156,],[19,52,19,19,19,]),'pattern':([8,28,138,155,156,],[20,20,20,20,20,]),'parameters':([8,28,78,138,155,156,],[21,21,139,21,21,21,]),'_equation_set':([19,52,],[27,107,]),'_parameters':([22,90,],[31,140,]),'_data_rhs':([23,],[34,]),'data_cons':([23,141,],[35,170,]),'_data_cons':([23,141,],[36,36,]),'st_type_expr':([26,],[40,]),'type_expr':([26,104,106,146,147,],[41,151,152,172,173,]),'type_function_expr':([26,104,106,146,147,149,],[42,42,42,42,42,176,]),'type_term':([26,104,106,146,147,149,],[43,43,43,43,43,175,]),'type_app_expression':([26,104,106,146,147,149,],[44,44,44,44,44,44,]),'type_factor':([26,103,104,106,146,147,149,177,],[45,150,45,45,45,45,45,189,]),'type_variable':([26,96,103,104,106,146,147,149,177,],[46,143,46,46,46,46,46,46,46,]),'type_cons':([26,96,103,104,106,146,147,149,177,],[47,144,47,47,47,47,47,47,47,]),'expr':([30,62,76,108,111,114,117,122,123,126,169,192,],[53,128,130,153,128,128,128,128,128,130,185,195,]),'expr_term0':([30,62,76,108,111,114,117,122,123,126,169,192,],[54,54,54,154,54,54,54,54,54,54,54,54,]),'expr_term2':([30,62,76,108,111,114,117,122,123,126,169,192,],[55,55,55,55,55,55,55,55,55,55,55,55,]),'expr_term6':([30,62,76,108,111,114,117,122,123,126,169,192,],[56,56,56,56,157,56,56,56,56,56,56,56,]),'expr_term7':([30,62,76,108,111,114,117,122,123,126,169,192,],[57,57,57,57,57,158,57,57,57,57,57,57,]),'expr_term9':([30,62,76,108,111,114,117,122,123,126,169,192,],[58,58,58,58,58,58,159,160,58,58,58,58,]),'expr_factor':([30,62,76,108,111,114,117,122,123,126,169,192,],[59,127,59,59,59,59,59,59,161,59,59,59,]),'literal':([30,62,76,108,111,114,117,122,123,126,169,192,],[60,60,60,60,60,60,60,60,60,60,60,60,]),'identifier':([30,62,76,108,111,114,117,122,123,126,129,169,192,],[61,61,61,61,61,61,61,61,61,61,164,61,61,]),'enclosed_expr':([30,59,62,76,108,111,114,117,122,123,126,127,161,169,192,],[62,124,62,62,62,62,62,62,62,62,62,124,124,62,62,]),'unit_value':([30,62,76,108,111,114,117,122,123,126,169,192,],[63,63,63,63,63,63,63,63,63,63,63,63,]),'letexpr':([30,62,76,108,111,114,117,122,123,126,169,192,],[64,64,64,64,64,64,64,64,64,64,64,64,]),'where_expr':([30,62,76,108,111,114,117,122,123,126,169,192,],[65,65,65,65,65,65,65,65,65,65,65,65,]),'lambda_expr':([30,62,76,108,111,114,117,122,123,126,169,192,],[66,66,66,66,66,66,66,66,66,66,66,66,]),'number':([30,62,76,108,111,114,117,122,123,126,169,192,],[67,67,67,67,67,67,67,67,67,67,67,67,]),'concrete_number':([30,62,76,108,111,114,117,122,123,126,169,192,],[68,68,68,68,68,68,68,68,68,68,68,68,]),'string':([30,62,76,108,111,114,117,122,123,126,129,169,192,],[69,69,69,69,69,69,69,69,69,69,162,69,69,]),'char':([30,62,76,108,111,114,117,122,123,126,129,169,192,],[70,70,70,70,70,70,70,70,70,70,163,70,70,]),'date':([30,62,76,108,111,114,117,122,123,126,169,192,],[71,71,71,71,71,71,71,71,71,71,71,71,]),'datetime':([30,62,76,108,111,114,117,122,123,126,169,192,],[72,72,72,72,72,72,72,72,72,72,72,72,]),'date_interval':([30,62,76,108,111,114,117,122,123,126,169,192,],[73,73,73,73,73,73,73,73,73,73,73,73,]),'datetime_interval':([30,62,76,108,111,114,117,122,123,126,169,192,],[74,74,74,74,74,74,74,74,74,74,74,74,]),'_data_conses':([35,170,],[91,186,]),'_maybe_padding':([35,48,49,101,151,152,170,],[92,104,106,149,180,181,92,]),'_cons_args':([37,142,],[95,171,]),'_cons_params':([38,148,],[99,174,]),'_app_args_non_empty':([45,],[102,]),'infix_operator_0':([53,76,126,128,130,153,185,195,],[108,134,134,108,108,108,108,108,]),'infix_operator_2':([55,76,126,],[111,135,135,]),'infix_operator_6':([56,76,126,157,],[114,136,136,114,]),'infix_operator_7':([57,76,126,158,],[117,137,137,117,]),'infix_operator_9':([59,127,161,],[122,122,122,]),'operator':([76,126,],[133,133,]),'cons_arg':([96,],[142,]),'_cons_arg_factor':([96,],[145,]),'_app_args':([150,189,],[178,193,]),'st_expr':([192,],[194,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','parsers.py',431),
  ('expr_term9 -> expr_factor infix_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','parsers.py',438),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','parsers.py',439),
  ('expr_term7 -> expr_term7 infix_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','parsers.py',441),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','parsers.py',442),
  ('expr_term6 -> expr_term6 infix_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','parsers.py',444),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','parsers.py',445),
  ('expr_term2 -> expr_term2 infix_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','parsers.py',447),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','parsers.py',448),
  ('expr_term0 -> expr infix_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','parsers.py',450),
  ('expr_term0 -> expr_term2','expr_term0',1,'p_expressions_precedence_rules','parsers.py',451),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','parsers.py',464),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','parsers.py',466),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','parsers.py',468),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','parsers.py',469),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','parsers.py',470),
  ('expr_factor -> unit_value','expr_factor',1,'p_standalone_definitions','parsers.py',471),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','parsers.py',472),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','parsers.py',473),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','parsers.py',474),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','parsers.py',476),
  ('literal -> number','literal',1,'p_literals','parsers.py',484),
  ('literal -> concrete_number','literal',1,'p_literals','parsers.py',485),
  ('literal -> string','literal',1,'p_literals','parsers.py',486),
  ('literal -> char','literal',1,'p_literals','parsers.py',487),
  ('literal -> date','literal',1,'p_literals','parsers.py',488),
  ('literal -> datetime','literal',1,'p_literals','parsers.py',489),
  ('literal -> date_interval','literal',1,'p_literals','parsers.py',490),
  ('literal -> datetime_interval','literal',1,'p_literals','parsers.py',491),
  ('date -> DATE','date',1,'p_date','parsers.py',497),
  ('datetime -> DATETIME','datetime',1,'p_datetime','parsers.py',503),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','parsers.py',509),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','parsers.py',515),
  ('unit_value -> LPAREN RPAREN','unit_value',2,'p_unit_value','parsers.py',521),
  ('char -> CHAR','char',1,'p_char','parsers.py',527),
  ('string -> STRING','string',1,'p_string','parsers.py',532),
  ('identifier -> _identifier','identifier',1,'p_variable','parsers.py',537),
  ('_identifier -> UNDER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',544),
  ('_identifier -> UPPER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',545),
  ('_identifier -> LOWER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',546),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','parsers.py',553),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','parsers.py',558),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','parsers.py',559),
  ('enclosed_expr -> LPAREN DOT_OPERATOR RPAREN','enclosed_expr',3,'p_operators_as_expressios','parsers.py',565),
  ('enclosed_expr -> LPAREN operator RPAREN','enclosed_expr',3,'p_operators_as_expressios','parsers.py',566),
  ('infix_operator_9 -> DOT_OPERATOR','infix_operator_9',1,'p_operator','parsers.py',576),
  ('infix_operator_7 -> STAR','infix_operator_7',1,'p_operator','parsers.py',578),
  ('infix_operator_7 -> SLASH','infix_operator_7',1,'p_operator','parsers.py',579),
  ('infix_operator_7 -> DOUBLESLASH','infix_operator_7',1,'p_operator','parsers.py',580),
  ('infix_operator_7 -> PERCENT','infix_operator_7',1,'p_operator','parsers.py',581),
  ('infix_operator_6 -> PLUS','infix_operator_6',1,'p_operator','parsers.py',583),
  ('infix_operator_6 -> MINUS','infix_operator_6',1,'p_operator','parsers.py',584),
  ('infix_operator_2 -> OPERATOR','infix_operator_2',1,'p_operator','parsers.py',586),
  ('infix_operator_2 -> ARROW','infix_operator_2',1,'p_operator','parsers.py',587),
  ('infix_operator_0 -> TICK_OPERATOR','infix_operator_0',1,'p_operator','parsers.py',589),
  ('operator -> infix_operator_0','operator',1,'p_operator','parsers.py',591),
  ('operator -> infix_operator_2','operator',1,'p_operator','parsers.py',592),
  ('operator -> infix_operator_6','operator',1,'p_operator','parsers.py',593),
  ('operator -> infix_operator_7','operator',1,'p_operator','parsers.py',594),
  ('number -> BASE10_INTEGER','number',1,'p_integer','parsers.py',601),
  ('number -> BASE16_INTEGER','number',1,'p_integer','parsers.py',602),
  ('number -> BASE8_INTEGER','number',1,'p_integer','parsers.py',603),
  ('number -> BASE2_INTEGER','number',1,'p_integer','parsers.py',604),
  ('number -> FLOAT','number',1,'p_float','parsers.py',633),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','parsers.py',638),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','parsers.py',639),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','parsers.py',640),
  ('empty -> <empty>','empty',0,'p_empty','parsers.py',649),
  ('lambda_expr -> BACKSLASH parameters ARROW expr','lambda_expr',4,'p_lambda_definition','parsers.py',654),
  ('parameters -> _identifier _parameters','parameters',2,'p_parameters','parsers.py',662),
  ('_parameters -> SPACE _identifier _parameters','_parameters',3,'p_parameters','parsers.py',663),
  ('_parameters -> empty','_parameters',1,'p_empty__parameters','parsers.py',672),
  ('pattern -> parameters','pattern',1,'p_pattern','parsers.py',721),
  ('equation -> pattern EQ expr','equation',3,'p_equation','parsers.py',736),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','parsers.py',746),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','parsers.py',755),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','parsers.py',764),
  ('letexpr -> KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','parsers.py',774),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','parsers.py',782),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','parsers.py',783),
  ('type_expr -> type_function_expr','type_expr',1,'p_type_expr','parsers.py',793),
  ('type_expr -> type_term','type_expr',1,'p_type_expr','parsers.py',794),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','parsers.py',799),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','parsers.py',800),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','parsers.py',810),
  ('type_term -> type_factor','type_term',1,'p_type_term','parsers.py',811),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','parsers.py',816),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','parsers.py',828),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','parsers.py',829),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','parsers.py',837),
  ('type_variable -> LOWER_IDENTIFIER','type_variable',1,'p_type_variable','parsers.py',842),
  ('type_cons -> UPPER_IDENTIFIER','type_cons',1,'p_type_cons','parsers.py',847),
  ('type_factor -> type_variable','type_factor',1,'p_type_factor_identifier','parsers.py',852),
  ('type_factor -> type_cons','type_factor',1,'p_type_factor_identifier','parsers.py',853),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','parsers.py',860),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','parsers.py',865),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','parsers.py',870),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','parsers.py',871),
  ('program -> definitions','program',1,'p_program','parsers.py',877),
  ('definitions -> definition _definition_set','definitions',2,'p_definitions','parsers.py',893),
  ('_definition_set -> PADDING definition _definition_set','_definition_set',3,'p_definition_set','parsers.py',901),
  ('_definition_set -> empty','_definition_set',1,'p_definition_set2','parsers.py',909),
  ('definition -> nametype_decl','definition',1,'p_definition','parsers.py',915),
  ('definition -> valuedef','definition',1,'p_definition','parsers.py',916),
  ('definition -> datatype_definition','definition',1,'p_definition','parsers.py',917),
  ('valuedef -> KEYWORD_DEF equations','valuedef',2,'p_valuedef','parsers.py',923),
  ('nametype_decl -> _identifier COLON COLON st_type_expr','nametype_decl',4,'p_nametype_decl','parsers.py',939),
  ('datatype_definition -> _datatype_lhs EQ _data_rhs','datatype_definition',3,'p_datatype_definition','parsers.py',948),
  ('_datatype_lhs -> KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params','_datatype_lhs',4,'p_datatype_lhs','parsers.py',956),
  ('_cons_params -> SPACE LOWER_IDENTIFIER _cons_params','_cons_params',3,'p_datatype_cons_params','parsers.py',965),
  ('_cons_params -> empty','_cons_params',1,'p_datatype_cons_params_empty','parsers.py',974),
  ('_data_rhs -> data_cons _data_conses','_data_rhs',2,'p_datatype_body','parsers.py',980),
  ('_data_conses -> _maybe_padding PIPE data_cons _data_conses','_data_conses',4,'p_datatype_body','parsers.py',981),
  ('_data_conses -> empty','_data_conses',1,'p_datatype_conses_empty','parsers.py',990),
  ('data_cons -> _data_cons','data_cons',1,'p_data_cons','parsers.py',1022),
  ('_data_cons -> UPPER_IDENTIFIER _cons_args','_data_cons',2,'p_bare_data_cons','parsers.py',1028),
  ('_cons_args -> SPACE cons_arg _cons_args','_cons_args',3,'p_data_cons_args','parsers.py',1033),
  ('_cons_args -> empty','_cons_args',1,'p_data_cons_args_empty','parsers.py',1042),
  ('cons_arg -> type_variable','cons_arg',1,'p_cons_arg','parsers.py',1048),
  ('cons_arg -> type_cons','cons_arg',1,'p_cons_arg','parsers.py',1049),
  ('cons_arg -> _cons_arg_factor','cons_arg',1,'p_cons_arg','parsers.py',1050),
  ('_cons_arg_factor -> LPAREN type_expr RPAREN','_cons_arg_factor',3,'p_cons_arg_factor','parsers.py',1056),
  ('_cons_arg_factor -> LBRACKET type_expr RBRACKET','_cons_arg_factor',3,'p_cons_arg_factor_list','parsers.py',1062),
]
