
# program_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FLOAT KEYWORD_CLASS KEYWORD_DATA KEYWORD_DEF KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LOWER_IDENTIFIER LPAREN MINUS OPERATOR PADDING PERCENT PIPE PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATOR UNDER_IDENTIFIER UPPER_IDENTIFIERexpr_factor : expr_factor SPACE expr_factor\n    expr_term9 : expr_factor infix_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infix_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infix_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infix_operator_2 expr_term6\n               | expr_term6\n\n    expr_term0 : expr infix_operator_0 expr_term0\n               | expr_term2\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | unit_value\n                | letexpr\n                | where_expr\n                | lambda_expr\n\n    st_type_expr : type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    unit_value : LPAREN RPAREN\n    char : CHARstring : STRINGidentifier : _identifier\n\n    _identifier : UNDER_IDENTIFIER\n                   | UPPER_IDENTIFIER\n                   | LOWER_IDENTIFIER\n\n    enclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : LPAREN DOT_OPERATOR RPAREN\n                     | LPAREN operator RPAREN\n    \n    infix_operator_9 : DOT_OPERATOR\n\n    infix_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infix_operator_6 : PLUS\n                     | MINUS\n\n    infix_operator_2 : OPERATOR\n                     | ARROW\n\n    infix_operator_0 : TICK_OPERATOR\n\n    operator : infix_operator_0\n             | infix_operator_2\n             | infix_operator_6\n             | infix_operator_7\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH parameters ARROW expr\n    parameters : _identifier _parameters\n       _parameters : SPACE _identifier _parameters\n    _parameters : empty\n    pattern : parametersequation : pattern EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    type_expr : type_function_expr\n                 | type_termtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_variable : LOWER_IDENTIFIERtype_cons : UPPER_IDENTIFIERtype_factor : type_variable\n                   | type_cons\n\n    type_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET_maybe_padding : PADDING\n                      | empty\n    program : definitions\n    definitions : definition _definition_set\n    _definition_set : PADDING definition _definition_set\n    _definition_set : empty\n     definition : function_definition\n                   | datatype_definition\n    function_definition : functype_decl PADDING funcdef\n                           | funcdef\n    funcdef : KEYWORD_DEF equations\n    functype_decl : _identifier COLON COLON st_type_expr\n    datatype_definition : _datatype_lhs EQ _data_rhs\n    _datatype_lhs : KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params\n    _cons_params : SPACE LOWER_IDENTIFIER _cons_params\n    _cons_params : empty\n    _data_rhs : data_cons _data_conses\n       _data_conses : _maybe_padding PIPE data_cons _data_conses\n    _data_conses : emptydata_cons : _data_cons_data_cons : UPPER_IDENTIFIER _cons_args_cons_args : SPACE cons_arg _cons_args\n    _cons_args : empty\n    cons_arg : type_variable\n       cons_arg : type_cons\n       cons_arg : _cons_arg_factor\n    _cons_arg_factor : LPAREN type_expr RPAREN\n    _cons_arg_factor : LBRACKET type_expr RBRACKET\n    '
    
_lr_action_items = {'KEYWORD_DEF':([0,16,18,],[10,10,10,]),'KEYWORD_DATA':([0,16,],[11,11,]),'UNDER_IDENTIFIER':([0,10,16,35,37,39,72,86,88,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,139,148,162,163,172,173,174,176,195,],[13,13,13,13,13,13,13,13,13,13,-55,13,-53,-54,13,-51,-52,13,-47,-48,-49,-50,13,13,-46,13,13,13,13,13,-41,-44,-45,13,13,]),'UPPER_IDENTIFIER':([0,10,16,19,26,33,35,37,39,46,48,58,59,72,86,88,104,109,110,111,113,114,115,116,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,139,148,156,162,163,172,173,174,176,183,195,],[12,12,12,32,41,61,12,12,12,-97,61,-68,-68,12,12,12,32,61,61,-68,61,61,-98,61,12,-55,12,-53,-54,12,-51,-52,12,-47,-48,-49,-50,12,12,-46,12,12,12,61,12,12,-41,-44,-45,12,61,12,]),'LOWER_IDENTIFIER':([0,10,16,33,35,37,39,46,48,58,59,72,86,88,101,109,110,111,113,114,115,116,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,139,148,156,162,163,172,173,174,176,183,195,],[14,14,14,60,14,14,14,-97,60,-68,-68,14,14,14,151,60,60,-68,60,60,-98,60,14,-55,14,-53,-54,14,-51,-52,14,-47,-48,-49,-50,14,14,-46,14,14,14,60,14,14,-41,-44,-45,14,60,14,]),'$end':([1,2,3,4,5,7,12,13,14,15,17,21,22,27,28,29,30,31,32,34,36,42,43,45,47,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,91,92,93,94,95,96,97,98,99,105,106,107,108,117,134,137,141,152,153,161,164,165,166,167,168,169,170,171,172,173,174,178,179,180,188,189,191,197,198,],[0,-99,-68,-103,-104,-106,-39,-38,-40,-100,-102,-107,-68,-68,-105,-109,-68,-116,-68,-75,-77,-101,-113,-115,-117,-119,-91,-92,-68,-74,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-68,-120,-121,-122,-76,-43,-42,-34,-68,-118,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,-114,-123,-124,-79,-80,-69,-78,-12,]),'PADDING':([3,4,5,6,7,12,13,14,21,22,27,28,29,30,31,32,34,36,43,45,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,91,92,93,94,95,96,97,98,99,105,106,107,108,111,112,117,119,134,137,141,152,153,157,158,159,161,164,165,166,167,168,169,170,171,172,173,174,178,179,180,181,182,184,185,188,189,191,192,193,194,196,197,198,],[16,-103,-104,18,-106,-39,-38,-40,-107,35,16,-105,-109,46,-116,-68,-75,-77,-113,-115,-117,-119,-108,-21,-81,-82,-85,-86,-93,-94,46,46,-91,-92,35,-74,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-68,-120,-121,-122,46,-87,-76,163,-43,-42,-34,46,-118,-68,46,46,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,-114,-123,-124,-84,-83,-89,-90,-79,-80,-69,-68,-95,-96,-88,-78,-12,]),'EQ':([8,12,13,14,23,24,25,38,40,41,100,102,103,150,151,177,],[19,-39,-38,-40,37,-73,-68,-70,-72,-68,-68,-110,-112,-71,-68,-111,]),'COLON':([9,12,13,14,20,],[20,-39,-38,-40,33,]),'SPACE':([11,12,13,14,22,25,32,34,36,41,55,56,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,89,90,91,92,93,94,95,96,97,98,99,100,105,106,107,108,117,119,134,137,141,151,157,161,164,165,166,167,168,169,170,171,172,173,174,179,180,188,189,190,191,192,193,194,197,198,],[26,-39,-38,-40,-68,39,48,-75,-77,101,113,-93,-94,-91,-92,-68,-74,-13,-11,-9,-7,-5,133,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,148,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,39,48,-120,-121,-122,-76,162,-43,133,-34,101,183,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,-123,-124,-79,-80,195,-69,183,-95,-96,-78,-12,]),'KEYWORD_IN':([12,13,14,22,34,36,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,91,92,93,94,95,96,97,98,99,117,134,137,141,161,164,165,166,167,168,169,170,171,172,173,174,175,188,189,191,197,198,],[-39,-38,-40,-68,-75,-77,-68,-74,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-76,-43,-42,-34,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,190,-79,-80,-69,-78,-12,]),'DOT_OPERATOR':([12,13,14,22,34,36,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,91,92,93,94,95,96,97,98,99,117,134,136,137,141,161,164,165,166,167,168,169,170,171,172,173,174,188,189,191,197,198,],[-39,-38,-40,-68,-75,-77,-68,-74,-13,-11,-9,-7,-5,135,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,142,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-76,-43,142,135,-34,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,-79,-80,-69,-78,-12,]),'LPAREN':([12,13,14,22,33,34,36,37,46,48,58,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,91,92,93,94,95,96,97,98,99,109,110,111,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,156,161,164,165,166,167,168,169,170,171,172,173,174,176,183,188,189,191,195,197,198,],[-39,-38,-40,-68,58,-75,-77,86,-97,109,-68,-68,-68,-74,-13,-11,-9,-7,-5,136,-14,-15,86,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,86,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,58,58,-68,58,58,-98,58,-76,86,-55,86,-53,-54,86,-51,-52,86,-47,-48,-49,-50,86,86,-43,-46,86,136,-34,58,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,86,58,-79,-80,-69,86,-78,-12,]),'STAR':([12,13,14,22,34,36,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,91,92,93,94,95,96,97,98,99,117,134,136,137,141,161,164,165,166,167,168,169,170,171,172,173,174,188,189,191,197,198,],[-39,-38,-40,-68,-75,-77,-68,-74,-13,-11,-9,128,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,128,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-76,-43,128,-3,-34,-10,-8,128,-4,-2,-1,-65,-66,-67,-41,-44,-45,-79,-80,-69,-78,-12,]),'SLASH':([12,13,14,22,34,36,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,91,92,93,94,95,96,97,98,99,117,134,136,137,141,161,164,165,166,167,168,169,170,171,172,173,174,188,189,191,197,198,],[-39,-38,-40,-68,-75,-77,-68,-74,-13,-11,-9,129,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,129,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-76,-43,129,-3,-34,-10,-8,129,-4,-2,-1,-65,-66,-67,-41,-44,-45,-79,-80,-69,-78,-12,]),'DOUBLESLASH':([12,13,14,22,34,36,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,91,92,93,94,95,96,97,98,99,117,134,136,137,141,161,164,165,166,167,168,169,170,171,172,173,174,188,189,191,197,198,],[-39,-38,-40,-68,-75,-77,-68,-74,-13,-11,-9,130,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,130,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-76,-43,130,-3,-34,-10,-8,130,-4,-2,-1,-65,-66,-67,-41,-44,-45,-79,-80,-69,-78,-12,]),'PERCENT':([12,13,14,22,34,36,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,91,92,93,94,95,96,97,98,99,117,134,136,137,141,161,164,165,166,167,168,169,170,171,172,173,174,188,189,191,197,198,],[-39,-38,-40,-68,-75,-77,-68,-74,-13,-11,-9,131,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,131,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-76,-43,131,-3,-34,-10,-8,131,-4,-2,-1,-65,-66,-67,-41,-44,-45,-79,-80,-69,-78,-12,]),'PLUS':([12,13,14,22,34,36,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,91,92,93,94,95,96,97,98,99,117,134,136,137,141,161,164,165,166,167,168,169,170,171,172,173,174,188,189,191,197,198,],[-39,-38,-40,-68,-75,-77,-68,-74,-13,-11,125,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,125,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-76,-43,125,-3,-34,-10,125,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,-79,-80,-69,-78,-12,]),'MINUS':([12,13,14,22,34,36,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,91,92,93,94,95,96,97,98,99,117,134,136,137,141,161,164,165,166,167,168,169,170,171,172,173,174,188,189,191,197,198,],[-39,-38,-40,-68,-75,-77,-68,-74,-13,-11,126,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,126,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-76,-43,126,-3,-34,-10,126,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,-79,-80,-69,-78,-12,]),'OPERATOR':([12,13,14,22,34,36,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,91,92,93,94,95,96,97,98,99,117,134,136,137,141,161,164,165,166,167,168,169,170,171,172,173,174,188,189,191,197,198,],[-39,-38,-40,-68,-75,-77,-68,-74,-13,122,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,122,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-76,-43,122,-3,-34,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,-79,-80,-69,-78,-12,]),'ARROW':([12,13,14,22,25,34,36,38,40,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,112,117,134,136,137,141,149,150,157,161,164,165,166,167,168,169,170,171,172,173,174,181,184,185,188,189,191,192,193,194,196,197,198,],[-39,-38,-40,-68,-68,-75,-77,-70,-72,111,-85,-86,-93,-94,-91,-92,-68,-74,-13,123,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,123,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-68,-87,-76,-43,123,-3,-34,176,-71,-68,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,111,-89,-90,-79,-80,-69,-68,-95,-96,-88,-78,-12,]),'KEYWORD_WHERE':([12,13,14,22,34,36,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,91,92,93,94,95,96,97,98,99,117,134,137,138,140,141,160,161,164,165,166,167,168,169,170,171,172,173,174,188,189,191,197,198,],[-39,-38,-40,-68,-75,-77,-68,119,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-76,-43,-3,119,119,-34,119,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,-79,-80,119,-78,119,]),'TICK_OPERATOR':([12,13,14,22,34,36,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,91,92,93,94,95,96,97,98,99,117,134,136,137,138,140,141,160,161,164,165,166,167,168,169,170,171,172,173,174,188,189,191,197,198,],[-39,-38,-40,-68,-75,-77,-68,120,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,120,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-76,-43,120,-3,120,120,-34,120,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,-79,-80,120,-78,120,]),'RPAREN':([12,13,14,22,34,36,46,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,91,92,93,94,95,96,97,98,99,112,115,117,120,122,123,125,126,128,129,130,131,134,137,140,141,142,143,144,145,146,147,154,157,158,161,164,165,166,167,168,169,170,171,172,173,174,181,182,184,185,186,188,189,191,192,193,194,196,197,198,],[-39,-38,-40,-68,-75,-77,-97,-81,-82,-85,-86,-93,-94,-91,-92,-68,-74,-13,-11,-9,-7,-5,-3,-14,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-26,-27,-28,-29,-37,141,-60,-61,-62,-63,-64,-36,-35,-30,-31,-32,-33,-87,-98,-76,-55,-53,-54,-51,-52,-47,-48,-49,-50,-43,-42,172,-34,173,174,-56,-57,-58,-59,179,-68,-68,-10,-8,-6,-4,-2,-1,-65,-66,-67,-41,-44,-45,-84,-83,-89,-90,193,-79,-80,-69,-68,-95,-96,-88,-78,-12,]),'PIPE':([30,31,32,44,45,46,47,49,60,61,105,106,107,108,152,153,179,180,],[-68,-116,-68,104,-98,-97,-117,-119,-91,-92,-68,-120,-121,-122,-68,-118,-123,-124,]),'LBRACKET':([33,46,48,58,59,109,110,111,113,114,115,116,156,183,],[59,-97,110,-68,-68,59,59,-68,59,59,-98,59,59,59,]),'KEYWORD_LET':([37,72,86,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,172,173,174,176,195,],[87,87,87,87,-55,87,-53,-54,87,-51,-52,87,-47,-48,-49,-50,87,87,-46,87,-41,-44,-45,87,87,]),'BACKSLASH':([37,72,86,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,172,173,174,176,195,],[88,88,88,88,-55,88,-53,-54,88,-51,-52,88,-47,-48,-49,-50,88,88,-46,88,-41,-44,-45,88,88,]),'BASE10_INTEGER':([37,72,86,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,172,173,174,176,195,],[89,89,89,89,-55,89,-53,-54,89,-51,-52,89,-47,-48,-49,-50,89,89,-46,89,-41,-44,-45,89,89,]),'BASE16_INTEGER':([37,72,86,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,172,173,174,176,195,],[90,90,90,90,-55,90,-53,-54,90,-51,-52,90,-47,-48,-49,-50,90,90,-46,90,-41,-44,-45,90,90,]),'BASE8_INTEGER':([37,72,86,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,172,173,174,176,195,],[91,91,91,91,-55,91,-53,-54,91,-51,-52,91,-47,-48,-49,-50,91,91,-46,91,-41,-44,-45,91,91,]),'BASE2_INTEGER':([37,72,86,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,172,173,174,176,195,],[92,92,92,92,-55,92,-53,-54,92,-51,-52,92,-47,-48,-49,-50,92,92,-46,92,-41,-44,-45,92,92,]),'FLOAT':([37,72,86,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,172,173,174,176,195,],[93,93,93,93,-55,93,-53,-54,93,-51,-52,93,-47,-48,-49,-50,93,93,-46,93,-41,-44,-45,93,93,]),'STRING':([37,72,86,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,139,172,173,174,176,195,],[94,94,94,94,-55,94,-53,-54,94,-51,-52,94,-47,-48,-49,-50,94,94,-46,94,94,-41,-44,-45,94,94,]),'CHAR':([37,72,86,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,139,172,173,174,176,195,],[95,95,95,95,-55,95,-53,-54,95,-51,-52,95,-47,-48,-49,-50,95,95,-46,95,95,-41,-44,-45,95,95,]),'DATE':([37,72,86,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,172,173,174,176,195,],[96,96,96,96,-55,96,-53,-54,96,-51,-52,96,-47,-48,-49,-50,96,96,-46,96,-41,-44,-45,96,96,]),'DATETIME':([37,72,86,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,172,173,174,176,195,],[97,97,97,97,-55,97,-53,-54,97,-51,-52,97,-47,-48,-49,-50,97,97,-46,97,-41,-44,-45,97,97,]),'DATE_INTERVAL':([37,72,86,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,172,173,174,176,195,],[98,98,98,98,-55,98,-53,-54,98,-51,-52,98,-47,-48,-49,-50,98,98,-46,98,-41,-44,-45,98,98,]),'DATETIME_INTERVAL':([37,72,86,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,172,173,174,176,195,],[99,99,99,99,-55,99,-53,-54,99,-51,-52,99,-47,-48,-49,-50,99,99,-46,99,-41,-44,-45,99,99,]),'RBRACKET':([46,52,53,54,55,56,57,60,61,112,115,155,157,159,181,182,184,185,187,192,193,194,196,],[-97,-81,-82,-85,-86,-93,-94,-91,-92,-87,-98,180,-68,-68,-84,-83,-89,-90,194,-68,-95,-96,-88,]),'ANNOTATION':([77,89,90,91,92,93,],[139,-60,-61,-62,-63,-64,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'definitions':([0,],[2,]),'definition':([0,16,],[3,27,]),'function_definition':([0,16,],[4,4,]),'datatype_definition':([0,16,],[5,5,]),'functype_decl':([0,16,],[6,6,]),'funcdef':([0,16,18,],[7,7,28,]),'_datatype_lhs':([0,16,],[8,8,]),'_identifier':([0,10,16,35,37,39,72,86,88,118,121,124,127,132,133,136,139,148,162,163,176,195,],[9,25,9,25,85,100,85,85,25,85,85,85,85,85,85,85,85,25,25,25,85,85,]),'_definition_set':([3,27,],[15,42,]),'empty':([3,22,25,27,30,32,41,58,59,62,100,105,111,151,152,157,158,159,192,],[17,36,40,17,45,49,103,115,115,36,40,49,115,103,45,185,115,115,185,]),'equations':([10,148,162,163,],[21,175,188,189,]),'equation':([10,35,148,162,163,],[22,62,22,22,22,]),'pattern':([10,35,148,162,163,],[23,23,23,23,23,]),'parameters':([10,35,88,148,162,163,],[24,24,149,24,24,24,]),'_data_rhs':([19,],[29,]),'data_cons':([19,104,],[30,152,]),'_data_cons':([19,104,],[31,31,]),'_equation_set':([22,62,],[34,117,]),'_parameters':([25,100,],[38,150,]),'_data_conses':([30,152,],[43,178,]),'_maybe_padding':([30,58,59,111,152,158,159,],[44,114,116,156,44,186,187,]),'_cons_args':([32,105,],[47,153,]),'st_type_expr':([33,],[50,]),'type_expr':([33,109,110,114,116,],[51,154,155,158,159,]),'type_function_expr':([33,109,110,114,116,156,],[52,52,52,52,52,182,]),'type_term':([33,109,110,114,116,156,],[53,53,53,53,53,181,]),'type_app_expression':([33,109,110,114,116,156,],[54,54,54,54,54,54,]),'type_factor':([33,109,110,113,114,116,156,183,],[55,55,55,157,55,55,55,192,]),'type_variable':([33,48,109,110,113,114,116,156,183,],[56,106,56,56,56,56,56,56,56,]),'type_cons':([33,48,109,110,113,114,116,156,183,],[57,107,57,57,57,57,57,57,57,]),'expr':([37,72,86,118,121,124,127,132,133,136,176,195,],[63,138,140,160,138,138,138,138,138,140,191,198,]),'expr_term0':([37,72,86,118,121,124,127,132,133,136,176,195,],[64,64,64,161,64,64,64,64,64,64,64,64,]),'expr_term2':([37,72,86,118,121,124,127,132,133,136,176,195,],[65,65,65,65,65,65,65,65,65,65,65,65,]),'expr_term6':([37,72,86,118,121,124,127,132,133,136,176,195,],[66,66,66,66,164,66,66,66,66,66,66,66,]),'expr_term7':([37,72,86,118,121,124,127,132,133,136,176,195,],[67,67,67,67,67,165,67,67,67,67,67,67,]),'expr_term9':([37,72,86,118,121,124,127,132,133,136,176,195,],[68,68,68,68,68,68,166,167,68,68,68,68,]),'expr_factor':([37,72,86,118,121,124,127,132,133,136,176,195,],[69,137,69,69,69,69,69,69,168,69,69,69,]),'literal':([37,72,86,118,121,124,127,132,133,136,176,195,],[70,70,70,70,70,70,70,70,70,70,70,70,]),'identifier':([37,72,86,118,121,124,127,132,133,136,139,176,195,],[71,71,71,71,71,71,71,71,71,71,171,71,71,]),'enclosed_expr':([37,69,72,86,118,121,124,127,132,133,136,137,168,176,195,],[72,134,72,72,72,72,72,72,72,72,72,134,134,72,72,]),'unit_value':([37,72,86,118,121,124,127,132,133,136,176,195,],[73,73,73,73,73,73,73,73,73,73,73,73,]),'letexpr':([37,72,86,118,121,124,127,132,133,136,176,195,],[74,74,74,74,74,74,74,74,74,74,74,74,]),'where_expr':([37,72,86,118,121,124,127,132,133,136,176,195,],[75,75,75,75,75,75,75,75,75,75,75,75,]),'lambda_expr':([37,72,86,118,121,124,127,132,133,136,176,195,],[76,76,76,76,76,76,76,76,76,76,76,76,]),'number':([37,72,86,118,121,124,127,132,133,136,176,195,],[77,77,77,77,77,77,77,77,77,77,77,77,]),'concrete_number':([37,72,86,118,121,124,127,132,133,136,176,195,],[78,78,78,78,78,78,78,78,78,78,78,78,]),'string':([37,72,86,118,121,124,127,132,133,136,139,176,195,],[79,79,79,79,79,79,79,79,79,79,169,79,79,]),'char':([37,72,86,118,121,124,127,132,133,136,139,176,195,],[80,80,80,80,80,80,80,80,80,80,170,80,80,]),'date':([37,72,86,118,121,124,127,132,133,136,176,195,],[81,81,81,81,81,81,81,81,81,81,81,81,]),'datetime':([37,72,86,118,121,124,127,132,133,136,176,195,],[82,82,82,82,82,82,82,82,82,82,82,82,]),'date_interval':([37,72,86,118,121,124,127,132,133,136,176,195,],[83,83,83,83,83,83,83,83,83,83,83,83,]),'datetime_interval':([37,72,86,118,121,124,127,132,133,136,176,195,],[84,84,84,84,84,84,84,84,84,84,84,84,]),'_cons_params':([41,151,],[102,177,]),'cons_arg':([48,],[105,]),'_cons_arg_factor':([48,],[108,]),'_app_args_non_empty':([55,],[112,]),'infix_operator_0':([63,86,136,138,140,160,191,198,],[118,144,144,118,118,118,118,118,]),'infix_operator_2':([65,86,136,],[121,145,145,]),'infix_operator_6':([66,86,136,164,],[124,146,146,124,]),'infix_operator_7':([67,86,136,165,],[127,147,147,127,]),'infix_operator_9':([69,137,168,],[132,132,132,]),'operator':([86,136,],[143,143,]),'_app_args':([157,192,],[184,196,]),'st_expr':([195,],[197,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','parsers.py',424),
  ('expr_term9 -> expr_factor infix_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','parsers.py',431),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','parsers.py',432),
  ('expr_term7 -> expr_term7 infix_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','parsers.py',434),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','parsers.py',435),
  ('expr_term6 -> expr_term6 infix_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','parsers.py',437),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','parsers.py',438),
  ('expr_term2 -> expr_term2 infix_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','parsers.py',440),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','parsers.py',441),
  ('expr_term0 -> expr infix_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','parsers.py',443),
  ('expr_term0 -> expr_term2','expr_term0',1,'p_expressions_precedence_rules','parsers.py',444),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','parsers.py',457),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','parsers.py',459),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','parsers.py',461),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','parsers.py',462),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','parsers.py',463),
  ('expr_factor -> unit_value','expr_factor',1,'p_standalone_definitions','parsers.py',464),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','parsers.py',465),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','parsers.py',466),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','parsers.py',467),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','parsers.py',469),
  ('literal -> number','literal',1,'p_literals','parsers.py',477),
  ('literal -> concrete_number','literal',1,'p_literals','parsers.py',478),
  ('literal -> string','literal',1,'p_literals','parsers.py',479),
  ('literal -> char','literal',1,'p_literals','parsers.py',480),
  ('literal -> date','literal',1,'p_literals','parsers.py',481),
  ('literal -> datetime','literal',1,'p_literals','parsers.py',482),
  ('literal -> date_interval','literal',1,'p_literals','parsers.py',483),
  ('literal -> datetime_interval','literal',1,'p_literals','parsers.py',484),
  ('date -> DATE','date',1,'p_date','parsers.py',490),
  ('datetime -> DATETIME','datetime',1,'p_datetime','parsers.py',496),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','parsers.py',502),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','parsers.py',508),
  ('unit_value -> LPAREN RPAREN','unit_value',2,'p_unit_value','parsers.py',514),
  ('char -> CHAR','char',1,'p_char','parsers.py',520),
  ('string -> STRING','string',1,'p_string','parsers.py',525),
  ('identifier -> _identifier','identifier',1,'p_variable','parsers.py',530),
  ('_identifier -> UNDER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',537),
  ('_identifier -> UPPER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',538),
  ('_identifier -> LOWER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',539),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','parsers.py',546),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','parsers.py',551),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','parsers.py',552),
  ('enclosed_expr -> LPAREN DOT_OPERATOR RPAREN','enclosed_expr',3,'p_operators_as_expressios','parsers.py',558),
  ('enclosed_expr -> LPAREN operator RPAREN','enclosed_expr',3,'p_operators_as_expressios','parsers.py',559),
  ('infix_operator_9 -> DOT_OPERATOR','infix_operator_9',1,'p_operator','parsers.py',569),
  ('infix_operator_7 -> STAR','infix_operator_7',1,'p_operator','parsers.py',571),
  ('infix_operator_7 -> SLASH','infix_operator_7',1,'p_operator','parsers.py',572),
  ('infix_operator_7 -> DOUBLESLASH','infix_operator_7',1,'p_operator','parsers.py',573),
  ('infix_operator_7 -> PERCENT','infix_operator_7',1,'p_operator','parsers.py',574),
  ('infix_operator_6 -> PLUS','infix_operator_6',1,'p_operator','parsers.py',576),
  ('infix_operator_6 -> MINUS','infix_operator_6',1,'p_operator','parsers.py',577),
  ('infix_operator_2 -> OPERATOR','infix_operator_2',1,'p_operator','parsers.py',579),
  ('infix_operator_2 -> ARROW','infix_operator_2',1,'p_operator','parsers.py',580),
  ('infix_operator_0 -> TICK_OPERATOR','infix_operator_0',1,'p_operator','parsers.py',582),
  ('operator -> infix_operator_0','operator',1,'p_operator','parsers.py',584),
  ('operator -> infix_operator_2','operator',1,'p_operator','parsers.py',585),
  ('operator -> infix_operator_6','operator',1,'p_operator','parsers.py',586),
  ('operator -> infix_operator_7','operator',1,'p_operator','parsers.py',587),
  ('number -> BASE10_INTEGER','number',1,'p_integer','parsers.py',594),
  ('number -> BASE16_INTEGER','number',1,'p_integer','parsers.py',595),
  ('number -> BASE8_INTEGER','number',1,'p_integer','parsers.py',596),
  ('number -> BASE2_INTEGER','number',1,'p_integer','parsers.py',597),
  ('number -> FLOAT','number',1,'p_float','parsers.py',626),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','parsers.py',631),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','parsers.py',632),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','parsers.py',633),
  ('empty -> <empty>','empty',0,'p_empty','parsers.py',642),
  ('lambda_expr -> BACKSLASH parameters ARROW expr','lambda_expr',4,'p_lambda_definition','parsers.py',647),
  ('parameters -> _identifier _parameters','parameters',2,'p_parameters','parsers.py',655),
  ('_parameters -> SPACE _identifier _parameters','_parameters',3,'p_parameters','parsers.py',656),
  ('_parameters -> empty','_parameters',1,'p_empty__parameters','parsers.py',665),
  ('pattern -> parameters','pattern',1,'p_pattern','parsers.py',714),
  ('equation -> pattern EQ expr','equation',3,'p_equation','parsers.py',729),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','parsers.py',739),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','parsers.py',748),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','parsers.py',757),
  ('letexpr -> KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','parsers.py',767),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','parsers.py',775),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','parsers.py',776),
  ('type_expr -> type_function_expr','type_expr',1,'p_type_expr','parsers.py',786),
  ('type_expr -> type_term','type_expr',1,'p_type_expr','parsers.py',787),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','parsers.py',792),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','parsers.py',793),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','parsers.py',803),
  ('type_term -> type_factor','type_term',1,'p_type_term','parsers.py',804),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','parsers.py',809),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','parsers.py',821),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','parsers.py',822),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','parsers.py',830),
  ('type_variable -> LOWER_IDENTIFIER','type_variable',1,'p_type_variable','parsers.py',835),
  ('type_cons -> UPPER_IDENTIFIER','type_cons',1,'p_type_cons','parsers.py',840),
  ('type_factor -> type_variable','type_factor',1,'p_type_factor_identifier','parsers.py',845),
  ('type_factor -> type_cons','type_factor',1,'p_type_factor_identifier','parsers.py',846),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','parsers.py',853),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','parsers.py',858),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','parsers.py',863),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','parsers.py',864),
  ('program -> definitions','program',1,'p_program','parsers.py',870),
  ('definitions -> definition _definition_set','definitions',2,'p_definitions','parsers.py',886),
  ('_definition_set -> PADDING definition _definition_set','_definition_set',3,'p_definition_set','parsers.py',894),
  ('_definition_set -> empty','_definition_set',1,'p_definition_set2','parsers.py',902),
  ('definition -> function_definition','definition',1,'p_definition','parsers.py',908),
  ('definition -> datatype_definition','definition',1,'p_definition','parsers.py',909),
  ('function_definition -> functype_decl PADDING funcdef','function_definition',3,'p_function_definition','parsers.py',915),
  ('function_definition -> funcdef','function_definition',1,'p_function_definition','parsers.py',916),
  ('funcdef -> KEYWORD_DEF equations','funcdef',2,'p_funcdef','parsers.py',927),
  ('functype_decl -> _identifier COLON COLON st_type_expr','functype_decl',4,'p_functype_decl','parsers.py',943),
  ('datatype_definition -> _datatype_lhs EQ _data_rhs','datatype_definition',3,'p_datatype_definition','parsers.py',949),
  ('_datatype_lhs -> KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params','_datatype_lhs',4,'p_datatype_lhs','parsers.py',957),
  ('_cons_params -> SPACE LOWER_IDENTIFIER _cons_params','_cons_params',3,'p_datatype_cons_params','parsers.py',966),
  ('_cons_params -> empty','_cons_params',1,'p_datatype_cons_params_empty','parsers.py',975),
  ('_data_rhs -> data_cons _data_conses','_data_rhs',2,'p_datatype_body','parsers.py',981),
  ('_data_conses -> _maybe_padding PIPE data_cons _data_conses','_data_conses',4,'p_datatype_body','parsers.py',982),
  ('_data_conses -> empty','_data_conses',1,'p_datatype_conses_empty','parsers.py',991),
  ('data_cons -> _data_cons','data_cons',1,'p_data_cons','parsers.py',1023),
  ('_data_cons -> UPPER_IDENTIFIER _cons_args','_data_cons',2,'p_bare_data_cons','parsers.py',1029),
  ('_cons_args -> SPACE cons_arg _cons_args','_cons_args',3,'p_data_cons_args','parsers.py',1034),
  ('_cons_args -> empty','_cons_args',1,'p_data_cons_args_empty','parsers.py',1043),
  ('cons_arg -> type_variable','cons_arg',1,'p_cons_arg','parsers.py',1049),
  ('cons_arg -> type_cons','cons_arg',1,'p_cons_arg','parsers.py',1050),
  ('cons_arg -> _cons_arg_factor','cons_arg',1,'p_cons_arg','parsers.py',1051),
  ('_cons_arg_factor -> LPAREN type_expr RPAREN','_cons_arg_factor',3,'p_cons_arg_factor','parsers.py',1057),
  ('_cons_arg_factor -> LBRACKET type_expr RBRACKET','_cons_arg_factor',3,'p_cons_arg_factor_list','parsers.py',1063),
]
