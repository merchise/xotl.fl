
# expr_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'st_exprrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW ATTR_ACCESS BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FLOAT KEYWORD_CLASS KEYWORD_DATA KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LOWER_IDENTIFIER LPAREN MINUS NEWLINE OPERATOR PADDING PERCENT PIPE PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATOR UNDER_IDENTIFIER UPPER_IDENTIFIERexpr_factor : expr_factor SPACE expr_factorexpr_factor : ATTR_ACCESS\n    expr_term9 : expr_factor infix_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infix_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infix_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infix_operator_2 expr_term6\n               | expr_term6\n\n    expr_term0 : expr infix_operator_0 expr_term0\n               | expr_term2\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | unit_value\n                | letexpr\n                | where_expr\n                | lambda_expr\n\n    st_type_expr : type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    unit_value : LPAREN RPAREN\n    char : CHARstring : STRINGidentifier : _identifier\n\n    _identifier : UNDER_IDENTIFIER\n                   | UPPER_IDENTIFIER\n                   | LOWER_IDENTIFIER\n\n    enclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : LPAREN DOT_OPERATOR RPAREN\n                     | LPAREN operator RPAREN\n    \n    infix_operator_9 : DOT_OPERATOR\n\n    infix_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infix_operator_6 : PLUS\n                     | MINUS\n\n    infix_operator_2 : OPERATOR\n                     | ARROW\n\n    infix_operator_0 : TICK_OPERATOR\n\n    operator : infix_operator_0\n             | infix_operator_2\n             | infix_operator_6\n             | infix_operator_7\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH parameters ARROW expr\n    parameters : _identifier _parameters\n       _parameters : SPACE _identifier _parameters\n    _parameters : empty\n    pattern : parametersequation : pattern EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    type_expr : type_function_expr\n                 | type_termtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_variable : LOWER_IDENTIFIERtype_cons : UPPER_IDENTIFIERtype_factor : type_variable\n                   | type_cons\n\n    type_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET_maybe_padding : PADDING\n                      | empty\n    program : definitions\n    definitions : definition _definition_set\n    _definition_set : NEWLINE definition _definition_set\n    _definition_set : empty\n    definition : nametype_decl\n                  | valuedef\n                  | datatype_definition\n    valuedef : equation\n    nametype_decl : _identifier COLON COLON st_type_expr\n    datatype_definition : _datatype_lhs EQ _data_rhs\n    _datatype_lhs : KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params\n    _cons_params : SPACE LOWER_IDENTIFIER _cons_params\n    _cons_params : empty\n    _data_rhs : data_cons _data_conses\n       _data_conses : _maybe_padding PIPE data_cons _data_conses\n    _data_conses : emptydata_cons : _data_cons_data_cons : UPPER_IDENTIFIER _cons_args_cons_args : SPACE cons_arg _cons_args\n    _cons_args : empty\n    cons_arg : type_variable\n       cons_arg : type_cons\n       cons_arg : _cons_arg_factor\n    _cons_arg_factor : LPAREN type_expr RPAREN\n    _cons_arg_factor : LBRACKET type_expr RBRACKET\n    '
    
_lr_action_items = {'ATTR_ACCESS':([0,12,26,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,88,89,90,95,105,108,],[9,9,9,9,-56,9,-54,-55,9,-52,-53,9,-48,-49,-50,-51,9,9,-47,9,-42,-45,-46,9,9,9,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,66,77,80,81,82,83,84,85,86,87,88,89,90,92,95,99,100,102,104,105,106,108,109,110,112,113,],[26,-13,-14,-12,-10,-8,-6,61,-2,-15,-16,26,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,26,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-39,-40,-41,26,-56,26,-54,-55,26,-52,-53,26,-48,-49,-50,-51,26,26,-44,-47,26,61,-35,-11,-9,-7,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,26,-80,-81,-76,-78,26,-70,26,-69,-75,-79,-77,]),'KEYWORD_LET':([0,12,26,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,88,89,90,95,105,108,],[27,27,27,27,-56,27,-54,-55,27,-52,-53,27,-48,-49,-50,-51,27,27,-47,27,-42,-45,-46,27,27,27,]),'BACKSLASH':([0,12,26,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,88,89,90,95,105,108,],[28,28,28,28,-56,28,-54,-55,28,-52,-53,28,-48,-49,-50,-51,28,28,-47,28,-42,-45,-46,28,28,28,]),'BASE10_INTEGER':([0,12,26,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,88,89,90,95,105,108,],[29,29,29,29,-56,29,-54,-55,29,-52,-53,29,-48,-49,-50,-51,29,29,-47,29,-42,-45,-46,29,29,29,]),'BASE16_INTEGER':([0,12,26,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,88,89,90,95,105,108,],[30,30,30,30,-56,30,-54,-55,30,-52,-53,30,-48,-49,-50,-51,30,30,-47,30,-42,-45,-46,30,30,30,]),'BASE8_INTEGER':([0,12,26,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,88,89,90,95,105,108,],[31,31,31,31,-56,31,-54,-55,31,-52,-53,31,-48,-49,-50,-51,31,31,-47,31,-42,-45,-46,31,31,31,]),'BASE2_INTEGER':([0,12,26,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,88,89,90,95,105,108,],[32,32,32,32,-56,32,-54,-55,32,-52,-53,32,-48,-49,-50,-51,32,32,-47,32,-42,-45,-46,32,32,32,]),'FLOAT':([0,12,26,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,88,89,90,95,105,108,],[33,33,33,33,-56,33,-54,-55,33,-52,-53,33,-48,-49,-50,-51,33,33,-47,33,-42,-45,-46,33,33,33,]),'STRING':([0,12,26,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,64,88,89,90,95,105,108,],[34,34,34,34,-56,34,-54,-55,34,-52,-53,34,-48,-49,-50,-51,34,34,-47,34,34,-42,-45,-46,34,34,34,]),'CHAR':([0,12,26,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,64,88,89,90,95,105,108,],[35,35,35,35,-56,35,-54,-55,35,-52,-53,35,-48,-49,-50,-51,35,35,-47,35,35,-42,-45,-46,35,35,35,]),'DATE':([0,12,26,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,88,89,90,95,105,108,],[36,36,36,36,-56,36,-54,-55,36,-52,-53,36,-48,-49,-50,-51,36,36,-47,36,-42,-45,-46,36,36,36,]),'DATETIME':([0,12,26,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,88,89,90,95,105,108,],[37,37,37,37,-56,37,-54,-55,37,-52,-53,37,-48,-49,-50,-51,37,37,-47,37,-42,-45,-46,37,37,37,]),'DATE_INTERVAL':([0,12,26,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,88,89,90,95,105,108,],[38,38,38,38,-56,38,-54,-55,38,-52,-53,38,-48,-49,-50,-51,38,38,-47,38,-42,-45,-46,38,38,38,]),'DATETIME_INTERVAL':([0,12,26,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,88,89,90,95,105,108,],[39,39,39,39,-56,39,-54,-55,39,-52,-53,39,-48,-49,-50,-51,39,39,-47,39,-42,-45,-46,39,39,39,]),'UNDER_IDENTIFIER':([0,12,26,28,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,64,73,78,79,88,89,90,95,97,103,105,108,],[40,40,40,40,40,-56,40,-54,-55,40,-52,-53,40,-48,-49,-50,-51,40,40,-47,40,40,40,40,40,-42,-45,-46,40,40,40,40,40,]),'UPPER_IDENTIFIER':([0,12,26,28,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,64,73,78,79,88,89,90,95,97,103,105,108,],[41,41,41,41,41,-56,41,-54,-55,41,-52,-53,41,-48,-49,-50,-51,41,41,-47,41,41,41,41,41,-42,-45,-46,41,41,41,41,41,]),'LOWER_IDENTIFIER':([0,12,26,28,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,64,73,78,79,88,89,90,95,97,103,105,108,],[42,42,42,42,42,-56,42,-54,-55,42,-52,-53,42,-48,-49,-50,-51,42,42,-47,42,42,42,42,42,-42,-45,-46,42,42,42,42,42,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,62,66,77,80,81,82,83,84,85,86,87,88,89,90,92,99,100,102,104,106,109,110,112,113,],[0,-13,-14,-12,-10,-8,-6,-4,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-39,-40,-41,-44,-43,-35,-11,-9,-7,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,-70,-69,-75,-79,-77,]),'SPACE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,59,62,66,75,77,80,81,82,83,84,85,86,87,88,89,90,92,99,100,101,102,104,106,107,109,110,112,113,],[-13,-14,-12,-10,-8,-6,58,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,73,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-39,-40,-41,78,-44,58,-35,97,-11,-9,-7,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,108,-76,-78,-70,97,-69,-75,-79,-77,]),'DOT_OPERATOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,61,62,66,77,80,81,82,83,84,85,86,87,88,89,90,92,99,100,102,104,106,109,110,112,113,],[-13,-14,-12,-10,-8,-6,60,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,67,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-39,-40,-41,-44,67,60,-35,-11,-9,-7,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,-70,-69,-75,-79,-77,]),'STAR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,61,62,66,77,80,81,82,83,84,85,86,87,88,89,90,92,99,100,102,104,106,109,110,112,113,],[-13,-14,-12,-10,53,-6,-4,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,53,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-39,-40,-41,-44,53,-4,-35,-11,-9,53,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,-70,-69,-75,-79,-77,]),'SLASH':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,61,62,66,77,80,81,82,83,84,85,86,87,88,89,90,92,99,100,102,104,106,109,110,112,113,],[-13,-14,-12,-10,54,-6,-4,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,54,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-39,-40,-41,-44,54,-4,-35,-11,-9,54,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,-70,-69,-75,-79,-77,]),'DOUBLESLASH':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,61,62,66,77,80,81,82,83,84,85,86,87,88,89,90,92,99,100,102,104,106,109,110,112,113,],[-13,-14,-12,-10,55,-6,-4,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,55,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-39,-40,-41,-44,55,-4,-35,-11,-9,55,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,-70,-69,-75,-79,-77,]),'PERCENT':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,61,62,66,77,80,81,82,83,84,85,86,87,88,89,90,92,99,100,102,104,106,109,110,112,113,],[-13,-14,-12,-10,56,-6,-4,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,56,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-39,-40,-41,-44,56,-4,-35,-11,-9,56,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,-70,-69,-75,-79,-77,]),'PLUS':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,61,62,66,77,80,81,82,83,84,85,86,87,88,89,90,92,99,100,102,104,106,109,110,112,113,],[-13,-14,-12,50,-8,-6,-4,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,50,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-39,-40,-41,-44,50,-4,-35,-11,50,-7,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,-70,-69,-75,-79,-77,]),'MINUS':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,61,62,66,77,80,81,82,83,84,85,86,87,88,89,90,92,99,100,102,104,106,109,110,112,113,],[-13,-14,-12,51,-8,-6,-4,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,51,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-39,-40,-41,-44,51,-4,-35,-11,51,-7,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,-70,-69,-75,-79,-77,]),'OPERATOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,61,62,66,77,80,81,82,83,84,85,86,87,88,89,90,92,99,100,102,104,106,109,110,112,113,],[-13,-14,47,-10,-8,-6,-4,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,47,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-39,-40,-41,-44,47,-4,-35,-11,-9,-7,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,-70,-69,-75,-79,-77,]),'ARROW':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,61,62,66,74,75,77,80,81,82,83,84,85,86,87,88,89,90,92,96,98,99,100,102,104,106,107,109,110,111,112,113,],[-13,-14,48,-10,-8,-6,-4,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,48,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-39,-40,-41,-44,48,-4,-35,95,-69,-11,-9,-7,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,-71,-73,-80,-81,-76,-78,-70,-69,-69,-75,-72,-79,-77,]),'KEYWORD_WHERE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,62,63,65,66,76,77,80,81,82,83,84,85,86,87,88,89,90,92,99,100,102,104,106,109,110,112,113,],[44,-14,-12,-10,-8,-6,-4,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-39,-40,-41,-44,-4,44,44,-35,44,-11,-9,-7,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,44,-69,44,-79,-77,]),'TICK_OPERATOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,61,62,63,65,66,76,77,80,81,82,83,84,85,86,87,88,89,90,92,99,100,102,104,106,109,110,112,113,],[45,-14,-12,-10,-8,-6,-4,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,45,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-39,-40,-41,-44,45,-4,45,45,-35,45,-11,-9,-7,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,45,-69,45,-79,-77,]),'RPAREN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,47,48,50,51,53,54,55,56,59,62,65,66,67,68,69,70,71,72,77,80,81,82,83,84,85,86,87,88,89,90,92,99,100,102,104,106,109,110,112,113,],[-13,-14,-12,-10,-8,-6,-4,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,66,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-39,-40,-41,-56,-54,-55,-52,-53,-48,-49,-50,-51,-44,-43,88,-35,89,90,-57,-58,-59,-60,-11,-9,-7,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,-70,-69,-75,-79,-77,]),'PADDING':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,59,62,66,77,80,81,82,83,84,85,86,87,88,89,90,92,99,100,102,104,106,109,110,112,113,],[-13,-14,-12,-10,-8,-6,-4,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-39,-40,-41,79,-44,-43,-35,-11,-9,-7,-5,-3,-1,-66,-67,-68,-42,-45,-46,103,-80,-81,-76,-78,-70,103,-75,-79,-77,]),'KEYWORD_IN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,62,66,77,80,81,82,83,84,85,86,87,88,89,90,91,92,99,100,102,104,106,109,110,112,113,],[-13,-14,-12,-10,-8,-6,-4,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-39,-40,-41,-44,-43,-35,-11,-9,-7,-5,-3,-1,-66,-67,-68,-42,-45,-46,101,-69,-80,-81,-76,-78,-70,-69,-75,-79,-77,]),'ANNOTATION':([17,29,30,31,32,33,],[64,-61,-62,-63,-64,-65,]),'EQ':([40,41,42,75,93,94,96,98,107,111,],[-39,-40,-41,-69,105,-74,-71,-73,-69,-72,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'st_expr':([0,108,],[1,112,]),'expr':([0,12,26,43,46,49,52,57,58,61,95,105,108,],[2,63,65,76,63,63,63,63,63,65,106,110,2,]),'expr_term0':([0,12,26,43,46,49,52,57,58,61,95,105,108,],[3,3,3,77,3,3,3,3,3,3,3,3,3,]),'expr_term2':([0,12,26,43,46,49,52,57,58,61,95,105,108,],[4,4,4,4,4,4,4,4,4,4,4,4,4,]),'expr_term6':([0,12,26,43,46,49,52,57,58,61,95,105,108,],[5,5,5,5,80,5,5,5,5,5,5,5,5,]),'expr_term7':([0,12,26,43,46,49,52,57,58,61,95,105,108,],[6,6,6,6,6,81,6,6,6,6,6,6,6,]),'expr_term9':([0,12,26,43,46,49,52,57,58,61,95,105,108,],[7,7,7,7,7,7,82,83,7,7,7,7,7,]),'expr_factor':([0,12,26,43,46,49,52,57,58,61,95,105,108,],[8,62,8,8,8,8,8,8,84,8,8,8,8,]),'literal':([0,12,26,43,46,49,52,57,58,61,95,105,108,],[10,10,10,10,10,10,10,10,10,10,10,10,10,]),'identifier':([0,12,26,43,46,49,52,57,58,61,64,95,105,108,],[11,11,11,11,11,11,11,11,11,11,87,11,11,11,]),'enclosed_expr':([0,8,12,26,43,46,49,52,57,58,61,62,84,95,105,108,],[12,59,12,12,12,12,12,12,12,12,12,59,59,12,12,12,]),'unit_value':([0,12,26,43,46,49,52,57,58,61,95,105,108,],[13,13,13,13,13,13,13,13,13,13,13,13,13,]),'letexpr':([0,12,26,43,46,49,52,57,58,61,95,105,108,],[14,14,14,14,14,14,14,14,14,14,14,14,14,]),'where_expr':([0,12,26,43,46,49,52,57,58,61,95,105,108,],[15,15,15,15,15,15,15,15,15,15,15,15,15,]),'lambda_expr':([0,12,26,43,46,49,52,57,58,61,95,105,108,],[16,16,16,16,16,16,16,16,16,16,16,16,16,]),'number':([0,12,26,43,46,49,52,57,58,61,95,105,108,],[17,17,17,17,17,17,17,17,17,17,17,17,17,]),'concrete_number':([0,12,26,43,46,49,52,57,58,61,95,105,108,],[18,18,18,18,18,18,18,18,18,18,18,18,18,]),'string':([0,12,26,43,46,49,52,57,58,61,64,95,105,108,],[19,19,19,19,19,19,19,19,19,19,85,19,19,19,]),'char':([0,12,26,43,46,49,52,57,58,61,64,95,105,108,],[20,20,20,20,20,20,20,20,20,20,86,20,20,20,]),'date':([0,12,26,43,46,49,52,57,58,61,95,105,108,],[21,21,21,21,21,21,21,21,21,21,21,21,21,]),'datetime':([0,12,26,43,46,49,52,57,58,61,95,105,108,],[22,22,22,22,22,22,22,22,22,22,22,22,22,]),'date_interval':([0,12,26,43,46,49,52,57,58,61,95,105,108,],[23,23,23,23,23,23,23,23,23,23,23,23,23,]),'datetime_interval':([0,12,26,43,46,49,52,57,58,61,95,105,108,],[24,24,24,24,24,24,24,24,24,24,24,24,24,]),'_identifier':([0,12,26,28,43,46,49,52,57,58,61,64,73,78,79,95,97,103,105,108,],[25,25,25,75,25,25,25,25,25,25,25,25,75,75,75,25,107,75,25,25,]),'infix_operator_0':([2,26,61,63,65,76,106,110,],[43,69,69,43,43,43,43,43,]),'infix_operator_2':([4,26,61,],[46,70,70,]),'infix_operator_6':([5,26,61,80,],[49,71,71,49,]),'infix_operator_7':([6,26,61,81,],[52,72,72,52,]),'infix_operator_9':([8,62,84,],[57,57,57,]),'operator':([26,61,],[68,68,]),'parameters':([28,73,78,79,103,],[74,94,94,94,94,]),'equations':([73,78,79,],[91,99,100,]),'equation':([73,78,79,103,],[92,92,92,109,]),'pattern':([73,78,79,103,],[93,93,93,93,]),'_parameters':([75,107,],[96,111,]),'empty':([75,92,107,109,],[98,104,98,104,]),'_equation_set':([92,109,],[102,113,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> st_expr","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','parsers.py',481),
  ('expr_factor -> ATTR_ACCESS','expr_factor',1,'p_attr_access','parsers.py',486),
  ('expr_term9 -> expr_factor infix_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','parsers.py',498),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','parsers.py',499),
  ('expr_term7 -> expr_term7 infix_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','parsers.py',501),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','parsers.py',502),
  ('expr_term6 -> expr_term6 infix_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','parsers.py',504),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','parsers.py',505),
  ('expr_term2 -> expr_term2 infix_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','parsers.py',507),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','parsers.py',508),
  ('expr_term0 -> expr infix_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','parsers.py',510),
  ('expr_term0 -> expr_term2','expr_term0',1,'p_expressions_precedence_rules','parsers.py',511),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','parsers.py',524),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','parsers.py',526),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','parsers.py',528),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','parsers.py',529),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','parsers.py',530),
  ('expr_factor -> unit_value','expr_factor',1,'p_standalone_definitions','parsers.py',531),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','parsers.py',532),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','parsers.py',533),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','parsers.py',534),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','parsers.py',536),
  ('literal -> number','literal',1,'p_literals','parsers.py',544),
  ('literal -> concrete_number','literal',1,'p_literals','parsers.py',545),
  ('literal -> string','literal',1,'p_literals','parsers.py',546),
  ('literal -> char','literal',1,'p_literals','parsers.py',547),
  ('literal -> date','literal',1,'p_literals','parsers.py',548),
  ('literal -> datetime','literal',1,'p_literals','parsers.py',549),
  ('literal -> date_interval','literal',1,'p_literals','parsers.py',550),
  ('literal -> datetime_interval','literal',1,'p_literals','parsers.py',551),
  ('date -> DATE','date',1,'p_date','parsers.py',557),
  ('datetime -> DATETIME','datetime',1,'p_datetime','parsers.py',563),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','parsers.py',569),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','parsers.py',575),
  ('unit_value -> LPAREN RPAREN','unit_value',2,'p_unit_value','parsers.py',581),
  ('char -> CHAR','char',1,'p_char','parsers.py',587),
  ('string -> STRING','string',1,'p_string','parsers.py',592),
  ('identifier -> _identifier','identifier',1,'p_variable','parsers.py',597),
  ('_identifier -> UNDER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',604),
  ('_identifier -> UPPER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',605),
  ('_identifier -> LOWER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',606),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','parsers.py',613),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','parsers.py',618),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','parsers.py',619),
  ('enclosed_expr -> LPAREN DOT_OPERATOR RPAREN','enclosed_expr',3,'p_operators_as_expressios','parsers.py',625),
  ('enclosed_expr -> LPAREN operator RPAREN','enclosed_expr',3,'p_operators_as_expressios','parsers.py',626),
  ('infix_operator_9 -> DOT_OPERATOR','infix_operator_9',1,'p_operator','parsers.py',636),
  ('infix_operator_7 -> STAR','infix_operator_7',1,'p_operator','parsers.py',638),
  ('infix_operator_7 -> SLASH','infix_operator_7',1,'p_operator','parsers.py',639),
  ('infix_operator_7 -> DOUBLESLASH','infix_operator_7',1,'p_operator','parsers.py',640),
  ('infix_operator_7 -> PERCENT','infix_operator_7',1,'p_operator','parsers.py',641),
  ('infix_operator_6 -> PLUS','infix_operator_6',1,'p_operator','parsers.py',643),
  ('infix_operator_6 -> MINUS','infix_operator_6',1,'p_operator','parsers.py',644),
  ('infix_operator_2 -> OPERATOR','infix_operator_2',1,'p_operator','parsers.py',646),
  ('infix_operator_2 -> ARROW','infix_operator_2',1,'p_operator','parsers.py',647),
  ('infix_operator_0 -> TICK_OPERATOR','infix_operator_0',1,'p_operator','parsers.py',649),
  ('operator -> infix_operator_0','operator',1,'p_operator','parsers.py',651),
  ('operator -> infix_operator_2','operator',1,'p_operator','parsers.py',652),
  ('operator -> infix_operator_6','operator',1,'p_operator','parsers.py',653),
  ('operator -> infix_operator_7','operator',1,'p_operator','parsers.py',654),
  ('number -> BASE10_INTEGER','number',1,'p_integer','parsers.py',661),
  ('number -> BASE16_INTEGER','number',1,'p_integer','parsers.py',662),
  ('number -> BASE8_INTEGER','number',1,'p_integer','parsers.py',663),
  ('number -> BASE2_INTEGER','number',1,'p_integer','parsers.py',664),
  ('number -> FLOAT','number',1,'p_float','parsers.py',693),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','parsers.py',698),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','parsers.py',699),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','parsers.py',700),
  ('empty -> <empty>','empty',0,'p_empty','parsers.py',709),
  ('lambda_expr -> BACKSLASH parameters ARROW expr','lambda_expr',4,'p_lambda_definition','parsers.py',714),
  ('parameters -> _identifier _parameters','parameters',2,'p_parameters','parsers.py',722),
  ('_parameters -> SPACE _identifier _parameters','_parameters',3,'p_parameters','parsers.py',723),
  ('_parameters -> empty','_parameters',1,'p_empty__parameters','parsers.py',732),
  ('pattern -> parameters','pattern',1,'p_pattern','parsers.py',738),
  ('equation -> pattern EQ expr','equation',3,'p_equation','parsers.py',744),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','parsers.py',754),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','parsers.py',763),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','parsers.py',772),
  ('letexpr -> KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','parsers.py',782),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','parsers.py',790),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','parsers.py',791),
  ('type_expr -> type_function_expr','type_expr',1,'p_type_expr','parsers.py',801),
  ('type_expr -> type_term','type_expr',1,'p_type_expr','parsers.py',802),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','parsers.py',807),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','parsers.py',808),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','parsers.py',818),
  ('type_term -> type_factor','type_term',1,'p_type_term','parsers.py',819),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','parsers.py',824),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','parsers.py',836),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','parsers.py',837),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','parsers.py',845),
  ('type_variable -> LOWER_IDENTIFIER','type_variable',1,'p_type_variable','parsers.py',850),
  ('type_cons -> UPPER_IDENTIFIER','type_cons',1,'p_type_cons','parsers.py',855),
  ('type_factor -> type_variable','type_factor',1,'p_type_factor_identifier','parsers.py',860),
  ('type_factor -> type_cons','type_factor',1,'p_type_factor_identifier','parsers.py',861),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','parsers.py',868),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','parsers.py',873),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','parsers.py',878),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','parsers.py',879),
  ('program -> definitions','program',1,'p_program','parsers.py',885),
  ('definitions -> definition _definition_set','definitions',2,'p_definitions','parsers.py',901),
  ('_definition_set -> NEWLINE definition _definition_set','_definition_set',3,'p_definition_set','parsers.py',909),
  ('_definition_set -> empty','_definition_set',1,'p_definition_set2','parsers.py',917),
  ('definition -> nametype_decl','definition',1,'p_definition','parsers.py',923),
  ('definition -> valuedef','definition',1,'p_definition','parsers.py',924),
  ('definition -> datatype_definition','definition',1,'p_definition','parsers.py',925),
  ('valuedef -> equation','valuedef',1,'p_valuedef','parsers.py',931),
  ('nametype_decl -> _identifier COLON COLON st_type_expr','nametype_decl',4,'p_nametype_decl','parsers.py',937),
  ('datatype_definition -> _datatype_lhs EQ _data_rhs','datatype_definition',3,'p_datatype_definition','parsers.py',946),
  ('_datatype_lhs -> KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params','_datatype_lhs',4,'p_datatype_lhs','parsers.py',954),
  ('_cons_params -> SPACE LOWER_IDENTIFIER _cons_params','_cons_params',3,'p_datatype_cons_params','parsers.py',963),
  ('_cons_params -> empty','_cons_params',1,'p_datatype_cons_params_empty','parsers.py',972),
  ('_data_rhs -> data_cons _data_conses','_data_rhs',2,'p_datatype_body','parsers.py',978),
  ('_data_conses -> _maybe_padding PIPE data_cons _data_conses','_data_conses',4,'p_datatype_body','parsers.py',979),
  ('_data_conses -> empty','_data_conses',1,'p_datatype_conses_empty','parsers.py',988),
  ('data_cons -> _data_cons','data_cons',1,'p_data_cons','parsers.py',993),
  ('_data_cons -> UPPER_IDENTIFIER _cons_args','_data_cons',2,'p_bare_data_cons','parsers.py',999),
  ('_cons_args -> SPACE cons_arg _cons_args','_cons_args',3,'p_data_cons_args','parsers.py',1004),
  ('_cons_args -> empty','_cons_args',1,'p_data_cons_args_empty','parsers.py',1013),
  ('cons_arg -> type_variable','cons_arg',1,'p_cons_arg','parsers.py',1019),
  ('cons_arg -> type_cons','cons_arg',1,'p_cons_arg','parsers.py',1020),
  ('cons_arg -> _cons_arg_factor','cons_arg',1,'p_cons_arg','parsers.py',1021),
  ('_cons_arg_factor -> LPAREN type_expr RPAREN','_cons_arg_factor',3,'p_cons_arg_factor','parsers.py',1027),
  ('_cons_arg_factor -> LBRACKET type_expr RBRACKET','_cons_arg_factor',3,'p_cons_arg_factor_list','parsers.py',1033),
]
