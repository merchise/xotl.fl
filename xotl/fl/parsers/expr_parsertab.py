
# expr_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'st_exprrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON COMMA DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FLOAT KEYWORD_CLASS KEYWORD_DATA KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LOWER_IDENTIFIER LPAREN MINUS NEWLINE OPERATOR PADDING PERCENT PIPE PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATOR UNDER_IDENTIFIER UPPER_IDENTIFIERexpr_factor : expr_factor SPACE expr_factor\n    expr_term9 : expr_factor infixr_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infixl_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infixl_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infixl_operator_2 expr_term6\n               | expr_term6\n\n    expr_term1 : expr_term2 infixr_operator_2 expr_term1\n               | expr_term2\n\n    expr_term0 : expr infixl_operator_0 expr_term0\n               | expr_term1\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | unit_value\n                | letexpr\n                | where_expr\n                | lambda_expr\n\n    st_type_expr : type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    unit_value : LPAREN RPAREN\n    char : CHARstring : STRINGidentifier : _identifier\n\n    _identifier : UNDER_IDENTIFIER\n                   | UPPER_IDENTIFIER\n                   | LOWER_IDENTIFIER\n\n    enclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : _enclosed_operator\n    _enclosed_operator : LPAREN _st_operator RPAREN\n    infixr_operator_9 : DOT_OPERATOR\n\n    infixl_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infixl_operator_6 : PLUS\n                     | MINUS\n\n    infixr_operator_2 : COLON\n\n    infixl_operator_2 : OPERATOR\n                      | ARROW\n                      | COMMA\n\n    infixl_operator_0 : TICK_OPERATOR\n\n    _st_operator : infixl_operator_2\n                 | infixr_operator_2\n                 | infixl_operator_6\n                 | infixl_operator_7\n                 | infixr_operator_9\n\n    operator : infixl_operator_0\n             | _st_operator\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH parameters ARROW expr\n    parameters : _param _parameters\n       _parameters : SPACE _param _parameters\n    _parameters : empty\n    _param : _identifier_param : _enclosed_operator_param : LPAREN pattern RPARENpattern : parametersequation : pattern EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    type_expr : type_function_expr\n                 | type_termtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_variable : LOWER_IDENTIFIERtype_cons : UPPER_IDENTIFIERtype_factor : type_variable\n                   | type_cons\n\n    type_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET_maybe_padding : PADDING\n                      | empty\n    program : definitions\n    definitions : definition _definition_set\n    _definition_set : NEWLINE definition _definition_set\n    _definition_set : empty\n    definition : nametype_decl\n                  | valuedef\n                  | datatype_definition\n    valuedef : equation\n    nametype_decl : _identifier COLON COLON st_type_expr\n    nametype_decl : LPAREN _st_operator RPAREN COLON COLON st_type_expr\n    datatype_definition : _datatype_lhs EQ _data_rhs\n    _datatype_lhs : KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params\n    _cons_params : SPACE LOWER_IDENTIFIER _cons_params\n    _cons_params : empty\n    _data_rhs : data_cons _data_conses\n       _data_conses : _maybe_padding PIPE data_cons _data_conses\n    _data_conses : emptydata_cons : _data_cons_data_cons : UPPER_IDENTIFIER _cons_args_cons_args : SPACE cons_arg _cons_args\n    _cons_args : empty\n    cons_arg : type_variable\n       cons_arg : type_cons\n       cons_arg : _cons_arg_factor\n    _cons_arg_factor : LPAREN type_expr RPAREN\n    _cons_arg_factor : LBRACKET type_expr RBRACKET\n    '
    
_lr_action_items = {'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,77,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,102,104,107,108,110,111,112,113,114,117,118,119,121,122,],[26,-14,-15,-13,-11,-9,-7,-5,65,-16,-17,26,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,26,-46,82,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-40,-41,-42,26,-59,26,26,-55,-56,-57,-58,26,-53,-54,26,-49,-50,-51,-52,26,26,-45,-48,26,65,-36,82,82,-12,82,82,-10,-8,-6,-4,-2,-1,-72,-73,-74,-43,-47,-75,26,82,-89,-90,-85,82,-87,26,-76,26,-75,-84,-88,-86,]),'KEYWORD_LET':([0,12,26,27,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,96,97,102,113,117,],[28,28,28,-46,28,-59,28,28,-55,-56,-57,-58,28,-53,-54,28,-49,-50,-51,-52,28,28,-48,28,-43,-47,28,28,28,]),'BACKSLASH':([0,12,26,27,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,96,97,102,113,117,],[29,29,29,-46,29,-59,29,29,-55,-56,-57,-58,29,-53,-54,29,-49,-50,-51,-52,29,29,-48,29,-43,-47,29,29,29,]),'BASE10_INTEGER':([0,12,26,27,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,96,97,102,113,117,],[30,30,30,-46,30,-59,30,30,-55,-56,-57,-58,30,-53,-54,30,-49,-50,-51,-52,30,30,-48,30,-43,-47,30,30,30,]),'BASE16_INTEGER':([0,12,26,27,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,96,97,102,113,117,],[31,31,31,-46,31,-59,31,31,-55,-56,-57,-58,31,-53,-54,31,-49,-50,-51,-52,31,31,-48,31,-43,-47,31,31,31,]),'BASE8_INTEGER':([0,12,26,27,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,96,97,102,113,117,],[32,32,32,-46,32,-59,32,32,-55,-56,-57,-58,32,-53,-54,32,-49,-50,-51,-52,32,32,-48,32,-43,-47,32,32,32,]),'BASE2_INTEGER':([0,12,26,27,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,96,97,102,113,117,],[33,33,33,-46,33,-59,33,33,-55,-56,-57,-58,33,-53,-54,33,-49,-50,-51,-52,33,33,-48,33,-43,-47,33,33,33,]),'FLOAT':([0,12,26,27,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,96,97,102,113,117,],[34,34,34,-46,34,-59,34,34,-55,-56,-57,-58,34,-53,-54,34,-49,-50,-51,-52,34,34,-48,34,-43,-47,34,34,34,]),'STRING':([0,12,26,27,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,68,96,97,102,113,117,],[35,35,35,-46,35,-59,35,35,-55,-56,-57,-58,35,-53,-54,35,-49,-50,-51,-52,35,35,-48,35,35,-43,-47,35,35,35,]),'CHAR':([0,12,26,27,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,68,96,97,102,113,117,],[36,36,36,-46,36,-59,36,36,-55,-56,-57,-58,36,-53,-54,36,-49,-50,-51,-52,36,36,-48,36,36,-43,-47,36,36,36,]),'DATE':([0,12,26,27,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,96,97,102,113,117,],[37,37,37,-46,37,-59,37,37,-55,-56,-57,-58,37,-53,-54,37,-49,-50,-51,-52,37,37,-48,37,-43,-47,37,37,37,]),'DATETIME':([0,12,26,27,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,96,97,102,113,117,],[38,38,38,-46,38,-59,38,38,-55,-56,-57,-58,38,-53,-54,38,-49,-50,-51,-52,38,38,-48,38,-43,-47,38,38,38,]),'DATE_INTERVAL':([0,12,26,27,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,96,97,102,113,117,],[39,39,39,-46,39,-59,39,39,-55,-56,-57,-58,39,-53,-54,39,-49,-50,-51,-52,39,39,-48,39,-43,-47,39,39,39,]),'DATETIME_INTERVAL':([0,12,26,27,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,96,97,102,113,117,],[40,40,40,-46,40,-59,40,40,-55,-56,-57,-58,40,-53,-54,40,-49,-50,-51,-52,40,40,-48,40,-43,-47,40,40,40,]),'UNDER_IDENTIFIER':([0,12,26,27,29,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,68,77,82,85,86,96,97,102,104,111,113,117,],[41,41,41,-46,41,41,-59,41,41,-55,-56,-57,-58,41,-53,-54,41,-49,-50,-51,-52,41,41,-48,41,41,41,41,41,41,-43,-47,41,41,41,41,41,]),'UPPER_IDENTIFIER':([0,12,26,27,29,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,68,77,82,85,86,96,97,102,104,111,113,117,],[42,42,42,-46,42,42,-59,42,42,-55,-56,-57,-58,42,-53,-54,42,-49,-50,-51,-52,42,42,-48,42,42,42,42,42,42,-43,-47,42,42,42,42,42,]),'LOWER_IDENTIFIER':([0,12,26,27,29,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,68,77,82,85,86,96,97,102,104,111,113,117,],[43,43,43,-46,43,43,-59,43,43,-55,-56,-57,-58,43,-53,-54,43,-49,-50,-51,-52,43,43,-48,43,43,43,43,43,43,-43,-47,43,43,43,43,43,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,63,66,70,84,87,88,89,90,91,92,93,94,95,96,97,99,107,108,110,112,114,118,119,121,122,],[0,-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-40,-41,-42,-45,-44,-36,-12,-10,-8,-6,-4,-2,-1,-72,-73,-74,-43,-47,-75,-89,-90,-85,-87,-76,-75,-84,-88,-86,]),'SPACE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,63,66,70,79,80,81,84,87,88,89,90,91,92,93,94,95,96,97,99,107,108,109,110,112,114,115,116,118,119,121,122,],[-14,-15,-13,-11,-9,-7,-5,62,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,-46,77,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-40,-41,-42,85,-45,62,-36,104,-80,-81,-12,-10,-8,-6,-4,-2,-1,-72,-73,-74,-43,-47,-75,-89,-90,117,-85,-87,-76,104,-82,-75,-84,-88,-86,]),'DOT_OPERATOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,63,65,66,70,82,84,87,88,89,90,91,92,93,94,95,96,97,99,107,108,110,112,114,118,119,121,122,],[-14,-15,-13,-11,-9,-7,-5,64,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,64,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-40,-41,-42,-45,64,64,-36,64,-12,-10,-8,-6,-4,-2,-1,-72,-73,-74,-43,-47,-75,-89,-90,-85,-87,-76,-75,-84,-88,-86,]),'STAR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,63,65,66,70,82,84,87,88,89,90,91,92,93,94,95,96,97,99,107,108,110,112,114,118,119,121,122,],[-14,-15,-13,-11,-9,57,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,57,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-40,-41,-42,-45,57,-3,-36,57,-12,-10,-8,57,-4,-2,-1,-72,-73,-74,-43,-47,-75,-89,-90,-85,-87,-76,-75,-84,-88,-86,]),'SLASH':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,63,65,66,70,82,84,87,88,89,90,91,92,93,94,95,96,97,99,107,108,110,112,114,118,119,121,122,],[-14,-15,-13,-11,-9,58,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,58,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-40,-41,-42,-45,58,-3,-36,58,-12,-10,-8,58,-4,-2,-1,-72,-73,-74,-43,-47,-75,-89,-90,-85,-87,-76,-75,-84,-88,-86,]),'DOUBLESLASH':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,63,65,66,70,82,84,87,88,89,90,91,92,93,94,95,96,97,99,107,108,110,112,114,118,119,121,122,],[-14,-15,-13,-11,-9,59,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,59,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-40,-41,-42,-45,59,-3,-36,59,-12,-10,-8,59,-4,-2,-1,-72,-73,-74,-43,-47,-75,-89,-90,-85,-87,-76,-75,-84,-88,-86,]),'PERCENT':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,63,65,66,70,82,84,87,88,89,90,91,92,93,94,95,96,97,99,107,108,110,112,114,118,119,121,122,],[-14,-15,-13,-11,-9,60,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,60,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-40,-41,-42,-45,60,-3,-36,60,-12,-10,-8,60,-4,-2,-1,-72,-73,-74,-43,-47,-75,-89,-90,-85,-87,-76,-75,-84,-88,-86,]),'PLUS':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,63,65,66,70,82,84,87,88,89,90,91,92,93,94,95,96,97,99,107,108,110,112,114,118,119,121,122,],[-14,-15,-13,-11,54,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,54,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-40,-41,-42,-45,54,-3,-36,54,-12,-10,54,-6,-4,-2,-1,-72,-73,-74,-43,-47,-75,-89,-90,-85,-87,-76,-75,-84,-88,-86,]),'MINUS':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,63,65,66,70,82,84,87,88,89,90,91,92,93,94,95,96,97,99,107,108,110,112,114,118,119,121,122,],[-14,-15,-13,-11,55,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,55,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-40,-41,-42,-45,55,-3,-36,55,-12,-10,55,-6,-4,-2,-1,-72,-73,-74,-43,-47,-75,-89,-90,-85,-87,-76,-75,-84,-88,-86,]),'COLON':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,63,65,66,70,82,84,87,88,89,90,91,92,93,94,95,96,97,99,107,108,110,112,114,118,119,121,122,],[-14,-15,-13,49,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,49,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-40,-41,-42,-45,49,-3,-36,49,-12,-10,-8,-6,-4,-2,-1,-72,-73,-74,-43,-47,-75,-89,-90,-85,-87,-76,-75,-84,-88,-86,]),'OPERATOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,63,65,66,70,82,84,87,88,89,90,91,92,93,94,95,96,97,99,107,108,110,112,114,118,119,121,122,],[-14,-15,-13,50,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,50,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-40,-41,-42,-45,50,-3,-36,50,-12,-10,-8,-6,-4,-2,-1,-72,-73,-74,-43,-47,-75,-89,-90,-85,-87,-76,-75,-84,-88,-86,]),'ARROW':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,63,65,66,70,78,79,80,81,82,84,87,88,89,90,91,92,93,94,95,96,97,99,103,105,107,108,110,112,114,115,116,118,119,120,121,122,],[-14,-15,-13,51,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,51,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-40,-41,-42,-45,51,-3,-36,102,-75,-80,-81,51,-12,-10,-8,-6,-4,-2,-1,-72,-73,-74,-43,-47,-75,-77,-79,-89,-90,-85,-87,-76,-75,-82,-75,-84,-78,-88,-86,]),'COMMA':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,63,65,66,70,82,84,87,88,89,90,91,92,93,94,95,96,97,99,107,108,110,112,114,118,119,121,122,],[-14,-15,-13,52,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,52,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-40,-41,-42,-45,52,-3,-36,52,-12,-10,-8,-6,-4,-2,-1,-72,-73,-74,-43,-47,-75,-89,-90,-85,-87,-76,-75,-84,-88,-86,]),'KEYWORD_WHERE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,63,66,67,69,70,83,84,87,88,89,90,91,92,93,94,95,96,97,99,107,108,110,112,114,118,119,121,122,],[45,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-40,-41,-42,-45,-3,45,45,-36,45,-12,-10,-8,-6,-4,-2,-1,-72,-73,-74,-43,-47,-75,-89,-90,-85,-87,45,-75,45,-88,-86,]),'TICK_OPERATOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,63,66,67,69,70,83,84,87,88,89,90,91,92,93,94,95,96,97,99,107,108,110,112,114,118,119,121,122,],[46,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-40,-41,-42,-45,-3,46,46,-36,46,-12,-10,-8,-6,-4,-2,-1,-72,-73,-74,-43,-47,-75,-89,-90,-85,-87,46,-75,46,-88,-86,]),'RPAREN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,49,50,51,52,54,55,57,58,59,60,63,64,66,69,70,71,72,73,74,75,76,79,80,81,84,87,88,89,90,91,92,93,94,95,96,97,99,101,103,105,106,107,108,110,112,114,115,116,118,119,120,121,122,],[-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,70,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-40,-41,-42,-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-45,-48,-44,96,-36,97,-60,-61,-62,-63,-64,-75,-80,-81,-12,-10,-8,-6,-4,-2,-1,-72,-73,-74,-43,-47,-75,-83,-77,-79,116,-89,-90,-85,-87,-76,-75,-82,-75,-84,-78,-88,-86,]),'PADDING':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,63,66,70,84,87,88,89,90,91,92,93,94,95,96,97,99,107,108,110,112,114,118,119,121,122,],[-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-40,-41,-42,86,-45,-44,-36,-12,-10,-8,-6,-4,-2,-1,-72,-73,-74,-43,-47,111,-89,-90,-85,-87,-76,111,-84,-88,-86,]),'KEYWORD_IN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,63,66,70,84,87,88,89,90,91,92,93,94,95,96,97,98,99,107,108,110,112,114,118,119,121,122,],[-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-40,-41,-42,-45,-44,-36,-12,-10,-8,-6,-4,-2,-1,-72,-73,-74,-43,-47,109,-75,-89,-90,-85,-87,-76,-75,-84,-88,-86,]),'ANNOTATION':([17,30,31,32,33,34,],[68,-67,-68,-69,-70,-71,]),'EQ':([41,42,43,79,80,81,97,100,101,103,105,115,116,120,],[-40,-41,-42,-75,-80,-81,-47,113,-83,-77,-79,-75,-82,-78,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'st_expr':([0,117,],[1,121,]),'expr':([0,12,26,44,47,48,53,56,61,62,65,102,113,117,],[2,67,69,83,67,67,67,67,67,67,69,114,119,2,]),'expr_term0':([0,12,26,44,47,48,53,56,61,62,65,102,113,117,],[3,3,3,84,3,3,3,3,3,3,3,3,3,3,]),'expr_term1':([0,12,26,44,47,48,53,56,61,62,65,102,113,117,],[4,4,4,4,87,4,4,4,4,4,4,4,4,4,]),'expr_term2':([0,12,26,44,47,48,53,56,61,62,65,102,113,117,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'expr_term6':([0,12,26,44,47,48,53,56,61,62,65,102,113,117,],[6,6,6,6,6,88,6,6,6,6,6,6,6,6,]),'expr_term7':([0,12,26,44,47,48,53,56,61,62,65,102,113,117,],[7,7,7,7,7,7,89,7,7,7,7,7,7,7,]),'expr_term9':([0,12,26,44,47,48,53,56,61,62,65,102,113,117,],[8,8,8,8,8,8,8,90,91,8,8,8,8,8,]),'expr_factor':([0,12,26,44,47,48,53,56,61,62,65,102,113,117,],[9,66,9,9,9,9,9,9,9,92,9,9,9,9,]),'literal':([0,12,26,44,47,48,53,56,61,62,65,102,113,117,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'identifier':([0,12,26,44,47,48,53,56,61,62,65,68,102,113,117,],[11,11,11,11,11,11,11,11,11,11,11,95,11,11,11,]),'enclosed_expr':([0,9,12,26,44,47,48,53,56,61,62,65,66,92,102,113,117,],[12,63,12,12,12,12,12,12,12,12,12,12,63,63,12,12,12,]),'unit_value':([0,12,26,44,47,48,53,56,61,62,65,102,113,117,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'letexpr':([0,12,26,44,47,48,53,56,61,62,65,102,113,117,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'where_expr':([0,12,26,44,47,48,53,56,61,62,65,102,113,117,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'lambda_expr':([0,12,26,44,47,48,53,56,61,62,65,102,113,117,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'number':([0,12,26,44,47,48,53,56,61,62,65,102,113,117,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'concrete_number':([0,12,26,44,47,48,53,56,61,62,65,102,113,117,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'string':([0,12,26,44,47,48,53,56,61,62,65,68,102,113,117,],[19,19,19,19,19,19,19,19,19,19,19,93,19,19,19,]),'char':([0,12,26,44,47,48,53,56,61,62,65,68,102,113,117,],[20,20,20,20,20,20,20,20,20,20,20,94,20,20,20,]),'date':([0,12,26,44,47,48,53,56,61,62,65,102,113,117,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'datetime':([0,12,26,44,47,48,53,56,61,62,65,102,113,117,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'date_interval':([0,12,26,44,47,48,53,56,61,62,65,102,113,117,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'datetime_interval':([0,12,26,44,47,48,53,56,61,62,65,102,113,117,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'_identifier':([0,12,26,29,44,47,48,53,56,61,62,65,68,77,82,85,86,102,104,111,113,117,],[25,25,25,80,25,25,25,25,25,25,25,25,25,80,80,80,80,25,80,80,25,25,]),'_enclosed_operator':([0,9,12,26,29,44,47,48,53,56,61,62,65,66,77,82,85,86,92,102,104,111,113,117,],[27,27,27,27,81,27,27,27,27,27,27,27,27,27,81,81,81,81,27,27,81,81,27,27,]),'infixl_operator_0':([2,67,69,83,114,119,],[44,44,44,44,44,44,]),'infixr_operator_2':([5,26,65,82,],[47,73,73,73,]),'infixl_operator_2':([5,26,65,82,],[48,72,72,72,]),'infixl_operator_6':([6,26,65,82,88,],[53,74,74,74,53,]),'infixl_operator_7':([7,26,65,82,89,],[56,75,75,75,56,]),'infixr_operator_9':([9,26,65,66,82,92,],[61,76,76,61,76,61,]),'_st_operator':([26,65,82,],[71,71,71,]),'parameters':([29,77,82,85,86,111,],[78,101,101,101,101,101,]),'_param':([29,77,82,85,86,104,111,],[79,79,79,79,79,115,79,]),'equations':([77,85,86,],[98,107,108,]),'equation':([77,85,86,111,],[99,99,99,118,]),'pattern':([77,82,85,86,111,],[100,106,100,100,100,]),'_parameters':([79,115,],[103,120,]),'empty':([79,99,115,118,],[105,112,105,112,]),'_equation_set':([99,118,],[110,122,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> st_expr","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','parsers.py',434),
  ('expr_term9 -> expr_factor infixr_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','parsers.py',441),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','parsers.py',442),
  ('expr_term7 -> expr_term7 infixl_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','parsers.py',444),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','parsers.py',445),
  ('expr_term6 -> expr_term6 infixl_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','parsers.py',447),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','parsers.py',448),
  ('expr_term2 -> expr_term2 infixl_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','parsers.py',450),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','parsers.py',451),
  ('expr_term1 -> expr_term2 infixr_operator_2 expr_term1','expr_term1',3,'p_expressions_precedence_rules','parsers.py',453),
  ('expr_term1 -> expr_term2','expr_term1',1,'p_expressions_precedence_rules','parsers.py',454),
  ('expr_term0 -> expr infixl_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','parsers.py',456),
  ('expr_term0 -> expr_term1','expr_term0',1,'p_expressions_precedence_rules','parsers.py',457),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','parsers.py',470),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','parsers.py',472),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','parsers.py',474),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','parsers.py',475),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','parsers.py',476),
  ('expr_factor -> unit_value','expr_factor',1,'p_standalone_definitions','parsers.py',477),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','parsers.py',478),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','parsers.py',479),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','parsers.py',480),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','parsers.py',482),
  ('literal -> number','literal',1,'p_literals','parsers.py',490),
  ('literal -> concrete_number','literal',1,'p_literals','parsers.py',491),
  ('literal -> string','literal',1,'p_literals','parsers.py',492),
  ('literal -> char','literal',1,'p_literals','parsers.py',493),
  ('literal -> date','literal',1,'p_literals','parsers.py',494),
  ('literal -> datetime','literal',1,'p_literals','parsers.py',495),
  ('literal -> date_interval','literal',1,'p_literals','parsers.py',496),
  ('literal -> datetime_interval','literal',1,'p_literals','parsers.py',497),
  ('date -> DATE','date',1,'p_date','parsers.py',503),
  ('datetime -> DATETIME','datetime',1,'p_datetime','parsers.py',509),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','parsers.py',515),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','parsers.py',521),
  ('unit_value -> LPAREN RPAREN','unit_value',2,'p_unit_value','parsers.py',527),
  ('char -> CHAR','char',1,'p_char','parsers.py',533),
  ('string -> STRING','string',1,'p_string','parsers.py',538),
  ('identifier -> _identifier','identifier',1,'p_variable','parsers.py',543),
  ('_identifier -> UNDER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',550),
  ('_identifier -> UPPER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',551),
  ('_identifier -> LOWER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',552),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','parsers.py',559),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','parsers.py',564),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','parsers.py',565),
  ('enclosed_expr -> _enclosed_operator','enclosed_expr',1,'p_operators_as_expressios','parsers.py',571),
  ('_enclosed_operator -> LPAREN _st_operator RPAREN','_enclosed_operator',3,'p_enclosed_operator','parsers.py',577),
  ('infixr_operator_9 -> DOT_OPERATOR','infixr_operator_9',1,'p_operator','parsers.py',587),
  ('infixl_operator_7 -> STAR','infixl_operator_7',1,'p_operator','parsers.py',589),
  ('infixl_operator_7 -> SLASH','infixl_operator_7',1,'p_operator','parsers.py',590),
  ('infixl_operator_7 -> DOUBLESLASH','infixl_operator_7',1,'p_operator','parsers.py',591),
  ('infixl_operator_7 -> PERCENT','infixl_operator_7',1,'p_operator','parsers.py',592),
  ('infixl_operator_6 -> PLUS','infixl_operator_6',1,'p_operator','parsers.py',594),
  ('infixl_operator_6 -> MINUS','infixl_operator_6',1,'p_operator','parsers.py',595),
  ('infixr_operator_2 -> COLON','infixr_operator_2',1,'p_operator','parsers.py',597),
  ('infixl_operator_2 -> OPERATOR','infixl_operator_2',1,'p_operator','parsers.py',599),
  ('infixl_operator_2 -> ARROW','infixl_operator_2',1,'p_operator','parsers.py',600),
  ('infixl_operator_2 -> COMMA','infixl_operator_2',1,'p_operator','parsers.py',601),
  ('infixl_operator_0 -> TICK_OPERATOR','infixl_operator_0',1,'p_operator','parsers.py',603),
  ('_st_operator -> infixl_operator_2','_st_operator',1,'p_operator','parsers.py',605),
  ('_st_operator -> infixr_operator_2','_st_operator',1,'p_operator','parsers.py',606),
  ('_st_operator -> infixl_operator_6','_st_operator',1,'p_operator','parsers.py',607),
  ('_st_operator -> infixl_operator_7','_st_operator',1,'p_operator','parsers.py',608),
  ('_st_operator -> infixr_operator_9','_st_operator',1,'p_operator','parsers.py',609),
  ('operator -> infixl_operator_0','operator',1,'p_operator','parsers.py',611),
  ('operator -> _st_operator','operator',1,'p_operator','parsers.py',612),
  ('number -> BASE10_INTEGER','number',1,'p_integer','parsers.py',619),
  ('number -> BASE16_INTEGER','number',1,'p_integer','parsers.py',620),
  ('number -> BASE8_INTEGER','number',1,'p_integer','parsers.py',621),
  ('number -> BASE2_INTEGER','number',1,'p_integer','parsers.py',622),
  ('number -> FLOAT','number',1,'p_float','parsers.py',651),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','parsers.py',656),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','parsers.py',657),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','parsers.py',658),
  ('empty -> <empty>','empty',0,'p_empty','parsers.py',667),
  ('lambda_expr -> BACKSLASH parameters ARROW expr','lambda_expr',4,'p_lambda_definition','parsers.py',672),
  ('parameters -> _param _parameters','parameters',2,'p_parameters','parsers.py',680),
  ('_parameters -> SPACE _param _parameters','_parameters',3,'p_parameters','parsers.py',681),
  ('_parameters -> empty','_parameters',1,'p_empty__parameters','parsers.py',690),
  ('_param -> _identifier','_param',1,'p_param_identitifier','parsers.py',696),
  ('_param -> _enclosed_operator','_param',1,'p_param_operator','parsers.py',701),
  ('_param -> LPAREN pattern RPAREN','_param',3,'p_param_pattern','parsers.py',706),
  ('pattern -> parameters','pattern',1,'p_pattern','parsers.py',711),
  ('equation -> pattern EQ expr','equation',3,'p_equation','parsers.py',717),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','parsers.py',727),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','parsers.py',736),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','parsers.py',745),
  ('letexpr -> KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','parsers.py',755),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','parsers.py',763),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','parsers.py',764),
  ('type_expr -> type_function_expr','type_expr',1,'p_type_expr','parsers.py',774),
  ('type_expr -> type_term','type_expr',1,'p_type_expr','parsers.py',775),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','parsers.py',780),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','parsers.py',781),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','parsers.py',791),
  ('type_term -> type_factor','type_term',1,'p_type_term','parsers.py',792),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','parsers.py',797),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','parsers.py',809),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','parsers.py',810),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','parsers.py',818),
  ('type_variable -> LOWER_IDENTIFIER','type_variable',1,'p_type_variable','parsers.py',823),
  ('type_cons -> UPPER_IDENTIFIER','type_cons',1,'p_type_cons','parsers.py',828),
  ('type_factor -> type_variable','type_factor',1,'p_type_factor_identifier','parsers.py',833),
  ('type_factor -> type_cons','type_factor',1,'p_type_factor_identifier','parsers.py',834),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','parsers.py',841),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','parsers.py',846),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','parsers.py',851),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','parsers.py',852),
  ('program -> definitions','program',1,'p_program','parsers.py',858),
  ('definitions -> definition _definition_set','definitions',2,'p_definitions','parsers.py',874),
  ('_definition_set -> NEWLINE definition _definition_set','_definition_set',3,'p_definition_set','parsers.py',882),
  ('_definition_set -> empty','_definition_set',1,'p_definition_set2','parsers.py',890),
  ('definition -> nametype_decl','definition',1,'p_definition','parsers.py',896),
  ('definition -> valuedef','definition',1,'p_definition','parsers.py',897),
  ('definition -> datatype_definition','definition',1,'p_definition','parsers.py',898),
  ('valuedef -> equation','valuedef',1,'p_valuedef','parsers.py',904),
  ('nametype_decl -> _identifier COLON COLON st_type_expr','nametype_decl',4,'p_nametype_decl','parsers.py',910),
  ('nametype_decl -> LPAREN _st_operator RPAREN COLON COLON st_type_expr','nametype_decl',6,'p_nametype_decl_operators','parsers.py',919),
  ('datatype_definition -> _datatype_lhs EQ _data_rhs','datatype_definition',3,'p_datatype_definition','parsers.py',928),
  ('_datatype_lhs -> KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params','_datatype_lhs',4,'p_datatype_lhs','parsers.py',936),
  ('_cons_params -> SPACE LOWER_IDENTIFIER _cons_params','_cons_params',3,'p_datatype_cons_params','parsers.py',945),
  ('_cons_params -> empty','_cons_params',1,'p_datatype_cons_params_empty','parsers.py',954),
  ('_data_rhs -> data_cons _data_conses','_data_rhs',2,'p_datatype_body','parsers.py',960),
  ('_data_conses -> _maybe_padding PIPE data_cons _data_conses','_data_conses',4,'p_datatype_body','parsers.py',961),
  ('_data_conses -> empty','_data_conses',1,'p_datatype_conses_empty','parsers.py',970),
  ('data_cons -> _data_cons','data_cons',1,'p_data_cons','parsers.py',975),
  ('_data_cons -> UPPER_IDENTIFIER _cons_args','_data_cons',2,'p_bare_data_cons','parsers.py',981),
  ('_cons_args -> SPACE cons_arg _cons_args','_cons_args',3,'p_data_cons_args','parsers.py',986),
  ('_cons_args -> empty','_cons_args',1,'p_data_cons_args_empty','parsers.py',995),
  ('cons_arg -> type_variable','cons_arg',1,'p_cons_arg','parsers.py',1001),
  ('cons_arg -> type_cons','cons_arg',1,'p_cons_arg','parsers.py',1002),
  ('cons_arg -> _cons_arg_factor','cons_arg',1,'p_cons_arg','parsers.py',1003),
  ('_cons_arg_factor -> LPAREN type_expr RPAREN','_cons_arg_factor',3,'p_cons_arg_factor','parsers.py',1009),
  ('_cons_arg_factor -> LBRACKET type_expr RBRACKET','_cons_arg_factor',3,'p_cons_arg_factor_list','parsers.py',1015),
]
