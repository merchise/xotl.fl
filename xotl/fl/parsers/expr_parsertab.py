
# expr_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'st_exprrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON COMMA DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FLOAT KEYWORD_CLASS KEYWORD_DATA KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LOWER_IDENTIFIER LPAREN MINUS NEWLINE OPERATOR PADDING PERCENT PIPE PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATOR UNDER_IDENTIFIER UPPER_IDENTIFIERexpr_factor : expr_factor SPACE expr_factor\n    expr_term9 : expr_factor infixr_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infixl_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infixl_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infixl_operator_2 expr_term6\n               | expr_term6\n\n    expr_term1 : expr_term2 infixr_operator_2 expr_term1\n               | expr_term2\n\n    expr_term0 : expr infixl_operator_0 expr_term0\n               | expr_term1\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | unit_value\n                | empty_list_value\n                | letexpr\n                | where_expr\n                | lambda_expr\n                | simple_list_expr\n\n    st_type_expr : type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    simple_list_expr : LBRACKET _list_items RBRACKET\n    _list_items : expr _list_items_cont\n       _list_items_cont : COMMA expr _list_items_cont\n    _list_items : empty\n       _list_items_cont : empty\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    unit_value : LPAREN RPAREN\n    empty_list_value : LBRACKET RBRACKET\n    char : CHARstring : STRINGidentifier : _identifier\n\n    _identifier : UNDER_IDENTIFIER\n                   | UPPER_IDENTIFIER\n                   | LOWER_IDENTIFIER\n\n    enclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : _enclosed_operator\n    _enclosed_operator : LPAREN _st_operator RPAREN\n    infixr_operator_9 : DOT_OPERATOR\n\n    infixl_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infixl_operator_6 : PLUS\n                     | MINUS\n\n    infixr_operator_2 : COLON\n\n    infixl_operator_2 : OPERATOR\n                      | ARROW\n\n    infixl_operator_0 : TICK_OPERATOR\n\n    _st_operator : infixl_operator_2\n                 | infixr_operator_2\n                 | infixl_operator_6\n                 | infixl_operator_7\n                 | infixr_operator_9\n                 | COMMA\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH parameters ARROW expr\n    parameters : _param _parameters\n       _parameters : SPACE _param _parameters\n    _parameters : empty\n    _param : _non_empty_list_cons\n    _non_empty_list_cons : _param COLON _param\n    _param : _identifier_param : _enclosed_operator_param : LPAREN pattern RPAREN_param : LBRACKET RBRACKET_param : unit_valuepattern : parametersequation : pattern EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    type_expr : type_function_expr\n                 | type_termtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_variable : LOWER_IDENTIFIERtype_cons : UPPER_IDENTIFIERtype_factor : type_variable\n                   | type_cons\n\n    type_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET_maybe_padding : PADDING\n                      | empty\n    program : definitions\n    definitions : definition _definition_set\n    _definition_set : NEWLINE definition _definition_set\n    _definition_set : empty\n    definition : nametype_decl\n                  | valuedef\n                  | datatype_definition\n    valuedef : equation\n    nametype_decl : _identifier COLON COLON st_type_expr\n    nametype_decl : LPAREN _st_operator RPAREN COLON COLON st_type_expr\n    datatype_definition : _datatype_lhs EQ _data_rhs\n    _datatype_lhs : KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params\n    _cons_params : SPACE LOWER_IDENTIFIER _cons_params\n    _cons_params : empty\n    _data_rhs : data_cons _data_conses\n       _data_conses : _maybe_padding PIPE data_cons _data_conses\n    _data_conses : emptydata_cons : _data_cons_data_cons : UPPER_IDENTIFIER _cons_args_cons_args : SPACE cons_arg _cons_args\n    _cons_args : empty\n    cons_arg : type_variable\n       cons_arg : type_cons\n       cons_arg : _cons_arg_factor\n    _cons_arg_factor : LPAREN type_expr RPAREN\n    _cons_arg_factor : LBRACKET type_expr RBRACKET\n    '
    
_lr_action_items = {'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,80,84,90,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,113,116,118,119,123,124,127,128,129,130,131,136,137,138,140,141,],[28,-14,-15,-13,-11,-9,-7,-5,67,-16,-17,28,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-32,-33,-47,28,-54,28,90,-73,-74,-75,-76,-77,-46,-45,-39,-40,-41,-42,-48,-49,-50,28,-66,28,28,-63,-64,-65,28,-61,-62,28,-57,-58,-59,-60,28,28,-53,-56,28,67,-43,-44,90,90,-12,90,90,-10,-8,-6,-4,-2,-1,-78,-79,-80,-51,-55,-34,28,-81,28,90,90,-99,-100,-95,90,-97,28,-82,28,-81,-94,-98,-96,]),'LBRACKET':([0,12,28,29,30,32,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,84,90,95,96,106,107,110,116,118,119,128,130,136,],[30,30,30,-54,30,91,30,-66,30,30,-63,-64,-65,30,-61,-62,30,-57,-58,-59,-60,30,30,-56,30,91,91,91,91,-51,-55,30,30,91,91,91,30,30,]),'KEYWORD_LET':([0,12,28,29,30,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,106,107,110,116,130,136,],[31,31,31,-54,31,31,-66,31,31,-63,-64,-65,31,-61,-62,31,-57,-58,-59,-60,31,31,-56,31,-51,-55,31,31,31,31,]),'BACKSLASH':([0,12,28,29,30,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,106,107,110,116,130,136,],[32,32,32,-54,32,32,-66,32,32,-63,-64,-65,32,-61,-62,32,-57,-58,-59,-60,32,32,-56,32,-51,-55,32,32,32,32,]),'BASE10_INTEGER':([0,12,28,29,30,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,106,107,110,116,130,136,],[33,33,33,-54,33,33,-66,33,33,-63,-64,-65,33,-61,-62,33,-57,-58,-59,-60,33,33,-56,33,-51,-55,33,33,33,33,]),'BASE16_INTEGER':([0,12,28,29,30,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,106,107,110,116,130,136,],[34,34,34,-54,34,34,-66,34,34,-63,-64,-65,34,-61,-62,34,-57,-58,-59,-60,34,34,-56,34,-51,-55,34,34,34,34,]),'BASE8_INTEGER':([0,12,28,29,30,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,106,107,110,116,130,136,],[35,35,35,-54,35,35,-66,35,35,-63,-64,-65,35,-61,-62,35,-57,-58,-59,-60,35,35,-56,35,-51,-55,35,35,35,35,]),'BASE2_INTEGER':([0,12,28,29,30,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,106,107,110,116,130,136,],[36,36,36,-54,36,36,-66,36,36,-63,-64,-65,36,-61,-62,36,-57,-58,-59,-60,36,36,-56,36,-51,-55,36,36,36,36,]),'FLOAT':([0,12,28,29,30,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,106,107,110,116,130,136,],[37,37,37,-54,37,37,-66,37,37,-63,-64,-65,37,-61,-62,37,-57,-58,-59,-60,37,37,-56,37,-51,-55,37,37,37,37,]),'STRING':([0,12,28,29,30,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,70,106,107,110,116,130,136,],[38,38,38,-54,38,38,-66,38,38,-63,-64,-65,38,-61,-62,38,-57,-58,-59,-60,38,38,-56,38,38,-51,-55,38,38,38,38,]),'CHAR':([0,12,28,29,30,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,70,106,107,110,116,130,136,],[39,39,39,-54,39,39,-66,39,39,-63,-64,-65,39,-61,-62,39,-57,-58,-59,-60,39,39,-56,39,39,-51,-55,39,39,39,39,]),'DATE':([0,12,28,29,30,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,106,107,110,116,130,136,],[40,40,40,-54,40,40,-66,40,40,-63,-64,-65,40,-61,-62,40,-57,-58,-59,-60,40,40,-56,40,-51,-55,40,40,40,40,]),'DATETIME':([0,12,28,29,30,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,106,107,110,116,130,136,],[41,41,41,-54,41,41,-66,41,41,-63,-64,-65,41,-61,-62,41,-57,-58,-59,-60,41,41,-56,41,-51,-55,41,41,41,41,]),'DATE_INTERVAL':([0,12,28,29,30,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,106,107,110,116,130,136,],[42,42,42,-54,42,42,-66,42,42,-63,-64,-65,42,-61,-62,42,-57,-58,-59,-60,42,42,-56,42,-51,-55,42,42,42,42,]),'DATETIME_INTERVAL':([0,12,28,29,30,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,106,107,110,116,130,136,],[43,43,43,-54,43,43,-66,43,43,-63,-64,-65,43,-61,-62,43,-57,-58,-59,-60,43,43,-56,43,-51,-55,43,43,43,43,]),'UNDER_IDENTIFIER':([0,12,28,29,30,32,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,70,84,90,95,96,106,107,110,116,118,119,128,130,136,],[44,44,44,-54,44,44,44,-66,44,44,-63,-64,-65,44,-61,-62,44,-57,-58,-59,-60,44,44,-56,44,44,44,44,44,44,-51,-55,44,44,44,44,44,44,44,]),'UPPER_IDENTIFIER':([0,12,28,29,30,32,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,70,84,90,95,96,106,107,110,116,118,119,128,130,136,],[45,45,45,-54,45,45,45,-66,45,45,-63,-64,-65,45,-61,-62,45,-57,-58,-59,-60,45,45,-56,45,45,45,45,45,45,-51,-55,45,45,45,45,45,45,45,]),'LOWER_IDENTIFIER':([0,12,28,29,30,32,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,70,84,90,95,96,106,107,110,116,118,119,128,130,136,],[46,46,46,-54,46,46,46,-66,46,46,-63,-64,-65,46,-61,-62,46,-57,-58,-59,-60,46,46,-56,46,46,46,46,46,46,-51,-55,46,46,46,46,46,46,46,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,65,68,72,80,94,97,98,99,100,101,102,103,104,105,106,107,108,113,123,124,127,129,131,137,138,140,141,],[0,-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-32,-33,-47,-54,-73,-74,-75,-76,-77,-46,-45,-39,-40,-41,-42,-48,-49,-50,-53,-52,-43,-44,-12,-10,-8,-6,-4,-2,-1,-78,-79,-80,-51,-55,-34,-81,-99,-100,-95,-97,-82,-81,-94,-98,-96,]),'SPACE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,65,68,72,80,86,87,88,89,92,94,97,98,99,100,101,102,103,104,105,106,107,108,113,122,123,124,126,127,129,131,132,133,134,137,138,140,141,],[-14,-15,-13,-11,-9,-7,-5,64,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-32,-33,-47,-54,84,-73,-74,-75,-76,-77,-46,-45,-39,-40,-41,-42,-48,-49,-50,95,-53,64,-43,-44,119,-86,-88,-89,-92,-12,-10,-8,-6,-4,-2,-1,-78,-79,-80,-51,-55,-34,-81,-91,-99,-100,136,-95,-97,-82,-87,119,-90,-81,-94,-98,-96,]),'DOT_OPERATOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,65,67,68,72,80,90,94,97,98,99,100,101,102,103,104,105,106,107,108,113,123,124,127,129,131,137,138,140,141,],[-14,-15,-13,-11,-9,-7,-5,66,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-32,-33,-47,66,-54,-73,-74,-75,-76,-77,-46,-45,-39,-40,-41,-42,-48,-49,-50,-53,66,66,-43,-44,66,-12,-10,-8,-6,-4,-2,-1,-78,-79,-80,-51,-55,-34,-81,-99,-100,-95,-97,-82,-81,-94,-98,-96,]),'STAR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,65,67,68,72,80,90,94,97,98,99,100,101,102,103,104,105,106,107,108,113,123,124,127,129,131,137,138,140,141,],[-14,-15,-13,-11,-9,59,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-32,-33,-47,59,-54,-73,-74,-75,-76,-77,-46,-45,-39,-40,-41,-42,-48,-49,-50,-53,59,-3,-43,-44,59,-12,-10,-8,59,-4,-2,-1,-78,-79,-80,-51,-55,-34,-81,-99,-100,-95,-97,-82,-81,-94,-98,-96,]),'SLASH':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,65,67,68,72,80,90,94,97,98,99,100,101,102,103,104,105,106,107,108,113,123,124,127,129,131,137,138,140,141,],[-14,-15,-13,-11,-9,60,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-32,-33,-47,60,-54,-73,-74,-75,-76,-77,-46,-45,-39,-40,-41,-42,-48,-49,-50,-53,60,-3,-43,-44,60,-12,-10,-8,60,-4,-2,-1,-78,-79,-80,-51,-55,-34,-81,-99,-100,-95,-97,-82,-81,-94,-98,-96,]),'DOUBLESLASH':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,65,67,68,72,80,90,94,97,98,99,100,101,102,103,104,105,106,107,108,113,123,124,127,129,131,137,138,140,141,],[-14,-15,-13,-11,-9,61,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-32,-33,-47,61,-54,-73,-74,-75,-76,-77,-46,-45,-39,-40,-41,-42,-48,-49,-50,-53,61,-3,-43,-44,61,-12,-10,-8,61,-4,-2,-1,-78,-79,-80,-51,-55,-34,-81,-99,-100,-95,-97,-82,-81,-94,-98,-96,]),'PERCENT':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,65,67,68,72,80,90,94,97,98,99,100,101,102,103,104,105,106,107,108,113,123,124,127,129,131,137,138,140,141,],[-14,-15,-13,-11,-9,62,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-32,-33,-47,62,-54,-73,-74,-75,-76,-77,-46,-45,-39,-40,-41,-42,-48,-49,-50,-53,62,-3,-43,-44,62,-12,-10,-8,62,-4,-2,-1,-78,-79,-80,-51,-55,-34,-81,-99,-100,-95,-97,-82,-81,-94,-98,-96,]),'PLUS':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,65,67,68,72,80,90,94,97,98,99,100,101,102,103,104,105,106,107,108,113,123,124,127,129,131,137,138,140,141,],[-14,-15,-13,-11,56,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-32,-33,-47,56,-54,-73,-74,-75,-76,-77,-46,-45,-39,-40,-41,-42,-48,-49,-50,-53,56,-3,-43,-44,56,-12,-10,56,-6,-4,-2,-1,-78,-79,-80,-51,-55,-34,-81,-99,-100,-95,-97,-82,-81,-94,-98,-96,]),'MINUS':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,65,67,68,72,80,90,94,97,98,99,100,101,102,103,104,105,106,107,108,113,123,124,127,129,131,137,138,140,141,],[-14,-15,-13,-11,57,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-32,-33,-47,57,-54,-73,-74,-75,-76,-77,-46,-45,-39,-40,-41,-42,-48,-49,-50,-53,57,-3,-43,-44,57,-12,-10,57,-6,-4,-2,-1,-78,-79,-80,-51,-55,-34,-81,-99,-100,-95,-97,-82,-81,-94,-98,-96,]),'COLON':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,65,67,68,72,80,86,87,88,89,90,92,94,97,98,99,100,101,102,103,104,105,106,107,108,113,122,123,124,127,129,131,132,133,134,137,138,140,141,],[-14,-15,-13,52,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-32,-33,-47,52,-54,-73,-74,-75,-76,-77,-46,-45,-39,-40,-41,-42,-48,-49,-50,-53,52,-3,-43,-44,118,-86,-88,-89,52,-92,-12,-10,-8,-6,-4,-2,-1,-78,-79,-80,-51,-55,-34,-81,-91,-99,-100,-95,-97,-82,118,118,-90,-81,-94,-98,-96,]),'OPERATOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,65,67,68,72,80,90,94,97,98,99,100,101,102,103,104,105,106,107,108,113,123,124,127,129,131,137,138,140,141,],[-14,-15,-13,53,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-32,-33,-47,53,-54,-73,-74,-75,-76,-77,-46,-45,-39,-40,-41,-42,-48,-49,-50,-53,53,-3,-43,-44,53,-12,-10,-8,-6,-4,-2,-1,-78,-79,-80,-51,-55,-34,-81,-99,-100,-95,-97,-82,-81,-94,-98,-96,]),'ARROW':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,65,67,68,72,80,85,86,87,88,89,90,92,94,97,98,99,100,101,102,103,104,105,106,107,108,113,117,120,122,123,124,127,129,131,132,133,134,137,138,139,140,141,],[-14,-15,-13,54,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-32,-33,-47,54,-54,-73,-74,-75,-76,-77,-46,-45,-39,-40,-41,-42,-48,-49,-50,-53,54,-3,-43,-44,116,-81,-86,-88,-89,54,-92,-12,-10,-8,-6,-4,-2,-1,-78,-79,-80,-51,-55,-34,-81,-83,-85,-91,-99,-100,-95,-97,-82,-87,-81,-90,-81,-94,-84,-98,-96,]),'KEYWORD_WHERE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,65,68,69,71,72,80,82,93,94,97,98,99,100,101,102,103,104,105,106,107,108,113,123,124,125,127,129,131,137,138,140,141,],[48,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-32,-33,-47,-54,-73,-74,-75,-76,-77,-46,-45,-39,-40,-41,-42,-48,-49,-50,-53,-3,48,48,-43,-44,48,48,-12,-10,-8,-6,-4,-2,-1,-78,-79,-80,-51,-55,-34,-81,-99,-100,48,-95,-97,48,-81,48,-98,-96,]),'TICK_OPERATOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,65,68,69,71,72,80,82,93,94,97,98,99,100,101,102,103,104,105,106,107,108,113,123,124,125,127,129,131,137,138,140,141,],[49,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-32,-33,-47,-54,-73,-74,-75,-76,-77,-46,-45,-39,-40,-41,-42,-48,-49,-50,-53,-3,49,49,-43,-44,49,49,-12,-10,-8,-6,-4,-2,-1,-78,-79,-80,-51,-55,-34,-81,-99,-100,49,-95,-97,49,-81,49,-98,-96,]),'RPAREN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,52,53,54,56,57,59,60,61,62,65,66,68,71,72,73,74,75,76,77,78,79,80,86,87,88,89,90,92,94,97,98,99,100,101,102,103,104,105,106,107,108,113,115,117,120,121,122,123,124,127,129,131,132,133,134,137,138,139,140,141,],[-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-32,-33,-47,72,-54,-73,-74,-75,-76,-77,-46,-45,-39,-40,-41,-42,-48,-49,-50,-63,-64,-65,-61,-62,-57,-58,-59,-60,-53,-56,-52,106,-43,107,-67,-68,-69,-70,-71,-72,-44,-81,-86,-88,-89,72,-92,-12,-10,-8,-6,-4,-2,-1,-78,-79,-80,-51,-55,-34,-81,-93,-83,-85,134,-91,-99,-100,-95,-97,-82,-87,-81,-90,-81,-94,-84,-98,-96,]),'COMMA':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,65,67,68,72,80,82,90,94,97,98,99,100,101,102,103,104,105,106,107,108,113,123,124,125,127,129,131,137,138,140,141,],[-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-32,-33,-47,79,-54,-73,-74,-75,-76,-77,-46,-45,-39,-40,-41,-42,-48,-49,-50,-53,79,-52,-43,-44,110,79,-12,-10,-8,-6,-4,-2,-1,-78,-79,-80,-51,-55,-34,-81,-99,-100,110,-95,-97,-82,-81,-94,-98,-96,]),'RBRACKET':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,65,68,72,80,81,82,83,91,94,97,98,99,100,101,102,103,104,105,106,107,108,109,111,113,123,124,125,127,129,131,135,137,138,140,141,],[-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-32,-33,-47,-54,80,-73,-74,-75,-76,-77,-46,-45,-39,-40,-41,-42,-48,-49,-50,-53,-52,-43,-44,108,-81,-37,122,-12,-10,-8,-6,-4,-2,-1,-78,-79,-80,-51,-55,-34,-35,-38,-81,-99,-100,-81,-95,-97,-82,-36,-81,-94,-98,-96,]),'PADDING':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,65,68,72,80,94,97,98,99,100,101,102,103,104,105,106,107,108,113,123,124,127,129,131,137,138,140,141,],[-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-32,-33,-47,-54,-73,-74,-75,-76,-77,-46,-45,-39,-40,-41,-42,-48,-49,-50,96,-53,-52,-43,-44,-12,-10,-8,-6,-4,-2,-1,-78,-79,-80,-51,-55,-34,128,-99,-100,-95,-97,-82,128,-94,-98,-96,]),'KEYWORD_IN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,65,68,72,80,94,97,98,99,100,101,102,103,104,105,106,107,108,112,113,123,124,127,129,131,137,138,140,141,],[-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-32,-33,-47,-54,-73,-74,-75,-76,-77,-46,-45,-39,-40,-41,-42,-48,-49,-50,-53,-52,-43,-44,-12,-10,-8,-6,-4,-2,-1,-78,-79,-80,-51,-55,-34,126,-81,-99,-100,-95,-97,-82,-81,-94,-98,-96,]),'ANNOTATION':([19,33,34,35,36,37,],[70,-73,-74,-75,-76,-77,]),'EQ':([44,45,46,72,86,87,88,89,92,107,114,115,117,120,122,132,133,134,139,],[-48,-49,-50,-43,-81,-86,-88,-89,-92,-55,130,-93,-83,-85,-91,-87,-81,-90,-84,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'st_expr':([0,136,],[1,140,]),'expr':([0,12,28,30,47,50,51,55,58,63,64,67,110,116,130,136,],[2,69,71,82,93,69,69,69,69,69,69,71,125,131,138,2,]),'expr_term0':([0,12,28,30,47,50,51,55,58,63,64,67,110,116,130,136,],[3,3,3,3,94,3,3,3,3,3,3,3,3,3,3,3,]),'expr_term1':([0,12,28,30,47,50,51,55,58,63,64,67,110,116,130,136,],[4,4,4,4,4,97,4,4,4,4,4,4,4,4,4,4,]),'expr_term2':([0,12,28,30,47,50,51,55,58,63,64,67,110,116,130,136,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'expr_term6':([0,12,28,30,47,50,51,55,58,63,64,67,110,116,130,136,],[6,6,6,6,6,6,98,6,6,6,6,6,6,6,6,6,]),'expr_term7':([0,12,28,30,47,50,51,55,58,63,64,67,110,116,130,136,],[7,7,7,7,7,7,7,99,7,7,7,7,7,7,7,7,]),'expr_term9':([0,12,28,30,47,50,51,55,58,63,64,67,110,116,130,136,],[8,8,8,8,8,8,8,8,100,101,8,8,8,8,8,8,]),'expr_factor':([0,12,28,30,47,50,51,55,58,63,64,67,110,116,130,136,],[9,68,9,9,9,9,9,9,9,9,102,9,9,9,9,9,]),'literal':([0,12,28,30,47,50,51,55,58,63,64,67,110,116,130,136,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'identifier':([0,12,28,30,47,50,51,55,58,63,64,67,70,110,116,130,136,],[11,11,11,11,11,11,11,11,11,11,11,11,105,11,11,11,11,]),'enclosed_expr':([0,9,12,28,30,47,50,51,55,58,63,64,67,68,102,110,116,130,136,],[12,65,12,12,12,12,12,12,12,12,12,12,12,65,65,12,12,12,12,]),'unit_value':([0,12,28,30,32,47,50,51,55,58,63,64,67,84,90,95,96,110,116,118,119,128,130,136,],[13,13,13,13,92,13,13,13,13,13,13,13,13,92,92,92,92,13,13,92,92,92,13,13,]),'empty_list_value':([0,12,28,30,47,50,51,55,58,63,64,67,110,116,130,136,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'letexpr':([0,12,28,30,47,50,51,55,58,63,64,67,110,116,130,136,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'where_expr':([0,12,28,30,47,50,51,55,58,63,64,67,110,116,130,136,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'lambda_expr':([0,12,28,30,47,50,51,55,58,63,64,67,110,116,130,136,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'simple_list_expr':([0,12,28,30,47,50,51,55,58,63,64,67,110,116,130,136,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'number':([0,12,28,30,47,50,51,55,58,63,64,67,110,116,130,136,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'concrete_number':([0,12,28,30,47,50,51,55,58,63,64,67,110,116,130,136,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'string':([0,12,28,30,47,50,51,55,58,63,64,67,70,110,116,130,136,],[21,21,21,21,21,21,21,21,21,21,21,21,103,21,21,21,21,]),'char':([0,12,28,30,47,50,51,55,58,63,64,67,70,110,116,130,136,],[22,22,22,22,22,22,22,22,22,22,22,22,104,22,22,22,22,]),'date':([0,12,28,30,47,50,51,55,58,63,64,67,110,116,130,136,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'datetime':([0,12,28,30,47,50,51,55,58,63,64,67,110,116,130,136,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'date_interval':([0,12,28,30,47,50,51,55,58,63,64,67,110,116,130,136,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'datetime_interval':([0,12,28,30,47,50,51,55,58,63,64,67,110,116,130,136,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'_identifier':([0,12,28,30,32,47,50,51,55,58,63,64,67,70,84,90,95,96,110,116,118,119,128,130,136,],[27,27,27,27,88,27,27,27,27,27,27,27,27,27,88,88,88,88,27,27,88,88,88,27,27,]),'_enclosed_operator':([0,9,12,28,30,32,47,50,51,55,58,63,64,67,68,84,90,95,96,102,110,116,118,119,128,130,136,],[29,29,29,29,29,89,29,29,29,29,29,29,29,29,29,89,89,89,89,29,29,29,89,89,89,29,29,]),'infixl_operator_0':([2,69,71,82,93,125,131,138,],[47,47,47,47,47,47,47,47,]),'infixr_operator_2':([5,28,67,90,],[50,75,75,75,]),'infixl_operator_2':([5,28,67,90,],[51,74,74,74,]),'infixl_operator_6':([6,28,67,90,98,],[55,76,76,76,55,]),'infixl_operator_7':([7,28,67,90,99,],[58,77,77,77,58,]),'infixr_operator_9':([9,28,67,68,90,102,],[63,78,78,63,78,63,]),'_st_operator':([28,67,90,],[73,73,73,]),'_list_items':([30,],[81,]),'empty':([30,82,86,113,125,133,137,],[83,111,120,129,111,120,129,]),'parameters':([32,84,90,95,96,128,],[85,115,115,115,115,115,]),'_param':([32,84,90,95,96,118,119,128,],[86,86,86,86,86,132,133,86,]),'_non_empty_list_cons':([32,84,90,95,96,118,119,128,],[87,87,87,87,87,87,87,87,]),'_list_items_cont':([82,125,],[109,135,]),'equations':([84,95,96,],[112,123,124,]),'equation':([84,95,96,128,],[113,113,113,137,]),'pattern':([84,90,95,96,128,],[114,121,114,114,114,]),'_parameters':([86,133,],[117,139,]),'_equation_set':([113,137,],[127,141,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> st_expr","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','__init__.py',431),
  ('expr_term9 -> expr_factor infixr_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','__init__.py',438),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','__init__.py',439),
  ('expr_term7 -> expr_term7 infixl_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','__init__.py',441),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','__init__.py',442),
  ('expr_term6 -> expr_term6 infixl_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','__init__.py',444),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','__init__.py',445),
  ('expr_term2 -> expr_term2 infixl_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','__init__.py',447),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','__init__.py',448),
  ('expr_term1 -> expr_term2 infixr_operator_2 expr_term1','expr_term1',3,'p_expressions_precedence_rules','__init__.py',450),
  ('expr_term1 -> expr_term2','expr_term1',1,'p_expressions_precedence_rules','__init__.py',451),
  ('expr_term0 -> expr infixl_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','__init__.py',453),
  ('expr_term0 -> expr_term1','expr_term0',1,'p_expressions_precedence_rules','__init__.py',454),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','__init__.py',467),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','__init__.py',469),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','__init__.py',471),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','__init__.py',472),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','__init__.py',473),
  ('expr_factor -> unit_value','expr_factor',1,'p_standalone_definitions','__init__.py',474),
  ('expr_factor -> empty_list_value','expr_factor',1,'p_standalone_definitions','__init__.py',475),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','__init__.py',476),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','__init__.py',477),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','__init__.py',478),
  ('expr_factor -> simple_list_expr','expr_factor',1,'p_standalone_definitions','__init__.py',479),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','__init__.py',481),
  ('literal -> number','literal',1,'p_literals','__init__.py',489),
  ('literal -> concrete_number','literal',1,'p_literals','__init__.py',490),
  ('literal -> string','literal',1,'p_literals','__init__.py',491),
  ('literal -> char','literal',1,'p_literals','__init__.py',492),
  ('literal -> date','literal',1,'p_literals','__init__.py',493),
  ('literal -> datetime','literal',1,'p_literals','__init__.py',494),
  ('literal -> date_interval','literal',1,'p_literals','__init__.py',495),
  ('literal -> datetime_interval','literal',1,'p_literals','__init__.py',496),
  ('simple_list_expr -> LBRACKET _list_items RBRACKET','simple_list_expr',3,'p_list_expr','__init__.py',502),
  ('_list_items -> expr _list_items_cont','_list_items',2,'p_list_items','__init__.py',512),
  ('_list_items_cont -> COMMA expr _list_items_cont','_list_items_cont',3,'p_list_items','__init__.py',513),
  ('_list_items -> empty','_list_items',1,'p_list_items_empty','__init__.py',522),
  ('_list_items_cont -> empty','_list_items_cont',1,'p_list_items_empty','__init__.py',523),
  ('date -> DATE','date',1,'p_date','__init__.py',529),
  ('datetime -> DATETIME','datetime',1,'p_datetime','__init__.py',535),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','__init__.py',541),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','__init__.py',547),
  ('unit_value -> LPAREN RPAREN','unit_value',2,'p_unit_value','__init__.py',553),
  ('empty_list_value -> LBRACKET RBRACKET','empty_list_value',2,'p_empty_list_value','__init__.py',559),
  ('char -> CHAR','char',1,'p_char','__init__.py',565),
  ('string -> STRING','string',1,'p_string','__init__.py',570),
  ('identifier -> _identifier','identifier',1,'p_variable','__init__.py',575),
  ('_identifier -> UNDER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',582),
  ('_identifier -> UPPER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',583),
  ('_identifier -> LOWER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',584),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','__init__.py',591),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','__init__.py',596),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','__init__.py',597),
  ('enclosed_expr -> _enclosed_operator','enclosed_expr',1,'p_operators_as_expressios','__init__.py',603),
  ('_enclosed_operator -> LPAREN _st_operator RPAREN','_enclosed_operator',3,'p_enclosed_operator','__init__.py',609),
  ('infixr_operator_9 -> DOT_OPERATOR','infixr_operator_9',1,'p_operator','__init__.py',619),
  ('infixl_operator_7 -> STAR','infixl_operator_7',1,'p_operator','__init__.py',621),
  ('infixl_operator_7 -> SLASH','infixl_operator_7',1,'p_operator','__init__.py',622),
  ('infixl_operator_7 -> DOUBLESLASH','infixl_operator_7',1,'p_operator','__init__.py',623),
  ('infixl_operator_7 -> PERCENT','infixl_operator_7',1,'p_operator','__init__.py',624),
  ('infixl_operator_6 -> PLUS','infixl_operator_6',1,'p_operator','__init__.py',626),
  ('infixl_operator_6 -> MINUS','infixl_operator_6',1,'p_operator','__init__.py',627),
  ('infixr_operator_2 -> COLON','infixr_operator_2',1,'p_operator','__init__.py',629),
  ('infixl_operator_2 -> OPERATOR','infixl_operator_2',1,'p_operator','__init__.py',631),
  ('infixl_operator_2 -> ARROW','infixl_operator_2',1,'p_operator','__init__.py',632),
  ('infixl_operator_0 -> TICK_OPERATOR','infixl_operator_0',1,'p_operator','__init__.py',634),
  ('_st_operator -> infixl_operator_2','_st_operator',1,'p_operator','__init__.py',636),
  ('_st_operator -> infixr_operator_2','_st_operator',1,'p_operator','__init__.py',637),
  ('_st_operator -> infixl_operator_6','_st_operator',1,'p_operator','__init__.py',638),
  ('_st_operator -> infixl_operator_7','_st_operator',1,'p_operator','__init__.py',639),
  ('_st_operator -> infixr_operator_9','_st_operator',1,'p_operator','__init__.py',640),
  ('_st_operator -> COMMA','_st_operator',1,'p_operator','__init__.py',641),
  ('number -> BASE10_INTEGER','number',1,'p_integer','__init__.py',648),
  ('number -> BASE16_INTEGER','number',1,'p_integer','__init__.py',649),
  ('number -> BASE8_INTEGER','number',1,'p_integer','__init__.py',650),
  ('number -> BASE2_INTEGER','number',1,'p_integer','__init__.py',651),
  ('number -> FLOAT','number',1,'p_float','__init__.py',680),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','__init__.py',685),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','__init__.py',686),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','__init__.py',687),
  ('empty -> <empty>','empty',0,'p_empty','__init__.py',696),
  ('lambda_expr -> BACKSLASH parameters ARROW expr','lambda_expr',4,'p_lambda_definition','__init__.py',701),
  ('parameters -> _param _parameters','parameters',2,'p_parameters','__init__.py',709),
  ('_parameters -> SPACE _param _parameters','_parameters',3,'p_parameters','__init__.py',710),
  ('_parameters -> empty','_parameters',1,'p_empty__parameters','__init__.py',719),
  ('_param -> _non_empty_list_cons','_param',1,'p_param_list_cons','__init__.py',725),
  ('_non_empty_list_cons -> _param COLON _param','_non_empty_list_cons',3,'p_list_cons_for_param','__init__.py',731),
  ('_param -> _identifier','_param',1,'p_param_identitifier','__init__.py',737),
  ('_param -> _enclosed_operator','_param',1,'p_param_operator','__init__.py',742),
  ('_param -> LPAREN pattern RPAREN','_param',3,'p_param_pattern','__init__.py',747),
  ('_param -> LBRACKET RBRACKET','_param',2,'p_empty_list_as_param','__init__.py',752),
  ('_param -> unit_value','_param',1,'p_unit_value_as_param','__init__.py',758),
  ('pattern -> parameters','pattern',1,'p_pattern','__init__.py',764),
  ('equation -> pattern EQ expr','equation',3,'p_equation','__init__.py',770),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','__init__.py',780),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','__init__.py',789),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','__init__.py',798),
  ('letexpr -> KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','__init__.py',808),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','__init__.py',816),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','__init__.py',817),
  ('type_expr -> type_function_expr','type_expr',1,'p_type_expr','__init__.py',827),
  ('type_expr -> type_term','type_expr',1,'p_type_expr','__init__.py',828),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','__init__.py',833),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','__init__.py',834),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','__init__.py',844),
  ('type_term -> type_factor','type_term',1,'p_type_term','__init__.py',845),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','__init__.py',850),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','__init__.py',862),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','__init__.py',863),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','__init__.py',871),
  ('type_variable -> LOWER_IDENTIFIER','type_variable',1,'p_type_variable','__init__.py',876),
  ('type_cons -> UPPER_IDENTIFIER','type_cons',1,'p_type_cons','__init__.py',881),
  ('type_factor -> type_variable','type_factor',1,'p_type_factor_identifier','__init__.py',886),
  ('type_factor -> type_cons','type_factor',1,'p_type_factor_identifier','__init__.py',887),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','__init__.py',894),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','__init__.py',899),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','__init__.py',904),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','__init__.py',905),
  ('program -> definitions','program',1,'p_program','__init__.py',911),
  ('definitions -> definition _definition_set','definitions',2,'p_definitions','__init__.py',927),
  ('_definition_set -> NEWLINE definition _definition_set','_definition_set',3,'p_definition_set','__init__.py',935),
  ('_definition_set -> empty','_definition_set',1,'p_definition_set2','__init__.py',943),
  ('definition -> nametype_decl','definition',1,'p_definition','__init__.py',949),
  ('definition -> valuedef','definition',1,'p_definition','__init__.py',950),
  ('definition -> datatype_definition','definition',1,'p_definition','__init__.py',951),
  ('valuedef -> equation','valuedef',1,'p_valuedef','__init__.py',957),
  ('nametype_decl -> _identifier COLON COLON st_type_expr','nametype_decl',4,'p_nametype_decl','__init__.py',963),
  ('nametype_decl -> LPAREN _st_operator RPAREN COLON COLON st_type_expr','nametype_decl',6,'p_nametype_decl_operators','__init__.py',972),
  ('datatype_definition -> _datatype_lhs EQ _data_rhs','datatype_definition',3,'p_datatype_definition','__init__.py',981),
  ('_datatype_lhs -> KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params','_datatype_lhs',4,'p_datatype_lhs','__init__.py',989),
  ('_cons_params -> SPACE LOWER_IDENTIFIER _cons_params','_cons_params',3,'p_datatype_cons_params','__init__.py',998),
  ('_cons_params -> empty','_cons_params',1,'p_datatype_cons_params_empty','__init__.py',1007),
  ('_data_rhs -> data_cons _data_conses','_data_rhs',2,'p_datatype_body','__init__.py',1013),
  ('_data_conses -> _maybe_padding PIPE data_cons _data_conses','_data_conses',4,'p_datatype_body','__init__.py',1014),
  ('_data_conses -> empty','_data_conses',1,'p_datatype_conses_empty','__init__.py',1023),
  ('data_cons -> _data_cons','data_cons',1,'p_data_cons','__init__.py',1028),
  ('_data_cons -> UPPER_IDENTIFIER _cons_args','_data_cons',2,'p_bare_data_cons','__init__.py',1034),
  ('_cons_args -> SPACE cons_arg _cons_args','_cons_args',3,'p_data_cons_args','__init__.py',1039),
  ('_cons_args -> empty','_cons_args',1,'p_data_cons_args_empty','__init__.py',1048),
  ('cons_arg -> type_variable','cons_arg',1,'p_cons_arg','__init__.py',1054),
  ('cons_arg -> type_cons','cons_arg',1,'p_cons_arg','__init__.py',1055),
  ('cons_arg -> _cons_arg_factor','cons_arg',1,'p_cons_arg','__init__.py',1056),
  ('_cons_arg_factor -> LPAREN type_expr RPAREN','_cons_arg_factor',3,'p_cons_arg_factor','__init__.py',1062),
  ('_cons_arg_factor -> LBRACKET type_expr RBRACKET','_cons_arg_factor',3,'p_cons_arg_factor_list','__init__.py',1068),
]
