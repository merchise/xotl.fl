
# expr_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'st_exprrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON COMMA DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FATARROW FLOAT KEYWORD_CLASS KEYWORD_DATA KEYWORD_DERIVING KEYWORD_FORALL KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LOWER_IDENTIFIER LPAREN MINUS NEWLINE OPERATOR PADDING PERCENT PIPE PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATOR UNDER_IDENTIFIER UPPER_IDENTIFIERexpr_factor : expr_factor SPACE expr_factor\n    expr_term9 : expr_factor infixr_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infixl_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infixl_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infixl_operator_2 expr_term6\n               | expr_term6\n\n    expr_term1 : expr_term2 infixr_operator_2 expr_term1\n               | expr_term2\n\n    expr_term0 : expr infixl_operator_0 expr_term0\n               | expr_term1\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | letexpr\n                | where_expr\n                | lambda_expr\n                | simple_list_expr\n                | simple_tuple_expr\n\n    st_type_expr : type_expr\n                 | constrained_type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    simple_tuple_expr : LPAREN _list_items RPAREN\n    simple_list_expr : LBRACKET _list_items RBRACKET\n    _list_items : expr _list_items_cont\n       _list_items_cont : COMMA expr _list_items_cont\n    _list_items : empty\n       _list_items_cont : empty\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    char : CHARstring : STRINGidentifier : _identifier\n\n    _identifier : UNDER_IDENTIFIER\n                   | UPPER_IDENTIFIER\n                   | LOWER_IDENTIFIER\n\n    enclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : _enclosed_operator\n    _enclosed_operator : LPAREN _st_operator RPAREN\n    infixr_operator_9 : DOT_OPERATOR\n\n    infixl_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infixl_operator_6 : PLUS\n                     | MINUS\n\n    infixr_operator_2 : COLON\n\n    infixl_operator_2 : OPERATOR\n                      | ARROW\n\n    infixl_operator_0 : TICK_OPERATOR\n\n    _st_operator : infixl_operator_2\n                 | infixr_operator_2\n                 | infixl_operator_6\n                 | infixl_operator_7\n                 | infixr_operator_9\n                 | COMMA\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH patterns ARROW expr\n    \n    pattern : literal\n    pattern : cons_pattern\n    pattern : list_cons_pattern\n    pattern : tuple_cons_pattern\n    pattern : empty_list_pattern\n    pattern : empty_tuple_pattern\n    pattern : LOWER_IDENTIFIER\n       pattern : UNDER_IDENTIFIER\n    pattern : UPPER_IDENTIFIER\n    list_cons_pattern : pattern COLON pattern\n    cons_pattern : LPAREN _identifier SPACE patterns RPARENempty_list_pattern : LBRACKET RBRACKETempty_tuple_pattern : LPAREN RPARENtuple_cons_pattern : LPAREN patterns_comma_sep RPAREN\n    patterns : pattern _patterns\n       patterns_comma_sep : pattern _patterns_comma\n       _patterns : SPACE pattern _patterns\n       _patterns_comma : COMMA pattern _patterns_comma\n    _patterns : empty\n       _patterns_comma : empty\n    equation : _identifier _patterns EQ expr\n       equation : _enclosed_operator _patterns EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE local_definitions KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    type_expr : type_scheme type_function_expr\n                 | type_scheme type_termtype_scheme : emptytype_scheme : KEYWORD_FORALL SPACE _type_scheme_generics_type_scheme_generics : _identifier SPACE _type_scheme_generics_type_scheme_generics : _identifier DOT_OPERATORtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_variable : LOWER_IDENTIFIERtype_cons : UPPER_IDENTIFIERtype_factor : type_variable\n                   | type_cons\n\n    type_factor : LPAREN _maybe_padding _type_expr_list _maybe_padding RPARENtype_factor : LPAREN RPAREN_type_expr_list : type_expr COMMA _type_expr_list_trail\n       _type_expr_list_trail : type_expr COMMA _type_expr_list_trail\n    _type_expr_list_trail : type_expr\n    type_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKETconstrained_type_expr : _constrained_type_expr_bare\n\n    _constrained_type_expr_bare : type_constraints FATARROW type_expr\n    instance : KEYWORD_INSTANCE _constrained_type_expr_bare KEYWORD_WHERE                   PADDING local_definitionstype_constraints : _type_expr_list_trail\n    _maybe_padding : PADDING\n                      | empty\n    program : definitions _trailing_new_lines\n    _trailing_new_lines : empty\n       _trailing_new_lines : NEWLINE _trailing_new_lines\n    definitions : definition _definition_set\n    _definition_set : newlines definition _definition_set\n    newlines : NEWLINE _trailing_new_lines_definition_set : empty\n       _definition_set : newlines\n    definition : local_definition\n                  | datatype_definition\n                  | typeclass\n                  | instance\n    \n    local_definition : nametype_decl\n                     | valuedef\n    local_definitions : local_definition _local_definition_set\n    _local_definition_set : PADDING definition _local_definition_set\n    _local_definition_set : empty\n    typeclass : KEYWORD_CLASS _typeclass_def                    KEYWORD_WHERE PADDING local_definitions\n    _typeclass_def : simple_type_constraint\n    _typeclass_def : simple_type_constraints FATARROW simple_type_constraint\n    simple_type_constraint : UPPER_IDENTIFIER SPACE type_variable\n    simple_type_constraints : simple_type_constraint _simple_type_constraints\n       _simple_type_constraints : COMMA simple_type_constraint _simple_type_constraints\n    _simple_type_constraints : empty\n    valuedef : equation\n    nametype_decl : _identifier COLON COLON st_type_expr\n    nametype_decl : LPAREN _st_operator RPAREN COLON COLON st_type_expr\n    datatype_definition : _datatype_lhs EQ _data_rhs\n    _datatype_lhs : KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params\n    _cons_params : SPACE LOWER_IDENTIFIER _cons_params\n    _cons_params : empty\n    _data_rhs : data_cons _data_conses\n       _data_conses : _maybe_padding PIPE data_cons _data_conses\n    _data_conses : empty_data_conses : _maybe_padding KEYWORD_DERIVING                        LPAREN _derivations_list RPARENdata_cons : _data_cons_data_cons : UPPER_IDENTIFIER _cons_args_cons_args : SPACE cons_arg _cons_args\n    _cons_args : empty\n    cons_arg : type_variable\n       cons_arg : type_cons\n       cons_arg : _cons_arg_factor\n    _cons_arg_factor : LPAREN type_expr RPAREN\n    _cons_arg_factor : LBRACKET type_expr RBRACKET\n    _derivations_list : UPPER_IDENTIFIER _derivations_list_trail\n       _derivations_list_trail : COMMA UPPER_IDENTIFIER _derivations_list_trail\n    _derivations_list_trail : empty\n    '
    
_lr_action_items = {'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,80,92,97,98,99,100,101,102,103,104,105,107,108,109,110,112,114,115,124,126,127,137,138,139,142,146,152,155,158,160,161,162,164,172,174,175,177,181,182,193,194,201,203,206,218,219,226,227,232,236,238,240,244,247,249,250,252,253,254,261,266,267,271,277,286,291,293,],[27,-14,-15,-13,-11,-9,-7,-5,66,-16,-17,27,-19,-20,-21,-22,-23,-26,-27,-28,-29,-30,-31,-32,-33,-46,27,-53,92,27,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-47,-48,-49,27,-65,27,27,-62,-63,-64,27,-60,-61,27,-56,-57,-58,-59,27,27,-52,-55,27,66,121,92,-12,141,141,-10,-8,-6,-4,-2,-1,-77,-78,-79,-50,27,-34,-54,27,92,92,-35,-108,-80,-109,121,-81,92,92,-104,141,-106,27,-80,-80,27,27,-80,-107,226,-112,-102,-103,-105,-80,-80,-80,-80,-80,-139,266,121,121,-80,226,-80,-140,-80,-113,280,-80,-80,226,-115,226,-80,-114,]),'KEYWORD_LET':([0,12,27,28,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,110,112,115,124,164,175,177,],[29,29,29,-53,29,29,-65,29,29,-62,-63,-64,29,-60,-61,29,-56,-57,-58,-59,29,29,-55,29,-50,29,-54,29,29,29,29,]),'BACKSLASH':([0,12,27,28,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,110,112,115,124,164,175,177,],[30,30,30,-53,30,30,-65,30,30,-62,-63,-64,30,-60,-61,30,-56,-57,-58,-59,30,30,-55,30,-50,30,-54,30,30,30,30,]),'LBRACKET':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,92,110,112,115,124,126,127,155,158,164,172,174,175,177,193,194,218,219,226,227,232,236,238,247,249,250,252,253,254,266,267,271,277,286,291,293,],[31,31,31,-53,93,31,31,-65,31,31,-62,-63,-64,31,-60,-61,31,-56,-57,-58,-59,31,31,-55,31,93,-50,31,-54,31,93,93,93,93,31,-80,-80,31,31,227,-112,-80,-80,-80,-80,-80,-139,267,-80,227,-80,-140,-80,-113,-80,-80,227,-115,227,-80,-114,]),'BASE10_INTEGER':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,92,110,112,115,124,126,127,155,158,164,175,177,],[32,32,32,-53,32,32,32,-65,32,32,-62,-63,-64,32,-60,-61,32,-56,-57,-58,-59,32,32,-55,32,32,-50,32,-54,32,32,32,32,32,32,32,32,]),'BASE16_INTEGER':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,92,110,112,115,124,126,127,155,158,164,175,177,],[33,33,33,-53,33,33,33,-65,33,33,-62,-63,-64,33,-60,-61,33,-56,-57,-58,-59,33,33,-55,33,33,-50,33,-54,33,33,33,33,33,33,33,33,]),'BASE8_INTEGER':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,92,110,112,115,124,126,127,155,158,164,175,177,],[34,34,34,-53,34,34,34,-65,34,34,-62,-63,-64,34,-60,-61,34,-56,-57,-58,-59,34,34,-55,34,34,-50,34,-54,34,34,34,34,34,34,34,34,]),'BASE2_INTEGER':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,92,110,112,115,124,126,127,155,158,164,175,177,],[35,35,35,-53,35,35,35,-65,35,35,-62,-63,-64,35,-60,-61,35,-56,-57,-58,-59,35,35,-55,35,35,-50,35,-54,35,35,35,35,35,35,35,35,]),'FLOAT':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,92,110,112,115,124,126,127,155,158,164,175,177,],[36,36,36,-53,36,36,36,-65,36,36,-62,-63,-64,36,-60,-61,36,-56,-57,-58,-59,36,36,-55,36,36,-50,36,-54,36,36,36,36,36,36,36,36,]),'STRING':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,69,92,110,112,115,124,126,127,155,158,164,175,177,],[37,37,37,-53,37,37,37,-65,37,37,-62,-63,-64,37,-60,-61,37,-56,-57,-58,-59,37,37,-55,37,37,37,-50,37,-54,37,37,37,37,37,37,37,37,]),'CHAR':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,69,92,110,112,115,124,126,127,155,158,164,175,177,],[38,38,38,-53,38,38,38,-65,38,38,-62,-63,-64,38,-60,-61,38,-56,-57,-58,-59,38,38,-55,38,38,38,-50,38,-54,38,38,38,38,38,38,38,38,]),'DATE':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,92,110,112,115,124,126,127,155,158,164,175,177,],[39,39,39,-53,39,39,39,-65,39,39,-62,-63,-64,39,-60,-61,39,-56,-57,-58,-59,39,39,-55,39,39,-50,39,-54,39,39,39,39,39,39,39,39,]),'DATETIME':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,92,110,112,115,124,126,127,155,158,164,175,177,],[40,40,40,-53,40,40,40,-65,40,40,-62,-63,-64,40,-60,-61,40,-56,-57,-58,-59,40,40,-55,40,40,-50,40,-54,40,40,40,40,40,40,40,40,]),'DATE_INTERVAL':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,92,110,112,115,124,126,127,155,158,164,175,177,],[41,41,41,-53,41,41,41,-65,41,41,-62,-63,-64,41,-60,-61,41,-56,-57,-58,-59,41,41,-55,41,41,-50,41,-54,41,41,41,41,41,41,41,41,]),'DATETIME_INTERVAL':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,92,110,112,115,124,126,127,155,158,164,175,177,],[42,42,42,-53,42,42,42,-65,42,42,-62,-63,-64,42,-60,-61,42,-56,-57,-58,-59,42,42,-55,42,42,-50,42,-54,42,42,42,42,42,42,42,42,]),'UNDER_IDENTIFIER':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,69,80,92,98,99,110,112,115,124,126,127,146,155,158,161,164,175,177,230,240,244,276,],[43,43,43,-53,90,43,43,-65,43,43,-62,-63,-64,43,-60,-61,43,-56,-57,-58,-59,43,43,-55,43,43,43,132,43,43,-50,43,-54,43,90,90,43,90,90,43,43,43,43,43,43,43,43,]),'UPPER_IDENTIFIER':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,69,80,92,98,99,110,112,115,124,126,127,146,155,158,161,164,171,172,174,175,177,184,193,194,196,213,215,218,219,226,227,230,232,236,238,240,244,247,249,250,252,253,254,260,266,267,271,276,277,280,286,291,293,307,],[44,44,44,-53,91,44,44,-65,44,44,-62,-63,-64,44,-60,-61,44,-56,-57,-58,-59,44,44,-55,44,44,44,133,44,44,-50,44,-54,44,91,91,44,91,91,44,44,188,-80,-80,44,44,210,229,-112,231,188,188,-80,-80,-80,-80,44,-80,-139,229,44,44,-80,229,-80,-140,-80,-113,210,-80,-80,229,44,-115,297,229,-80,-114,310,]),'LOWER_IDENTIFIER':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,69,80,92,98,99,110,112,115,124,126,127,146,155,158,161,164,172,174,175,177,193,194,216,218,219,226,227,230,232,236,238,240,244,247,249,250,252,253,254,256,266,267,271,276,277,286,291,293,],[45,45,45,-53,89,45,45,-65,45,45,-62,-63,-64,45,-60,-61,45,-56,-57,-58,-59,45,45,-55,45,45,45,134,45,45,-50,45,-54,45,89,89,45,89,89,45,45,-80,-80,45,45,228,-112,228,-80,-80,-80,-80,45,-80,-139,228,45,45,-80,228,-80,-140,-80,-113,278,-80,-80,228,45,-115,228,-80,-114,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,67,97,100,101,102,103,104,105,107,108,109,110,114,115,137,138,139,142,152,160,162,181,182,201,203,206,],[0,-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-26,-27,-28,-29,-30,-31,-32,-33,-46,-53,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-47,-48,-49,-52,-51,-12,-10,-8,-6,-4,-2,-1,-77,-78,-79,-50,-34,-54,-35,-108,-80,-109,-81,-104,-106,-80,-107,-102,-103,-105,]),'SPACE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,64,67,82,83,84,85,86,87,88,89,90,91,97,100,101,102,103,104,105,107,108,109,110,114,115,120,123,129,130,132,133,134,136,137,138,139,140,142,144,152,153,154,156,160,162,173,176,181,182,188,195,201,203,204,206,210,223,224,225,228,229,231,251,255,262,263,264,265,272,278,298,299,300,301,302,304,],[-14,-15,-13,-11,-9,-7,-5,63,-16,-17,-18,-19,-20,-21,-22,-23,-26,-27,-28,-29,-30,-31,-32,-33,-46,-53,80,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-47,-48,-49,98,-52,63,127,-82,-83,-84,-85,-86,-87,-88,-89,-90,-12,-10,-8,-6,-4,-2,-1,-77,-78,-79,-50,-34,-54,127,127,155,-94,-47,-48,-49,-93,-35,-108,-80,127,-109,164,-81,-91,127,-95,-104,-106,196,-54,-80,-107,216,230,-102,-103,-92,-105,238,249,-126,-127,-124,-125,256,-129,276,238,-180,-181,-182,286,256,-183,-184,286,-128,-133,-134,]),'DOT_OPERATOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,97,100,101,102,103,104,105,107,108,109,110,114,115,121,137,138,139,141,142,152,160,162,181,182,201,203,206,255,],[-14,-15,-13,-11,-9,-7,-5,65,-16,-17,-18,-19,-20,-21,-22,-23,-26,-27,-28,-29,-30,-31,-32,-33,-46,65,-53,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-47,-48,-49,-52,65,65,-12,-10,-8,-6,-4,-2,-1,-77,-78,-79,-50,-34,-54,65,-35,-108,-80,65,-109,-81,-104,-106,-80,-107,-102,-103,-105,277,]),'STAR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,97,100,101,102,103,104,105,107,108,109,110,114,115,121,137,138,139,141,142,152,160,162,181,182,201,203,206,],[-14,-15,-13,-11,-9,58,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-26,-27,-28,-29,-30,-31,-32,-33,-46,58,-53,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-47,-48,-49,-52,58,-3,-12,-10,-8,58,-4,-2,-1,-77,-78,-79,-50,-34,-54,58,-35,-108,-80,58,-109,-81,-104,-106,-80,-107,-102,-103,-105,]),'SLASH':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,97,100,101,102,103,104,105,107,108,109,110,114,115,121,137,138,139,141,142,152,160,162,181,182,201,203,206,],[-14,-15,-13,-11,-9,59,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-26,-27,-28,-29,-30,-31,-32,-33,-46,59,-53,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-47,-48,-49,-52,59,-3,-12,-10,-8,59,-4,-2,-1,-77,-78,-79,-50,-34,-54,59,-35,-108,-80,59,-109,-81,-104,-106,-80,-107,-102,-103,-105,]),'DOUBLESLASH':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,97,100,101,102,103,104,105,107,108,109,110,114,115,121,137,138,139,141,142,152,160,162,181,182,201,203,206,],[-14,-15,-13,-11,-9,60,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-26,-27,-28,-29,-30,-31,-32,-33,-46,60,-53,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-47,-48,-49,-52,60,-3,-12,-10,-8,60,-4,-2,-1,-77,-78,-79,-50,-34,-54,60,-35,-108,-80,60,-109,-81,-104,-106,-80,-107,-102,-103,-105,]),'PERCENT':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,97,100,101,102,103,104,105,107,108,109,110,114,115,121,137,138,139,141,142,152,160,162,181,182,201,203,206,],[-14,-15,-13,-11,-9,61,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-26,-27,-28,-29,-30,-31,-32,-33,-46,61,-53,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-47,-48,-49,-52,61,-3,-12,-10,-8,61,-4,-2,-1,-77,-78,-79,-50,-34,-54,61,-35,-108,-80,61,-109,-81,-104,-106,-80,-107,-102,-103,-105,]),'PLUS':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,97,100,101,102,103,104,105,107,108,109,110,114,115,121,137,138,139,141,142,152,160,162,181,182,201,203,206,],[-14,-15,-13,-11,55,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-26,-27,-28,-29,-30,-31,-32,-33,-46,55,-53,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-47,-48,-49,-52,55,-3,-12,-10,55,-6,-4,-2,-1,-77,-78,-79,-50,-34,-54,55,-35,-108,-80,55,-109,-81,-104,-106,-80,-107,-102,-103,-105,]),'MINUS':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,97,100,101,102,103,104,105,107,108,109,110,114,115,121,137,138,139,141,142,152,160,162,181,182,201,203,206,],[-14,-15,-13,-11,56,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-26,-27,-28,-29,-30,-31,-32,-33,-46,56,-53,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-47,-48,-49,-52,56,-3,-12,-10,56,-6,-4,-2,-1,-77,-78,-79,-50,-34,-54,56,-35,-108,-80,56,-109,-81,-104,-106,-80,-107,-102,-103,-105,]),'COLON':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,82,83,84,85,86,87,88,89,90,91,97,100,101,102,103,104,105,107,108,109,110,114,115,120,121,130,132,133,134,135,136,137,138,139,141,142,148,152,153,154,156,160,162,176,180,181,182,201,202,203,204,206,],[-14,-15,-13,51,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-26,-27,-28,-29,-30,-31,-32,-33,-46,51,-53,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-47,-48,-49,-52,51,-3,126,-82,-83,-84,-85,-86,-87,-88,-89,-90,-12,-10,-8,-6,-4,-2,-1,-77,-78,-79,-50,-34,-54,148,51,-94,-89,-90,-88,126,-93,-35,-108,-80,51,-109,174,-81,126,126,-95,-104,-106,202,126,-80,-107,-102,232,-103,-92,-105,]),'OPERATOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,97,100,101,102,103,104,105,107,108,109,110,114,115,121,137,138,139,141,142,152,160,162,181,182,201,203,206,],[-14,-15,-13,52,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-26,-27,-28,-29,-30,-31,-32,-33,-46,52,-53,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-47,-48,-49,-52,52,-3,-12,-10,-8,-6,-4,-2,-1,-77,-78,-79,-50,-34,-54,52,-35,-108,-80,52,-109,-81,-104,-106,-80,-107,-102,-103,-105,]),'ARROW':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,81,82,83,84,85,86,87,88,89,90,91,97,100,101,102,103,104,105,107,108,109,110,114,115,121,125,128,130,136,137,138,139,141,142,152,153,154,156,160,162,178,181,182,201,203,204,206,221,222,223,224,225,228,229,248,251,272,284,287,288,300,301,302,304,309,],[-14,-15,-13,53,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-26,-27,-28,-29,-30,-31,-32,-33,-46,53,-53,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-47,-48,-49,-52,53,-3,124,-80,-82,-83,-84,-85,-86,-87,-88,-89,-90,-12,-10,-8,-6,-4,-2,-1,-77,-78,-79,-50,-34,-54,53,-96,-100,-94,-93,-35,-108,-80,53,-109,-81,-91,-80,-95,-104,-106,-98,-80,-107,-102,-103,-92,-105,247,-118,-119,-126,-127,-124,-125,-120,-129,-80,247,-122,-123,-80,-128,-133,-134,-121,]),'KEYWORD_WHERE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,67,68,70,95,96,97,100,101,102,103,104,105,106,107,108,109,110,114,115,137,138,139,142,143,152,160,162,181,182,185,186,189,201,203,206,220,221,222,223,224,225,228,229,242,243,245,248,251,272,284,285,287,288,300,301,302,304,309,],[47,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-26,-27,-28,-29,-30,-31,-32,-33,-46,-53,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-47,-48,-49,-52,-3,47,47,47,47,-12,-10,-8,-6,-4,-2,-1,47,-77,-78,-79,-50,-34,-54,-35,-108,-80,-109,47,47,-104,-106,-80,-107,211,-159,217,47,47,-105,-110,-111,-118,-119,-126,-127,-124,-125,-160,-161,-136,-120,-129,-80,-117,-116,-122,-123,-80,-128,-133,-134,-121,]),'TICK_OPERATOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,67,68,70,95,96,97,100,101,102,103,104,105,106,107,108,109,110,114,115,137,138,139,142,143,152,160,162,181,182,201,203,206,],[48,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-26,-27,-28,-29,-30,-31,-32,-33,-46,-53,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-47,-48,-49,-52,-3,48,48,48,48,-12,-10,-8,-6,-4,-2,-1,48,-77,-78,-79,-50,-34,-54,-35,-108,-80,-109,48,48,-104,-106,-80,-107,48,48,-105,]),'RPAREN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,51,52,53,55,56,58,59,60,61,64,65,67,70,71,72,73,74,75,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,97,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,125,128,130,131,132,133,134,135,136,137,138,139,142,143,150,152,153,154,156,157,159,160,162,163,178,179,180,181,182,191,201,203,204,205,206,220,221,222,223,224,225,226,228,229,236,246,248,251,252,272,273,274,282,284,285,287,288,289,290,296,297,300,301,302,303,304,306,308,309,310,311,],[-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-26,-27,-28,-29,-30,-31,-32,-33,-46,-80,-53,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-47,-48,-49,-62,-63,-64,-60,-61,-56,-57,-58,-59,-52,-55,-51,110,114,115,-38,-66,-67,-68,-69,-70,-71,-80,-82,-83,-84,-85,-86,-87,-88,-89,-90,130,-12,-10,-8,-6,-4,-2,-1,110,-77,-78,-79,-50,-36,-39,-34,-54,-96,-100,-94,156,-89,-90,-88,-80,-93,-35,-108,-80,-109,-80,176,-81,-91,-80,-95,-97,-101,-104,-106,-37,-98,204,-80,-80,-107,-132,-102,-103,-92,-99,-105,-110,-111,-118,-119,-126,-127,251,-124,-125,-139,-131,-120,-129,-140,-80,-80,-80,298,-117,-116,-122,-123,301,302,305,-80,-80,-128,-133,-130,-134,-185,-187,-121,-80,-186,]),'COMMA':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,70,83,84,85,86,87,88,89,90,91,95,97,100,101,102,103,104,105,107,108,109,110,114,115,121,130,132,133,134,135,136,137,138,139,141,142,143,152,153,156,160,162,180,181,182,186,191,198,201,203,204,206,220,221,222,223,224,225,228,229,241,243,248,251,272,274,284,285,287,288,297,300,301,302,304,309,310,],[-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-26,-27,-28,-29,-30,-31,-32,-33,-46,79,-53,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-47,-48,-49,-52,79,-51,112,-82,-83,-84,-85,-86,-87,-88,-89,-90,112,-12,-10,-8,-6,-4,-2,-1,-77,-78,-79,-50,-34,-54,79,-94,-89,-90,-88,158,-93,-35,-108,-80,79,-109,112,-81,-91,-95,-104,-106,158,-80,-107,213,219,219,-102,-103,-92,-105,-110,-111,-118,-119,-126,-127,-124,-125,213,-161,-120,-129,-80,291,-117,-116,-122,-123,307,-80,-128,-133,-134,-121,307,]),'RBRACKET':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,67,73,93,94,95,97,100,101,102,103,104,105,107,108,109,110,111,113,114,115,137,138,139,142,143,152,160,162,163,181,182,201,203,206,220,221,222,223,224,225,228,229,236,248,251,252,272,275,283,284,285,287,288,292,300,301,302,304,309,],[-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-26,-27,-28,-29,-30,-31,-32,-33,-46,-53,-80,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-47,-48,-49,-52,-51,-38,136,137,-80,-12,-10,-8,-6,-4,-2,-1,-77,-78,-79,-50,-36,-39,-34,-54,-35,-108,-80,-109,-80,-81,-104,-106,-37,-80,-107,-102,-103,-105,-110,-111,-118,-119,-126,-127,-124,-125,-139,-120,-129,-140,-80,-80,299,-117,-116,-122,-123,304,-80,-128,-133,-134,-121,]),'PADDING':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,64,67,97,100,101,102,103,104,105,107,108,109,110,114,115,117,118,119,122,137,138,139,142,145,147,152,160,162,165,166,167,168,169,181,182,183,191,197,198,199,200,201,203,206,207,208,209,210,211,217,220,221,222,223,224,225,226,227,228,229,233,235,237,239,245,246,247,248,251,259,262,263,264,265,268,270,272,273,274,275,279,281,284,285,287,288,295,298,299,300,301,302,303,304,305,309,],[-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-26,-27,-28,-29,-30,-31,-32,-33,-46,-53,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-47,-48,-49,99,-52,-51,-12,-10,-8,-6,-4,-2,-1,-77,-78,-79,-50,-34,-54,146,-153,-154,-165,-35,-108,161,-109,-155,-157,-81,-104,-106,146,-149,-150,-151,-152,161,-107,-156,-132,-166,-24,-25,-135,-102,-103,-105,-168,236,-176,-80,240,244,-110,-111,-118,-119,-126,-127,236,236,-124,-125,-172,-174,-177,-179,-136,-131,236,-120,-129,-167,-80,-180,-181,-182,-158,-137,-80,236,236,236,236,-178,-117,-116,-122,-123,-173,-183,-184,-80,-128,-133,-130,-134,-175,-121,]),'KEYWORD_IN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,67,97,100,101,102,103,104,105,107,108,109,110,114,115,116,117,118,119,122,137,138,139,142,145,147,152,160,162,165,166,167,168,169,181,182,183,197,198,199,200,201,203,206,207,208,209,210,220,221,222,223,224,225,228,229,233,235,237,239,245,248,251,259,262,263,264,265,268,270,272,279,281,284,285,287,288,295,298,299,300,301,302,304,305,309,],[-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-26,-27,-28,-29,-30,-31,-32,-33,-46,-53,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-47,-48,-49,-52,-51,-12,-10,-8,-6,-4,-2,-1,-77,-78,-79,-50,-34,-54,144,-80,-153,-154,-165,-35,-108,-80,-109,-155,-157,-81,-104,-106,-80,-149,-150,-151,-152,-80,-107,-156,-166,-24,-25,-135,-102,-103,-105,-168,-80,-176,-80,-110,-111,-118,-119,-126,-127,-124,-125,-172,-174,-177,-179,-136,-120,-129,-167,-80,-180,-181,-182,-158,-137,-80,-80,-178,-117,-116,-122,-123,-173,-183,-184,-80,-128,-133,-134,-175,-121,]),'EQ':([18,19,20,21,22,23,24,25,26,32,33,34,35,36,37,38,39,40,41,42,43,44,45,83,84,85,86,87,88,89,90,91,107,108,109,115,120,123,128,130,136,140,149,151,153,154,156,170,176,178,204,231,257,258,278,294,],[-26,-27,-28,-29,-30,-31,-32,-33,-46,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-47,-48,-49,-82,-83,-84,-85,-86,-87,-88,-89,-90,-77,-78,-79,-54,-80,-80,-100,-94,-93,-80,175,177,-91,-80,-95,184,-54,-98,-92,-80,-169,-171,-80,-170,]),'ANNOTATION':([18,32,33,34,35,36,],[69,-72,-73,-74,-75,-76,]),'KEYWORD_CLASS':([146,],[171,]),'KEYWORD_INSTANCE':([146,],[172,]),'KEYWORD_DATA':([146,],[173,]),'KEYWORD_FORALL':([172,174,218,219,226,227,232,236,250,252,253,266,267,291,],[195,195,195,195,-80,-80,195,-139,195,-140,195,195,195,195,]),'FATARROW':([186,187,190,191,192,198,212,214,220,221,222,223,224,225,228,229,241,243,246,248,251,269,272,284,285,287,288,300,301,302,304,309,],[-80,215,218,-132,-138,-132,-162,-164,-110,-111,-118,-119,-126,-127,-124,-125,-80,-161,-131,-120,-129,-163,-80,-117,-116,-122,-123,-80,-128,-133,-134,-121,]),'PIPE':([208,209,210,228,229,234,235,236,237,239,262,263,264,265,279,281,298,299,],[-80,-176,-80,-124,-125,260,-140,-139,-177,-179,-80,-180,-181,-182,-80,-178,-183,-184,]),'KEYWORD_DERIVING':([208,209,210,228,229,234,235,236,237,239,262,263,264,265,279,281,298,299,],[-80,-176,-80,-124,-125,261,-140,-139,-177,-179,-80,-180,-181,-182,-80,-178,-183,-184,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'st_expr':([0,164,],[1,182,]),'expr':([0,12,27,31,46,49,50,54,57,62,63,66,112,124,164,175,177,],[2,68,70,95,96,68,68,68,68,68,68,106,143,152,2,201,203,]),'expr_term0':([0,12,27,31,46,49,50,54,57,62,63,66,112,124,164,175,177,],[3,3,3,3,97,3,3,3,3,3,3,3,3,3,3,3,3,]),'expr_term1':([0,12,27,31,46,49,50,54,57,62,63,66,112,124,164,175,177,],[4,4,4,4,4,100,4,4,4,4,4,4,4,4,4,4,4,]),'expr_term2':([0,12,27,31,46,49,50,54,57,62,63,66,112,124,164,175,177,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'expr_term6':([0,12,27,31,46,49,50,54,57,62,63,66,112,124,164,175,177,],[6,6,6,6,6,6,101,6,6,6,6,6,6,6,6,6,6,]),'expr_term7':([0,12,27,31,46,49,50,54,57,62,63,66,112,124,164,175,177,],[7,7,7,7,7,7,7,102,7,7,7,7,7,7,7,7,7,]),'expr_term9':([0,12,27,31,46,49,50,54,57,62,63,66,112,124,164,175,177,],[8,8,8,8,8,8,8,8,103,104,8,8,8,8,8,8,8,]),'expr_factor':([0,12,27,31,46,49,50,54,57,62,63,66,112,124,164,175,177,],[9,67,9,9,9,9,9,9,9,9,105,9,9,9,9,9,9,]),'literal':([0,12,27,30,31,46,49,50,54,57,62,63,66,92,112,124,126,127,155,158,164,175,177,],[10,10,10,83,10,10,10,10,10,10,10,10,10,83,10,10,83,83,83,83,10,10,10,]),'identifier':([0,12,27,31,46,49,50,54,57,62,63,66,69,112,124,164,175,177,],[11,11,11,11,11,11,11,11,11,11,11,11,109,11,11,11,11,11,]),'enclosed_expr':([0,9,12,27,31,46,49,50,54,57,62,63,66,67,105,112,124,164,175,177,],[12,64,12,12,12,12,12,12,12,12,12,12,12,64,64,12,12,12,12,12,]),'letexpr':([0,12,27,31,46,49,50,54,57,62,63,66,112,124,164,175,177,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'where_expr':([0,12,27,31,46,49,50,54,57,62,63,66,112,124,164,175,177,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'lambda_expr':([0,12,27,31,46,49,50,54,57,62,63,66,112,124,164,175,177,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'simple_list_expr':([0,12,27,31,46,49,50,54,57,62,63,66,112,124,164,175,177,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'simple_tuple_expr':([0,12,27,31,46,49,50,54,57,62,63,66,112,124,164,175,177,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'number':([0,12,27,30,31,46,49,50,54,57,62,63,66,92,112,124,126,127,155,158,164,175,177,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'concrete_number':([0,12,27,30,31,46,49,50,54,57,62,63,66,92,112,124,126,127,155,158,164,175,177,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'string':([0,12,27,30,31,46,49,50,54,57,62,63,66,69,92,112,124,126,127,155,158,164,175,177,],[20,20,20,20,20,20,20,20,20,20,20,20,20,107,20,20,20,20,20,20,20,20,20,20,]),'char':([0,12,27,30,31,46,49,50,54,57,62,63,66,69,92,112,124,126,127,155,158,164,175,177,],[21,21,21,21,21,21,21,21,21,21,21,21,21,108,21,21,21,21,21,21,21,21,21,21,]),'date':([0,12,27,30,31,46,49,50,54,57,62,63,66,92,112,124,126,127,155,158,164,175,177,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'datetime':([0,12,27,30,31,46,49,50,54,57,62,63,66,92,112,124,126,127,155,158,164,175,177,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'date_interval':([0,12,27,30,31,46,49,50,54,57,62,63,66,92,112,124,126,127,155,158,164,175,177,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'datetime_interval':([0,12,27,30,31,46,49,50,54,57,62,63,66,92,112,124,126,127,155,158,164,175,177,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'_identifier':([0,12,27,31,46,49,50,54,57,62,63,66,69,80,92,98,99,112,124,146,161,164,175,177,230,240,244,276,],[26,26,26,26,26,26,26,26,26,26,26,26,26,120,129,140,140,26,26,120,140,26,26,26,255,120,120,255,]),'_enclosed_operator':([0,9,12,27,31,46,49,50,54,57,62,63,66,67,80,98,99,105,112,124,146,161,164,175,177,240,244,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,123,123,123,28,28,28,123,123,28,28,28,123,123,]),'infixl_operator_0':([2,68,70,95,96,106,143,152,201,203,],[46,46,46,46,46,46,46,46,46,46,]),'infixr_operator_2':([5,27,66,121,141,],[49,75,75,75,75,]),'infixl_operator_2':([5,27,66,121,141,],[50,74,74,74,74,]),'infixl_operator_6':([6,27,66,101,121,141,],[54,76,76,54,76,76,]),'infixl_operator_7':([7,27,66,102,121,141,],[57,77,77,57,77,77,]),'infixr_operator_9':([9,27,66,67,105,121,141,],[62,78,78,62,62,78,78,]),'_list_items':([27,31,],[71,94,]),'_st_operator':([27,66,121,141,],[72,72,150,72,]),'empty':([27,31,70,82,95,117,120,123,135,139,140,143,154,165,172,174,180,181,186,208,210,218,219,226,227,231,232,241,247,250,253,262,266,267,272,273,274,275,278,279,291,297,300,310,],[73,73,113,128,113,147,128,128,159,162,128,113,128,147,194,194,159,162,214,235,239,194,194,252,252,258,194,214,252,194,194,239,194,194,288,252,252,252,258,235,194,308,288,308,]),'patterns':([30,155,],[81,179,]),'pattern':([30,92,126,127,155,158,],[82,135,153,154,82,180,]),'cons_pattern':([30,92,126,127,155,158,],[84,84,84,84,84,84,]),'list_cons_pattern':([30,92,126,127,155,158,],[85,85,85,85,85,85,]),'tuple_cons_pattern':([30,92,126,127,155,158,],[86,86,86,86,86,86,]),'empty_list_pattern':([30,92,126,127,155,158,],[87,87,87,87,87,87,]),'empty_tuple_pattern':([30,92,126,127,155,158,],[88,88,88,88,88,88,]),'_list_items_cont':([70,95,143,],[111,111,163,]),'local_definitions':([80,240,244,],[116,268,270,]),'local_definition':([80,146,240,244,],[117,166,117,117,]),'nametype_decl':([80,146,240,244,],[118,118,118,118,]),'valuedef':([80,146,240,244,],[119,119,119,119,]),'equation':([80,98,99,146,161,240,244,],[122,139,139,122,181,122,122,]),'_patterns':([82,120,123,140,154,],[125,149,151,149,178,]),'patterns_comma_sep':([92,],[131,]),'equations':([98,99,],[138,142,]),'_local_definition_set':([117,165,],[145,183,]),'_patterns_comma':([135,180,],[157,205,]),'_equation_set':([139,181,],[160,206,]),'definition':([146,],[165,]),'datatype_definition':([146,],[167,]),'typeclass':([146,],[168,]),'instance':([146,],[169,]),'_datatype_lhs':([146,],[170,]),'_typeclass_def':([171,],[185,]),'simple_type_constraint':([171,213,215,],[186,241,242,]),'simple_type_constraints':([171,],[187,]),'_constrained_type_expr_bare':([172,174,232,],[189,200,200,]),'type_constraints':([172,174,232,],[190,190,190,]),'type_expr':([172,174,218,219,232,250,253,266,267,291,],[191,198,245,191,198,274,275,282,283,191,]),'_type_expr_list_trail':([172,174,219,232,291,],[192,192,246,192,303,]),'type_scheme':([172,174,218,219,232,250,253,266,267,291,],[193,193,193,193,193,193,193,193,193,193,]),'st_type_expr':([174,232,],[197,259,]),'constrained_type_expr':([174,232,],[199,199,]),'_data_rhs':([184,],[207,]),'data_cons':([184,260,],[208,279,]),'_data_cons':([184,260,],[209,209,]),'_simple_type_constraints':([186,241,],[212,269,]),'type_function_expr':([193,271,],[220,285,]),'type_term':([193,271,],[221,284,]),'type_app_expression':([193,271,],[222,222,]),'type_factor':([193,249,271,286,],[223,272,223,300,]),'type_variable':([193,216,238,249,271,286,],[224,243,263,224,224,224,]),'type_cons':([193,238,249,271,286,],[225,264,225,225,225,]),'_data_conses':([208,279,],[233,295,]),'_maybe_padding':([208,226,227,247,273,274,275,279,],[234,250,253,271,289,290,292,234,]),'_cons_args':([210,262,],[237,281,]),'_app_args_non_empty':([223,],[248,]),'_type_scheme_generics':([230,276,],[254,293,]),'_cons_params':([231,278,],[257,294,]),'cons_arg':([238,],[262,]),'_cons_arg_factor':([238,],[265,]),'_type_expr_list':([250,],[273,]),'_app_args':([272,300,],[287,309,]),'_derivations_list':([280,],[296,]),'_derivations_list_trail':([297,310,],[306,311,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> st_expr","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','__init__.py',525),
  ('expr_term9 -> expr_factor infixr_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','__init__.py',532),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','__init__.py',533),
  ('expr_term7 -> expr_term7 infixl_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','__init__.py',535),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','__init__.py',536),
  ('expr_term6 -> expr_term6 infixl_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','__init__.py',538),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','__init__.py',539),
  ('expr_term2 -> expr_term2 infixl_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','__init__.py',541),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','__init__.py',542),
  ('expr_term1 -> expr_term2 infixr_operator_2 expr_term1','expr_term1',3,'p_expressions_precedence_rules','__init__.py',544),
  ('expr_term1 -> expr_term2','expr_term1',1,'p_expressions_precedence_rules','__init__.py',545),
  ('expr_term0 -> expr infixl_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','__init__.py',547),
  ('expr_term0 -> expr_term1','expr_term0',1,'p_expressions_precedence_rules','__init__.py',548),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','__init__.py',561),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','__init__.py',563),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','__init__.py',565),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','__init__.py',566),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','__init__.py',567),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','__init__.py',568),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','__init__.py',569),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','__init__.py',570),
  ('expr_factor -> simple_list_expr','expr_factor',1,'p_standalone_definitions','__init__.py',571),
  ('expr_factor -> simple_tuple_expr','expr_factor',1,'p_standalone_definitions','__init__.py',572),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','__init__.py',574),
  ('st_type_expr -> constrained_type_expr','st_type_expr',1,'p_standalone_definitions','__init__.py',575),
  ('literal -> number','literal',1,'p_literals','__init__.py',583),
  ('literal -> concrete_number','literal',1,'p_literals','__init__.py',584),
  ('literal -> string','literal',1,'p_literals','__init__.py',585),
  ('literal -> char','literal',1,'p_literals','__init__.py',586),
  ('literal -> date','literal',1,'p_literals','__init__.py',587),
  ('literal -> datetime','literal',1,'p_literals','__init__.py',588),
  ('literal -> date_interval','literal',1,'p_literals','__init__.py',589),
  ('literal -> datetime_interval','literal',1,'p_literals','__init__.py',590),
  ('simple_tuple_expr -> LPAREN _list_items RPAREN','simple_tuple_expr',3,'p_tuple_expr','__init__.py',596),
  ('simple_list_expr -> LBRACKET _list_items RBRACKET','simple_list_expr',3,'p_list_expr','__init__.py',603),
  ('_list_items -> expr _list_items_cont','_list_items',2,'p_list_items','__init__.py',610),
  ('_list_items_cont -> COMMA expr _list_items_cont','_list_items_cont',3,'p_list_items','__init__.py',611),
  ('_list_items -> empty','_list_items',1,'p_list_items_empty','__init__.py',617),
  ('_list_items_cont -> empty','_list_items_cont',1,'p_list_items_empty','__init__.py',618),
  ('date -> DATE','date',1,'p_date','__init__.py',624),
  ('datetime -> DATETIME','datetime',1,'p_datetime','__init__.py',630),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','__init__.py',636),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','__init__.py',642),
  ('char -> CHAR','char',1,'p_char','__init__.py',648),
  ('string -> STRING','string',1,'p_string','__init__.py',653),
  ('identifier -> _identifier','identifier',1,'p_variable','__init__.py',658),
  ('_identifier -> UNDER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',665),
  ('_identifier -> UPPER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',666),
  ('_identifier -> LOWER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',667),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','__init__.py',674),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','__init__.py',679),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','__init__.py',680),
  ('enclosed_expr -> _enclosed_operator','enclosed_expr',1,'p_operators_as_expressios','__init__.py',686),
  ('_enclosed_operator -> LPAREN _st_operator RPAREN','_enclosed_operator',3,'p_enclosed_operator','__init__.py',692),
  ('infixr_operator_9 -> DOT_OPERATOR','infixr_operator_9',1,'p_operator','__init__.py',702),
  ('infixl_operator_7 -> STAR','infixl_operator_7',1,'p_operator','__init__.py',704),
  ('infixl_operator_7 -> SLASH','infixl_operator_7',1,'p_operator','__init__.py',705),
  ('infixl_operator_7 -> DOUBLESLASH','infixl_operator_7',1,'p_operator','__init__.py',706),
  ('infixl_operator_7 -> PERCENT','infixl_operator_7',1,'p_operator','__init__.py',707),
  ('infixl_operator_6 -> PLUS','infixl_operator_6',1,'p_operator','__init__.py',709),
  ('infixl_operator_6 -> MINUS','infixl_operator_6',1,'p_operator','__init__.py',710),
  ('infixr_operator_2 -> COLON','infixr_operator_2',1,'p_operator','__init__.py',712),
  ('infixl_operator_2 -> OPERATOR','infixl_operator_2',1,'p_operator','__init__.py',714),
  ('infixl_operator_2 -> ARROW','infixl_operator_2',1,'p_operator','__init__.py',715),
  ('infixl_operator_0 -> TICK_OPERATOR','infixl_operator_0',1,'p_operator','__init__.py',717),
  ('_st_operator -> infixl_operator_2','_st_operator',1,'p_operator','__init__.py',719),
  ('_st_operator -> infixr_operator_2','_st_operator',1,'p_operator','__init__.py',720),
  ('_st_operator -> infixl_operator_6','_st_operator',1,'p_operator','__init__.py',721),
  ('_st_operator -> infixl_operator_7','_st_operator',1,'p_operator','__init__.py',722),
  ('_st_operator -> infixr_operator_9','_st_operator',1,'p_operator','__init__.py',723),
  ('_st_operator -> COMMA','_st_operator',1,'p_operator','__init__.py',724),
  ('number -> BASE10_INTEGER','number',1,'p_integer','__init__.py',731),
  ('number -> BASE16_INTEGER','number',1,'p_integer','__init__.py',732),
  ('number -> BASE8_INTEGER','number',1,'p_integer','__init__.py',733),
  ('number -> BASE2_INTEGER','number',1,'p_integer','__init__.py',734),
  ('number -> FLOAT','number',1,'p_float','__init__.py',763),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','__init__.py',768),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','__init__.py',769),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','__init__.py',770),
  ('empty -> <empty>','empty',0,'p_empty','__init__.py',779),
  ('lambda_expr -> BACKSLASH patterns ARROW expr','lambda_expr',4,'p_lambda_definition','__init__.py',784),
  ('pattern -> literal','pattern',1,'p_pattern','__init__.py',793),
  ('pattern -> cons_pattern','pattern',1,'p_pattern','__init__.py',794),
  ('pattern -> list_cons_pattern','pattern',1,'p_pattern','__init__.py',795),
  ('pattern -> tuple_cons_pattern','pattern',1,'p_pattern','__init__.py',796),
  ('pattern -> empty_list_pattern','pattern',1,'p_pattern','__init__.py',797),
  ('pattern -> empty_tuple_pattern','pattern',1,'p_pattern','__init__.py',798),
  ('pattern -> LOWER_IDENTIFIER','pattern',1,'p_var_pattern','__init__.py',804),
  ('pattern -> UNDER_IDENTIFIER','pattern',1,'p_var_pattern','__init__.py',805),
  ('pattern -> UPPER_IDENTIFIER','pattern',1,'p_simplecons_pattern','__init__.py',811),
  ('list_cons_pattern -> pattern COLON pattern','list_cons_pattern',3,'p_list_cons_for_param','__init__.py',817),
  ('cons_pattern -> LPAREN _identifier SPACE patterns RPAREN','cons_pattern',5,'p_param_pattern','__init__.py',823),
  ('empty_list_pattern -> LBRACKET RBRACKET','empty_list_pattern',2,'p_empty_list_as_pattern','__init__.py',828),
  ('empty_tuple_pattern -> LPAREN RPAREN','empty_tuple_pattern',2,'p_unit_value_as_pattern','__init__.py',835),
  ('tuple_cons_pattern -> LPAREN patterns_comma_sep RPAREN','tuple_cons_pattern',3,'p_tuple_cons_pattern','__init__.py',841),
  ('patterns -> pattern _patterns','patterns',2,'p_patterns','__init__.py',849),
  ('patterns_comma_sep -> pattern _patterns_comma','patterns_comma_sep',2,'p_patterns','__init__.py',850),
  ('_patterns -> SPACE pattern _patterns','_patterns',3,'p_patterns','__init__.py',851),
  ('_patterns_comma -> COMMA pattern _patterns_comma','_patterns_comma',3,'p_patterns','__init__.py',852),
  ('_patterns -> empty','_patterns',1,'p_patterns_empty','__init__.py',858),
  ('_patterns_comma -> empty','_patterns_comma',1,'p_patterns_empty','__init__.py',859),
  ('equation -> _identifier _patterns EQ expr','equation',4,'p_equation','__init__.py',865),
  ('equation -> _enclosed_operator _patterns EQ expr','equation',4,'p_equation','__init__.py',866),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','__init__.py',876),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','__init__.py',885),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','__init__.py',894),
  ('letexpr -> KEYWORD_LET SPACE local_definitions KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','__init__.py',904),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','__init__.py',912),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','__init__.py',913),
  ('type_expr -> type_scheme type_function_expr','type_expr',2,'p_type_expr','__init__.py',923),
  ('type_expr -> type_scheme type_term','type_expr',2,'p_type_expr','__init__.py',924),
  ('type_scheme -> empty','type_scheme',1,'p_type_scheme_empty','__init__.py',933),
  ('type_scheme -> KEYWORD_FORALL SPACE _type_scheme_generics','type_scheme',3,'p_type_scheme','__init__.py',937),
  ('_type_scheme_generics -> _identifier SPACE _type_scheme_generics','_type_scheme_generics',3,'p_type_scheme_generics','__init__.py',944),
  ('_type_scheme_generics -> _identifier DOT_OPERATOR','_type_scheme_generics',2,'p_last_type_scheme_generic','__init__.py',949),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','__init__.py',954),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','__init__.py',955),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','__init__.py',965),
  ('type_term -> type_factor','type_term',1,'p_type_term','__init__.py',966),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','__init__.py',971),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','__init__.py',983),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','__init__.py',984),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','__init__.py',990),
  ('type_variable -> LOWER_IDENTIFIER','type_variable',1,'p_type_variable','__init__.py',995),
  ('type_cons -> UPPER_IDENTIFIER','type_cons',1,'p_type_cons','__init__.py',1000),
  ('type_factor -> type_variable','type_factor',1,'p_type_factor_identifier','__init__.py',1005),
  ('type_factor -> type_cons','type_factor',1,'p_type_factor_identifier','__init__.py',1006),
  ('type_factor -> LPAREN _maybe_padding _type_expr_list _maybe_padding RPAREN','type_factor',5,'p_type_factor_tuple','__init__.py',1013),
  ('type_factor -> LPAREN RPAREN','type_factor',2,'p_type_factor_unit_type','__init__.py',1019),
  ('_type_expr_list -> type_expr COMMA _type_expr_list_trail','_type_expr_list',3,'p_type_expr_list','__init__.py',1024),
  ('_type_expr_list_trail -> type_expr COMMA _type_expr_list_trail','_type_expr_list_trail',3,'p_type_expr_list','__init__.py',1025),
  ('_type_expr_list_trail -> type_expr','_type_expr_list_trail',1,'p_type_expr_list_last_item','__init__.py',1031),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','__init__.py',1037),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','__init__.py',1042),
  ('constrained_type_expr -> _constrained_type_expr_bare','constrained_type_expr',1,'p_constrained_type_expr','__init__.py',1074),
  ('_constrained_type_expr_bare -> type_constraints FATARROW type_expr','_constrained_type_expr_bare',3,'p_constrained_type_expr_bare','__init__.py',1095),
  ('instance -> KEYWORD_INSTANCE _constrained_type_expr_bare KEYWORD_WHERE PADDING local_definitions','instance',5,'p_instance','__init__.py',1101),
  ('type_constraints -> _type_expr_list_trail','type_constraints',1,'p_type_constraint','__init__.py',1107),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','__init__.py',1113),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','__init__.py',1114),
  ('program -> definitions _trailing_new_lines','program',2,'p_program','__init__.py',1122),
  ('_trailing_new_lines -> empty','_trailing_new_lines',1,'p_trailing_new_lines','__init__.py',1128),
  ('_trailing_new_lines -> NEWLINE _trailing_new_lines','_trailing_new_lines',2,'p_trailing_new_lines','__init__.py',1129),
  ('definitions -> definition _definition_set','definitions',2,'p_definitions','__init__.py',1134),
  ('_definition_set -> newlines definition _definition_set','_definition_set',3,'p_definition_set','__init__.py',1140),
  ('newlines -> NEWLINE _trailing_new_lines','newlines',2,'p_newlines','__init__.py',1146),
  ('_definition_set -> empty','_definition_set',1,'p_definition_set2','__init__.py',1150),
  ('_definition_set -> newlines','_definition_set',1,'p_definition_set2','__init__.py',1151),
  ('definition -> local_definition','definition',1,'p_definition','__init__.py',1157),
  ('definition -> datatype_definition','definition',1,'p_definition','__init__.py',1158),
  ('definition -> typeclass','definition',1,'p_definition','__init__.py',1159),
  ('definition -> instance','definition',1,'p_definition','__init__.py',1160),
  ('local_definition -> nametype_decl','local_definition',1,'p_local_definition','__init__.py',1167),
  ('local_definition -> valuedef','local_definition',1,'p_local_definition','__init__.py',1168),
  ('local_definitions -> local_definition _local_definition_set','local_definitions',2,'p_local_definitions','__init__.py',1174),
  ('_local_definition_set -> PADDING definition _local_definition_set','_local_definition_set',3,'p_local_definition_set','__init__.py',1180),
  ('_local_definition_set -> empty','_local_definition_set',1,'p_local_definition_set_empty','__init__.py',1186),
  ('typeclass -> KEYWORD_CLASS _typeclass_def KEYWORD_WHERE PADDING local_definitions','typeclass',5,'p_typeclass','__init__.py',1192),
  ('_typeclass_def -> simple_type_constraint','_typeclass_def',1,'p_typeclass_def','__init__.py',1200),
  ('_typeclass_def -> simple_type_constraints FATARROW simple_type_constraint','_typeclass_def',3,'p_typeclass_def_with_constraints','__init__.py',1206),
  ('simple_type_constraint -> UPPER_IDENTIFIER SPACE type_variable','simple_type_constraint',3,'p_type_constraint_def','__init__.py',1212),
  ('simple_type_constraints -> simple_type_constraint _simple_type_constraints','simple_type_constraints',2,'p_type_constraints','__init__.py',1218),
  ('_simple_type_constraints -> COMMA simple_type_constraint _simple_type_constraints','_simple_type_constraints',3,'p_type_constraints','__init__.py',1219),
  ('_simple_type_constraints -> empty','_simple_type_constraints',1,'p_type_constraints_empty','__init__.py',1225),
  ('valuedef -> equation','valuedef',1,'p_valuedef','__init__.py',1231),
  ('nametype_decl -> _identifier COLON COLON st_type_expr','nametype_decl',4,'p_nametype_decl','__init__.py',1237),
  ('nametype_decl -> LPAREN _st_operator RPAREN COLON COLON st_type_expr','nametype_decl',6,'p_nametype_decl_operators','__init__.py',1246),
  ('datatype_definition -> _datatype_lhs EQ _data_rhs','datatype_definition',3,'p_datatype_definition','__init__.py',1255),
  ('_datatype_lhs -> KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params','_datatype_lhs',4,'p_datatype_lhs','__init__.py',1268),
  ('_cons_params -> SPACE LOWER_IDENTIFIER _cons_params','_cons_params',3,'p_datatype_cons_params','__init__.py',1277),
  ('_cons_params -> empty','_cons_params',1,'p_datatype_cons_params_empty','__init__.py',1283),
  ('_data_rhs -> data_cons _data_conses','_data_rhs',2,'p_datatype_body','__init__.py',1289),
  ('_data_conses -> _maybe_padding PIPE data_cons _data_conses','_data_conses',4,'p_datatype_body','__init__.py',1290),
  ('_data_conses -> empty','_data_conses',1,'p_datatype_conses_empty','__init__.py',1296),
  ('_data_conses -> _maybe_padding KEYWORD_DERIVING LPAREN _derivations_list RPAREN','_data_conses',5,'p_datatype_derivations','__init__.py',1301),
  ('data_cons -> _data_cons','data_cons',1,'p_data_cons','__init__.py',1307),
  ('_data_cons -> UPPER_IDENTIFIER _cons_args','_data_cons',2,'p_bare_data_cons','__init__.py',1313),
  ('_cons_args -> SPACE cons_arg _cons_args','_cons_args',3,'p_data_cons_args','__init__.py',1318),
  ('_cons_args -> empty','_cons_args',1,'p_data_cons_args_empty','__init__.py',1324),
  ('cons_arg -> type_variable','cons_arg',1,'p_cons_arg','__init__.py',1330),
  ('cons_arg -> type_cons','cons_arg',1,'p_cons_arg','__init__.py',1331),
  ('cons_arg -> _cons_arg_factor','cons_arg',1,'p_cons_arg','__init__.py',1332),
  ('_cons_arg_factor -> LPAREN type_expr RPAREN','_cons_arg_factor',3,'p_cons_arg_factor','__init__.py',1338),
  ('_cons_arg_factor -> LBRACKET type_expr RBRACKET','_cons_arg_factor',3,'p_cons_arg_factor_list','__init__.py',1344),
  ('_derivations_list -> UPPER_IDENTIFIER _derivations_list_trail','_derivations_list',2,'p_derivations_list','__init__.py',1350),
  ('_derivations_list_trail -> COMMA UPPER_IDENTIFIER _derivations_list_trail','_derivations_list_trail',3,'p_derivations_list','__init__.py',1351),
  ('_derivations_list_trail -> empty','_derivations_list_trail',1,'p_derivations_list_trail_empty','__init__.py',1357),
]
