
# expr_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'st_exprrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON COMMA DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FLOAT KEYWORD_CLASS KEYWORD_DATA KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LOWER_IDENTIFIER LPAREN MINUS NEWLINE OPERATOR PADDING PERCENT PIPE PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATOR UNDER_IDENTIFIER UPPER_IDENTIFIERexpr_factor : expr_factor SPACE expr_factor\n    expr_term9 : expr_factor infixr_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infixl_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infixl_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infixl_operator_2 expr_term6\n               | expr_term6\n\n    expr_term1 : expr_term2 infixr_operator_2 expr_term1\n               | expr_term2\n\n    expr_term0 : expr infixl_operator_0 expr_term0\n               | expr_term1\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | letexpr\n                | where_expr\n                | lambda_expr\n                | simple_list_expr\n                | simple_tuple_expr\n\n    st_type_expr : type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    simple_tuple_expr : LPAREN _list_items RPAREN\n    simple_list_expr : LBRACKET _list_items RBRACKET\n    _list_items : expr _list_items_cont\n       _list_items_cont : COMMA expr _list_items_cont\n    _list_items : empty\n       _list_items_cont : empty\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    char : CHARstring : STRINGidentifier : _identifier\n\n    _identifier : UNDER_IDENTIFIER\n                   | UPPER_IDENTIFIER\n                   | LOWER_IDENTIFIER\n\n    enclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : _enclosed_operator\n    _enclosed_operator : LPAREN _st_operator RPAREN\n    infixr_operator_9 : DOT_OPERATOR\n\n    infixl_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infixl_operator_6 : PLUS\n                     | MINUS\n\n    infixr_operator_2 : COLON\n\n    infixl_operator_2 : OPERATOR\n                      | ARROW\n\n    infixl_operator_0 : TICK_OPERATOR\n\n    _st_operator : infixl_operator_2\n                 | infixr_operator_2\n                 | infixl_operator_6\n                 | infixl_operator_7\n                 | infixr_operator_9\n                 | COMMA\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH patterns ARROW expr\n    \n    pattern : identifier\n    pattern : literal\n    pattern : cons_pattern\n    pattern : list_cons_pattern\n    pattern : tuple_cons_pattern\n    pattern : empty_list_pattern\n    pattern : empty_tuple_pattern\n    list_cons_pattern : pattern COLON pattern\n    cons_pattern : LPAREN _identifier SPACE patterns RPARENempty_list_pattern : LBRACKET RBRACKETempty_tuple_pattern : LPAREN RPARENtuple_cons_pattern : error\n    patterns : pattern _patterns\n       _patterns : SPACE pattern _patterns\n    _patterns : empty\n    equation : _identifier _patterns EQ expr\n       equation : _enclosed_operator _patterns EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    type_expr : type_function_expr\n                 | type_termtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_variable : LOWER_IDENTIFIERtype_cons : UPPER_IDENTIFIERtype_factor : type_variable\n                   | type_cons\n\n    type_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET_maybe_padding : PADDING\n                      | empty\n    program : definitions\n    definitions : definition _definition_set\n    _definition_set : NEWLINE definition _definition_set\n    _definition_set : empty\n    definition : nametype_decl\n                  | valuedef\n                  | datatype_definition\n    valuedef : equation\n    nametype_decl : _identifier COLON COLON st_type_expr\n    nametype_decl : LPAREN _st_operator RPAREN COLON COLON st_type_expr\n    datatype_definition : _datatype_lhs EQ _data_rhs\n    _datatype_lhs : KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params\n    _cons_params : SPACE LOWER_IDENTIFIER _cons_params\n    _cons_params : empty\n    _data_rhs : data_cons _data_conses\n       _data_conses : _maybe_padding PIPE data_cons _data_conses\n    _data_conses : emptydata_cons : _data_cons_data_cons : UPPER_IDENTIFIER _cons_args_cons_args : SPACE cons_arg _cons_args\n    _cons_args : empty\n    cons_arg : type_variable\n       cons_arg : type_cons\n       cons_arg : _cons_arg_factor\n    _cons_arg_factor : LPAREN type_expr RPAREN\n    _cons_arg_factor : LBRACKET type_expr RBRACKET\n    '
    
_lr_action_items = {'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,80,96,97,98,99,100,101,102,103,104,106,107,108,109,111,113,114,116,120,122,123,128,129,130,133,134,135,138,141,143,144,145,146,149,150,151,152,],[27,-14,-15,-13,-11,-9,-7,-5,66,-16,-17,27,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,27,-52,90,27,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,27,-64,27,27,-61,-62,-63,27,-59,-60,27,-55,-56,-57,-58,27,27,-51,-54,27,66,119,-12,119,119,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,27,-33,-53,-79,27,90,90,-34,-102,-103,-98,119,-100,-80,90,27,-79,27,27,-101,-99,-96,-97,]),'KEYWORD_LET':([0,12,27,28,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,109,111,114,120,143,145,146,],[29,29,29,-52,29,29,-64,29,29,-61,-62,-63,29,-59,-60,29,-55,-56,-57,-58,29,29,-54,29,-49,29,-53,29,29,29,29,]),'BACKSLASH':([0,12,27,28,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,109,111,114,120,143,145,146,],[30,30,30,-52,30,30,-64,30,30,-61,-62,-63,30,-59,-60,30,-55,-56,-57,-58,30,30,-54,30,-49,30,-53,30,30,30,30,]),'LBRACKET':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,109,111,114,120,122,123,141,143,145,146,],[31,31,31,-52,92,31,31,-64,31,31,-61,-62,-63,31,-59,-60,31,-55,-56,-57,-58,31,31,-54,31,-49,31,-53,31,92,92,92,31,31,31,]),'BASE10_INTEGER':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,109,111,114,120,122,123,141,143,145,146,],[32,32,32,-52,32,32,32,-64,32,32,-61,-62,-63,32,-59,-60,32,-55,-56,-57,-58,32,32,-54,32,-49,32,-53,32,32,32,32,32,32,32,]),'BASE16_INTEGER':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,109,111,114,120,122,123,141,143,145,146,],[33,33,33,-52,33,33,33,-64,33,33,-61,-62,-63,33,-59,-60,33,-55,-56,-57,-58,33,33,-54,33,-49,33,-53,33,33,33,33,33,33,33,]),'BASE8_INTEGER':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,109,111,114,120,122,123,141,143,145,146,],[34,34,34,-52,34,34,34,-64,34,34,-61,-62,-63,34,-59,-60,34,-55,-56,-57,-58,34,34,-54,34,-49,34,-53,34,34,34,34,34,34,34,]),'BASE2_INTEGER':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,109,111,114,120,122,123,141,143,145,146,],[35,35,35,-52,35,35,35,-64,35,35,-61,-62,-63,35,-59,-60,35,-55,-56,-57,-58,35,35,-54,35,-49,35,-53,35,35,35,35,35,35,35,]),'FLOAT':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,109,111,114,120,122,123,141,143,145,146,],[36,36,36,-52,36,36,36,-64,36,36,-61,-62,-63,36,-59,-60,36,-55,-56,-57,-58,36,36,-54,36,-49,36,-53,36,36,36,36,36,36,36,]),'STRING':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,69,109,111,114,120,122,123,141,143,145,146,],[37,37,37,-52,37,37,37,-64,37,37,-61,-62,-63,37,-59,-60,37,-55,-56,-57,-58,37,37,-54,37,37,-49,37,-53,37,37,37,37,37,37,37,]),'CHAR':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,69,109,111,114,120,122,123,141,143,145,146,],[38,38,38,-52,38,38,38,-64,38,38,-61,-62,-63,38,-59,-60,38,-55,-56,-57,-58,38,38,-54,38,38,-49,38,-53,38,38,38,38,38,38,38,]),'DATE':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,109,111,114,120,122,123,141,143,145,146,],[39,39,39,-52,39,39,39,-64,39,39,-61,-62,-63,39,-59,-60,39,-55,-56,-57,-58,39,39,-54,39,-49,39,-53,39,39,39,39,39,39,39,]),'DATETIME':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,109,111,114,120,122,123,141,143,145,146,],[40,40,40,-52,40,40,40,-64,40,40,-61,-62,-63,40,-59,-60,40,-55,-56,-57,-58,40,40,-54,40,-49,40,-53,40,40,40,40,40,40,40,]),'DATE_INTERVAL':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,109,111,114,120,122,123,141,143,145,146,],[41,41,41,-52,41,41,41,-64,41,41,-61,-62,-63,41,-59,-60,41,-55,-56,-57,-58,41,41,-54,41,-49,41,-53,41,41,41,41,41,41,41,]),'DATETIME_INTERVAL':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,109,111,114,120,122,123,141,143,145,146,],[42,42,42,-52,42,42,42,-64,42,42,-61,-62,-63,42,-59,-60,42,-55,-56,-57,-58,42,42,-54,42,-49,42,-53,42,42,42,42,42,42,42,]),'UNDER_IDENTIFIER':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,69,80,90,97,98,109,111,114,120,122,123,134,141,143,145,146,],[43,43,43,-52,43,43,43,-64,43,43,-61,-62,-63,43,-59,-60,43,-55,-56,-57,-58,43,43,-54,43,43,43,43,43,43,-49,43,-53,43,43,43,43,43,43,43,43,]),'UPPER_IDENTIFIER':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,69,80,90,97,98,109,111,114,120,122,123,134,141,143,145,146,],[44,44,44,-52,44,44,44,-64,44,44,-61,-62,-63,44,-59,-60,44,-55,-56,-57,-58,44,44,-54,44,44,44,44,44,44,-49,44,-53,44,44,44,44,44,44,44,44,]),'LOWER_IDENTIFIER':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,69,80,90,97,98,109,111,114,120,122,123,134,141,143,145,146,],[45,45,45,-52,45,45,45,-64,45,45,-61,-62,-63,45,-59,-60,45,-55,-56,-57,-58,45,45,-54,45,45,45,45,45,45,-49,45,-53,45,45,45,45,45,45,45,45,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,67,96,99,100,101,102,103,104,106,107,108,109,113,114,116,128,129,130,133,135,138,144,149,150,151,152,],[0,-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,-50,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,-79,-34,-102,-103,-98,-100,-80,-79,-101,-99,-96,-97,]),'SPACE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,64,67,82,83,84,85,86,87,88,89,91,96,99,100,101,102,103,104,106,107,108,109,113,114,116,117,118,125,126,127,128,129,130,132,133,135,138,139,140,144,149,150,151,152,153,],[-14,-15,-13,-11,-9,-7,-5,63,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-52,80,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,97,-51,63,123,-81,-82,-83,-84,-85,-86,-87,-92,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,-79,123,123,141,-91,-90,-34,-102,-103,143,-98,-100,-80,-88,123,-79,-101,-99,-96,-97,-89,]),'DOT_OPERATOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,96,99,100,101,102,103,104,106,107,108,109,113,114,116,119,128,129,130,133,135,138,144,149,150,151,152,],[-14,-15,-13,-11,-9,-7,-5,65,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,65,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,65,65,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,-79,65,-34,-102,-103,-98,-100,-80,-79,-101,-99,-96,-97,]),'STAR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,96,99,100,101,102,103,104,106,107,108,109,113,114,116,119,128,129,130,133,135,138,144,149,150,151,152,],[-14,-15,-13,-11,-9,58,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,58,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,58,-3,-12,-10,-8,58,-4,-2,-1,-76,-77,-78,-49,-33,-53,-79,58,-34,-102,-103,-98,-100,-80,-79,-101,-99,-96,-97,]),'SLASH':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,96,99,100,101,102,103,104,106,107,108,109,113,114,116,119,128,129,130,133,135,138,144,149,150,151,152,],[-14,-15,-13,-11,-9,59,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,59,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,59,-3,-12,-10,-8,59,-4,-2,-1,-76,-77,-78,-49,-33,-53,-79,59,-34,-102,-103,-98,-100,-80,-79,-101,-99,-96,-97,]),'DOUBLESLASH':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,96,99,100,101,102,103,104,106,107,108,109,113,114,116,119,128,129,130,133,135,138,144,149,150,151,152,],[-14,-15,-13,-11,-9,60,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,60,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,60,-3,-12,-10,-8,60,-4,-2,-1,-76,-77,-78,-49,-33,-53,-79,60,-34,-102,-103,-98,-100,-80,-79,-101,-99,-96,-97,]),'PERCENT':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,96,99,100,101,102,103,104,106,107,108,109,113,114,116,119,128,129,130,133,135,138,144,149,150,151,152,],[-14,-15,-13,-11,-9,61,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,61,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,61,-3,-12,-10,-8,61,-4,-2,-1,-76,-77,-78,-49,-33,-53,-79,61,-34,-102,-103,-98,-100,-80,-79,-101,-99,-96,-97,]),'PLUS':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,96,99,100,101,102,103,104,106,107,108,109,113,114,116,119,128,129,130,133,135,138,144,149,150,151,152,],[-14,-15,-13,-11,55,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,55,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,55,-3,-12,-10,55,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,-79,55,-34,-102,-103,-98,-100,-80,-79,-101,-99,-96,-97,]),'MINUS':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,96,99,100,101,102,103,104,106,107,108,109,113,114,116,119,128,129,130,133,135,138,144,149,150,151,152,],[-14,-15,-13,-11,56,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,56,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,56,-3,-12,-10,56,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,-79,56,-34,-102,-103,-98,-100,-80,-79,-101,-99,-96,-97,]),'COLON':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,82,83,84,85,86,87,88,89,91,96,99,100,101,102,103,104,106,107,108,109,113,114,116,119,126,127,128,129,130,133,135,138,139,140,144,149,150,151,152,153,],[-14,-15,-13,51,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,51,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,51,-3,122,-81,-82,-83,-84,-85,-86,-87,-92,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,-79,51,-91,-90,-34,-102,-103,-98,-100,-80,122,122,-79,-101,-99,-96,-97,-89,]),'OPERATOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,96,99,100,101,102,103,104,106,107,108,109,113,114,116,119,128,129,130,133,135,138,144,149,150,151,152,],[-14,-15,-13,52,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,52,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,52,-3,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,-79,52,-34,-102,-103,-98,-100,-80,-79,-101,-99,-96,-97,]),'ARROW':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,81,82,83,84,85,86,87,88,89,91,96,99,100,101,102,103,104,106,107,108,109,113,114,116,119,121,124,126,127,128,129,130,133,135,138,139,140,144,147,149,150,151,152,153,],[-14,-15,-13,53,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,53,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,53,-3,120,-79,-81,-82,-83,-84,-85,-86,-87,-92,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,-79,53,-93,-95,-91,-90,-34,-102,-103,-98,-100,-80,-88,-79,-79,-94,-101,-99,-96,-97,-89,]),'KEYWORD_WHERE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,67,68,70,94,95,96,99,100,101,102,103,104,105,106,107,108,109,113,114,116,128,129,130,131,133,135,138,144,149,150,151,152,],[47,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,-3,47,47,47,47,-12,-10,-8,-6,-4,-2,-1,47,-76,-77,-78,-49,-33,-53,-79,-34,-102,-103,47,-98,-100,47,-79,-101,-99,47,47,]),'TICK_OPERATOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,67,68,70,94,95,96,99,100,101,102,103,104,105,106,107,108,109,113,114,116,128,129,130,131,133,135,138,144,149,150,151,152,],[48,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,-3,48,48,48,48,-12,-10,-8,-6,-4,-2,-1,48,-76,-77,-78,-49,-33,-53,-79,-34,-102,-103,48,-98,-100,48,-79,-101,-99,48,48,]),'RPAREN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,51,52,53,55,56,58,59,60,61,64,65,67,70,71,72,73,74,75,76,77,78,79,82,83,84,85,86,87,88,89,90,91,96,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,116,121,124,126,127,128,129,130,131,133,135,138,139,140,142,144,147,148,149,150,151,152,153,],[-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-79,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-61,-62,-63,-59,-60,-55,-56,-57,-58,-51,-54,-50,109,113,114,-37,-65,-66,-67,-68,-69,-70,-79,-81,-82,-83,-84,-85,-86,-87,126,-92,-12,-10,-8,-6,-4,-2,-1,109,-76,-77,-78,-49,-35,-38,-33,-53,-79,-93,-95,-91,-90,-34,-102,-103,-79,-98,-100,-80,-88,-79,-36,-79,-94,153,-101,-99,-96,-97,-89,]),'COMMA':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,70,94,96,99,100,101,102,103,104,106,107,108,109,113,114,116,119,128,129,130,131,133,135,138,144,149,150,151,152,],[-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,79,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,79,-50,111,111,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,-79,79,-34,-102,-103,111,-98,-100,-80,-79,-101,-99,-96,-97,]),'RBRACKET':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,67,73,92,93,94,96,99,100,101,102,103,104,106,107,108,109,110,112,113,114,116,128,129,130,131,133,135,138,142,144,149,150,151,152,],[-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-52,-79,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,-50,-37,127,128,-79,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-35,-38,-33,-53,-79,-34,-102,-103,-79,-98,-100,-80,-36,-79,-101,-99,-96,-97,]),'PADDING':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,64,67,96,99,100,101,102,103,104,106,107,108,109,113,114,116,128,129,130,133,135,138,144,149,150,151,152,],[-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,98,-51,-50,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,134,-34,-102,-103,-98,-100,-80,134,-101,-99,-96,-97,]),'KEYWORD_IN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,67,96,99,100,101,102,103,104,106,107,108,109,113,114,115,116,128,129,130,133,135,138,144,149,150,151,152,],[-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,-50,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,132,-79,-34,-102,-103,-98,-100,-80,-79,-101,-99,-96,-97,]),'EQ':([18,19,20,21,22,23,24,25,26,32,33,34,35,36,37,38,39,40,41,42,43,44,45,83,84,85,86,87,88,89,91,106,107,108,114,117,118,124,126,127,136,137,139,140,147,153,],[-25,-26,-27,-28,-29,-30,-31,-32,-45,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-81,-82,-83,-84,-85,-86,-87,-92,-76,-77,-78,-53,-79,-79,-95,-91,-90,145,146,-88,-79,-94,-89,]),'ANNOTATION':([18,32,33,34,35,36,],[69,-71,-72,-73,-74,-75,]),'error':([30,122,123,141,],[91,91,91,91,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'st_expr':([0,143,],[1,149,]),'expr':([0,12,27,31,46,49,50,54,57,62,63,66,111,120,143,145,146,],[2,68,70,94,95,68,68,68,68,68,68,105,131,138,2,151,152,]),'expr_term0':([0,12,27,31,46,49,50,54,57,62,63,66,111,120,143,145,146,],[3,3,3,3,96,3,3,3,3,3,3,3,3,3,3,3,3,]),'expr_term1':([0,12,27,31,46,49,50,54,57,62,63,66,111,120,143,145,146,],[4,4,4,4,4,99,4,4,4,4,4,4,4,4,4,4,4,]),'expr_term2':([0,12,27,31,46,49,50,54,57,62,63,66,111,120,143,145,146,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'expr_term6':([0,12,27,31,46,49,50,54,57,62,63,66,111,120,143,145,146,],[6,6,6,6,6,6,100,6,6,6,6,6,6,6,6,6,6,]),'expr_term7':([0,12,27,31,46,49,50,54,57,62,63,66,111,120,143,145,146,],[7,7,7,7,7,7,7,101,7,7,7,7,7,7,7,7,7,]),'expr_term9':([0,12,27,31,46,49,50,54,57,62,63,66,111,120,143,145,146,],[8,8,8,8,8,8,8,8,102,103,8,8,8,8,8,8,8,]),'expr_factor':([0,12,27,31,46,49,50,54,57,62,63,66,111,120,143,145,146,],[9,67,9,9,9,9,9,9,9,9,104,9,9,9,9,9,9,]),'literal':([0,12,27,30,31,46,49,50,54,57,62,63,66,111,120,122,123,141,143,145,146,],[10,10,10,84,10,10,10,10,10,10,10,10,10,10,10,84,84,84,10,10,10,]),'identifier':([0,12,27,30,31,46,49,50,54,57,62,63,66,69,111,120,122,123,141,143,145,146,],[11,11,11,83,11,11,11,11,11,11,11,11,11,108,11,11,83,83,83,11,11,11,]),'enclosed_expr':([0,9,12,27,31,46,49,50,54,57,62,63,66,67,104,111,120,143,145,146,],[12,64,12,12,12,12,12,12,12,12,12,12,12,64,64,12,12,12,12,12,]),'letexpr':([0,12,27,31,46,49,50,54,57,62,63,66,111,120,143,145,146,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'where_expr':([0,12,27,31,46,49,50,54,57,62,63,66,111,120,143,145,146,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'lambda_expr':([0,12,27,31,46,49,50,54,57,62,63,66,111,120,143,145,146,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'simple_list_expr':([0,12,27,31,46,49,50,54,57,62,63,66,111,120,143,145,146,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'simple_tuple_expr':([0,12,27,31,46,49,50,54,57,62,63,66,111,120,143,145,146,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'number':([0,12,27,30,31,46,49,50,54,57,62,63,66,111,120,122,123,141,143,145,146,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'concrete_number':([0,12,27,30,31,46,49,50,54,57,62,63,66,111,120,122,123,141,143,145,146,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'string':([0,12,27,30,31,46,49,50,54,57,62,63,66,69,111,120,122,123,141,143,145,146,],[20,20,20,20,20,20,20,20,20,20,20,20,20,106,20,20,20,20,20,20,20,20,]),'char':([0,12,27,30,31,46,49,50,54,57,62,63,66,69,111,120,122,123,141,143,145,146,],[21,21,21,21,21,21,21,21,21,21,21,21,21,107,21,21,21,21,21,21,21,21,]),'date':([0,12,27,30,31,46,49,50,54,57,62,63,66,111,120,122,123,141,143,145,146,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'datetime':([0,12,27,30,31,46,49,50,54,57,62,63,66,111,120,122,123,141,143,145,146,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'date_interval':([0,12,27,30,31,46,49,50,54,57,62,63,66,111,120,122,123,141,143,145,146,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'datetime_interval':([0,12,27,30,31,46,49,50,54,57,62,63,66,111,120,122,123,141,143,145,146,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'_identifier':([0,12,27,30,31,46,49,50,54,57,62,63,66,69,80,90,97,98,111,120,122,123,134,141,143,145,146,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,117,125,117,117,26,26,26,26,117,26,26,26,26,]),'_enclosed_operator':([0,9,12,27,31,46,49,50,54,57,62,63,66,67,80,97,98,104,111,120,134,143,145,146,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,118,118,118,28,28,28,118,28,28,28,]),'infixl_operator_0':([2,68,70,94,95,105,131,138,151,152,],[46,46,46,46,46,46,46,46,46,46,]),'infixr_operator_2':([5,27,66,119,],[49,75,75,75,]),'infixl_operator_2':([5,27,66,119,],[50,74,74,74,]),'infixl_operator_6':([6,27,66,100,119,],[54,76,76,54,76,]),'infixl_operator_7':([7,27,66,101,119,],[57,77,77,57,77,]),'infixr_operator_9':([9,27,66,67,104,119,],[62,78,78,62,62,78,]),'_list_items':([27,31,],[71,93,]),'_st_operator':([27,66,119,],[72,72,72,]),'empty':([27,31,70,82,94,116,117,118,131,140,144,],[73,73,112,124,112,135,124,124,112,124,135,]),'patterns':([30,141,],[81,148,]),'pattern':([30,122,123,141,],[82,139,140,82,]),'cons_pattern':([30,122,123,141,],[85,85,85,85,]),'list_cons_pattern':([30,122,123,141,],[86,86,86,86,]),'tuple_cons_pattern':([30,122,123,141,],[87,87,87,87,]),'empty_list_pattern':([30,122,123,141,],[88,88,88,88,]),'empty_tuple_pattern':([30,122,123,141,],[89,89,89,89,]),'_list_items_cont':([70,94,131,],[110,110,142,]),'equations':([80,97,98,],[115,129,130,]),'equation':([80,97,98,134,],[116,116,116,144,]),'_patterns':([82,117,118,140,],[121,136,137,147,]),'_equation_set':([116,144,],[133,150,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> st_expr","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','__init__.py',430),
  ('expr_term9 -> expr_factor infixr_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','__init__.py',437),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','__init__.py',438),
  ('expr_term7 -> expr_term7 infixl_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','__init__.py',440),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','__init__.py',441),
  ('expr_term6 -> expr_term6 infixl_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','__init__.py',443),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','__init__.py',444),
  ('expr_term2 -> expr_term2 infixl_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','__init__.py',446),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','__init__.py',447),
  ('expr_term1 -> expr_term2 infixr_operator_2 expr_term1','expr_term1',3,'p_expressions_precedence_rules','__init__.py',449),
  ('expr_term1 -> expr_term2','expr_term1',1,'p_expressions_precedence_rules','__init__.py',450),
  ('expr_term0 -> expr infixl_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','__init__.py',452),
  ('expr_term0 -> expr_term1','expr_term0',1,'p_expressions_precedence_rules','__init__.py',453),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','__init__.py',466),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','__init__.py',468),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','__init__.py',470),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','__init__.py',471),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','__init__.py',472),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','__init__.py',473),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','__init__.py',474),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','__init__.py',475),
  ('expr_factor -> simple_list_expr','expr_factor',1,'p_standalone_definitions','__init__.py',476),
  ('expr_factor -> simple_tuple_expr','expr_factor',1,'p_standalone_definitions','__init__.py',477),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','__init__.py',479),
  ('literal -> number','literal',1,'p_literals','__init__.py',487),
  ('literal -> concrete_number','literal',1,'p_literals','__init__.py',488),
  ('literal -> string','literal',1,'p_literals','__init__.py',489),
  ('literal -> char','literal',1,'p_literals','__init__.py',490),
  ('literal -> date','literal',1,'p_literals','__init__.py',491),
  ('literal -> datetime','literal',1,'p_literals','__init__.py',492),
  ('literal -> date_interval','literal',1,'p_literals','__init__.py',493),
  ('literal -> datetime_interval','literal',1,'p_literals','__init__.py',494),
  ('simple_tuple_expr -> LPAREN _list_items RPAREN','simple_tuple_expr',3,'p_tuple_expr','__init__.py',500),
  ('simple_list_expr -> LBRACKET _list_items RBRACKET','simple_list_expr',3,'p_list_expr','__init__.py',515),
  ('_list_items -> expr _list_items_cont','_list_items',2,'p_list_items','__init__.py',525),
  ('_list_items_cont -> COMMA expr _list_items_cont','_list_items_cont',3,'p_list_items','__init__.py',526),
  ('_list_items -> empty','_list_items',1,'p_list_items_empty','__init__.py',535),
  ('_list_items_cont -> empty','_list_items_cont',1,'p_list_items_empty','__init__.py',536),
  ('date -> DATE','date',1,'p_date','__init__.py',542),
  ('datetime -> DATETIME','datetime',1,'p_datetime','__init__.py',548),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','__init__.py',554),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','__init__.py',560),
  ('char -> CHAR','char',1,'p_char','__init__.py',566),
  ('string -> STRING','string',1,'p_string','__init__.py',571),
  ('identifier -> _identifier','identifier',1,'p_variable','__init__.py',576),
  ('_identifier -> UNDER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',583),
  ('_identifier -> UPPER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',584),
  ('_identifier -> LOWER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',585),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','__init__.py',592),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','__init__.py',597),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','__init__.py',598),
  ('enclosed_expr -> _enclosed_operator','enclosed_expr',1,'p_operators_as_expressios','__init__.py',604),
  ('_enclosed_operator -> LPAREN _st_operator RPAREN','_enclosed_operator',3,'p_enclosed_operator','__init__.py',610),
  ('infixr_operator_9 -> DOT_OPERATOR','infixr_operator_9',1,'p_operator','__init__.py',620),
  ('infixl_operator_7 -> STAR','infixl_operator_7',1,'p_operator','__init__.py',622),
  ('infixl_operator_7 -> SLASH','infixl_operator_7',1,'p_operator','__init__.py',623),
  ('infixl_operator_7 -> DOUBLESLASH','infixl_operator_7',1,'p_operator','__init__.py',624),
  ('infixl_operator_7 -> PERCENT','infixl_operator_7',1,'p_operator','__init__.py',625),
  ('infixl_operator_6 -> PLUS','infixl_operator_6',1,'p_operator','__init__.py',627),
  ('infixl_operator_6 -> MINUS','infixl_operator_6',1,'p_operator','__init__.py',628),
  ('infixr_operator_2 -> COLON','infixr_operator_2',1,'p_operator','__init__.py',630),
  ('infixl_operator_2 -> OPERATOR','infixl_operator_2',1,'p_operator','__init__.py',632),
  ('infixl_operator_2 -> ARROW','infixl_operator_2',1,'p_operator','__init__.py',633),
  ('infixl_operator_0 -> TICK_OPERATOR','infixl_operator_0',1,'p_operator','__init__.py',635),
  ('_st_operator -> infixl_operator_2','_st_operator',1,'p_operator','__init__.py',637),
  ('_st_operator -> infixr_operator_2','_st_operator',1,'p_operator','__init__.py',638),
  ('_st_operator -> infixl_operator_6','_st_operator',1,'p_operator','__init__.py',639),
  ('_st_operator -> infixl_operator_7','_st_operator',1,'p_operator','__init__.py',640),
  ('_st_operator -> infixr_operator_9','_st_operator',1,'p_operator','__init__.py',641),
  ('_st_operator -> COMMA','_st_operator',1,'p_operator','__init__.py',642),
  ('number -> BASE10_INTEGER','number',1,'p_integer','__init__.py',649),
  ('number -> BASE16_INTEGER','number',1,'p_integer','__init__.py',650),
  ('number -> BASE8_INTEGER','number',1,'p_integer','__init__.py',651),
  ('number -> BASE2_INTEGER','number',1,'p_integer','__init__.py',652),
  ('number -> FLOAT','number',1,'p_float','__init__.py',681),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','__init__.py',686),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','__init__.py',687),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','__init__.py',688),
  ('empty -> <empty>','empty',0,'p_empty','__init__.py',697),
  ('lambda_expr -> BACKSLASH patterns ARROW expr','lambda_expr',4,'p_lambda_definition','__init__.py',702),
  ('pattern -> identifier','pattern',1,'p_pattern','__init__.py',711),
  ('pattern -> literal','pattern',1,'p_pattern','__init__.py',712),
  ('pattern -> cons_pattern','pattern',1,'p_pattern','__init__.py',713),
  ('pattern -> list_cons_pattern','pattern',1,'p_pattern','__init__.py',714),
  ('pattern -> tuple_cons_pattern','pattern',1,'p_pattern','__init__.py',715),
  ('pattern -> empty_list_pattern','pattern',1,'p_pattern','__init__.py',716),
  ('pattern -> empty_tuple_pattern','pattern',1,'p_pattern','__init__.py',717),
  ('list_cons_pattern -> pattern COLON pattern','list_cons_pattern',3,'p_list_cons_for_param','__init__.py',723),
  ('cons_pattern -> LPAREN _identifier SPACE patterns RPAREN','cons_pattern',5,'p_param_pattern','__init__.py',729),
  ('empty_list_pattern -> LBRACKET RBRACKET','empty_list_pattern',2,'p_empty_list_as_pattern','__init__.py',734),
  ('empty_tuple_pattern -> LPAREN RPAREN','empty_tuple_pattern',2,'p_unit_value_as_pattern','__init__.py',740),
  ('tuple_cons_pattern -> error','tuple_cons_pattern',1,'p_tuple_cons_pattern','__init__.py',746),
  ('patterns -> pattern _patterns','patterns',2,'p_patterns','__init__.py',751),
  ('_patterns -> SPACE pattern _patterns','_patterns',3,'p_patterns','__init__.py',752),
  ('_patterns -> empty','_patterns',1,'p_patterns_empty','__init__.py',762),
  ('equation -> _identifier _patterns EQ expr','equation',4,'p_equation','__init__.py',768),
  ('equation -> _enclosed_operator _patterns EQ expr','equation',4,'p_equation','__init__.py',769),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','__init__.py',779),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','__init__.py',788),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','__init__.py',797),
  ('letexpr -> KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','__init__.py',807),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','__init__.py',815),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','__init__.py',816),
  ('type_expr -> type_function_expr','type_expr',1,'p_type_expr','__init__.py',826),
  ('type_expr -> type_term','type_expr',1,'p_type_expr','__init__.py',827),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','__init__.py',832),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','__init__.py',833),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','__init__.py',843),
  ('type_term -> type_factor','type_term',1,'p_type_term','__init__.py',844),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','__init__.py',849),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','__init__.py',861),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','__init__.py',862),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','__init__.py',870),
  ('type_variable -> LOWER_IDENTIFIER','type_variable',1,'p_type_variable','__init__.py',875),
  ('type_cons -> UPPER_IDENTIFIER','type_cons',1,'p_type_cons','__init__.py',880),
  ('type_factor -> type_variable','type_factor',1,'p_type_factor_identifier','__init__.py',885),
  ('type_factor -> type_cons','type_factor',1,'p_type_factor_identifier','__init__.py',886),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','__init__.py',893),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','__init__.py',898),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','__init__.py',903),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','__init__.py',904),
  ('program -> definitions','program',1,'p_program','__init__.py',910),
  ('definitions -> definition _definition_set','definitions',2,'p_definitions','__init__.py',926),
  ('_definition_set -> NEWLINE definition _definition_set','_definition_set',3,'p_definition_set','__init__.py',934),
  ('_definition_set -> empty','_definition_set',1,'p_definition_set2','__init__.py',942),
  ('definition -> nametype_decl','definition',1,'p_definition','__init__.py',948),
  ('definition -> valuedef','definition',1,'p_definition','__init__.py',949),
  ('definition -> datatype_definition','definition',1,'p_definition','__init__.py',950),
  ('valuedef -> equation','valuedef',1,'p_valuedef','__init__.py',956),
  ('nametype_decl -> _identifier COLON COLON st_type_expr','nametype_decl',4,'p_nametype_decl','__init__.py',962),
  ('nametype_decl -> LPAREN _st_operator RPAREN COLON COLON st_type_expr','nametype_decl',6,'p_nametype_decl_operators','__init__.py',971),
  ('datatype_definition -> _datatype_lhs EQ _data_rhs','datatype_definition',3,'p_datatype_definition','__init__.py',980),
  ('_datatype_lhs -> KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params','_datatype_lhs',4,'p_datatype_lhs','__init__.py',988),
  ('_cons_params -> SPACE LOWER_IDENTIFIER _cons_params','_cons_params',3,'p_datatype_cons_params','__init__.py',997),
  ('_cons_params -> empty','_cons_params',1,'p_datatype_cons_params_empty','__init__.py',1006),
  ('_data_rhs -> data_cons _data_conses','_data_rhs',2,'p_datatype_body','__init__.py',1012),
  ('_data_conses -> _maybe_padding PIPE data_cons _data_conses','_data_conses',4,'p_datatype_body','__init__.py',1013),
  ('_data_conses -> empty','_data_conses',1,'p_datatype_conses_empty','__init__.py',1022),
  ('data_cons -> _data_cons','data_cons',1,'p_data_cons','__init__.py',1027),
  ('_data_cons -> UPPER_IDENTIFIER _cons_args','_data_cons',2,'p_bare_data_cons','__init__.py',1033),
  ('_cons_args -> SPACE cons_arg _cons_args','_cons_args',3,'p_data_cons_args','__init__.py',1038),
  ('_cons_args -> empty','_cons_args',1,'p_data_cons_args_empty','__init__.py',1047),
  ('cons_arg -> type_variable','cons_arg',1,'p_cons_arg','__init__.py',1053),
  ('cons_arg -> type_cons','cons_arg',1,'p_cons_arg','__init__.py',1054),
  ('cons_arg -> _cons_arg_factor','cons_arg',1,'p_cons_arg','__init__.py',1055),
  ('_cons_arg_factor -> LPAREN type_expr RPAREN','_cons_arg_factor',3,'p_cons_arg_factor','__init__.py',1061),
  ('_cons_arg_factor -> LBRACKET type_expr RBRACKET','_cons_arg_factor',3,'p_cons_arg_factor_list','__init__.py',1067),
]
