
# expr_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'st_exprrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON COMMA DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FLOAT KEYWORD_CLASS KEYWORD_DATA KEYWORD_FORALL KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LOWER_IDENTIFIER LPAREN MINUS NEWLINE OPERATOR PADDING PERCENT PIPE PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATOR UNDER_IDENTIFIER UPPER_IDENTIFIERexpr_factor : expr_factor SPACE expr_factor\n    expr_term9 : expr_factor infixr_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infixl_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infixl_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infixl_operator_2 expr_term6\n               | expr_term6\n\n    expr_term1 : expr_term2 infixr_operator_2 expr_term1\n               | expr_term2\n\n    expr_term0 : expr infixl_operator_0 expr_term0\n               | expr_term1\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | letexpr\n                | where_expr\n                | lambda_expr\n                | simple_list_expr\n                | simple_tuple_expr\n\n    st_type_expr : type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    simple_tuple_expr : LPAREN _list_items RPAREN\n    simple_list_expr : LBRACKET _list_items RBRACKET\n    _list_items : expr _list_items_cont\n       _list_items_cont : COMMA expr _list_items_cont\n    _list_items : empty\n       _list_items_cont : empty\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    char : CHARstring : STRINGidentifier : _identifier\n\n    _identifier : UNDER_IDENTIFIER\n                   | UPPER_IDENTIFIER\n                   | LOWER_IDENTIFIER\n\n    enclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : _enclosed_operator\n    _enclosed_operator : LPAREN _st_operator RPAREN\n    infixr_operator_9 : DOT_OPERATOR\n\n    infixl_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infixl_operator_6 : PLUS\n                     | MINUS\n\n    infixr_operator_2 : COLON\n\n    infixl_operator_2 : OPERATOR\n                      | ARROW\n\n    infixl_operator_0 : TICK_OPERATOR\n\n    _st_operator : infixl_operator_2\n                 | infixr_operator_2\n                 | infixl_operator_6\n                 | infixl_operator_7\n                 | infixr_operator_9\n                 | COMMA\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH patterns ARROW expr\n    \n    pattern : literal\n    pattern : cons_pattern\n    pattern : list_cons_pattern\n    pattern : tuple_cons_pattern\n    pattern : empty_list_pattern\n    pattern : empty_tuple_pattern\n    pattern : LOWER_IDENTIFIER\n       pattern : UNDER_IDENTIFIER\n    pattern : UPPER_IDENTIFIER\n    list_cons_pattern : pattern COLON pattern\n    cons_pattern : LPAREN _identifier SPACE patterns RPARENempty_list_pattern : LBRACKET RBRACKETempty_tuple_pattern : LPAREN RPARENtuple_cons_pattern : LPAREN patterns_comma_sep RPAREN\n    patterns : pattern _patterns\n       patterns_comma_sep : pattern _patterns_comma\n       _patterns : SPACE pattern _patterns\n       _patterns_comma : COMMA pattern _patterns_comma\n    _patterns : empty\n       _patterns_comma : empty\n    equation : _identifier _patterns EQ expr\n       equation : _enclosed_operator _patterns EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE local_definitions KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    type_expr : type_scheme type_function_expr\n                 | type_scheme type_termtype_scheme : emptytype_scheme : KEYWORD_FORALL SPACE _type_scheme_generics_type_scheme_generics : _identifier SPACE _type_scheme_generics_type_scheme_generics : _identifier DOT_OPERATORtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_variable : LOWER_IDENTIFIERtype_cons : UPPER_IDENTIFIERtype_factor : type_variable\n                   | type_cons\n\n    type_factor : LPAREN _maybe_padding _type_expr_list _maybe_padding RPARENtype_factor : LPAREN RPAREN_type_expr_list : type_expr COMMA _type_expr_list_trail\n       _type_expr_list_trail : type_expr COMMA _type_expr_list_trail\n    _type_expr_list_trail : type_expr\n    type_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET_maybe_padding : PADDING\n                      | empty\n    program : definitions\n    definitions : definition _definition_set\n    _definition_set : NEWLINE definition _definition_set\n    _definition_set : empty\n    definition : local_definition\n                  | datatype_definition\n    \n    local_definition : nametype_decl\n                     | valuedef\n    local_definitions : local_definition _local_definition_set\n    _local_definition_set : PADDING definition _local_definition_set\n    _local_definition_set : empty\n    valuedef : equation\n    nametype_decl : _identifier COLON COLON st_type_expr\n    nametype_decl : LPAREN _st_operator RPAREN COLON COLON st_type_expr\n    datatype_definition : _datatype_lhs EQ _data_rhs\n    _datatype_lhs : KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params\n    _cons_params : SPACE LOWER_IDENTIFIER _cons_params\n    _cons_params : empty\n    _data_rhs : data_cons _data_conses\n       _data_conses : _maybe_padding PIPE data_cons _data_conses\n    _data_conses : emptydata_cons : _data_cons_data_cons : UPPER_IDENTIFIER _cons_args_cons_args : SPACE cons_arg _cons_args\n    _cons_args : empty\n    cons_arg : type_variable\n       cons_arg : type_cons\n       cons_arg : _cons_arg_factor\n    _cons_arg_factor : LPAREN type_expr RPAREN\n    _cons_arg_factor : LBRACKET type_expr RBRACKET\n    '
    
_lr_action_items = {'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,80,92,97,98,99,100,101,102,103,104,105,107,108,109,110,112,114,115,124,126,127,137,138,139,142,146,152,155,158,160,161,162,164,170,171,173,177,178,184,185,187,189,192,204,205,209,213,215,220,222,223,225,226,227,235,236,238,244,252,257,259,270,],[27,-14,-15,-13,-11,-9,-7,-5,66,-16,-17,27,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,27,-52,92,27,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,27,-64,27,27,-61,-62,-63,27,-59,-60,27,-55,-56,-57,-58,27,27,-51,-54,27,66,121,92,-12,141,141,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,27,-33,-53,27,92,92,-34,-107,-79,-108,121,-80,92,92,-103,141,-105,27,-79,27,27,-79,-106,204,-111,-101,-102,-104,-79,-79,-79,-134,235,-79,204,-79,-135,-79,-112,-79,-79,204,-114,204,-79,-113,-79,]),'KEYWORD_LET':([0,12,27,28,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,110,112,115,124,164,171,173,],[29,29,29,-52,29,29,-64,29,29,-61,-62,-63,29,-59,-60,29,-55,-56,-57,-58,29,29,-54,29,-49,29,-53,29,29,29,29,]),'BACKSLASH':([0,12,27,28,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,110,112,115,124,164,171,173,],[30,30,30,-52,30,30,-64,30,30,-61,-62,-63,30,-59,-60,30,-55,-56,-57,-58,30,30,-54,30,-49,30,-53,30,30,30,30,]),'LBRACKET':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,92,110,112,115,124,126,127,155,158,164,170,171,173,184,185,204,205,209,213,215,220,222,223,225,226,227,235,236,238,244,252,257,259,270,],[31,31,31,-52,93,31,31,-64,31,31,-61,-62,-63,31,-59,-60,31,-55,-56,-57,-58,31,31,-54,31,93,-49,31,-53,31,93,93,93,93,31,-79,31,31,205,-111,-79,-79,-79,-134,236,-79,205,-79,-135,-79,-112,-79,-79,205,-114,205,-79,-113,-79,]),'BASE10_INTEGER':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,92,110,112,115,124,126,127,155,158,164,171,173,],[32,32,32,-52,32,32,32,-64,32,32,-61,-62,-63,32,-59,-60,32,-55,-56,-57,-58,32,32,-54,32,32,-49,32,-53,32,32,32,32,32,32,32,32,]),'BASE16_INTEGER':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,92,110,112,115,124,126,127,155,158,164,171,173,],[33,33,33,-52,33,33,33,-64,33,33,-61,-62,-63,33,-59,-60,33,-55,-56,-57,-58,33,33,-54,33,33,-49,33,-53,33,33,33,33,33,33,33,33,]),'BASE8_INTEGER':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,92,110,112,115,124,126,127,155,158,164,171,173,],[34,34,34,-52,34,34,34,-64,34,34,-61,-62,-63,34,-59,-60,34,-55,-56,-57,-58,34,34,-54,34,34,-49,34,-53,34,34,34,34,34,34,34,34,]),'BASE2_INTEGER':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,92,110,112,115,124,126,127,155,158,164,171,173,],[35,35,35,-52,35,35,35,-64,35,35,-61,-62,-63,35,-59,-60,35,-55,-56,-57,-58,35,35,-54,35,35,-49,35,-53,35,35,35,35,35,35,35,35,]),'FLOAT':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,92,110,112,115,124,126,127,155,158,164,171,173,],[36,36,36,-52,36,36,36,-64,36,36,-61,-62,-63,36,-59,-60,36,-55,-56,-57,-58,36,36,-54,36,36,-49,36,-53,36,36,36,36,36,36,36,36,]),'STRING':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,69,92,110,112,115,124,126,127,155,158,164,171,173,],[37,37,37,-52,37,37,37,-64,37,37,-61,-62,-63,37,-59,-60,37,-55,-56,-57,-58,37,37,-54,37,37,37,-49,37,-53,37,37,37,37,37,37,37,37,]),'CHAR':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,69,92,110,112,115,124,126,127,155,158,164,171,173,],[38,38,38,-52,38,38,38,-64,38,38,-61,-62,-63,38,-59,-60,38,-55,-56,-57,-58,38,38,-54,38,38,38,-49,38,-53,38,38,38,38,38,38,38,38,]),'DATE':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,92,110,112,115,124,126,127,155,158,164,171,173,],[39,39,39,-52,39,39,39,-64,39,39,-61,-62,-63,39,-59,-60,39,-55,-56,-57,-58,39,39,-54,39,39,-49,39,-53,39,39,39,39,39,39,39,39,]),'DATETIME':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,92,110,112,115,124,126,127,155,158,164,171,173,],[40,40,40,-52,40,40,40,-64,40,40,-61,-62,-63,40,-59,-60,40,-55,-56,-57,-58,40,40,-54,40,40,-49,40,-53,40,40,40,40,40,40,40,40,]),'DATE_INTERVAL':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,92,110,112,115,124,126,127,155,158,164,171,173,],[41,41,41,-52,41,41,41,-64,41,41,-61,-62,-63,41,-59,-60,41,-55,-56,-57,-58,41,41,-54,41,41,-49,41,-53,41,41,41,41,41,41,41,41,]),'DATETIME_INTERVAL':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,92,110,112,115,124,126,127,155,158,164,171,173,],[42,42,42,-52,42,42,42,-64,42,42,-61,-62,-63,42,-59,-60,42,-55,-56,-57,-58,42,42,-54,42,42,-49,42,-53,42,42,42,42,42,42,42,42,]),'UNDER_IDENTIFIER':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,69,80,92,98,99,110,112,115,124,126,127,146,155,158,161,164,171,173,208,243,],[43,43,43,-52,90,43,43,-64,43,43,-61,-62,-63,43,-59,-60,43,-55,-56,-57,-58,43,43,-54,43,43,43,132,43,43,-49,43,-53,43,90,90,43,90,90,43,43,43,43,43,43,]),'UPPER_IDENTIFIER':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,69,80,92,98,99,110,112,115,124,126,127,146,155,158,161,164,170,171,173,180,181,184,185,204,205,208,209,213,215,220,222,223,225,226,227,230,235,236,238,243,244,252,257,259,270,],[44,44,44,-52,91,44,44,-64,44,44,-61,-62,-63,44,-59,-60,44,-55,-56,-57,-58,44,44,-54,44,44,44,133,44,44,-49,44,-53,44,91,91,44,91,91,44,44,-79,44,44,196,197,207,-111,-79,-79,44,-79,-134,207,-79,207,-79,-135,-79,-112,196,-79,-79,207,44,-114,207,-79,-113,-79,]),'LOWER_IDENTIFIER':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,69,80,92,98,99,110,112,115,124,126,127,146,155,158,161,164,170,171,173,184,185,204,205,208,209,213,215,217,220,222,223,225,226,227,235,236,238,243,244,252,257,259,270,],[45,45,45,-52,89,45,45,-64,45,45,-61,-62,-63,45,-59,-60,45,-55,-56,-57,-58,45,45,-54,45,45,45,134,45,45,-49,45,-53,45,89,89,45,89,89,45,45,-79,45,45,206,-111,-79,-79,45,-79,-134,206,237,-79,206,-79,-135,-79,-112,-79,-79,206,45,-114,206,-79,-113,-79,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,67,97,100,101,102,103,104,105,107,108,109,110,114,115,137,138,139,142,152,160,162,177,178,187,189,192,],[0,-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,-50,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,-34,-107,-79,-108,-80,-103,-105,-79,-106,-101,-102,-104,]),'SPACE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,64,67,82,83,84,85,86,87,88,89,90,91,97,100,101,102,103,104,105,107,108,109,110,114,115,120,123,129,130,132,133,134,136,137,138,139,140,142,144,152,153,154,156,160,162,169,172,177,178,186,187,189,190,192,196,197,201,202,203,206,207,224,228,231,232,233,234,237,239,261,262,263,264,265,268,],[-14,-15,-13,-11,-9,-7,-5,63,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-52,80,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,98,-51,63,127,-81,-82,-83,-84,-85,-86,-87,-88,-89,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,127,127,155,-93,-46,-47,-48,-92,-34,-107,-79,127,-108,164,-80,-90,127,-94,-103,-105,181,-53,-79,-106,208,-101,-102,-91,-104,215,217,222,-125,-126,-123,-124,-128,243,215,-161,-162,-163,217,252,-164,-165,252,-127,-132,-133,]),'DOT_OPERATOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,97,100,101,102,103,104,105,107,108,109,110,114,115,121,137,138,139,141,142,152,160,162,177,178,187,189,192,228,],[-14,-15,-13,-11,-9,-7,-5,65,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,65,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,65,65,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,65,-34,-107,-79,65,-108,-80,-103,-105,-79,-106,-101,-102,-104,244,]),'STAR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,97,100,101,102,103,104,105,107,108,109,110,114,115,121,137,138,139,141,142,152,160,162,177,178,187,189,192,],[-14,-15,-13,-11,-9,58,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,58,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,58,-3,-12,-10,-8,58,-4,-2,-1,-76,-77,-78,-49,-33,-53,58,-34,-107,-79,58,-108,-80,-103,-105,-79,-106,-101,-102,-104,]),'SLASH':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,97,100,101,102,103,104,105,107,108,109,110,114,115,121,137,138,139,141,142,152,160,162,177,178,187,189,192,],[-14,-15,-13,-11,-9,59,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,59,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,59,-3,-12,-10,-8,59,-4,-2,-1,-76,-77,-78,-49,-33,-53,59,-34,-107,-79,59,-108,-80,-103,-105,-79,-106,-101,-102,-104,]),'DOUBLESLASH':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,97,100,101,102,103,104,105,107,108,109,110,114,115,121,137,138,139,141,142,152,160,162,177,178,187,189,192,],[-14,-15,-13,-11,-9,60,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,60,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,60,-3,-12,-10,-8,60,-4,-2,-1,-76,-77,-78,-49,-33,-53,60,-34,-107,-79,60,-108,-80,-103,-105,-79,-106,-101,-102,-104,]),'PERCENT':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,97,100,101,102,103,104,105,107,108,109,110,114,115,121,137,138,139,141,142,152,160,162,177,178,187,189,192,],[-14,-15,-13,-11,-9,61,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,61,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,61,-3,-12,-10,-8,61,-4,-2,-1,-76,-77,-78,-49,-33,-53,61,-34,-107,-79,61,-108,-80,-103,-105,-79,-106,-101,-102,-104,]),'PLUS':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,97,100,101,102,103,104,105,107,108,109,110,114,115,121,137,138,139,141,142,152,160,162,177,178,187,189,192,],[-14,-15,-13,-11,55,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,55,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,55,-3,-12,-10,55,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,55,-34,-107,-79,55,-108,-80,-103,-105,-79,-106,-101,-102,-104,]),'MINUS':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,97,100,101,102,103,104,105,107,108,109,110,114,115,121,137,138,139,141,142,152,160,162,177,178,187,189,192,],[-14,-15,-13,-11,56,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,56,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,56,-3,-12,-10,56,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,56,-34,-107,-79,56,-108,-80,-103,-105,-79,-106,-101,-102,-104,]),'COLON':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,82,83,84,85,86,87,88,89,90,91,97,100,101,102,103,104,105,107,108,109,110,114,115,120,121,130,132,133,134,135,136,137,138,139,141,142,148,152,153,154,156,160,162,172,176,177,178,187,188,189,190,192,],[-14,-15,-13,51,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,51,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,51,-3,126,-81,-82,-83,-84,-85,-86,-87,-88,-89,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,148,51,-93,-88,-89,-87,126,-92,-34,-107,-79,51,-108,170,-80,126,126,-94,-103,-105,188,126,-79,-106,-101,209,-102,-91,-104,]),'OPERATOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,97,100,101,102,103,104,105,107,108,109,110,114,115,121,137,138,139,141,142,152,160,162,177,178,187,189,192,],[-14,-15,-13,52,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,52,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,52,-3,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,52,-34,-107,-79,52,-108,-80,-103,-105,-79,-106,-101,-102,-104,]),'ARROW':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,81,82,83,84,85,86,87,88,89,90,91,97,100,101,102,103,104,105,107,108,109,110,114,115,121,125,128,130,136,137,138,139,141,142,152,153,154,156,160,162,174,177,178,187,189,190,192,199,200,201,202,203,206,207,221,224,239,250,253,254,263,264,265,268,269,],[-14,-15,-13,53,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,53,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,53,-3,124,-79,-81,-82,-83,-84,-85,-86,-87,-88,-89,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,53,-95,-99,-93,-92,-34,-107,-79,53,-108,-80,-90,-79,-94,-103,-105,-97,-79,-106,-101,-102,-91,-104,220,-117,-118,-125,-126,-123,-124,-119,-128,-79,220,-121,-122,-79,-127,-132,-133,-120,]),'KEYWORD_WHERE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,67,68,70,95,96,97,100,101,102,103,104,105,106,107,108,109,110,114,115,137,138,139,142,143,152,160,162,177,178,187,189,192,],[47,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,-3,47,47,47,47,-12,-10,-8,-6,-4,-2,-1,47,-76,-77,-78,-49,-33,-53,-34,-107,-79,-108,47,47,-103,-105,-79,-106,47,47,-104,]),'TICK_OPERATOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,67,68,70,95,96,97,100,101,102,103,104,105,106,107,108,109,110,114,115,137,138,139,142,143,152,160,162,177,178,187,189,192,],[48,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,-3,48,48,48,48,-12,-10,-8,-6,-4,-2,-1,48,-76,-77,-78,-49,-33,-53,-34,-107,-79,-108,48,48,-103,-105,-79,-106,48,48,-104,]),'RPAREN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,51,52,53,55,56,58,59,60,61,64,65,67,70,71,72,73,74,75,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,97,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,125,128,130,131,132,133,134,135,136,137,138,139,142,143,150,152,153,154,156,157,159,160,162,163,174,175,176,177,178,187,189,190,191,192,198,199,200,201,202,203,204,206,207,213,221,224,225,239,240,241,247,250,251,253,254,255,256,263,264,265,266,267,268,269,271,],[-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-79,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-61,-62,-63,-59,-60,-55,-56,-57,-58,-51,-54,-50,110,114,115,-37,-65,-66,-67,-68,-69,-70,-79,-81,-82,-83,-84,-85,-86,-87,-88,-89,130,-12,-10,-8,-6,-4,-2,-1,110,-76,-77,-78,-49,-35,-38,-33,-53,-95,-99,-93,156,-88,-89,-87,-79,-92,-34,-107,-79,-108,-79,172,-80,-90,-79,-94,-96,-100,-103,-105,-36,-97,190,-79,-79,-106,-101,-102,-91,-98,-104,-109,-110,-117,-118,-125,-126,224,-123,-124,-134,-119,-128,-135,-79,-79,-79,261,-116,-115,-121,-122,264,265,-79,-127,-132,-131,-129,-133,-120,-130,]),'COMMA':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,70,83,84,85,86,87,88,89,90,91,95,97,100,101,102,103,104,105,107,108,109,110,114,115,121,130,132,133,134,135,136,137,138,139,141,142,143,152,153,156,160,162,176,177,178,187,189,190,192,198,199,200,201,202,203,206,207,221,224,239,241,250,251,253,254,263,264,265,266,268,269,],[-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,79,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,79,-50,112,-81,-82,-83,-84,-85,-86,-87,-88,-89,112,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,79,-93,-88,-89,-87,158,-92,-34,-107,-79,79,-108,112,-80,-90,-94,-103,-105,158,-79,-106,-101,-102,-91,-104,-109,-110,-117,-118,-125,-126,-123,-124,-119,-128,-79,257,-116,-115,-121,-122,-79,-127,-132,270,-133,-120,]),'RBRACKET':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,67,73,93,94,95,97,100,101,102,103,104,105,107,108,109,110,111,113,114,115,137,138,139,142,143,152,160,162,163,177,178,187,189,192,198,199,200,201,202,203,206,207,213,221,224,225,239,242,248,250,251,253,254,258,263,264,265,268,269,],[-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-52,-79,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,-50,-37,136,137,-79,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-35,-38,-33,-53,-34,-107,-79,-108,-79,-80,-103,-105,-36,-79,-106,-101,-102,-104,-109,-110,-117,-118,-125,-126,-123,-124,-134,-119,-128,-135,-79,-79,262,-116,-115,-121,-122,268,-79,-127,-132,-133,-120,]),'PADDING':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,64,67,97,100,101,102,103,104,105,107,108,109,110,114,115,117,118,119,122,137,138,139,142,152,160,162,165,166,167,177,178,182,183,187,189,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,210,212,214,216,220,221,224,229,231,232,233,234,239,240,241,242,245,246,250,251,253,254,260,261,262,263,264,265,266,267,268,269,271,],[-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,99,-51,-50,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,146,-142,-143,-147,-34,-107,161,-108,-80,-103,-105,146,-140,-141,161,-106,-148,-24,-101,-102,-104,-150,213,-157,-79,-109,-110,-117,-118,-125,-126,213,213,-123,-124,-154,-156,-158,-160,213,-119,-128,-149,-79,-161,-162,-163,-79,213,213,213,213,-159,-116,-115,-121,-122,-155,-164,-165,-79,-127,-132,-131,-129,-133,-120,-130,]),'KEYWORD_IN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,67,97,100,101,102,103,104,105,107,108,109,110,114,115,116,117,118,119,122,137,138,139,142,145,147,152,160,162,165,166,167,177,178,179,182,183,187,189,192,193,194,195,196,198,199,200,201,202,203,206,207,210,212,214,216,221,224,229,231,232,233,234,239,245,246,250,251,253,254,260,261,262,263,264,265,268,269,],[-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,-50,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,144,-79,-142,-143,-147,-34,-107,-79,-108,-144,-146,-80,-103,-105,-79,-140,-141,-79,-106,-145,-148,-24,-101,-102,-104,-150,-79,-157,-79,-109,-110,-117,-118,-125,-126,-123,-124,-154,-156,-158,-160,-119,-128,-149,-79,-161,-162,-163,-79,-79,-159,-116,-115,-121,-122,-155,-164,-165,-79,-127,-132,-133,-120,]),'EQ':([18,19,20,21,22,23,24,25,26,32,33,34,35,36,37,38,39,40,41,42,43,44,45,83,84,85,86,87,88,89,90,91,107,108,109,115,120,123,128,130,136,140,149,151,153,154,156,168,172,174,190,197,218,219,237,249,],[-25,-26,-27,-28,-29,-30,-31,-32,-45,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-81,-82,-83,-84,-85,-86,-87,-88,-89,-76,-77,-78,-53,-79,-79,-99,-93,-92,-79,171,173,-90,-79,-94,180,-53,-97,-91,-79,-151,-153,-79,-152,]),'ANNOTATION':([18,32,33,34,35,36,],[69,-71,-72,-73,-74,-75,]),'KEYWORD_DATA':([146,],[169,]),'KEYWORD_FORALL':([170,204,205,209,213,223,225,226,235,236,257,270,],[186,-79,-79,186,-134,186,-135,186,186,186,186,186,]),'PIPE':([194,195,196,206,207,211,212,213,214,216,231,232,233,234,245,246,261,262,],[-79,-157,-79,-123,-124,230,-135,-134,-158,-160,-79,-161,-162,-163,-79,-159,-164,-165,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'st_expr':([0,164,],[1,178,]),'expr':([0,12,27,31,46,49,50,54,57,62,63,66,112,124,164,171,173,],[2,68,70,95,96,68,68,68,68,68,68,106,143,152,2,187,189,]),'expr_term0':([0,12,27,31,46,49,50,54,57,62,63,66,112,124,164,171,173,],[3,3,3,3,97,3,3,3,3,3,3,3,3,3,3,3,3,]),'expr_term1':([0,12,27,31,46,49,50,54,57,62,63,66,112,124,164,171,173,],[4,4,4,4,4,100,4,4,4,4,4,4,4,4,4,4,4,]),'expr_term2':([0,12,27,31,46,49,50,54,57,62,63,66,112,124,164,171,173,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'expr_term6':([0,12,27,31,46,49,50,54,57,62,63,66,112,124,164,171,173,],[6,6,6,6,6,6,101,6,6,6,6,6,6,6,6,6,6,]),'expr_term7':([0,12,27,31,46,49,50,54,57,62,63,66,112,124,164,171,173,],[7,7,7,7,7,7,7,102,7,7,7,7,7,7,7,7,7,]),'expr_term9':([0,12,27,31,46,49,50,54,57,62,63,66,112,124,164,171,173,],[8,8,8,8,8,8,8,8,103,104,8,8,8,8,8,8,8,]),'expr_factor':([0,12,27,31,46,49,50,54,57,62,63,66,112,124,164,171,173,],[9,67,9,9,9,9,9,9,9,9,105,9,9,9,9,9,9,]),'literal':([0,12,27,30,31,46,49,50,54,57,62,63,66,92,112,124,126,127,155,158,164,171,173,],[10,10,10,83,10,10,10,10,10,10,10,10,10,83,10,10,83,83,83,83,10,10,10,]),'identifier':([0,12,27,31,46,49,50,54,57,62,63,66,69,112,124,164,171,173,],[11,11,11,11,11,11,11,11,11,11,11,11,109,11,11,11,11,11,]),'enclosed_expr':([0,9,12,27,31,46,49,50,54,57,62,63,66,67,105,112,124,164,171,173,],[12,64,12,12,12,12,12,12,12,12,12,12,12,64,64,12,12,12,12,12,]),'letexpr':([0,12,27,31,46,49,50,54,57,62,63,66,112,124,164,171,173,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'where_expr':([0,12,27,31,46,49,50,54,57,62,63,66,112,124,164,171,173,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'lambda_expr':([0,12,27,31,46,49,50,54,57,62,63,66,112,124,164,171,173,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'simple_list_expr':([0,12,27,31,46,49,50,54,57,62,63,66,112,124,164,171,173,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'simple_tuple_expr':([0,12,27,31,46,49,50,54,57,62,63,66,112,124,164,171,173,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'number':([0,12,27,30,31,46,49,50,54,57,62,63,66,92,112,124,126,127,155,158,164,171,173,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'concrete_number':([0,12,27,30,31,46,49,50,54,57,62,63,66,92,112,124,126,127,155,158,164,171,173,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'string':([0,12,27,30,31,46,49,50,54,57,62,63,66,69,92,112,124,126,127,155,158,164,171,173,],[20,20,20,20,20,20,20,20,20,20,20,20,20,107,20,20,20,20,20,20,20,20,20,20,]),'char':([0,12,27,30,31,46,49,50,54,57,62,63,66,69,92,112,124,126,127,155,158,164,171,173,],[21,21,21,21,21,21,21,21,21,21,21,21,21,108,21,21,21,21,21,21,21,21,21,21,]),'date':([0,12,27,30,31,46,49,50,54,57,62,63,66,92,112,124,126,127,155,158,164,171,173,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'datetime':([0,12,27,30,31,46,49,50,54,57,62,63,66,92,112,124,126,127,155,158,164,171,173,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'date_interval':([0,12,27,30,31,46,49,50,54,57,62,63,66,92,112,124,126,127,155,158,164,171,173,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'datetime_interval':([0,12,27,30,31,46,49,50,54,57,62,63,66,92,112,124,126,127,155,158,164,171,173,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'_identifier':([0,12,27,31,46,49,50,54,57,62,63,66,69,80,92,98,99,112,124,146,161,164,171,173,208,243,],[26,26,26,26,26,26,26,26,26,26,26,26,26,120,129,140,140,26,26,120,140,26,26,26,228,228,]),'_enclosed_operator':([0,9,12,27,31,46,49,50,54,57,62,63,66,67,80,98,99,105,112,124,146,161,164,171,173,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,123,123,123,28,28,28,123,123,28,28,28,]),'infixl_operator_0':([2,68,70,95,96,106,143,152,187,189,],[46,46,46,46,46,46,46,46,46,46,]),'infixr_operator_2':([5,27,66,121,141,],[49,75,75,75,75,]),'infixl_operator_2':([5,27,66,121,141,],[50,74,74,74,74,]),'infixl_operator_6':([6,27,66,101,121,141,],[54,76,76,54,76,76,]),'infixl_operator_7':([7,27,66,102,121,141,],[57,77,77,57,77,77,]),'infixr_operator_9':([9,27,66,67,105,121,141,],[62,78,78,62,62,78,78,]),'_list_items':([27,31,],[71,94,]),'_st_operator':([27,66,121,141,],[72,72,150,72,]),'empty':([27,31,70,82,95,117,120,123,135,139,140,143,154,165,170,176,177,194,196,197,204,205,209,220,223,226,231,235,236,237,239,240,241,242,245,257,263,270,],[73,73,113,128,113,147,128,128,159,162,128,113,128,147,185,159,162,212,216,219,225,225,185,225,185,185,216,185,185,219,254,225,225,225,212,185,254,185,]),'patterns':([30,155,],[81,175,]),'pattern':([30,92,126,127,155,158,],[82,135,153,154,82,176,]),'cons_pattern':([30,92,126,127,155,158,],[84,84,84,84,84,84,]),'list_cons_pattern':([30,92,126,127,155,158,],[85,85,85,85,85,85,]),'tuple_cons_pattern':([30,92,126,127,155,158,],[86,86,86,86,86,86,]),'empty_list_pattern':([30,92,126,127,155,158,],[87,87,87,87,87,87,]),'empty_tuple_pattern':([30,92,126,127,155,158,],[88,88,88,88,88,88,]),'_list_items_cont':([70,95,143,],[111,111,163,]),'local_definitions':([80,],[116,]),'local_definition':([80,146,],[117,166,]),'nametype_decl':([80,146,],[118,118,]),'valuedef':([80,146,],[119,119,]),'equation':([80,98,99,146,161,],[122,139,139,122,177,]),'_patterns':([82,120,123,140,154,],[125,149,151,149,174,]),'patterns_comma_sep':([92,],[131,]),'equations':([98,99,],[138,142,]),'_local_definition_set':([117,165,],[145,179,]),'_patterns_comma':([135,176,],[157,191,]),'_equation_set':([139,177,],[160,192,]),'definition':([146,],[165,]),'datatype_definition':([146,],[167,]),'_datatype_lhs':([146,],[168,]),'st_type_expr':([170,209,],[182,229,]),'type_expr':([170,209,223,226,235,236,257,270,],[183,183,241,242,247,248,266,266,]),'type_scheme':([170,209,223,226,235,236,257,270,],[184,184,184,184,184,184,184,184,]),'_data_rhs':([180,],[193,]),'data_cons':([180,230,],[194,245,]),'_data_cons':([180,230,],[195,195,]),'type_function_expr':([184,238,],[198,251,]),'type_term':([184,238,],[199,250,]),'type_app_expression':([184,238,],[200,200,]),'type_factor':([184,222,238,252,],[201,239,201,263,]),'type_variable':([184,215,222,238,252,],[202,232,202,202,202,]),'type_cons':([184,215,222,238,252,],[203,233,203,203,203,]),'_data_conses':([194,245,],[210,260,]),'_maybe_padding':([194,204,205,220,240,241,242,245,],[211,223,226,238,255,256,258,211,]),'_cons_args':([196,231,],[214,246,]),'_cons_params':([197,237,],[218,249,]),'_app_args_non_empty':([201,],[221,]),'_type_scheme_generics':([208,243,],[227,259,]),'cons_arg':([215,],[231,]),'_cons_arg_factor':([215,],[234,]),'_type_expr_list':([223,],[240,]),'_app_args':([239,263,],[253,269,]),'_type_expr_list_trail':([257,270,],[267,271,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> st_expr","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','__init__.py',437),
  ('expr_term9 -> expr_factor infixr_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','__init__.py',444),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','__init__.py',445),
  ('expr_term7 -> expr_term7 infixl_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','__init__.py',447),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','__init__.py',448),
  ('expr_term6 -> expr_term6 infixl_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','__init__.py',450),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','__init__.py',451),
  ('expr_term2 -> expr_term2 infixl_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','__init__.py',453),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','__init__.py',454),
  ('expr_term1 -> expr_term2 infixr_operator_2 expr_term1','expr_term1',3,'p_expressions_precedence_rules','__init__.py',456),
  ('expr_term1 -> expr_term2','expr_term1',1,'p_expressions_precedence_rules','__init__.py',457),
  ('expr_term0 -> expr infixl_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','__init__.py',459),
  ('expr_term0 -> expr_term1','expr_term0',1,'p_expressions_precedence_rules','__init__.py',460),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','__init__.py',473),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','__init__.py',475),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','__init__.py',477),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','__init__.py',478),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','__init__.py',479),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','__init__.py',480),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','__init__.py',481),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','__init__.py',482),
  ('expr_factor -> simple_list_expr','expr_factor',1,'p_standalone_definitions','__init__.py',483),
  ('expr_factor -> simple_tuple_expr','expr_factor',1,'p_standalone_definitions','__init__.py',484),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','__init__.py',486),
  ('literal -> number','literal',1,'p_literals','__init__.py',494),
  ('literal -> concrete_number','literal',1,'p_literals','__init__.py',495),
  ('literal -> string','literal',1,'p_literals','__init__.py',496),
  ('literal -> char','literal',1,'p_literals','__init__.py',497),
  ('literal -> date','literal',1,'p_literals','__init__.py',498),
  ('literal -> datetime','literal',1,'p_literals','__init__.py',499),
  ('literal -> date_interval','literal',1,'p_literals','__init__.py',500),
  ('literal -> datetime_interval','literal',1,'p_literals','__init__.py',501),
  ('simple_tuple_expr -> LPAREN _list_items RPAREN','simple_tuple_expr',3,'p_tuple_expr','__init__.py',507),
  ('simple_list_expr -> LBRACKET _list_items RBRACKET','simple_list_expr',3,'p_list_expr','__init__.py',514),
  ('_list_items -> expr _list_items_cont','_list_items',2,'p_list_items','__init__.py',521),
  ('_list_items_cont -> COMMA expr _list_items_cont','_list_items_cont',3,'p_list_items','__init__.py',522),
  ('_list_items -> empty','_list_items',1,'p_list_items_empty','__init__.py',528),
  ('_list_items_cont -> empty','_list_items_cont',1,'p_list_items_empty','__init__.py',529),
  ('date -> DATE','date',1,'p_date','__init__.py',535),
  ('datetime -> DATETIME','datetime',1,'p_datetime','__init__.py',541),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','__init__.py',547),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','__init__.py',553),
  ('char -> CHAR','char',1,'p_char','__init__.py',559),
  ('string -> STRING','string',1,'p_string','__init__.py',564),
  ('identifier -> _identifier','identifier',1,'p_variable','__init__.py',569),
  ('_identifier -> UNDER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',576),
  ('_identifier -> UPPER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',577),
  ('_identifier -> LOWER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',578),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','__init__.py',585),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','__init__.py',590),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','__init__.py',591),
  ('enclosed_expr -> _enclosed_operator','enclosed_expr',1,'p_operators_as_expressios','__init__.py',597),
  ('_enclosed_operator -> LPAREN _st_operator RPAREN','_enclosed_operator',3,'p_enclosed_operator','__init__.py',603),
  ('infixr_operator_9 -> DOT_OPERATOR','infixr_operator_9',1,'p_operator','__init__.py',613),
  ('infixl_operator_7 -> STAR','infixl_operator_7',1,'p_operator','__init__.py',615),
  ('infixl_operator_7 -> SLASH','infixl_operator_7',1,'p_operator','__init__.py',616),
  ('infixl_operator_7 -> DOUBLESLASH','infixl_operator_7',1,'p_operator','__init__.py',617),
  ('infixl_operator_7 -> PERCENT','infixl_operator_7',1,'p_operator','__init__.py',618),
  ('infixl_operator_6 -> PLUS','infixl_operator_6',1,'p_operator','__init__.py',620),
  ('infixl_operator_6 -> MINUS','infixl_operator_6',1,'p_operator','__init__.py',621),
  ('infixr_operator_2 -> COLON','infixr_operator_2',1,'p_operator','__init__.py',623),
  ('infixl_operator_2 -> OPERATOR','infixl_operator_2',1,'p_operator','__init__.py',625),
  ('infixl_operator_2 -> ARROW','infixl_operator_2',1,'p_operator','__init__.py',626),
  ('infixl_operator_0 -> TICK_OPERATOR','infixl_operator_0',1,'p_operator','__init__.py',628),
  ('_st_operator -> infixl_operator_2','_st_operator',1,'p_operator','__init__.py',630),
  ('_st_operator -> infixr_operator_2','_st_operator',1,'p_operator','__init__.py',631),
  ('_st_operator -> infixl_operator_6','_st_operator',1,'p_operator','__init__.py',632),
  ('_st_operator -> infixl_operator_7','_st_operator',1,'p_operator','__init__.py',633),
  ('_st_operator -> infixr_operator_9','_st_operator',1,'p_operator','__init__.py',634),
  ('_st_operator -> COMMA','_st_operator',1,'p_operator','__init__.py',635),
  ('number -> BASE10_INTEGER','number',1,'p_integer','__init__.py',642),
  ('number -> BASE16_INTEGER','number',1,'p_integer','__init__.py',643),
  ('number -> BASE8_INTEGER','number',1,'p_integer','__init__.py',644),
  ('number -> BASE2_INTEGER','number',1,'p_integer','__init__.py',645),
  ('number -> FLOAT','number',1,'p_float','__init__.py',674),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','__init__.py',679),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','__init__.py',680),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','__init__.py',681),
  ('empty -> <empty>','empty',0,'p_empty','__init__.py',690),
  ('lambda_expr -> BACKSLASH patterns ARROW expr','lambda_expr',4,'p_lambda_definition','__init__.py',695),
  ('pattern -> literal','pattern',1,'p_pattern','__init__.py',704),
  ('pattern -> cons_pattern','pattern',1,'p_pattern','__init__.py',705),
  ('pattern -> list_cons_pattern','pattern',1,'p_pattern','__init__.py',706),
  ('pattern -> tuple_cons_pattern','pattern',1,'p_pattern','__init__.py',707),
  ('pattern -> empty_list_pattern','pattern',1,'p_pattern','__init__.py',708),
  ('pattern -> empty_tuple_pattern','pattern',1,'p_pattern','__init__.py',709),
  ('pattern -> LOWER_IDENTIFIER','pattern',1,'p_var_pattern','__init__.py',715),
  ('pattern -> UNDER_IDENTIFIER','pattern',1,'p_var_pattern','__init__.py',716),
  ('pattern -> UPPER_IDENTIFIER','pattern',1,'p_simplecons_pattern','__init__.py',722),
  ('list_cons_pattern -> pattern COLON pattern','list_cons_pattern',3,'p_list_cons_for_param','__init__.py',728),
  ('cons_pattern -> LPAREN _identifier SPACE patterns RPAREN','cons_pattern',5,'p_param_pattern','__init__.py',734),
  ('empty_list_pattern -> LBRACKET RBRACKET','empty_list_pattern',2,'p_empty_list_as_pattern','__init__.py',739),
  ('empty_tuple_pattern -> LPAREN RPAREN','empty_tuple_pattern',2,'p_unit_value_as_pattern','__init__.py',746),
  ('tuple_cons_pattern -> LPAREN patterns_comma_sep RPAREN','tuple_cons_pattern',3,'p_tuple_cons_pattern','__init__.py',752),
  ('patterns -> pattern _patterns','patterns',2,'p_patterns','__init__.py',760),
  ('patterns_comma_sep -> pattern _patterns_comma','patterns_comma_sep',2,'p_patterns','__init__.py',761),
  ('_patterns -> SPACE pattern _patterns','_patterns',3,'p_patterns','__init__.py',762),
  ('_patterns_comma -> COMMA pattern _patterns_comma','_patterns_comma',3,'p_patterns','__init__.py',763),
  ('_patterns -> empty','_patterns',1,'p_patterns_empty','__init__.py',769),
  ('_patterns_comma -> empty','_patterns_comma',1,'p_patterns_empty','__init__.py',770),
  ('equation -> _identifier _patterns EQ expr','equation',4,'p_equation','__init__.py',776),
  ('equation -> _enclosed_operator _patterns EQ expr','equation',4,'p_equation','__init__.py',777),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','__init__.py',787),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','__init__.py',796),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','__init__.py',805),
  ('letexpr -> KEYWORD_LET SPACE local_definitions KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','__init__.py',815),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','__init__.py',823),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','__init__.py',824),
  ('type_expr -> type_scheme type_function_expr','type_expr',2,'p_type_expr','__init__.py',834),
  ('type_expr -> type_scheme type_term','type_expr',2,'p_type_expr','__init__.py',835),
  ('type_scheme -> empty','type_scheme',1,'p_type_scheme_empty','__init__.py',844),
  ('type_scheme -> KEYWORD_FORALL SPACE _type_scheme_generics','type_scheme',3,'p_type_scheme','__init__.py',848),
  ('_type_scheme_generics -> _identifier SPACE _type_scheme_generics','_type_scheme_generics',3,'p_type_scheme_generics','__init__.py',855),
  ('_type_scheme_generics -> _identifier DOT_OPERATOR','_type_scheme_generics',2,'p_last_type_scheme_generic','__init__.py',860),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','__init__.py',865),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','__init__.py',866),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','__init__.py',876),
  ('type_term -> type_factor','type_term',1,'p_type_term','__init__.py',877),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','__init__.py',882),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','__init__.py',894),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','__init__.py',895),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','__init__.py',901),
  ('type_variable -> LOWER_IDENTIFIER','type_variable',1,'p_type_variable','__init__.py',906),
  ('type_cons -> UPPER_IDENTIFIER','type_cons',1,'p_type_cons','__init__.py',911),
  ('type_factor -> type_variable','type_factor',1,'p_type_factor_identifier','__init__.py',916),
  ('type_factor -> type_cons','type_factor',1,'p_type_factor_identifier','__init__.py',917),
  ('type_factor -> LPAREN _maybe_padding _type_expr_list _maybe_padding RPAREN','type_factor',5,'p_type_factor_tuple','__init__.py',924),
  ('type_factor -> LPAREN RPAREN','type_factor',2,'p_type_factor_unit_type','__init__.py',930),
  ('_type_expr_list -> type_expr COMMA _type_expr_list_trail','_type_expr_list',3,'p_type_expr_list','__init__.py',935),
  ('_type_expr_list_trail -> type_expr COMMA _type_expr_list_trail','_type_expr_list_trail',3,'p_type_expr_list','__init__.py',936),
  ('_type_expr_list_trail -> type_expr','_type_expr_list_trail',1,'p_type_expr_list_last_item','__init__.py',942),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','__init__.py',948),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','__init__.py',953),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','__init__.py',958),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','__init__.py',959),
  ('program -> definitions','program',1,'p_program','__init__.py',965),
  ('definitions -> definition _definition_set','definitions',2,'p_definitions','__init__.py',971),
  ('_definition_set -> NEWLINE definition _definition_set','_definition_set',3,'p_definition_set','__init__.py',977),
  ('_definition_set -> empty','_definition_set',1,'p_definition_set2','__init__.py',983),
  ('definition -> local_definition','definition',1,'p_definition','__init__.py',989),
  ('definition -> datatype_definition','definition',1,'p_definition','__init__.py',990),
  ('local_definition -> nametype_decl','local_definition',1,'p_local_definition','__init__.py',997),
  ('local_definition -> valuedef','local_definition',1,'p_local_definition','__init__.py',998),
  ('local_definitions -> local_definition _local_definition_set','local_definitions',2,'p_local_definitions','__init__.py',1004),
  ('_local_definition_set -> PADDING definition _local_definition_set','_local_definition_set',3,'p_local_definition_set','__init__.py',1010),
  ('_local_definition_set -> empty','_local_definition_set',1,'p_local_definition_set_empty','__init__.py',1016),
  ('valuedef -> equation','valuedef',1,'p_valuedef','__init__.py',1022),
  ('nametype_decl -> _identifier COLON COLON st_type_expr','nametype_decl',4,'p_nametype_decl','__init__.py',1028),
  ('nametype_decl -> LPAREN _st_operator RPAREN COLON COLON st_type_expr','nametype_decl',6,'p_nametype_decl_operators','__init__.py',1037),
  ('datatype_definition -> _datatype_lhs EQ _data_rhs','datatype_definition',3,'p_datatype_definition','__init__.py',1046),
  ('_datatype_lhs -> KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params','_datatype_lhs',4,'p_datatype_lhs','__init__.py',1054),
  ('_cons_params -> SPACE LOWER_IDENTIFIER _cons_params','_cons_params',3,'p_datatype_cons_params','__init__.py',1063),
  ('_cons_params -> empty','_cons_params',1,'p_datatype_cons_params_empty','__init__.py',1069),
  ('_data_rhs -> data_cons _data_conses','_data_rhs',2,'p_datatype_body','__init__.py',1075),
  ('_data_conses -> _maybe_padding PIPE data_cons _data_conses','_data_conses',4,'p_datatype_body','__init__.py',1076),
  ('_data_conses -> empty','_data_conses',1,'p_datatype_conses_empty','__init__.py',1082),
  ('data_cons -> _data_cons','data_cons',1,'p_data_cons','__init__.py',1087),
  ('_data_cons -> UPPER_IDENTIFIER _cons_args','_data_cons',2,'p_bare_data_cons','__init__.py',1093),
  ('_cons_args -> SPACE cons_arg _cons_args','_cons_args',3,'p_data_cons_args','__init__.py',1098),
  ('_cons_args -> empty','_cons_args',1,'p_data_cons_args_empty','__init__.py',1104),
  ('cons_arg -> type_variable','cons_arg',1,'p_cons_arg','__init__.py',1110),
  ('cons_arg -> type_cons','cons_arg',1,'p_cons_arg','__init__.py',1111),
  ('cons_arg -> _cons_arg_factor','cons_arg',1,'p_cons_arg','__init__.py',1112),
  ('_cons_arg_factor -> LPAREN type_expr RPAREN','_cons_arg_factor',3,'p_cons_arg_factor','__init__.py',1118),
  ('_cons_arg_factor -> LBRACKET type_expr RBRACKET','_cons_arg_factor',3,'p_cons_arg_factor_list','__init__.py',1124),
]
