
# expr_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'st_exprrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON COMMA DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FLOAT KEYWORD_CLASS KEYWORD_DATA KEYWORD_FORALL KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LOWER_IDENTIFIER LPAREN MINUS NEWLINE OPERATOR PADDING PERCENT PIPE PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATOR UNDER_IDENTIFIER UPPER_IDENTIFIERexpr_factor : expr_factor SPACE expr_factor\n    expr_term9 : expr_factor infixr_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infixl_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infixl_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infixl_operator_2 expr_term6\n               | expr_term6\n\n    expr_term1 : expr_term2 infixr_operator_2 expr_term1\n               | expr_term2\n\n    expr_term0 : expr infixl_operator_0 expr_term0\n               | expr_term1\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | letexpr\n                | where_expr\n                | lambda_expr\n                | simple_list_expr\n                | simple_tuple_expr\n\n    st_type_expr : type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    simple_tuple_expr : LPAREN _list_items RPAREN\n    simple_list_expr : LBRACKET _list_items RBRACKET\n    _list_items : expr _list_items_cont\n       _list_items_cont : COMMA expr _list_items_cont\n    _list_items : empty\n       _list_items_cont : empty\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    char : CHARstring : STRINGidentifier : _identifier\n\n    _identifier : UNDER_IDENTIFIER\n                   | UPPER_IDENTIFIER\n                   | LOWER_IDENTIFIER\n\n    enclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : _enclosed_operator\n    _enclosed_operator : LPAREN _st_operator RPAREN\n    infixr_operator_9 : DOT_OPERATOR\n\n    infixl_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infixl_operator_6 : PLUS\n                     | MINUS\n\n    infixr_operator_2 : COLON\n\n    infixl_operator_2 : OPERATOR\n                      | ARROW\n\n    infixl_operator_0 : TICK_OPERATOR\n\n    _st_operator : infixl_operator_2\n                 | infixr_operator_2\n                 | infixl_operator_6\n                 | infixl_operator_7\n                 | infixr_operator_9\n                 | COMMA\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH patterns ARROW expr\n    \n    pattern : identifier\n    pattern : literal\n    pattern : cons_pattern\n    pattern : list_cons_pattern\n    pattern : tuple_cons_pattern\n    pattern : empty_list_pattern\n    pattern : empty_tuple_pattern\n    list_cons_pattern : pattern COLON pattern\n    cons_pattern : LPAREN _identifier SPACE patterns RPARENempty_list_pattern : LBRACKET RBRACKETempty_tuple_pattern : LPAREN RPARENtuple_cons_pattern : LPAREN patterns_comma_sep RPAREN\n    patterns : pattern _patterns\n       patterns_comma_sep : pattern _patterns_comma\n       _patterns : SPACE pattern _patterns\n       _patterns_comma : COMMA pattern _patterns_comma\n    _patterns : empty\n       _patterns_comma : empty\n    equation : _identifier _patterns EQ expr\n       equation : _enclosed_operator _patterns EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE local_definitions KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    type_expr : type_scheme type_function_expr\n                 | type_scheme type_termtype_scheme : emptytype_scheme : KEYWORD_FORALL SPACE _type_scheme_generics_type_scheme_generics : _identifier SPACE _type_scheme_generics_type_scheme_generics : _identifier DOT_OPERATORtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_variable : LOWER_IDENTIFIERtype_cons : UPPER_IDENTIFIERtype_factor : type_variable\n                   | type_cons\n\n    type_factor : LPAREN _maybe_padding _type_expr_list _maybe_padding RPARENtype_factor : LPAREN RPAREN_type_expr_list : type_expr COMMA _type_expr_list_trail\n       _type_expr_list_trail : type_expr COMMA _type_expr_list_trail\n    _type_expr_list_trail : type_expr\n    type_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET_maybe_padding : PADDING\n                      | empty\n    program : definitions\n    definitions : definition _definition_set\n    _definition_set : NEWLINE definition _definition_set\n    _definition_set : empty\n    definition : local_definition\n                  | datatype_definition\n    \n    local_definition : nametype_decl\n                     | valuedef\n    local_definitions : local_definition _local_definition_set\n    _local_definition_set : PADDING definition _local_definition_set\n    _local_definition_set : empty\n    valuedef : equation\n    nametype_decl : _identifier COLON COLON st_type_expr\n    nametype_decl : LPAREN _st_operator RPAREN COLON COLON st_type_expr\n    datatype_definition : _datatype_lhs EQ _data_rhs\n    _datatype_lhs : KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params\n    _cons_params : SPACE LOWER_IDENTIFIER _cons_params\n    _cons_params : empty\n    _data_rhs : data_cons _data_conses\n       _data_conses : _maybe_padding PIPE data_cons _data_conses\n    _data_conses : emptydata_cons : _data_cons_data_cons : UPPER_IDENTIFIER _cons_args_cons_args : SPACE cons_arg _cons_args\n    _cons_args : empty\n    cons_arg : type_variable\n       cons_arg : type_cons\n       cons_arg : _cons_arg_factor\n    _cons_arg_factor : LPAREN type_expr RPAREN\n    _cons_arg_factor : LBRACKET type_expr RBRACKET\n    '
    
_lr_action_items = {'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,80,90,95,96,97,98,99,100,101,102,103,105,106,107,108,110,112,113,122,124,125,132,133,134,137,141,147,150,153,155,156,157,159,165,166,168,172,173,179,180,182,184,187,199,200,204,208,210,215,217,218,220,221,222,230,231,233,239,247,252,254,265,],[27,-14,-15,-13,-11,-9,-7,-5,66,-16,-17,27,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,27,-52,90,27,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,27,-64,27,27,-61,-62,-63,27,-59,-60,27,-55,-56,-57,-58,27,27,-51,-54,27,66,119,90,-12,136,136,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,27,-33,-53,27,90,90,-34,-105,-79,-106,119,-80,90,90,-101,136,-103,27,-79,27,27,-79,-104,199,-109,-99,-100,-102,-79,-79,-79,-132,230,-79,199,-79,-133,-79,-110,-79,-79,199,-112,199,-79,-111,-79,]),'KEYWORD_LET':([0,12,27,28,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,108,110,113,122,159,166,168,],[29,29,29,-52,29,29,-64,29,29,-61,-62,-63,29,-59,-60,29,-55,-56,-57,-58,29,29,-54,29,-49,29,-53,29,29,29,29,]),'BACKSLASH':([0,12,27,28,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,108,110,113,122,159,166,168,],[30,30,30,-52,30,30,-64,30,30,-61,-62,-63,30,-59,-60,30,-55,-56,-57,-58,30,30,-54,30,-49,30,-53,30,30,30,30,]),'LBRACKET':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,90,108,110,113,122,124,125,150,153,159,165,166,168,179,180,199,200,204,208,210,215,217,218,220,221,222,230,231,233,239,247,252,254,265,],[31,31,31,-52,91,31,31,-64,31,31,-61,-62,-63,31,-59,-60,31,-55,-56,-57,-58,31,31,-54,31,91,-49,31,-53,31,91,91,91,91,31,-79,31,31,200,-109,-79,-79,-79,-132,231,-79,200,-79,-133,-79,-110,-79,-79,200,-112,200,-79,-111,-79,]),'BASE10_INTEGER':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,90,108,110,113,122,124,125,150,153,159,166,168,],[32,32,32,-52,32,32,32,-64,32,32,-61,-62,-63,32,-59,-60,32,-55,-56,-57,-58,32,32,-54,32,32,-49,32,-53,32,32,32,32,32,32,32,32,]),'BASE16_INTEGER':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,90,108,110,113,122,124,125,150,153,159,166,168,],[33,33,33,-52,33,33,33,-64,33,33,-61,-62,-63,33,-59,-60,33,-55,-56,-57,-58,33,33,-54,33,33,-49,33,-53,33,33,33,33,33,33,33,33,]),'BASE8_INTEGER':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,90,108,110,113,122,124,125,150,153,159,166,168,],[34,34,34,-52,34,34,34,-64,34,34,-61,-62,-63,34,-59,-60,34,-55,-56,-57,-58,34,34,-54,34,34,-49,34,-53,34,34,34,34,34,34,34,34,]),'BASE2_INTEGER':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,90,108,110,113,122,124,125,150,153,159,166,168,],[35,35,35,-52,35,35,35,-64,35,35,-61,-62,-63,35,-59,-60,35,-55,-56,-57,-58,35,35,-54,35,35,-49,35,-53,35,35,35,35,35,35,35,35,]),'FLOAT':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,90,108,110,113,122,124,125,150,153,159,166,168,],[36,36,36,-52,36,36,36,-64,36,36,-61,-62,-63,36,-59,-60,36,-55,-56,-57,-58,36,36,-54,36,36,-49,36,-53,36,36,36,36,36,36,36,36,]),'STRING':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,69,90,108,110,113,122,124,125,150,153,159,166,168,],[37,37,37,-52,37,37,37,-64,37,37,-61,-62,-63,37,-59,-60,37,-55,-56,-57,-58,37,37,-54,37,37,37,-49,37,-53,37,37,37,37,37,37,37,37,]),'CHAR':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,69,90,108,110,113,122,124,125,150,153,159,166,168,],[38,38,38,-52,38,38,38,-64,38,38,-61,-62,-63,38,-59,-60,38,-55,-56,-57,-58,38,38,-54,38,38,38,-49,38,-53,38,38,38,38,38,38,38,38,]),'DATE':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,90,108,110,113,122,124,125,150,153,159,166,168,],[39,39,39,-52,39,39,39,-64,39,39,-61,-62,-63,39,-59,-60,39,-55,-56,-57,-58,39,39,-54,39,39,-49,39,-53,39,39,39,39,39,39,39,39,]),'DATETIME':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,90,108,110,113,122,124,125,150,153,159,166,168,],[40,40,40,-52,40,40,40,-64,40,40,-61,-62,-63,40,-59,-60,40,-55,-56,-57,-58,40,40,-54,40,40,-49,40,-53,40,40,40,40,40,40,40,40,]),'DATE_INTERVAL':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,90,108,110,113,122,124,125,150,153,159,166,168,],[41,41,41,-52,41,41,41,-64,41,41,-61,-62,-63,41,-59,-60,41,-55,-56,-57,-58,41,41,-54,41,41,-49,41,-53,41,41,41,41,41,41,41,41,]),'DATETIME_INTERVAL':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,90,108,110,113,122,124,125,150,153,159,166,168,],[42,42,42,-52,42,42,42,-64,42,42,-61,-62,-63,42,-59,-60,42,-55,-56,-57,-58,42,42,-54,42,42,-49,42,-53,42,42,42,42,42,42,42,42,]),'UNDER_IDENTIFIER':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,69,80,90,96,97,108,110,113,122,124,125,141,150,153,156,159,166,168,203,238,],[43,43,43,-52,43,43,43,-64,43,43,-61,-62,-63,43,-59,-60,43,-55,-56,-57,-58,43,43,-54,43,43,43,43,43,43,-49,43,-53,43,43,43,43,43,43,43,43,43,43,43,43,]),'UPPER_IDENTIFIER':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,69,80,90,96,97,108,110,113,122,124,125,141,150,153,156,159,165,166,168,175,176,179,180,199,200,203,204,208,210,215,217,218,220,221,222,225,230,231,233,238,239,247,252,254,265,],[44,44,44,-52,44,44,44,-64,44,44,-61,-62,-63,44,-59,-60,44,-55,-56,-57,-58,44,44,-54,44,44,44,44,44,44,-49,44,-53,44,44,44,44,44,44,44,44,-79,44,44,191,192,202,-109,-79,-79,44,-79,-132,202,-79,202,-79,-133,-79,-110,191,-79,-79,202,44,-112,202,-79,-111,-79,]),'LOWER_IDENTIFIER':([0,12,27,28,30,31,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,69,80,90,96,97,108,110,113,122,124,125,141,150,153,156,159,165,166,168,179,180,199,200,203,204,208,210,212,215,217,218,220,221,222,230,231,233,238,239,247,252,254,265,],[45,45,45,-52,45,45,45,-64,45,45,-61,-62,-63,45,-59,-60,45,-55,-56,-57,-58,45,45,-54,45,45,45,45,45,45,-49,45,-53,45,45,45,45,45,45,45,45,-79,45,45,201,-109,-79,-79,45,-79,-132,201,232,-79,201,-79,-133,-79,-110,-79,-79,201,45,-112,201,-79,-111,-79,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,67,95,98,99,100,101,102,103,105,106,107,108,112,113,132,133,134,137,147,155,157,172,173,182,184,187,],[0,-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,-50,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,-34,-105,-79,-106,-80,-101,-103,-79,-104,-99,-100,-102,]),'SPACE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,64,67,82,83,84,85,86,87,88,89,95,98,99,100,101,102,103,105,106,107,108,112,113,118,121,127,128,131,132,133,134,135,137,139,147,148,149,151,155,157,164,167,172,173,181,182,184,185,187,191,192,196,197,198,201,202,219,223,226,227,228,229,232,234,256,257,258,259,260,263,],[-14,-15,-13,-11,-9,-7,-5,63,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-52,80,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,96,-51,63,125,-81,-82,-83,-84,-85,-86,-87,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,125,125,150,-91,-90,-34,-105,-79,125,-106,159,-80,-88,125,-92,-101,-103,176,-53,-79,-104,203,-99,-100,-89,-102,210,212,217,-123,-124,-121,-122,-126,238,210,-159,-160,-161,212,247,-162,-163,247,-125,-130,-131,]),'DOT_OPERATOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,95,98,99,100,101,102,103,105,106,107,108,112,113,119,132,133,134,136,137,147,155,157,172,173,182,184,187,223,],[-14,-15,-13,-11,-9,-7,-5,65,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,65,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,65,65,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,65,-34,-105,-79,65,-106,-80,-101,-103,-79,-104,-99,-100,-102,239,]),'STAR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,95,98,99,100,101,102,103,105,106,107,108,112,113,119,132,133,134,136,137,147,155,157,172,173,182,184,187,],[-14,-15,-13,-11,-9,58,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,58,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,58,-3,-12,-10,-8,58,-4,-2,-1,-76,-77,-78,-49,-33,-53,58,-34,-105,-79,58,-106,-80,-101,-103,-79,-104,-99,-100,-102,]),'SLASH':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,95,98,99,100,101,102,103,105,106,107,108,112,113,119,132,133,134,136,137,147,155,157,172,173,182,184,187,],[-14,-15,-13,-11,-9,59,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,59,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,59,-3,-12,-10,-8,59,-4,-2,-1,-76,-77,-78,-49,-33,-53,59,-34,-105,-79,59,-106,-80,-101,-103,-79,-104,-99,-100,-102,]),'DOUBLESLASH':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,95,98,99,100,101,102,103,105,106,107,108,112,113,119,132,133,134,136,137,147,155,157,172,173,182,184,187,],[-14,-15,-13,-11,-9,60,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,60,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,60,-3,-12,-10,-8,60,-4,-2,-1,-76,-77,-78,-49,-33,-53,60,-34,-105,-79,60,-106,-80,-101,-103,-79,-104,-99,-100,-102,]),'PERCENT':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,95,98,99,100,101,102,103,105,106,107,108,112,113,119,132,133,134,136,137,147,155,157,172,173,182,184,187,],[-14,-15,-13,-11,-9,61,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,61,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,61,-3,-12,-10,-8,61,-4,-2,-1,-76,-77,-78,-49,-33,-53,61,-34,-105,-79,61,-106,-80,-101,-103,-79,-104,-99,-100,-102,]),'PLUS':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,95,98,99,100,101,102,103,105,106,107,108,112,113,119,132,133,134,136,137,147,155,157,172,173,182,184,187,],[-14,-15,-13,-11,55,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,55,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,55,-3,-12,-10,55,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,55,-34,-105,-79,55,-106,-80,-101,-103,-79,-104,-99,-100,-102,]),'MINUS':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,95,98,99,100,101,102,103,105,106,107,108,112,113,119,132,133,134,136,137,147,155,157,172,173,182,184,187,],[-14,-15,-13,-11,56,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,56,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,56,-3,-12,-10,56,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,56,-34,-105,-79,56,-106,-80,-101,-103,-79,-104,-99,-100,-102,]),'COLON':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,82,83,84,85,86,87,88,89,95,98,99,100,101,102,103,105,106,107,108,112,113,118,119,127,128,130,131,132,133,134,136,137,143,147,148,149,151,155,157,167,171,172,173,182,183,184,185,187,],[-14,-15,-13,51,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,51,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,51,-3,124,-81,-82,-83,-84,-85,-86,-87,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,143,51,-45,-91,124,-90,-34,-105,-79,51,-106,165,-80,124,124,-92,-101,-103,183,124,-79,-104,-99,204,-100,-89,-102,]),'OPERATOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,95,98,99,100,101,102,103,105,106,107,108,112,113,119,132,133,134,136,137,147,155,157,172,173,182,184,187,],[-14,-15,-13,52,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,52,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,52,-3,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,52,-34,-105,-79,52,-106,-80,-101,-103,-79,-104,-99,-100,-102,]),'ARROW':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,81,82,83,84,85,86,87,88,89,95,98,99,100,101,102,103,105,106,107,108,112,113,119,123,126,128,131,132,133,134,136,137,147,148,149,151,155,157,169,172,173,182,184,185,187,194,195,196,197,198,201,202,216,219,234,245,248,249,258,259,260,263,264,],[-14,-15,-13,53,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,53,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,53,-3,122,-79,-81,-82,-83,-84,-85,-86,-87,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,53,-93,-97,-91,-90,-34,-105,-79,53,-106,-80,-88,-79,-92,-101,-103,-95,-79,-104,-99,-100,-89,-102,215,-115,-116,-123,-124,-121,-122,-117,-126,-79,215,-119,-120,-79,-125,-130,-131,-118,]),'KEYWORD_WHERE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,67,68,70,93,94,95,98,99,100,101,102,103,104,105,106,107,108,112,113,132,133,134,137,138,147,155,157,172,173,182,184,187,],[47,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,-3,47,47,47,47,-12,-10,-8,-6,-4,-2,-1,47,-76,-77,-78,-49,-33,-53,-34,-105,-79,-106,47,47,-101,-103,-79,-104,47,47,-102,]),'TICK_OPERATOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,67,68,70,93,94,95,98,99,100,101,102,103,104,105,106,107,108,112,113,132,133,134,137,138,147,155,157,172,173,182,184,187,],[48,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,-3,48,48,48,48,-12,-10,-8,-6,-4,-2,-1,48,-76,-77,-78,-49,-33,-53,-34,-105,-79,-106,48,48,-101,-103,-79,-104,48,48,-102,]),'RPAREN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,51,52,53,55,56,58,59,60,61,64,65,67,70,71,72,73,74,75,76,77,78,79,82,83,84,85,86,87,88,89,90,95,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,123,126,127,128,129,130,131,132,133,134,137,138,145,147,148,149,151,152,154,155,157,158,169,170,171,172,173,182,184,185,186,187,193,194,195,196,197,198,199,201,202,208,216,219,220,234,235,236,242,245,246,248,249,250,251,258,259,260,261,262,263,264,266,],[-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-79,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-61,-62,-63,-59,-60,-55,-56,-57,-58,-51,-54,-50,108,112,113,-37,-65,-66,-67,-68,-69,-70,-79,-81,-82,-83,-84,-85,-86,-87,128,-12,-10,-8,-6,-4,-2,-1,108,-76,-77,-78,-49,-35,-38,-33,-53,-93,-97,-45,-91,151,-79,-90,-34,-105,-79,-106,-79,167,-80,-88,-79,-92,-94,-98,-101,-103,-36,-95,185,-79,-79,-104,-99,-100,-89,-96,-102,-107,-108,-115,-116,-123,-124,219,-121,-122,-132,-117,-126,-133,-79,-79,-79,256,-114,-113,-119,-120,259,260,-79,-125,-130,-129,-127,-131,-118,-128,]),'COMMA':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,66,67,70,83,84,85,86,87,88,89,93,95,98,99,100,101,102,103,105,106,107,108,112,113,119,127,128,130,131,132,133,134,136,137,138,147,148,151,155,157,171,172,173,182,184,185,187,193,194,195,196,197,198,201,202,216,219,234,236,245,246,248,249,258,259,260,261,263,264,],[-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,79,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,79,-50,110,-81,-82,-83,-84,-85,-86,-87,110,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,79,-45,-91,153,-90,-34,-105,-79,79,-106,110,-80,-88,-92,-101,-103,153,-79,-104,-99,-100,-89,-102,-107,-108,-115,-116,-123,-124,-121,-122,-117,-126,-79,252,-114,-113,-119,-120,-79,-125,-130,265,-131,-118,]),'RBRACKET':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,67,73,91,92,93,95,98,99,100,101,102,103,105,106,107,108,109,111,112,113,132,133,134,137,138,147,155,157,158,172,173,182,184,187,193,194,195,196,197,198,201,202,208,216,219,220,234,237,243,245,246,248,249,253,258,259,260,263,264,],[-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-52,-79,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,-50,-37,131,132,-79,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-35,-38,-33,-53,-34,-105,-79,-106,-79,-80,-101,-103,-36,-79,-104,-99,-100,-102,-107,-108,-115,-116,-123,-124,-121,-122,-132,-117,-126,-133,-79,-79,257,-114,-113,-119,-120,263,-79,-125,-130,-131,-118,]),'PADDING':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,64,67,95,98,99,100,101,102,103,105,106,107,108,112,113,115,116,117,120,132,133,134,137,147,155,157,160,161,162,172,173,177,178,182,184,187,188,189,190,191,193,194,195,196,197,198,199,200,201,202,205,207,209,211,215,216,219,224,226,227,228,229,234,235,236,237,240,241,245,246,248,249,255,256,257,258,259,260,261,262,263,264,266,],[-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,97,-51,-50,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,141,-140,-141,-145,-34,-105,156,-106,-80,-101,-103,141,-138,-139,156,-104,-146,-24,-99,-100,-102,-148,208,-155,-79,-107,-108,-115,-116,-123,-124,208,208,-121,-122,-152,-154,-156,-158,208,-117,-126,-147,-79,-159,-160,-161,-79,208,208,208,208,-157,-114,-113,-119,-120,-153,-162,-163,-79,-125,-130,-129,-127,-131,-118,-128,]),'KEYWORD_IN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,64,67,95,98,99,100,101,102,103,105,106,107,108,112,113,114,115,116,117,120,132,133,134,137,140,142,147,155,157,160,161,162,172,173,174,177,178,182,184,187,188,189,190,191,193,194,195,196,197,198,201,202,205,207,209,211,216,219,224,226,227,228,229,234,240,241,245,246,248,249,255,256,257,258,259,260,263,264,],[-14,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-51,-50,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-53,139,-79,-140,-141,-145,-34,-105,-79,-106,-142,-144,-80,-101,-103,-79,-138,-139,-79,-104,-143,-146,-24,-99,-100,-102,-148,-79,-155,-79,-107,-108,-115,-116,-123,-124,-121,-122,-152,-154,-156,-158,-117,-126,-147,-79,-159,-160,-161,-79,-79,-157,-114,-113,-119,-120,-153,-162,-163,-79,-125,-130,-131,-118,]),'EQ':([18,19,20,21,22,23,24,25,26,32,33,34,35,36,37,38,39,40,41,42,43,44,45,83,84,85,86,87,88,89,105,106,107,113,118,121,126,128,131,135,144,146,148,149,151,163,167,169,185,192,213,214,232,244,],[-25,-26,-27,-28,-29,-30,-31,-32,-45,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-46,-47,-48,-81,-82,-83,-84,-85,-86,-87,-76,-77,-78,-53,-79,-79,-97,-91,-90,-79,166,168,-88,-79,-92,175,-53,-95,-89,-79,-149,-151,-79,-150,]),'ANNOTATION':([18,32,33,34,35,36,],[69,-71,-72,-73,-74,-75,]),'KEYWORD_DATA':([141,],[164,]),'KEYWORD_FORALL':([165,199,200,204,208,218,220,221,230,231,252,265,],[181,-79,-79,181,-132,181,-133,181,181,181,181,181,]),'PIPE':([189,190,191,201,202,206,207,208,209,211,226,227,228,229,240,241,256,257,],[-79,-155,-79,-121,-122,225,-133,-132,-156,-158,-79,-159,-160,-161,-79,-157,-162,-163,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'st_expr':([0,159,],[1,173,]),'expr':([0,12,27,31,46,49,50,54,57,62,63,66,110,122,159,166,168,],[2,68,70,93,94,68,68,68,68,68,68,104,138,147,2,182,184,]),'expr_term0':([0,12,27,31,46,49,50,54,57,62,63,66,110,122,159,166,168,],[3,3,3,3,95,3,3,3,3,3,3,3,3,3,3,3,3,]),'expr_term1':([0,12,27,31,46,49,50,54,57,62,63,66,110,122,159,166,168,],[4,4,4,4,4,98,4,4,4,4,4,4,4,4,4,4,4,]),'expr_term2':([0,12,27,31,46,49,50,54,57,62,63,66,110,122,159,166,168,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'expr_term6':([0,12,27,31,46,49,50,54,57,62,63,66,110,122,159,166,168,],[6,6,6,6,6,6,99,6,6,6,6,6,6,6,6,6,6,]),'expr_term7':([0,12,27,31,46,49,50,54,57,62,63,66,110,122,159,166,168,],[7,7,7,7,7,7,7,100,7,7,7,7,7,7,7,7,7,]),'expr_term9':([0,12,27,31,46,49,50,54,57,62,63,66,110,122,159,166,168,],[8,8,8,8,8,8,8,8,101,102,8,8,8,8,8,8,8,]),'expr_factor':([0,12,27,31,46,49,50,54,57,62,63,66,110,122,159,166,168,],[9,67,9,9,9,9,9,9,9,9,103,9,9,9,9,9,9,]),'literal':([0,12,27,30,31,46,49,50,54,57,62,63,66,90,110,122,124,125,150,153,159,166,168,],[10,10,10,84,10,10,10,10,10,10,10,10,10,84,10,10,84,84,84,84,10,10,10,]),'identifier':([0,12,27,30,31,46,49,50,54,57,62,63,66,69,90,110,122,124,125,150,153,159,166,168,],[11,11,11,83,11,11,11,11,11,11,11,11,11,107,83,11,11,83,83,83,83,11,11,11,]),'enclosed_expr':([0,9,12,27,31,46,49,50,54,57,62,63,66,67,103,110,122,159,166,168,],[12,64,12,12,12,12,12,12,12,12,12,12,12,64,64,12,12,12,12,12,]),'letexpr':([0,12,27,31,46,49,50,54,57,62,63,66,110,122,159,166,168,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'where_expr':([0,12,27,31,46,49,50,54,57,62,63,66,110,122,159,166,168,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'lambda_expr':([0,12,27,31,46,49,50,54,57,62,63,66,110,122,159,166,168,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'simple_list_expr':([0,12,27,31,46,49,50,54,57,62,63,66,110,122,159,166,168,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'simple_tuple_expr':([0,12,27,31,46,49,50,54,57,62,63,66,110,122,159,166,168,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'number':([0,12,27,30,31,46,49,50,54,57,62,63,66,90,110,122,124,125,150,153,159,166,168,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'concrete_number':([0,12,27,30,31,46,49,50,54,57,62,63,66,90,110,122,124,125,150,153,159,166,168,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'string':([0,12,27,30,31,46,49,50,54,57,62,63,66,69,90,110,122,124,125,150,153,159,166,168,],[20,20,20,20,20,20,20,20,20,20,20,20,20,105,20,20,20,20,20,20,20,20,20,20,]),'char':([0,12,27,30,31,46,49,50,54,57,62,63,66,69,90,110,122,124,125,150,153,159,166,168,],[21,21,21,21,21,21,21,21,21,21,21,21,21,106,21,21,21,21,21,21,21,21,21,21,]),'date':([0,12,27,30,31,46,49,50,54,57,62,63,66,90,110,122,124,125,150,153,159,166,168,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'datetime':([0,12,27,30,31,46,49,50,54,57,62,63,66,90,110,122,124,125,150,153,159,166,168,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'date_interval':([0,12,27,30,31,46,49,50,54,57,62,63,66,90,110,122,124,125,150,153,159,166,168,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'datetime_interval':([0,12,27,30,31,46,49,50,54,57,62,63,66,90,110,122,124,125,150,153,159,166,168,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'_identifier':([0,12,27,30,31,46,49,50,54,57,62,63,66,69,80,90,96,97,110,122,124,125,141,150,153,156,159,166,168,203,238,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,118,127,135,135,26,26,26,26,118,26,26,135,26,26,26,223,223,]),'_enclosed_operator':([0,9,12,27,31,46,49,50,54,57,62,63,66,67,80,96,97,103,110,122,141,156,159,166,168,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,121,121,121,28,28,28,121,121,28,28,28,]),'infixl_operator_0':([2,68,70,93,94,104,138,147,182,184,],[46,46,46,46,46,46,46,46,46,46,]),'infixr_operator_2':([5,27,66,119,136,],[49,75,75,75,75,]),'infixl_operator_2':([5,27,66,119,136,],[50,74,74,74,74,]),'infixl_operator_6':([6,27,66,99,119,136,],[54,76,76,54,76,76,]),'infixl_operator_7':([7,27,66,100,119,136,],[57,77,77,57,77,77,]),'infixr_operator_9':([9,27,66,67,103,119,136,],[62,78,78,62,62,78,78,]),'_list_items':([27,31,],[71,92,]),'_st_operator':([27,66,119,136,],[72,72,145,72,]),'empty':([27,31,70,82,93,115,118,121,130,134,135,138,149,160,165,171,172,189,191,192,199,200,204,215,218,221,226,230,231,232,234,235,236,237,240,252,258,265,],[73,73,111,126,111,142,126,126,154,157,126,111,126,142,180,154,157,207,211,214,220,220,180,220,180,180,211,180,180,214,249,220,220,220,207,180,249,180,]),'patterns':([30,150,],[81,170,]),'pattern':([30,90,124,125,150,153,],[82,130,148,149,82,171,]),'cons_pattern':([30,90,124,125,150,153,],[85,85,85,85,85,85,]),'list_cons_pattern':([30,90,124,125,150,153,],[86,86,86,86,86,86,]),'tuple_cons_pattern':([30,90,124,125,150,153,],[87,87,87,87,87,87,]),'empty_list_pattern':([30,90,124,125,150,153,],[88,88,88,88,88,88,]),'empty_tuple_pattern':([30,90,124,125,150,153,],[89,89,89,89,89,89,]),'_list_items_cont':([70,93,138,],[109,109,158,]),'local_definitions':([80,],[114,]),'local_definition':([80,141,],[115,161,]),'nametype_decl':([80,141,],[116,116,]),'valuedef':([80,141,],[117,117,]),'equation':([80,96,97,141,156,],[120,134,134,120,172,]),'_patterns':([82,118,121,135,149,],[123,144,146,144,169,]),'patterns_comma_sep':([90,],[129,]),'equations':([96,97,],[133,137,]),'_local_definition_set':([115,160,],[140,174,]),'_patterns_comma':([130,171,],[152,186,]),'_equation_set':([134,172,],[155,187,]),'definition':([141,],[160,]),'datatype_definition':([141,],[162,]),'_datatype_lhs':([141,],[163,]),'st_type_expr':([165,204,],[177,224,]),'type_expr':([165,204,218,221,230,231,252,265,],[178,178,236,237,242,243,261,261,]),'type_scheme':([165,204,218,221,230,231,252,265,],[179,179,179,179,179,179,179,179,]),'_data_rhs':([175,],[188,]),'data_cons':([175,225,],[189,240,]),'_data_cons':([175,225,],[190,190,]),'type_function_expr':([179,233,],[193,246,]),'type_term':([179,233,],[194,245,]),'type_app_expression':([179,233,],[195,195,]),'type_factor':([179,217,233,247,],[196,234,196,258,]),'type_variable':([179,210,217,233,247,],[197,227,197,197,197,]),'type_cons':([179,210,217,233,247,],[198,228,198,198,198,]),'_data_conses':([189,240,],[205,255,]),'_maybe_padding':([189,199,200,215,235,236,237,240,],[206,218,221,233,250,251,253,206,]),'_cons_args':([191,226,],[209,241,]),'_cons_params':([192,232,],[213,244,]),'_app_args_non_empty':([196,],[216,]),'_type_scheme_generics':([203,238,],[222,254,]),'cons_arg':([210,],[226,]),'_cons_arg_factor':([210,],[229,]),'_type_expr_list':([218,],[235,]),'_app_args':([234,258,],[248,264,]),'_type_expr_list_trail':([252,265,],[262,266,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> st_expr","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','__init__.py',437),
  ('expr_term9 -> expr_factor infixr_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','__init__.py',444),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','__init__.py',445),
  ('expr_term7 -> expr_term7 infixl_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','__init__.py',447),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','__init__.py',448),
  ('expr_term6 -> expr_term6 infixl_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','__init__.py',450),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','__init__.py',451),
  ('expr_term2 -> expr_term2 infixl_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','__init__.py',453),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','__init__.py',454),
  ('expr_term1 -> expr_term2 infixr_operator_2 expr_term1','expr_term1',3,'p_expressions_precedence_rules','__init__.py',456),
  ('expr_term1 -> expr_term2','expr_term1',1,'p_expressions_precedence_rules','__init__.py',457),
  ('expr_term0 -> expr infixl_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','__init__.py',459),
  ('expr_term0 -> expr_term1','expr_term0',1,'p_expressions_precedence_rules','__init__.py',460),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','__init__.py',473),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','__init__.py',475),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','__init__.py',477),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','__init__.py',478),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','__init__.py',479),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','__init__.py',480),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','__init__.py',481),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','__init__.py',482),
  ('expr_factor -> simple_list_expr','expr_factor',1,'p_standalone_definitions','__init__.py',483),
  ('expr_factor -> simple_tuple_expr','expr_factor',1,'p_standalone_definitions','__init__.py',484),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','__init__.py',486),
  ('literal -> number','literal',1,'p_literals','__init__.py',494),
  ('literal -> concrete_number','literal',1,'p_literals','__init__.py',495),
  ('literal -> string','literal',1,'p_literals','__init__.py',496),
  ('literal -> char','literal',1,'p_literals','__init__.py',497),
  ('literal -> date','literal',1,'p_literals','__init__.py',498),
  ('literal -> datetime','literal',1,'p_literals','__init__.py',499),
  ('literal -> date_interval','literal',1,'p_literals','__init__.py',500),
  ('literal -> datetime_interval','literal',1,'p_literals','__init__.py',501),
  ('simple_tuple_expr -> LPAREN _list_items RPAREN','simple_tuple_expr',3,'p_tuple_expr','__init__.py',507),
  ('simple_list_expr -> LBRACKET _list_items RBRACKET','simple_list_expr',3,'p_list_expr','__init__.py',514),
  ('_list_items -> expr _list_items_cont','_list_items',2,'p_list_items','__init__.py',521),
  ('_list_items_cont -> COMMA expr _list_items_cont','_list_items_cont',3,'p_list_items','__init__.py',522),
  ('_list_items -> empty','_list_items',1,'p_list_items_empty','__init__.py',528),
  ('_list_items_cont -> empty','_list_items_cont',1,'p_list_items_empty','__init__.py',529),
  ('date -> DATE','date',1,'p_date','__init__.py',535),
  ('datetime -> DATETIME','datetime',1,'p_datetime','__init__.py',541),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','__init__.py',547),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','__init__.py',553),
  ('char -> CHAR','char',1,'p_char','__init__.py',559),
  ('string -> STRING','string',1,'p_string','__init__.py',564),
  ('identifier -> _identifier','identifier',1,'p_variable','__init__.py',569),
  ('_identifier -> UNDER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',576),
  ('_identifier -> UPPER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',577),
  ('_identifier -> LOWER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',578),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','__init__.py',585),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','__init__.py',590),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','__init__.py',591),
  ('enclosed_expr -> _enclosed_operator','enclosed_expr',1,'p_operators_as_expressios','__init__.py',597),
  ('_enclosed_operator -> LPAREN _st_operator RPAREN','_enclosed_operator',3,'p_enclosed_operator','__init__.py',603),
  ('infixr_operator_9 -> DOT_OPERATOR','infixr_operator_9',1,'p_operator','__init__.py',613),
  ('infixl_operator_7 -> STAR','infixl_operator_7',1,'p_operator','__init__.py',615),
  ('infixl_operator_7 -> SLASH','infixl_operator_7',1,'p_operator','__init__.py',616),
  ('infixl_operator_7 -> DOUBLESLASH','infixl_operator_7',1,'p_operator','__init__.py',617),
  ('infixl_operator_7 -> PERCENT','infixl_operator_7',1,'p_operator','__init__.py',618),
  ('infixl_operator_6 -> PLUS','infixl_operator_6',1,'p_operator','__init__.py',620),
  ('infixl_operator_6 -> MINUS','infixl_operator_6',1,'p_operator','__init__.py',621),
  ('infixr_operator_2 -> COLON','infixr_operator_2',1,'p_operator','__init__.py',623),
  ('infixl_operator_2 -> OPERATOR','infixl_operator_2',1,'p_operator','__init__.py',625),
  ('infixl_operator_2 -> ARROW','infixl_operator_2',1,'p_operator','__init__.py',626),
  ('infixl_operator_0 -> TICK_OPERATOR','infixl_operator_0',1,'p_operator','__init__.py',628),
  ('_st_operator -> infixl_operator_2','_st_operator',1,'p_operator','__init__.py',630),
  ('_st_operator -> infixr_operator_2','_st_operator',1,'p_operator','__init__.py',631),
  ('_st_operator -> infixl_operator_6','_st_operator',1,'p_operator','__init__.py',632),
  ('_st_operator -> infixl_operator_7','_st_operator',1,'p_operator','__init__.py',633),
  ('_st_operator -> infixr_operator_9','_st_operator',1,'p_operator','__init__.py',634),
  ('_st_operator -> COMMA','_st_operator',1,'p_operator','__init__.py',635),
  ('number -> BASE10_INTEGER','number',1,'p_integer','__init__.py',642),
  ('number -> BASE16_INTEGER','number',1,'p_integer','__init__.py',643),
  ('number -> BASE8_INTEGER','number',1,'p_integer','__init__.py',644),
  ('number -> BASE2_INTEGER','number',1,'p_integer','__init__.py',645),
  ('number -> FLOAT','number',1,'p_float','__init__.py',674),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','__init__.py',679),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','__init__.py',680),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','__init__.py',681),
  ('empty -> <empty>','empty',0,'p_empty','__init__.py',690),
  ('lambda_expr -> BACKSLASH patterns ARROW expr','lambda_expr',4,'p_lambda_definition','__init__.py',695),
  ('pattern -> identifier','pattern',1,'p_pattern','__init__.py',704),
  ('pattern -> literal','pattern',1,'p_pattern','__init__.py',705),
  ('pattern -> cons_pattern','pattern',1,'p_pattern','__init__.py',706),
  ('pattern -> list_cons_pattern','pattern',1,'p_pattern','__init__.py',707),
  ('pattern -> tuple_cons_pattern','pattern',1,'p_pattern','__init__.py',708),
  ('pattern -> empty_list_pattern','pattern',1,'p_pattern','__init__.py',709),
  ('pattern -> empty_tuple_pattern','pattern',1,'p_pattern','__init__.py',710),
  ('list_cons_pattern -> pattern COLON pattern','list_cons_pattern',3,'p_list_cons_for_param','__init__.py',716),
  ('cons_pattern -> LPAREN _identifier SPACE patterns RPAREN','cons_pattern',5,'p_param_pattern','__init__.py',722),
  ('empty_list_pattern -> LBRACKET RBRACKET','empty_list_pattern',2,'p_empty_list_as_pattern','__init__.py',727),
  ('empty_tuple_pattern -> LPAREN RPAREN','empty_tuple_pattern',2,'p_unit_value_as_pattern','__init__.py',733),
  ('tuple_cons_pattern -> LPAREN patterns_comma_sep RPAREN','tuple_cons_pattern',3,'p_tuple_cons_pattern','__init__.py',739),
  ('patterns -> pattern _patterns','patterns',2,'p_patterns','__init__.py',747),
  ('patterns_comma_sep -> pattern _patterns_comma','patterns_comma_sep',2,'p_patterns','__init__.py',748),
  ('_patterns -> SPACE pattern _patterns','_patterns',3,'p_patterns','__init__.py',749),
  ('_patterns_comma -> COMMA pattern _patterns_comma','_patterns_comma',3,'p_patterns','__init__.py',750),
  ('_patterns -> empty','_patterns',1,'p_patterns_empty','__init__.py',756),
  ('_patterns_comma -> empty','_patterns_comma',1,'p_patterns_empty','__init__.py',757),
  ('equation -> _identifier _patterns EQ expr','equation',4,'p_equation','__init__.py',763),
  ('equation -> _enclosed_operator _patterns EQ expr','equation',4,'p_equation','__init__.py',764),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','__init__.py',774),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','__init__.py',783),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','__init__.py',792),
  ('letexpr -> KEYWORD_LET SPACE local_definitions KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','__init__.py',802),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','__init__.py',810),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','__init__.py',811),
  ('type_expr -> type_scheme type_function_expr','type_expr',2,'p_type_expr','__init__.py',821),
  ('type_expr -> type_scheme type_term','type_expr',2,'p_type_expr','__init__.py',822),
  ('type_scheme -> empty','type_scheme',1,'p_type_scheme_empty','__init__.py',831),
  ('type_scheme -> KEYWORD_FORALL SPACE _type_scheme_generics','type_scheme',3,'p_type_scheme','__init__.py',835),
  ('_type_scheme_generics -> _identifier SPACE _type_scheme_generics','_type_scheme_generics',3,'p_type_scheme_generics','__init__.py',842),
  ('_type_scheme_generics -> _identifier DOT_OPERATOR','_type_scheme_generics',2,'p_last_type_scheme_generic','__init__.py',847),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','__init__.py',852),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','__init__.py',853),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','__init__.py',863),
  ('type_term -> type_factor','type_term',1,'p_type_term','__init__.py',864),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','__init__.py',869),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','__init__.py',881),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','__init__.py',882),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','__init__.py',888),
  ('type_variable -> LOWER_IDENTIFIER','type_variable',1,'p_type_variable','__init__.py',893),
  ('type_cons -> UPPER_IDENTIFIER','type_cons',1,'p_type_cons','__init__.py',898),
  ('type_factor -> type_variable','type_factor',1,'p_type_factor_identifier','__init__.py',903),
  ('type_factor -> type_cons','type_factor',1,'p_type_factor_identifier','__init__.py',904),
  ('type_factor -> LPAREN _maybe_padding _type_expr_list _maybe_padding RPAREN','type_factor',5,'p_type_factor_tuple','__init__.py',911),
  ('type_factor -> LPAREN RPAREN','type_factor',2,'p_type_factor_unit_type','__init__.py',917),
  ('_type_expr_list -> type_expr COMMA _type_expr_list_trail','_type_expr_list',3,'p_type_expr_list','__init__.py',922),
  ('_type_expr_list_trail -> type_expr COMMA _type_expr_list_trail','_type_expr_list_trail',3,'p_type_expr_list','__init__.py',923),
  ('_type_expr_list_trail -> type_expr','_type_expr_list_trail',1,'p_type_expr_list_last_item','__init__.py',929),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','__init__.py',935),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','__init__.py',940),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','__init__.py',945),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','__init__.py',946),
  ('program -> definitions','program',1,'p_program','__init__.py',952),
  ('definitions -> definition _definition_set','definitions',2,'p_definitions','__init__.py',958),
  ('_definition_set -> NEWLINE definition _definition_set','_definition_set',3,'p_definition_set','__init__.py',964),
  ('_definition_set -> empty','_definition_set',1,'p_definition_set2','__init__.py',970),
  ('definition -> local_definition','definition',1,'p_definition','__init__.py',976),
  ('definition -> datatype_definition','definition',1,'p_definition','__init__.py',977),
  ('local_definition -> nametype_decl','local_definition',1,'p_local_definition','__init__.py',984),
  ('local_definition -> valuedef','local_definition',1,'p_local_definition','__init__.py',985),
  ('local_definitions -> local_definition _local_definition_set','local_definitions',2,'p_local_definitions','__init__.py',991),
  ('_local_definition_set -> PADDING definition _local_definition_set','_local_definition_set',3,'p_local_definition_set','__init__.py',997),
  ('_local_definition_set -> empty','_local_definition_set',1,'p_local_definition_set_empty','__init__.py',1003),
  ('valuedef -> equation','valuedef',1,'p_valuedef','__init__.py',1009),
  ('nametype_decl -> _identifier COLON COLON st_type_expr','nametype_decl',4,'p_nametype_decl','__init__.py',1015),
  ('nametype_decl -> LPAREN _st_operator RPAREN COLON COLON st_type_expr','nametype_decl',6,'p_nametype_decl_operators','__init__.py',1024),
  ('datatype_definition -> _datatype_lhs EQ _data_rhs','datatype_definition',3,'p_datatype_definition','__init__.py',1033),
  ('_datatype_lhs -> KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params','_datatype_lhs',4,'p_datatype_lhs','__init__.py',1041),
  ('_cons_params -> SPACE LOWER_IDENTIFIER _cons_params','_cons_params',3,'p_datatype_cons_params','__init__.py',1050),
  ('_cons_params -> empty','_cons_params',1,'p_datatype_cons_params_empty','__init__.py',1056),
  ('_data_rhs -> data_cons _data_conses','_data_rhs',2,'p_datatype_body','__init__.py',1062),
  ('_data_conses -> _maybe_padding PIPE data_cons _data_conses','_data_conses',4,'p_datatype_body','__init__.py',1063),
  ('_data_conses -> empty','_data_conses',1,'p_datatype_conses_empty','__init__.py',1069),
  ('data_cons -> _data_cons','data_cons',1,'p_data_cons','__init__.py',1074),
  ('_data_cons -> UPPER_IDENTIFIER _cons_args','_data_cons',2,'p_bare_data_cons','__init__.py',1080),
  ('_cons_args -> SPACE cons_arg _cons_args','_cons_args',3,'p_data_cons_args','__init__.py',1085),
  ('_cons_args -> empty','_cons_args',1,'p_data_cons_args_empty','__init__.py',1091),
  ('cons_arg -> type_variable','cons_arg',1,'p_cons_arg','__init__.py',1097),
  ('cons_arg -> type_cons','cons_arg',1,'p_cons_arg','__init__.py',1098),
  ('cons_arg -> _cons_arg_factor','cons_arg',1,'p_cons_arg','__init__.py',1099),
  ('_cons_arg_factor -> LPAREN type_expr RPAREN','_cons_arg_factor',3,'p_cons_arg_factor','__init__.py',1105),
  ('_cons_arg_factor -> LBRACKET type_expr RBRACKET','_cons_arg_factor',3,'p_cons_arg_factor_list','__init__.py',1111),
]
