
# program_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON COMMA DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FLOAT KEYWORD_CLASS KEYWORD_DATA KEYWORD_FORALL KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LOWER_IDENTIFIER LPAREN MINUS NEWLINE OPERATOR PADDING PERCENT PIPE PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATOR UNDER_IDENTIFIER UPPER_IDENTIFIERexpr_factor : expr_factor SPACE expr_factor\n    expr_term9 : expr_factor infixr_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infixl_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infixl_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infixl_operator_2 expr_term6\n               | expr_term6\n\n    expr_term1 : expr_term2 infixr_operator_2 expr_term1\n               | expr_term2\n\n    expr_term0 : expr infixl_operator_0 expr_term0\n               | expr_term1\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | letexpr\n                | where_expr\n                | lambda_expr\n                | simple_list_expr\n                | simple_tuple_expr\n\n    st_type_expr : type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    simple_tuple_expr : LPAREN _list_items RPAREN\n    simple_list_expr : LBRACKET _list_items RBRACKET\n    _list_items : expr _list_items_cont\n       _list_items_cont : COMMA expr _list_items_cont\n    _list_items : empty\n       _list_items_cont : empty\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    char : CHARstring : STRINGidentifier : _identifier\n\n    _identifier : UNDER_IDENTIFIER\n                   | UPPER_IDENTIFIER\n                   | LOWER_IDENTIFIER\n\n    enclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : _enclosed_operator\n    _enclosed_operator : LPAREN _st_operator RPAREN\n    infixr_operator_9 : DOT_OPERATOR\n\n    infixl_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infixl_operator_6 : PLUS\n                     | MINUS\n\n    infixr_operator_2 : COLON\n\n    infixl_operator_2 : OPERATOR\n                      | ARROW\n\n    infixl_operator_0 : TICK_OPERATOR\n\n    _st_operator : infixl_operator_2\n                 | infixr_operator_2\n                 | infixl_operator_6\n                 | infixl_operator_7\n                 | infixr_operator_9\n                 | COMMA\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH patterns ARROW expr\n    \n    pattern : identifier\n    pattern : literal\n    pattern : cons_pattern\n    pattern : list_cons_pattern\n    pattern : tuple_cons_pattern\n    pattern : empty_list_pattern\n    pattern : empty_tuple_pattern\n    list_cons_pattern : pattern COLON pattern\n    cons_pattern : LPAREN _identifier SPACE patterns RPARENempty_list_pattern : LBRACKET RBRACKETempty_tuple_pattern : LPAREN RPARENtuple_cons_pattern : LPAREN patterns_comma_sep RPAREN\n    patterns : pattern _patterns\n       patterns_comma_sep : pattern _patterns_comma\n       _patterns : SPACE pattern _patterns\n       _patterns_comma : COMMA pattern _patterns_comma\n    _patterns : empty\n       _patterns_comma : empty\n    equation : _identifier _patterns EQ expr\n       equation : _enclosed_operator _patterns EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE local_definitions KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    type_expr : type_scheme type_function_expr\n                 | type_scheme type_termtype_scheme : emptytype_scheme : KEYWORD_FORALL SPACE _type_scheme_generics_type_scheme_generics : _identifier SPACE _type_scheme_generics_type_scheme_generics : _identifier DOT_OPERATORtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_variable : LOWER_IDENTIFIERtype_cons : UPPER_IDENTIFIERtype_factor : type_variable\n                   | type_cons\n\n    type_factor : LPAREN _maybe_padding _type_expr_list _maybe_padding RPARENtype_factor : LPAREN RPAREN_type_expr_list : type_expr COMMA _type_expr_list_trail\n       _type_expr_list_trail : type_expr COMMA _type_expr_list_trail\n    _type_expr_list_trail : type_expr\n    type_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET_maybe_padding : PADDING\n                      | empty\n    program : definitions\n    definitions : definition _definition_set\n    _definition_set : NEWLINE definition _definition_set\n    _definition_set : empty\n    definition : local_definition\n                  | datatype_definition\n    \n    local_definition : nametype_decl\n                     | valuedef\n    local_definitions : local_definition _local_definition_set\n    _local_definition_set : PADDING definition _local_definition_set\n    _local_definition_set : empty\n    valuedef : equation\n    nametype_decl : _identifier COLON COLON st_type_expr\n    nametype_decl : LPAREN _st_operator RPAREN COLON COLON st_type_expr\n    datatype_definition : _datatype_lhs EQ _data_rhs\n    _datatype_lhs : KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params\n    _cons_params : SPACE LOWER_IDENTIFIER _cons_params\n    _cons_params : empty\n    _data_rhs : data_cons _data_conses\n       _data_conses : _maybe_padding PIPE data_cons _data_conses\n    _data_conses : emptydata_cons : _data_cons_data_cons : UPPER_IDENTIFIER _cons_args_cons_args : SPACE cons_arg _cons_args\n    _cons_args : empty\n    cons_arg : type_variable\n       cons_arg : type_cons\n       cons_arg : _cons_arg_factor\n    _cons_arg_factor : LPAREN type_expr RPAREN\n    _cons_arg_factor : LBRACKET type_expr RBRACKET\n    '
    
_lr_action_items = {'LPAREN':([0,13,14,15,18,23,26,33,34,35,36,37,38,39,40,41,49,50,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,83,88,90,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,119,130,138,139,146,147,149,151,152,153,154,155,156,157,158,159,160,166,172,173,174,175,178,180,186,188,189,191,192,193,196,197,198,199,200,201,202,203,204,206,208,210,211,214,216,224,230,231,232,235,239,241,246,251,253,254,255,256,258,266,267,268,271,272,],[10,-47,-46,-48,10,68,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,-79,113,-45,-25,-26,-27,-28,-29,-30,-31,-32,68,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,113,-132,138,146,-109,-99,-15,-13,-11,-9,-7,-5,159,-16,-17,113,-19,-20,-21,-22,-23,113,-52,68,113,68,-100,-79,-79,-79,-79,113,-64,113,113,113,113,113,113,-51,113,159,10,-76,-77,-78,68,68,-79,-79,146,-79,-133,-79,-110,-12,234,234,-10,-8,-6,-4,-2,-1,-49,113,-33,-53,113,-34,146,-112,-105,-79,-106,10,-80,146,-79,-111,-101,234,-103,113,-79,-104,-14,-79,-102,]),'KEYWORD_DATA':([0,18,239,],[12,12,12,]),'UNDER_IDENTIFIER':([0,18,23,26,33,34,35,36,37,38,39,40,41,50,68,83,107,113,114,116,117,119,120,148,149,151,152,153,154,155,156,157,159,166,175,178,197,198,206,208,211,214,229,239,255,258,],[14,14,14,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,14,14,14,14,14,-52,14,14,14,14,14,14,-64,14,14,14,14,14,14,14,14,14,14,14,14,-49,14,-53,14,14,14,14,14,]),'UPPER_IDENTIFIER':([0,18,20,23,26,33,34,35,36,37,38,39,40,41,42,49,50,68,83,88,90,94,95,107,113,114,116,117,119,120,131,138,139,146,147,148,149,151,152,153,154,155,156,157,159,166,175,178,180,186,188,189,191,192,193,197,198,206,208,211,214,224,229,230,239,246,251,253,255,258,271,],[13,13,48,13,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,82,-79,13,13,13,-132,137,137,-109,13,13,-52,13,13,13,13,48,-79,-79,-79,-79,13,13,-64,13,13,13,13,13,13,13,13,13,13,-79,-79,137,-79,-133,-79,-110,13,13,-49,13,-53,13,137,13,-112,13,137,-79,-111,13,13,-79,]),'LOWER_IDENTIFIER':([0,18,23,26,33,34,35,36,37,38,39,40,41,49,50,68,83,88,90,94,95,107,113,114,116,117,119,120,127,138,139,146,147,148,149,151,152,153,154,155,156,157,159,166,175,178,180,186,188,189,191,192,193,197,198,206,208,211,214,224,229,230,239,246,251,253,255,258,271,],[15,15,15,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,-79,15,15,15,-132,136,136,-109,15,15,-52,15,15,15,15,181,-79,-79,-79,-79,15,15,-64,15,15,15,15,15,15,15,15,15,15,-79,-79,136,-79,-133,-79,-110,15,15,-49,15,-53,15,136,15,-112,15,136,-79,-111,15,15,-79,]),'$end':([1,2,3,4,5,6,7,11,13,14,15,17,19,44,45,46,47,48,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,84,85,87,89,91,92,93,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,130,132,133,134,135,136,137,140,141,142,143,144,145,158,160,172,173,174,182,183,187,190,196,199,200,201,202,203,204,206,210,211,216,219,221,222,223,225,231,232,235,241,244,245,247,248,254,256,260,261,262,265,266,267,268,270,272,],[0,-134,-79,-138,-139,-140,-141,-145,-47,-46,-48,-135,-137,-79,-148,-79,-155,-79,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-136,-152,-154,-156,-158,-146,-24,-99,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,-100,-79,-159,-160,-161,-121,-122,-107,-108,-115,-116,-123,-124,-51,-50,-76,-77,-78,-79,-157,-117,-126,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-34,-147,-153,-162,-163,-79,-105,-79,-106,-80,-114,-113,-119,-120,-101,-103,-79,-125,-130,-131,-79,-104,-14,-118,-102,]),'NEWLINE':([3,4,5,6,7,11,13,14,15,44,45,46,47,48,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,85,87,89,91,92,93,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,130,132,133,134,135,136,137,140,141,142,143,144,145,158,160,172,173,174,182,183,187,190,196,199,200,201,202,203,204,206,210,211,216,219,221,222,223,225,231,232,235,241,244,245,247,248,254,256,260,261,262,265,266,267,268,270,272,],[18,-138,-139,-140,-141,-145,-47,-46,-48,18,-148,-79,-155,-79,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-152,-154,-156,-158,-146,-24,-99,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,-100,-79,-159,-160,-161,-121,-122,-107,-108,-115,-116,-123,-124,-51,-50,-76,-77,-78,-79,-157,-117,-126,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-34,-147,-153,-162,-163,-79,-105,-79,-106,-80,-114,-113,-119,-120,-101,-103,-79,-125,-130,-131,-79,-104,-14,-118,-102,]),'PADDING':([4,5,6,7,11,13,14,15,45,46,47,48,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,85,87,89,91,92,93,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,130,132,133,134,135,136,137,140,141,142,143,144,145,146,147,150,158,160,172,173,174,182,183,186,187,190,196,199,200,201,202,203,204,206,210,211,213,216,219,221,222,223,225,226,227,228,231,232,235,241,244,245,247,248,254,256,259,260,261,262,263,264,265,266,267,268,270,272,273,],[-138,-139,-140,-141,-145,-47,-46,-48,-148,88,-155,-79,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-152,-154,-156,-158,-146,-24,-99,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,-100,-79,-159,-160,-161,-121,-122,-107,-108,-115,-116,-123,-124,88,88,198,-51,-50,-76,-77,-78,88,-157,88,-117,-126,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,239,-34,-147,-153,-162,-163,-79,88,88,88,-105,255,-106,-80,-114,-113,-119,-120,-101,-103,239,-79,-125,-130,-129,-127,-131,255,-104,-14,-118,-102,-128,]),'KEYWORD_IN':([4,5,6,7,11,13,14,15,45,46,47,48,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,85,87,89,91,92,93,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,130,132,133,134,135,136,137,140,141,142,143,144,145,158,160,172,173,174,182,183,187,190,196,199,200,201,202,203,204,206,210,211,212,213,216,219,221,222,223,225,231,232,235,238,240,241,244,245,247,248,254,256,259,260,261,262,265,266,267,268,269,270,272,],[-138,-139,-140,-141,-145,-47,-46,-48,-148,-79,-155,-79,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-152,-154,-156,-158,-146,-24,-99,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,-100,-79,-159,-160,-161,-121,-122,-107,-108,-115,-116,-123,-124,-51,-50,-76,-77,-78,-79,-157,-117,-126,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,237,-79,-34,-147,-153,-162,-163,-79,-105,-79,-106,-142,-144,-80,-114,-113,-119,-120,-101,-103,-79,-79,-125,-130,-131,-79,-104,-14,-143,-118,-102,]),'EQ':([8,9,13,14,15,16,22,24,43,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,118,122,125,128,129,171,172,173,174,176,181,211,220,233,242,],[20,-79,-47,-46,-48,-79,50,-97,83,-79,-81,-82,-83,-84,-85,-86,-87,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-53,-79,-95,-91,-90,-149,-151,-88,-76,-77,-78,-92,-79,-53,-150,-79,-89,]),'COLON':([9,10,13,14,15,21,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,81,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,122,124,125,126,130,158,159,160,168,171,172,173,174,176,196,199,200,201,202,203,204,206,210,211,216,218,231,232,234,235,241,242,254,256,266,267,268,272,],[21,26,-47,-46,-48,49,119,-81,-82,-83,-84,-85,-86,-87,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,126,-99,-15,-13,26,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,26,-52,-45,-91,119,-90,180,-100,-51,26,-3,119,119,-76,-77,-78,-92,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-34,119,-105,-79,26,-106,-80,-89,-101,-103,-79,-104,-14,-102,]),'SPACE':([9,12,13,14,15,16,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,121,122,125,130,132,133,134,135,136,137,143,144,145,150,158,160,168,171,172,173,174,176,181,190,194,196,199,200,201,202,203,204,206,210,211,216,222,223,225,231,232,233,235,237,241,242,254,256,260,261,262,265,266,267,268,272,],[23,42,-47,-46,-48,23,90,23,-81,-82,-83,-84,-85,-86,-87,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-53,127,148,-99,-15,-13,-11,-9,-7,-5,157,-16,-17,-18,-19,-20,-21,-22,-23,-52,166,175,-91,-90,-100,90,-159,-160,-161,-121,-122,188,-123,-124,197,-51,157,23,-88,-76,-77,-78,-92,127,-126,229,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-34,-162,-163,246,-105,-79,23,-106,258,-80,-89,-101,-103,246,-125,-130,-131,-79,-104,-14,-102,]),'COMMA':([10,13,14,15,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,122,124,125,130,136,137,140,141,142,143,144,145,158,159,160,162,170,171,172,173,174,176,187,190,196,199,200,201,202,203,204,206,210,211,216,218,225,227,231,232,234,235,236,241,242,244,245,247,248,254,256,260,261,262,263,265,266,267,268,270,272,],[32,-47,-46,-48,-81,-82,-83,-84,-85,-86,-87,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,32,-52,-45,-91,178,-90,-100,-121,-122,-107,-108,-115,-116,-123,-124,-51,32,-50,208,208,-88,-76,-77,-78,-92,-117,-126,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-34,178,-79,251,-105,-79,32,-106,208,-80,-89,-114,-113,-119,-120,-101,-103,-79,-125,-130,271,-131,-79,-104,-14,-118,-102,]),'OPERATOR':([10,13,14,15,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,130,158,159,160,172,173,174,196,199,200,201,202,203,204,206,210,211,216,231,232,234,235,241,254,256,266,267,268,272,],[33,-47,-46,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,33,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,33,-52,-100,-51,33,-3,-76,-77,-78,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-34,-105,-79,33,-106,-80,-101,-103,-79,-104,-14,-102,]),'ARROW':([10,13,14,15,24,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,122,125,130,136,137,141,142,143,144,145,158,159,160,167,168,171,172,173,174,176,187,190,196,199,200,201,202,203,204,206,210,211,215,216,225,231,232,234,235,241,242,244,247,248,254,256,260,261,262,265,266,267,268,270,272,],[34,-47,-46,-48,-97,-79,-81,-82,-83,-84,-85,-86,-87,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,34,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,34,-52,-95,-91,-90,-100,-121,-122,186,-115,-116,-123,-124,-51,34,-3,214,-79,-88,-76,-77,-78,-92,-117,-126,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-93,-34,-79,-105,-79,34,-106,-80,-89,186,-119,-120,-101,-103,-79,-125,-130,-131,-79,-104,-14,-118,-102,]),'PLUS':([10,13,14,15,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,130,158,159,160,172,173,174,196,199,200,201,202,203,204,206,210,211,216,231,232,234,235,241,254,256,266,267,268,272,],[35,-47,-46,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,-11,35,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,35,-52,-100,-51,35,-3,-76,-77,-78,-12,-10,35,-6,-4,-2,-1,-49,-33,-53,-34,-105,-79,35,-106,-80,-101,-103,-79,-104,-14,-102,]),'MINUS':([10,13,14,15,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,130,158,159,160,172,173,174,196,199,200,201,202,203,204,206,210,211,216,231,232,234,235,241,254,256,266,267,268,272,],[36,-47,-46,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,-11,36,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,36,-52,-100,-51,36,-3,-76,-77,-78,-12,-10,36,-6,-4,-2,-1,-49,-33,-53,-34,-105,-79,36,-106,-80,-101,-103,-79,-104,-14,-102,]),'STAR':([10,13,14,15,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,130,158,159,160,172,173,174,196,199,200,201,202,203,204,206,210,211,216,231,232,234,235,241,254,256,266,267,268,272,],[37,-47,-46,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,-11,-9,37,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,37,-52,-100,-51,37,-3,-76,-77,-78,-12,-10,-8,37,-4,-2,-1,-49,-33,-53,-34,-105,-79,37,-106,-80,-101,-103,-79,-104,-14,-102,]),'SLASH':([10,13,14,15,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,130,158,159,160,172,173,174,196,199,200,201,202,203,204,206,210,211,216,231,232,234,235,241,254,256,266,267,268,272,],[38,-47,-46,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,-11,-9,38,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,38,-52,-100,-51,38,-3,-76,-77,-78,-12,-10,-8,38,-4,-2,-1,-49,-33,-53,-34,-105,-79,38,-106,-80,-101,-103,-79,-104,-14,-102,]),'DOUBLESLASH':([10,13,14,15,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,130,158,159,160,172,173,174,196,199,200,201,202,203,204,206,210,211,216,231,232,234,235,241,254,256,266,267,268,272,],[39,-47,-46,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,-11,-9,39,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,39,-52,-100,-51,39,-3,-76,-77,-78,-12,-10,-8,39,-4,-2,-1,-49,-33,-53,-34,-105,-79,39,-106,-80,-101,-103,-79,-104,-14,-102,]),'PERCENT':([10,13,14,15,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,130,158,159,160,172,173,174,196,199,200,201,202,203,204,206,210,211,216,231,232,234,235,241,254,256,266,267,268,272,],[40,-47,-46,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,-11,-9,40,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,40,-52,-100,-51,40,-3,-76,-77,-78,-12,-10,-8,40,-4,-2,-1,-49,-33,-53,-34,-105,-79,40,-106,-80,-101,-103,-79,-104,-14,-102,]),'DOT_OPERATOR':([10,13,14,15,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,130,158,159,160,172,173,174,194,196,199,200,201,202,203,204,206,210,211,216,231,232,234,235,241,254,256,266,267,268,272,],[41,-47,-46,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,-11,-9,-7,-5,41,-16,-17,-18,-19,-20,-21,-22,-23,41,-52,-100,-51,41,41,-76,-77,-78,230,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-34,-105,-79,41,-106,-80,-101,-103,-79,-104,-14,-102,]),'RPAREN':([13,14,15,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,88,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,121,122,123,124,125,130,136,137,140,141,142,143,144,145,146,158,160,162,163,164,165,168,171,172,173,174,176,177,179,184,187,190,191,196,199,200,201,202,203,204,205,206,207,209,210,211,215,216,217,218,225,226,227,231,232,235,236,241,242,243,244,245,247,248,249,250,254,256,257,260,261,262,263,264,265,266,267,268,270,272,273,],[-47,-46,-48,-97,81,-61,-65,-66,-67,-68,-69,-70,-62,-63,-59,-60,-55,-56,-57,-58,-54,-79,-81,-82,-83,-84,-85,-86,-87,-45,-25,-26,-27,-28,-29,-30,-31,-32,122,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-132,-99,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-79,-52,-95,-45,-91,176,-79,-90,-100,-121,-122,-107,-108,-115,-116,-123,-124,190,-51,-50,206,210,211,-37,-79,-88,-76,-77,-78,-92,-94,-98,222,-117,-126,-133,-12,-10,-8,-6,-4,-2,-1,206,-49,-35,-38,-33,-53,-93,-34,242,-79,-79,-79,-79,-105,-79,-106,-79,-80,-89,-96,-114,-113,-119,-120,261,262,-101,-103,-36,-79,-125,-130,-129,-127,-131,-79,-104,-14,-118,-102,-128,]),'KEYWORD_WHERE':([13,14,15,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,130,158,160,161,162,170,172,173,174,195,196,199,200,201,202,203,204,205,206,210,211,216,231,232,235,236,241,254,256,266,267,268,272,],[-47,-46,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,150,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,150,-51,-3,150,150,150,-76,-77,-78,150,-12,-10,-8,-6,-4,-2,-1,150,-49,-33,-53,-34,-105,-79,-106,150,150,-101,-103,-79,-104,150,-102,]),'TICK_OPERATOR':([13,14,15,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,130,158,160,161,162,170,172,173,174,195,196,199,200,201,202,203,204,205,206,210,211,216,231,232,235,236,241,254,256,266,267,268,272,],[-47,-46,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,151,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,151,-51,-3,151,151,151,-76,-77,-78,151,-12,-10,-8,-6,-4,-2,-1,151,-49,-33,-53,-34,-105,-79,-106,151,151,-101,-103,-79,-104,151,-102,]),'RBRACKET':([13,14,15,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,88,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,117,130,136,137,140,141,142,143,144,145,158,160,165,169,170,172,173,174,185,187,190,191,196,199,200,201,202,203,204,206,207,209,210,211,216,225,228,231,232,235,236,241,244,245,247,248,252,254,256,257,260,261,262,265,266,267,268,270,272,],[-47,-46,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,125,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-132,-99,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,-79,-100,-121,-122,-107,-108,-115,-116,-123,-124,-51,-50,-37,216,-79,-76,-77,-78,223,-117,-126,-133,-12,-10,-8,-6,-4,-2,-1,-49,-35,-38,-33,-53,-34,-79,-79,-105,-79,-106,-79,-80,-114,-113,-119,-120,265,-101,-103,-36,-79,-125,-130,-131,-79,-104,-14,-118,-102,]),'LBRACKET':([23,26,33,34,35,36,37,38,39,40,41,49,50,68,83,88,90,94,95,107,113,114,116,117,119,138,139,146,147,149,151,152,153,154,155,156,157,159,175,178,180,186,188,189,191,192,193,206,208,211,214,224,230,246,251,253,258,271,],[69,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,-79,117,69,117,-132,139,147,-109,117,117,-52,69,117,69,-79,-79,-79,-79,117,-64,117,117,117,117,117,117,117,69,69,-79,-79,147,-79,-133,-79,-110,-49,117,-53,117,147,-112,147,-79,-111,117,-79,]),'BASE10_INTEGER':([23,26,33,34,35,36,37,38,39,40,41,50,68,83,107,113,114,116,117,119,149,151,152,153,154,155,156,157,159,175,178,206,208,211,214,258,],[70,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,70,70,70,70,70,-52,70,70,70,70,-64,70,70,70,70,70,70,70,70,70,-49,70,-53,70,70,]),'BASE16_INTEGER':([23,26,33,34,35,36,37,38,39,40,41,50,68,83,107,113,114,116,117,119,149,151,152,153,154,155,156,157,159,175,178,206,208,211,214,258,],[71,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,71,71,71,71,71,-52,71,71,71,71,-64,71,71,71,71,71,71,71,71,71,-49,71,-53,71,71,]),'BASE8_INTEGER':([23,26,33,34,35,36,37,38,39,40,41,50,68,83,107,113,114,116,117,119,149,151,152,153,154,155,156,157,159,175,178,206,208,211,214,258,],[72,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,72,72,72,72,72,-52,72,72,72,72,-64,72,72,72,72,72,72,72,72,72,-49,72,-53,72,72,]),'BASE2_INTEGER':([23,26,33,34,35,36,37,38,39,40,41,50,68,83,107,113,114,116,117,119,149,151,152,153,154,155,156,157,159,175,178,206,208,211,214,258,],[73,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,73,73,73,73,73,-52,73,73,73,73,-64,73,73,73,73,73,73,73,73,73,-49,73,-53,73,73,]),'FLOAT':([23,26,33,34,35,36,37,38,39,40,41,50,68,83,107,113,114,116,117,119,149,151,152,153,154,155,156,157,159,175,178,206,208,211,214,258,],[74,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,74,74,74,74,74,-52,74,74,74,74,-64,74,74,74,74,74,74,74,74,74,-49,74,-53,74,74,]),'STRING':([23,26,33,34,35,36,37,38,39,40,41,50,68,83,107,113,114,116,117,119,120,149,151,152,153,154,155,156,157,159,175,178,206,208,211,214,258,],[75,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,75,75,75,75,75,-52,75,75,75,75,75,-64,75,75,75,75,75,75,75,75,75,-49,75,-53,75,75,]),'CHAR':([23,26,33,34,35,36,37,38,39,40,41,50,68,83,107,113,114,116,117,119,120,149,151,152,153,154,155,156,157,159,175,178,206,208,211,214,258,],[76,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,76,76,76,76,76,-52,76,76,76,76,76,-64,76,76,76,76,76,76,76,76,76,-49,76,-53,76,76,]),'DATE':([23,26,33,34,35,36,37,38,39,40,41,50,68,83,107,113,114,116,117,119,149,151,152,153,154,155,156,157,159,175,178,206,208,211,214,258,],[77,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,77,77,77,77,77,-52,77,77,77,77,-64,77,77,77,77,77,77,77,77,77,-49,77,-53,77,77,]),'DATETIME':([23,26,33,34,35,36,37,38,39,40,41,50,68,83,107,113,114,116,117,119,149,151,152,153,154,155,156,157,159,175,178,206,208,211,214,258,],[78,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,78,78,78,78,78,-52,78,78,78,78,-64,78,78,78,78,78,78,78,78,78,-49,78,-53,78,78,]),'DATE_INTERVAL':([23,26,33,34,35,36,37,38,39,40,41,50,68,83,107,113,114,116,117,119,149,151,152,153,154,155,156,157,159,175,178,206,208,211,214,258,],[79,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,79,79,79,79,79,-52,79,79,79,79,-64,79,79,79,79,79,79,79,79,79,-49,79,-53,79,79,]),'DATETIME_INTERVAL':([23,26,33,34,35,36,37,38,39,40,41,50,68,83,107,113,114,116,117,119,149,151,152,153,154,155,156,157,159,175,178,206,208,211,214,258,],[80,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,80,80,80,80,80,-52,80,80,80,80,-64,80,80,80,80,80,80,80,80,80,-49,80,-53,80,80,]),'KEYWORD_LET':([26,33,34,35,36,37,38,39,40,41,50,83,107,113,114,117,149,151,152,153,154,155,156,157,159,206,208,211,214,258,],[-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,115,115,115,115,-52,115,115,-64,115,115,115,115,115,115,115,-49,115,-53,115,115,]),'BACKSLASH':([26,33,34,35,36,37,38,39,40,41,50,83,107,113,114,117,149,151,152,153,154,155,156,157,159,206,208,211,214,258,],[-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,116,116,116,116,-52,116,116,-64,116,116,116,116,116,116,116,-49,116,-53,116,116,]),'PIPE':([46,47,48,86,87,88,89,91,132,133,134,135,136,137,182,183,222,223,],[-79,-155,-79,131,-133,-132,-156,-158,-79,-159,-160,-161,-121,-122,-79,-157,-162,-163,]),'KEYWORD_FORALL':([49,88,138,139,146,147,180,189,191,192,251,271,],[96,-132,96,96,-79,-79,96,96,-133,96,96,96,]),'ANNOTATION':([60,70,71,72,73,74,],[120,-71,-72,-73,-74,-75,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'definitions':([0,],[2,]),'definition':([0,18,239,],[3,44,259,]),'local_definition':([0,18,166,239,],[4,4,213,4,]),'datatype_definition':([0,18,239,],[5,5,5,]),'nametype_decl':([0,18,166,239,],[6,6,6,6,]),'valuedef':([0,18,166,239,],[7,7,7,7,]),'_datatype_lhs':([0,18,239,],[8,8,8,]),'_identifier':([0,18,23,50,68,83,107,113,116,117,119,120,148,149,152,153,154,155,156,157,159,166,175,178,197,198,208,214,229,239,255,258,],[9,9,59,59,121,59,59,59,59,59,59,59,194,59,59,59,59,59,59,59,59,9,59,59,233,233,59,59,194,9,233,59,]),'equation':([0,18,166,197,198,239,255,],[11,11,11,232,232,11,266,]),'_enclosed_operator':([0,18,50,83,104,107,113,117,149,152,153,154,155,156,157,159,160,166,197,198,204,208,214,239,255,258,],[16,16,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,16,16,16,114,114,114,16,16,114,]),'_definition_set':([3,44,],[17,84,]),'empty':([3,9,16,44,46,48,49,51,82,113,117,124,132,138,139,146,147,162,168,170,180,181,182,186,189,192,213,218,225,226,227,228,232,233,236,251,259,260,266,271,],[19,24,24,19,87,91,95,24,129,165,165,179,91,95,95,191,191,209,24,209,95,129,87,191,95,95,240,179,248,191,191,191,256,24,209,95,240,248,256,95,]),'_patterns':([9,16,51,168,233,],[22,43,118,215,22,]),'_st_operator':([10,113,159,234,],[25,164,164,164,]),'infixl_operator_2':([10,100,113,159,234,],[27,153,27,27,27,]),'infixr_operator_2':([10,100,113,159,234,],[28,152,28,28,28,]),'infixl_operator_6':([10,101,113,159,200,234,],[29,154,29,29,154,29,]),'infixl_operator_7':([10,102,113,159,201,234,],[30,155,30,30,155,30,]),'infixr_operator_9':([10,104,113,159,160,204,234,],[31,156,31,31,156,156,31,]),'_data_rhs':([20,],[45,]),'data_cons':([20,131,],[46,182,]),'_data_cons':([20,131,],[47,47,]),'pattern':([23,68,116,119,175,178,],[51,124,168,171,168,218,]),'identifier':([23,50,68,83,107,113,116,117,119,120,149,152,153,154,155,156,157,159,175,178,208,214,258,],[52,106,52,106,106,106,52,106,52,174,106,106,106,106,106,106,106,106,52,52,106,106,106,]),'literal':([23,50,68,83,107,113,116,117,119,149,152,153,154,155,156,157,159,175,178,208,214,258,],[53,105,53,105,105,105,53,105,53,105,105,105,105,105,105,105,105,53,53,105,105,105,]),'cons_pattern':([23,68,116,119,175,178,],[54,54,54,54,54,54,]),'list_cons_pattern':([23,68,116,119,175,178,],[55,55,55,55,55,55,]),'tuple_cons_pattern':([23,68,116,119,175,178,],[56,56,56,56,56,56,]),'empty_list_pattern':([23,68,116,119,175,178,],[57,57,57,57,57,57,]),'empty_tuple_pattern':([23,68,116,119,175,178,],[58,58,58,58,58,58,]),'number':([23,50,68,83,107,113,116,117,119,149,152,153,154,155,156,157,159,175,178,208,214,258,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'concrete_number':([23,50,68,83,107,113,116,117,119,149,152,153,154,155,156,157,159,175,178,208,214,258,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'string':([23,50,68,83,107,113,116,117,119,120,149,152,153,154,155,156,157,159,175,178,208,214,258,],[62,62,62,62,62,62,62,62,62,172,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'char':([23,50,68,83,107,113,116,117,119,120,149,152,153,154,155,156,157,159,175,178,208,214,258,],[63,63,63,63,63,63,63,63,63,173,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'date':([23,50,68,83,107,113,116,117,119,149,152,153,154,155,156,157,159,175,178,208,214,258,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'datetime':([23,50,68,83,107,113,116,117,119,149,152,153,154,155,156,157,159,175,178,208,214,258,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'date_interval':([23,50,68,83,107,113,116,117,119,149,152,153,154,155,156,157,159,175,178,208,214,258,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'datetime_interval':([23,50,68,83,107,113,116,117,119,149,152,153,154,155,156,157,159,175,178,208,214,258,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'_data_conses':([46,182,],[85,221,]),'_maybe_padding':([46,146,147,182,186,226,227,228,],[86,189,192,86,224,249,250,252,]),'_cons_args':([48,132,],[89,183,]),'st_type_expr':([49,180,],[92,219,]),'type_expr':([49,138,139,180,189,192,251,271,],[93,184,185,93,227,228,263,263,]),'type_scheme':([49,138,139,180,189,192,251,271,],[94,94,94,94,94,94,94,94,]),'expr':([50,83,107,113,117,149,152,153,154,155,156,157,159,208,214,258,],[97,130,161,162,170,195,161,161,161,161,161,161,205,236,241,268,]),'expr_term0':([50,83,107,113,117,149,152,153,154,155,156,157,159,208,214,258,],[98,98,98,98,98,196,98,98,98,98,98,98,98,98,98,98,]),'expr_term1':([50,83,107,113,117,149,152,153,154,155,156,157,159,208,214,258,],[99,99,99,99,99,99,199,99,99,99,99,99,99,99,99,99,]),'expr_term2':([50,83,107,113,117,149,152,153,154,155,156,157,159,208,214,258,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'expr_term6':([50,83,107,113,117,149,152,153,154,155,156,157,159,208,214,258,],[101,101,101,101,101,101,101,200,101,101,101,101,101,101,101,101,]),'expr_term7':([50,83,107,113,117,149,152,153,154,155,156,157,159,208,214,258,],[102,102,102,102,102,102,102,102,201,102,102,102,102,102,102,102,]),'expr_term9':([50,83,107,113,117,149,152,153,154,155,156,157,159,208,214,258,],[103,103,103,103,103,103,103,103,103,202,203,103,103,103,103,103,]),'expr_factor':([50,83,107,113,117,149,152,153,154,155,156,157,159,208,214,258,],[104,104,160,104,104,104,104,104,104,104,104,204,104,104,104,104,]),'enclosed_expr':([50,83,104,107,113,117,149,152,153,154,155,156,157,159,160,204,208,214,258,],[107,107,158,107,107,107,107,107,107,107,107,107,107,107,158,158,107,107,107,]),'letexpr':([50,83,107,113,117,149,152,153,154,155,156,157,159,208,214,258,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'where_expr':([50,83,107,113,117,149,152,153,154,155,156,157,159,208,214,258,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'lambda_expr':([50,83,107,113,117,149,152,153,154,155,156,157,159,208,214,258,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'simple_list_expr':([50,83,107,113,117,149,152,153,154,155,156,157,159,208,214,258,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'simple_tuple_expr':([50,83,107,113,117,149,152,153,154,155,156,157,159,208,214,258,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'patterns_comma_sep':([68,],[123,]),'_cons_params':([82,181,],[128,220,]),'cons_arg':([90,],[132,]),'type_variable':([90,94,188,224,246,],[133,144,144,144,144,]),'type_cons':([90,94,188,224,246,],[134,145,145,145,145,]),'_cons_arg_factor':([90,],[135,]),'type_function_expr':([94,224,],[140,245,]),'type_term':([94,224,],[141,244,]),'type_app_expression':([94,224,],[142,142,]),'type_factor':([94,188,224,246,],[143,225,143,260,]),'infixl_operator_0':([97,130,161,162,170,195,205,236,241,268,],[149,149,149,149,149,149,149,149,149,149,]),'_list_items':([113,117,],[163,169,]),'patterns':([116,175,],[167,217,]),'_patterns_comma':([124,218,],[177,243,]),'_app_args_non_empty':([143,],[187,]),'_type_scheme_generics':([148,229,],[193,253,]),'_list_items_cont':([162,170,236,],[207,207,257,]),'local_definitions':([166,],[212,]),'_type_expr_list':([189,],[226,]),'equations':([197,198,],[231,235,]),'_local_definition_set':([213,259,],[238,269,]),'_app_args':([225,260,],[247,270,]),'_equation_set':([232,266,],[254,272,]),'_type_expr_list_trail':([251,271,],[264,273,]),'st_expr':([258,],[267,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','__init__.py',437),
  ('expr_term9 -> expr_factor infixr_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','__init__.py',444),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','__init__.py',445),
  ('expr_term7 -> expr_term7 infixl_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','__init__.py',447),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','__init__.py',448),
  ('expr_term6 -> expr_term6 infixl_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','__init__.py',450),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','__init__.py',451),
  ('expr_term2 -> expr_term2 infixl_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','__init__.py',453),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','__init__.py',454),
  ('expr_term1 -> expr_term2 infixr_operator_2 expr_term1','expr_term1',3,'p_expressions_precedence_rules','__init__.py',456),
  ('expr_term1 -> expr_term2','expr_term1',1,'p_expressions_precedence_rules','__init__.py',457),
  ('expr_term0 -> expr infixl_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','__init__.py',459),
  ('expr_term0 -> expr_term1','expr_term0',1,'p_expressions_precedence_rules','__init__.py',460),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','__init__.py',473),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','__init__.py',475),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','__init__.py',477),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','__init__.py',478),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','__init__.py',479),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','__init__.py',480),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','__init__.py',481),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','__init__.py',482),
  ('expr_factor -> simple_list_expr','expr_factor',1,'p_standalone_definitions','__init__.py',483),
  ('expr_factor -> simple_tuple_expr','expr_factor',1,'p_standalone_definitions','__init__.py',484),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','__init__.py',486),
  ('literal -> number','literal',1,'p_literals','__init__.py',494),
  ('literal -> concrete_number','literal',1,'p_literals','__init__.py',495),
  ('literal -> string','literal',1,'p_literals','__init__.py',496),
  ('literal -> char','literal',1,'p_literals','__init__.py',497),
  ('literal -> date','literal',1,'p_literals','__init__.py',498),
  ('literal -> datetime','literal',1,'p_literals','__init__.py',499),
  ('literal -> date_interval','literal',1,'p_literals','__init__.py',500),
  ('literal -> datetime_interval','literal',1,'p_literals','__init__.py',501),
  ('simple_tuple_expr -> LPAREN _list_items RPAREN','simple_tuple_expr',3,'p_tuple_expr','__init__.py',507),
  ('simple_list_expr -> LBRACKET _list_items RBRACKET','simple_list_expr',3,'p_list_expr','__init__.py',514),
  ('_list_items -> expr _list_items_cont','_list_items',2,'p_list_items','__init__.py',521),
  ('_list_items_cont -> COMMA expr _list_items_cont','_list_items_cont',3,'p_list_items','__init__.py',522),
  ('_list_items -> empty','_list_items',1,'p_list_items_empty','__init__.py',528),
  ('_list_items_cont -> empty','_list_items_cont',1,'p_list_items_empty','__init__.py',529),
  ('date -> DATE','date',1,'p_date','__init__.py',535),
  ('datetime -> DATETIME','datetime',1,'p_datetime','__init__.py',541),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','__init__.py',547),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','__init__.py',553),
  ('char -> CHAR','char',1,'p_char','__init__.py',559),
  ('string -> STRING','string',1,'p_string','__init__.py',564),
  ('identifier -> _identifier','identifier',1,'p_variable','__init__.py',569),
  ('_identifier -> UNDER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',576),
  ('_identifier -> UPPER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',577),
  ('_identifier -> LOWER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',578),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','__init__.py',585),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','__init__.py',590),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','__init__.py',591),
  ('enclosed_expr -> _enclosed_operator','enclosed_expr',1,'p_operators_as_expressios','__init__.py',597),
  ('_enclosed_operator -> LPAREN _st_operator RPAREN','_enclosed_operator',3,'p_enclosed_operator','__init__.py',603),
  ('infixr_operator_9 -> DOT_OPERATOR','infixr_operator_9',1,'p_operator','__init__.py',613),
  ('infixl_operator_7 -> STAR','infixl_operator_7',1,'p_operator','__init__.py',615),
  ('infixl_operator_7 -> SLASH','infixl_operator_7',1,'p_operator','__init__.py',616),
  ('infixl_operator_7 -> DOUBLESLASH','infixl_operator_7',1,'p_operator','__init__.py',617),
  ('infixl_operator_7 -> PERCENT','infixl_operator_7',1,'p_operator','__init__.py',618),
  ('infixl_operator_6 -> PLUS','infixl_operator_6',1,'p_operator','__init__.py',620),
  ('infixl_operator_6 -> MINUS','infixl_operator_6',1,'p_operator','__init__.py',621),
  ('infixr_operator_2 -> COLON','infixr_operator_2',1,'p_operator','__init__.py',623),
  ('infixl_operator_2 -> OPERATOR','infixl_operator_2',1,'p_operator','__init__.py',625),
  ('infixl_operator_2 -> ARROW','infixl_operator_2',1,'p_operator','__init__.py',626),
  ('infixl_operator_0 -> TICK_OPERATOR','infixl_operator_0',1,'p_operator','__init__.py',628),
  ('_st_operator -> infixl_operator_2','_st_operator',1,'p_operator','__init__.py',630),
  ('_st_operator -> infixr_operator_2','_st_operator',1,'p_operator','__init__.py',631),
  ('_st_operator -> infixl_operator_6','_st_operator',1,'p_operator','__init__.py',632),
  ('_st_operator -> infixl_operator_7','_st_operator',1,'p_operator','__init__.py',633),
  ('_st_operator -> infixr_operator_9','_st_operator',1,'p_operator','__init__.py',634),
  ('_st_operator -> COMMA','_st_operator',1,'p_operator','__init__.py',635),
  ('number -> BASE10_INTEGER','number',1,'p_integer','__init__.py',642),
  ('number -> BASE16_INTEGER','number',1,'p_integer','__init__.py',643),
  ('number -> BASE8_INTEGER','number',1,'p_integer','__init__.py',644),
  ('number -> BASE2_INTEGER','number',1,'p_integer','__init__.py',645),
  ('number -> FLOAT','number',1,'p_float','__init__.py',674),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','__init__.py',679),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','__init__.py',680),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','__init__.py',681),
  ('empty -> <empty>','empty',0,'p_empty','__init__.py',690),
  ('lambda_expr -> BACKSLASH patterns ARROW expr','lambda_expr',4,'p_lambda_definition','__init__.py',695),
  ('pattern -> identifier','pattern',1,'p_pattern','__init__.py',704),
  ('pattern -> literal','pattern',1,'p_pattern','__init__.py',705),
  ('pattern -> cons_pattern','pattern',1,'p_pattern','__init__.py',706),
  ('pattern -> list_cons_pattern','pattern',1,'p_pattern','__init__.py',707),
  ('pattern -> tuple_cons_pattern','pattern',1,'p_pattern','__init__.py',708),
  ('pattern -> empty_list_pattern','pattern',1,'p_pattern','__init__.py',709),
  ('pattern -> empty_tuple_pattern','pattern',1,'p_pattern','__init__.py',710),
  ('list_cons_pattern -> pattern COLON pattern','list_cons_pattern',3,'p_list_cons_for_param','__init__.py',716),
  ('cons_pattern -> LPAREN _identifier SPACE patterns RPAREN','cons_pattern',5,'p_param_pattern','__init__.py',722),
  ('empty_list_pattern -> LBRACKET RBRACKET','empty_list_pattern',2,'p_empty_list_as_pattern','__init__.py',727),
  ('empty_tuple_pattern -> LPAREN RPAREN','empty_tuple_pattern',2,'p_unit_value_as_pattern','__init__.py',733),
  ('tuple_cons_pattern -> LPAREN patterns_comma_sep RPAREN','tuple_cons_pattern',3,'p_tuple_cons_pattern','__init__.py',739),
  ('patterns -> pattern _patterns','patterns',2,'p_patterns','__init__.py',747),
  ('patterns_comma_sep -> pattern _patterns_comma','patterns_comma_sep',2,'p_patterns','__init__.py',748),
  ('_patterns -> SPACE pattern _patterns','_patterns',3,'p_patterns','__init__.py',749),
  ('_patterns_comma -> COMMA pattern _patterns_comma','_patterns_comma',3,'p_patterns','__init__.py',750),
  ('_patterns -> empty','_patterns',1,'p_patterns_empty','__init__.py',756),
  ('_patterns_comma -> empty','_patterns_comma',1,'p_patterns_empty','__init__.py',757),
  ('equation -> _identifier _patterns EQ expr','equation',4,'p_equation','__init__.py',763),
  ('equation -> _enclosed_operator _patterns EQ expr','equation',4,'p_equation','__init__.py',764),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','__init__.py',774),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','__init__.py',783),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','__init__.py',792),
  ('letexpr -> KEYWORD_LET SPACE local_definitions KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','__init__.py',802),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','__init__.py',810),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','__init__.py',811),
  ('type_expr -> type_scheme type_function_expr','type_expr',2,'p_type_expr','__init__.py',821),
  ('type_expr -> type_scheme type_term','type_expr',2,'p_type_expr','__init__.py',822),
  ('type_scheme -> empty','type_scheme',1,'p_type_scheme_empty','__init__.py',831),
  ('type_scheme -> KEYWORD_FORALL SPACE _type_scheme_generics','type_scheme',3,'p_type_scheme','__init__.py',835),
  ('_type_scheme_generics -> _identifier SPACE _type_scheme_generics','_type_scheme_generics',3,'p_type_scheme_generics','__init__.py',842),
  ('_type_scheme_generics -> _identifier DOT_OPERATOR','_type_scheme_generics',2,'p_last_type_scheme_generic','__init__.py',847),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','__init__.py',852),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','__init__.py',853),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','__init__.py',863),
  ('type_term -> type_factor','type_term',1,'p_type_term','__init__.py',864),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','__init__.py',869),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','__init__.py',881),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','__init__.py',882),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','__init__.py',888),
  ('type_variable -> LOWER_IDENTIFIER','type_variable',1,'p_type_variable','__init__.py',893),
  ('type_cons -> UPPER_IDENTIFIER','type_cons',1,'p_type_cons','__init__.py',898),
  ('type_factor -> type_variable','type_factor',1,'p_type_factor_identifier','__init__.py',903),
  ('type_factor -> type_cons','type_factor',1,'p_type_factor_identifier','__init__.py',904),
  ('type_factor -> LPAREN _maybe_padding _type_expr_list _maybe_padding RPAREN','type_factor',5,'p_type_factor_tuple','__init__.py',911),
  ('type_factor -> LPAREN RPAREN','type_factor',2,'p_type_factor_unit_type','__init__.py',917),
  ('_type_expr_list -> type_expr COMMA _type_expr_list_trail','_type_expr_list',3,'p_type_expr_list','__init__.py',922),
  ('_type_expr_list_trail -> type_expr COMMA _type_expr_list_trail','_type_expr_list_trail',3,'p_type_expr_list','__init__.py',923),
  ('_type_expr_list_trail -> type_expr','_type_expr_list_trail',1,'p_type_expr_list_last_item','__init__.py',929),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','__init__.py',935),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','__init__.py',940),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','__init__.py',945),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','__init__.py',946),
  ('program -> definitions','program',1,'p_program','__init__.py',952),
  ('definitions -> definition _definition_set','definitions',2,'p_definitions','__init__.py',958),
  ('_definition_set -> NEWLINE definition _definition_set','_definition_set',3,'p_definition_set','__init__.py',964),
  ('_definition_set -> empty','_definition_set',1,'p_definition_set2','__init__.py',970),
  ('definition -> local_definition','definition',1,'p_definition','__init__.py',976),
  ('definition -> datatype_definition','definition',1,'p_definition','__init__.py',977),
  ('local_definition -> nametype_decl','local_definition',1,'p_local_definition','__init__.py',984),
  ('local_definition -> valuedef','local_definition',1,'p_local_definition','__init__.py',985),
  ('local_definitions -> local_definition _local_definition_set','local_definitions',2,'p_local_definitions','__init__.py',991),
  ('_local_definition_set -> PADDING definition _local_definition_set','_local_definition_set',3,'p_local_definition_set','__init__.py',997),
  ('_local_definition_set -> empty','_local_definition_set',1,'p_local_definition_set_empty','__init__.py',1003),
  ('valuedef -> equation','valuedef',1,'p_valuedef','__init__.py',1009),
  ('nametype_decl -> _identifier COLON COLON st_type_expr','nametype_decl',4,'p_nametype_decl','__init__.py',1015),
  ('nametype_decl -> LPAREN _st_operator RPAREN COLON COLON st_type_expr','nametype_decl',6,'p_nametype_decl_operators','__init__.py',1024),
  ('datatype_definition -> _datatype_lhs EQ _data_rhs','datatype_definition',3,'p_datatype_definition','__init__.py',1033),
  ('_datatype_lhs -> KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params','_datatype_lhs',4,'p_datatype_lhs','__init__.py',1041),
  ('_cons_params -> SPACE LOWER_IDENTIFIER _cons_params','_cons_params',3,'p_datatype_cons_params','__init__.py',1050),
  ('_cons_params -> empty','_cons_params',1,'p_datatype_cons_params_empty','__init__.py',1056),
  ('_data_rhs -> data_cons _data_conses','_data_rhs',2,'p_datatype_body','__init__.py',1062),
  ('_data_conses -> _maybe_padding PIPE data_cons _data_conses','_data_conses',4,'p_datatype_body','__init__.py',1063),
  ('_data_conses -> empty','_data_conses',1,'p_datatype_conses_empty','__init__.py',1069),
  ('data_cons -> _data_cons','data_cons',1,'p_data_cons','__init__.py',1074),
  ('_data_cons -> UPPER_IDENTIFIER _cons_args','_data_cons',2,'p_bare_data_cons','__init__.py',1080),
  ('_cons_args -> SPACE cons_arg _cons_args','_cons_args',3,'p_data_cons_args','__init__.py',1085),
  ('_cons_args -> empty','_cons_args',1,'p_data_cons_args_empty','__init__.py',1091),
  ('cons_arg -> type_variable','cons_arg',1,'p_cons_arg','__init__.py',1097),
  ('cons_arg -> type_cons','cons_arg',1,'p_cons_arg','__init__.py',1098),
  ('cons_arg -> _cons_arg_factor','cons_arg',1,'p_cons_arg','__init__.py',1099),
  ('_cons_arg_factor -> LPAREN type_expr RPAREN','_cons_arg_factor',3,'p_cons_arg_factor','__init__.py',1105),
  ('_cons_arg_factor -> LBRACKET type_expr RBRACKET','_cons_arg_factor',3,'p_cons_arg_factor_list','__init__.py',1111),
]
