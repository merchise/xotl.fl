
# program_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON COMMA DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FLOAT KEYWORD_CLASS KEYWORD_DATA KEYWORD_FORALL KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LOWER_IDENTIFIER LPAREN MINUS NEWLINE OPERATOR PADDING PERCENT PIPE PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATOR UNDER_IDENTIFIER UPPER_IDENTIFIERexpr_factor : expr_factor SPACE expr_factor\n    expr_term9 : expr_factor infixr_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infixl_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infixl_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infixl_operator_2 expr_term6\n               | expr_term6\n\n    expr_term1 : expr_term2 infixr_operator_2 expr_term1\n               | expr_term2\n\n    expr_term0 : expr infixl_operator_0 expr_term0\n               | expr_term1\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | letexpr\n                | where_expr\n                | lambda_expr\n                | simple_list_expr\n                | simple_tuple_expr\n\n    st_type_expr : type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    simple_tuple_expr : LPAREN _list_items RPAREN\n    simple_list_expr : LBRACKET _list_items RBRACKET\n    _list_items : expr _list_items_cont\n       _list_items_cont : COMMA expr _list_items_cont\n    _list_items : empty\n       _list_items_cont : empty\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    char : CHARstring : STRINGidentifier : _identifier\n\n    _identifier : UNDER_IDENTIFIER\n                   | UPPER_IDENTIFIER\n                   | LOWER_IDENTIFIER\n\n    enclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : _enclosed_operator\n    _enclosed_operator : LPAREN _st_operator RPAREN\n    infixr_operator_9 : DOT_OPERATOR\n\n    infixl_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infixl_operator_6 : PLUS\n                     | MINUS\n\n    infixr_operator_2 : COLON\n\n    infixl_operator_2 : OPERATOR\n                      | ARROW\n\n    infixl_operator_0 : TICK_OPERATOR\n\n    _st_operator : infixl_operator_2\n                 | infixr_operator_2\n                 | infixl_operator_6\n                 | infixl_operator_7\n                 | infixr_operator_9\n                 | COMMA\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH patterns ARROW expr\n    \n    pattern : literal\n    pattern : cons_pattern\n    pattern : list_cons_pattern\n    pattern : tuple_cons_pattern\n    pattern : empty_list_pattern\n    pattern : empty_tuple_pattern\n    pattern : LOWER_IDENTIFIER\n       pattern : UNDER_IDENTIFIER\n    pattern : UPPER_IDENTIFIER\n    list_cons_pattern : pattern COLON pattern\n    cons_pattern : LPAREN _identifier SPACE patterns RPARENempty_list_pattern : LBRACKET RBRACKETempty_tuple_pattern : LPAREN RPARENtuple_cons_pattern : LPAREN patterns_comma_sep RPAREN\n    patterns : pattern _patterns\n       patterns_comma_sep : pattern _patterns_comma\n       _patterns : SPACE pattern _patterns\n       _patterns_comma : COMMA pattern _patterns_comma\n    _patterns : empty\n       _patterns_comma : empty\n    equation : _identifier _patterns EQ expr\n       equation : _enclosed_operator _patterns EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE local_definitions KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    type_expr : type_scheme type_function_expr\n                 | type_scheme type_termtype_scheme : emptytype_scheme : KEYWORD_FORALL SPACE _type_scheme_generics_type_scheme_generics : _identifier SPACE _type_scheme_generics_type_scheme_generics : _identifier DOT_OPERATORtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_variable : LOWER_IDENTIFIERtype_cons : UPPER_IDENTIFIERtype_factor : type_variable\n                   | type_cons\n\n    type_factor : LPAREN _maybe_padding _type_expr_list _maybe_padding RPARENtype_factor : LPAREN RPAREN_type_expr_list : type_expr COMMA _type_expr_list_trail\n       _type_expr_list_trail : type_expr COMMA _type_expr_list_trail\n    _type_expr_list_trail : type_expr\n    type_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET_maybe_padding : PADDING\n                      | empty\n    program : definitions\n    definitions : definition _definition_set\n    _definition_set : NEWLINE definition _definition_set\n    _definition_set : empty\n    definition : local_definition\n                  | datatype_definition\n    \n    local_definition : nametype_decl\n                     | valuedef\n    local_definitions : local_definition _local_definition_set\n    _local_definition_set : PADDING definition _local_definition_set\n    _local_definition_set : empty\n    valuedef : equation\n    nametype_decl : _identifier COLON COLON st_type_expr\n    nametype_decl : LPAREN _st_operator RPAREN COLON COLON st_type_expr\n    datatype_definition : _datatype_lhs EQ _data_rhs\n    _datatype_lhs : KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params\n    _cons_params : SPACE LOWER_IDENTIFIER _cons_params\n    _cons_params : empty\n    _data_rhs : data_cons _data_conses\n       _data_conses : _maybe_padding PIPE data_cons _data_conses\n    _data_conses : emptydata_cons : _data_cons_data_cons : UPPER_IDENTIFIER _cons_args_cons_args : SPACE cons_arg _cons_args\n    _cons_args : empty\n    cons_arg : type_variable\n       cons_arg : type_cons\n       cons_arg : _cons_arg_factor\n    _cons_arg_factor : LPAREN type_expr RPAREN\n    _cons_arg_factor : LBRACKET type_expr RBRACKET\n    '
    
_lr_action_items = {'LPAREN':([0,13,14,15,18,23,26,33,34,35,36,37,38,39,40,41,49,50,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,84,89,91,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,135,143,144,151,152,154,156,157,158,159,160,161,162,163,164,165,171,177,178,179,180,183,185,191,193,194,196,197,198,201,202,203,204,205,206,207,208,209,211,213,215,216,219,221,229,235,236,237,240,244,246,251,256,258,259,260,261,263,271,272,273,276,277,],[10,-47,-46,-48,10,69,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,-79,115,-25,-26,-27,-28,-29,-30,-31,-32,69,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,115,-134,143,151,-111,-45,-101,-15,-13,-11,-9,-7,-5,164,-16,-17,115,-19,-20,-21,-22,-23,115,-52,69,115,69,-102,-79,-79,-79,-79,115,-64,115,115,115,115,115,115,-51,115,164,10,-76,-77,-78,69,69,-79,-79,151,-79,-135,-79,-112,-12,239,239,-10,-8,-6,-4,-2,-1,-49,115,-33,-53,115,-34,151,-114,-107,-79,-108,10,-80,151,-79,-113,-103,239,-105,115,-79,-106,-14,-79,-104,]),'KEYWORD_DATA':([0,18,244,],[12,12,12,]),'UNDER_IDENTIFIER':([0,18,23,26,33,34,35,36,37,38,39,40,41,50,69,84,109,115,116,118,119,121,122,153,154,156,157,158,159,160,161,162,164,171,180,183,202,203,211,213,216,219,234,244,260,263,],[14,14,59,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,14,126,14,14,14,-52,59,14,59,14,14,14,-64,14,14,14,14,14,14,14,14,59,59,14,14,-49,14,-53,14,14,14,14,14,]),'UPPER_IDENTIFIER':([0,18,20,23,26,33,34,35,36,37,38,39,40,41,42,49,50,69,84,89,91,95,96,109,115,116,118,119,121,122,136,143,144,151,152,153,154,156,157,158,159,160,161,162,164,171,180,183,185,191,193,194,196,197,198,202,203,211,213,216,219,229,234,235,244,251,256,258,260,263,276,],[13,13,48,60,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,83,-79,13,127,13,-134,142,142,-111,13,13,-52,60,13,60,13,48,-79,-79,-79,-79,13,13,-64,13,13,13,13,13,13,13,13,60,60,-79,-79,142,-79,-135,-79,-112,13,13,-49,13,-53,13,142,13,-114,13,142,-79,-113,13,13,-79,]),'LOWER_IDENTIFIER':([0,18,23,26,33,34,35,36,37,38,39,40,41,49,50,69,84,89,91,95,96,109,115,116,118,119,121,122,132,143,144,151,152,153,154,156,157,158,159,160,161,162,164,171,180,183,185,191,193,194,196,197,198,202,203,211,213,216,219,229,234,235,244,251,256,258,260,263,276,],[15,15,58,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,-79,15,128,15,-134,141,141,-111,15,15,-52,58,15,58,15,186,-79,-79,-79,-79,15,15,-64,15,15,15,15,15,15,15,15,58,58,-79,-79,141,-79,-135,-79,-112,15,15,-49,15,-53,15,141,15,-114,15,141,-79,-113,15,15,-79,]),'$end':([1,2,3,4,5,6,7,11,13,14,15,17,19,44,45,46,47,48,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,85,86,88,90,92,93,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,135,137,138,139,140,141,142,145,146,147,148,149,150,163,165,177,178,179,187,188,192,195,201,204,205,206,207,208,209,211,215,216,221,224,226,227,228,230,236,237,240,246,249,250,252,253,259,261,265,266,267,270,271,272,273,275,277,],[0,-136,-79,-140,-141,-142,-143,-147,-47,-46,-48,-137,-139,-79,-150,-79,-157,-79,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-138,-154,-156,-158,-160,-148,-24,-45,-101,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,-102,-79,-161,-162,-163,-123,-124,-109,-110,-117,-118,-125,-126,-51,-50,-76,-77,-78,-79,-159,-119,-128,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-34,-149,-155,-164,-165,-79,-107,-79,-108,-80,-116,-115,-121,-122,-103,-105,-79,-127,-132,-133,-79,-106,-14,-120,-104,]),'NEWLINE':([3,4,5,6,7,11,13,14,15,44,45,46,47,48,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,86,88,90,92,93,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,135,137,138,139,140,141,142,145,146,147,148,149,150,163,165,177,178,179,187,188,192,195,201,204,205,206,207,208,209,211,215,216,221,224,226,227,228,230,236,237,240,246,249,250,252,253,259,261,265,266,267,270,271,272,273,275,277,],[18,-140,-141,-142,-143,-147,-47,-46,-48,18,-150,-79,-157,-79,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-154,-156,-158,-160,-148,-24,-45,-101,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,-102,-79,-161,-162,-163,-123,-124,-109,-110,-117,-118,-125,-126,-51,-50,-76,-77,-78,-79,-159,-119,-128,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-34,-149,-155,-164,-165,-79,-107,-79,-108,-80,-116,-115,-121,-122,-103,-105,-79,-127,-132,-133,-79,-106,-14,-120,-104,]),'PADDING':([4,5,6,7,11,13,14,15,45,46,47,48,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,86,88,90,92,93,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,135,137,138,139,140,141,142,145,146,147,148,149,150,151,152,155,163,165,177,178,179,187,188,191,192,195,201,204,205,206,207,208,209,211,215,216,218,221,224,226,227,228,230,231,232,233,236,237,240,246,249,250,252,253,259,261,264,265,266,267,268,269,270,271,272,273,275,277,278,],[-140,-141,-142,-143,-147,-47,-46,-48,-150,89,-157,-79,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-154,-156,-158,-160,-148,-24,-45,-101,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,-102,-79,-161,-162,-163,-123,-124,-109,-110,-117,-118,-125,-126,89,89,203,-51,-50,-76,-77,-78,89,-159,89,-119,-128,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,244,-34,-149,-155,-164,-165,-79,89,89,89,-107,260,-108,-80,-116,-115,-121,-122,-103,-105,244,-79,-127,-132,-131,-129,-133,260,-106,-14,-120,-104,-130,]),'KEYWORD_IN':([4,5,6,7,11,13,14,15,45,46,47,48,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,86,88,90,92,93,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,135,137,138,139,140,141,142,145,146,147,148,149,150,163,165,177,178,179,187,188,192,195,201,204,205,206,207,208,209,211,215,216,217,218,221,224,226,227,228,230,236,237,240,243,245,246,249,250,252,253,259,261,264,265,266,267,270,271,272,273,274,275,277,],[-140,-141,-142,-143,-147,-47,-46,-48,-150,-79,-157,-79,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-154,-156,-158,-160,-148,-24,-45,-101,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,-102,-79,-161,-162,-163,-123,-124,-109,-110,-117,-118,-125,-126,-51,-50,-76,-77,-78,-79,-159,-119,-128,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,242,-79,-34,-149,-155,-164,-165,-79,-107,-79,-108,-144,-146,-80,-116,-115,-121,-122,-103,-105,-79,-79,-127,-132,-133,-79,-106,-14,-145,-120,-104,]),'EQ':([8,9,13,14,15,16,22,24,43,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,98,120,124,130,133,134,176,177,178,179,181,186,216,225,238,247,],[20,-79,-47,-46,-48,-79,50,-99,84,-79,-81,-82,-83,-84,-85,-86,-87,-88,-89,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-53,-79,-45,-97,-93,-92,-151,-153,-90,-76,-77,-78,-94,-79,-53,-152,-79,-91,]),'COLON':([9,10,13,14,15,21,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,124,126,127,128,129,130,131,135,163,164,165,173,176,177,178,179,181,201,204,205,206,207,208,209,211,215,216,221,223,236,237,239,240,246,247,259,261,271,272,273,277,],[21,26,-47,-46,-48,49,121,-81,-82,-83,-84,-85,-86,-87,-88,-89,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,131,-45,-101,-15,-13,26,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,26,-52,-93,-88,-89,-87,121,-92,185,-102,-51,26,-3,121,121,-76,-77,-78,-94,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-34,121,-107,-79,26,-108,-80,-91,-103,-105,-79,-106,-14,-104,]),'SPACE':([9,12,13,14,15,16,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,123,124,126,127,128,130,135,137,138,139,140,141,142,148,149,150,155,163,165,173,176,177,178,179,181,186,195,199,201,204,205,206,207,208,209,211,215,216,221,227,228,230,236,237,238,240,242,246,247,259,261,265,266,267,270,271,272,273,277,],[23,42,-47,-46,-48,23,91,23,-81,-82,-83,-84,-85,-86,-87,-88,-89,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-53,132,153,-45,-101,-15,-13,-11,-9,-7,-5,162,-16,-17,-18,-19,-20,-21,-22,-23,-52,171,180,-93,-46,-47,-48,-92,-102,91,-161,-162,-163,-123,-124,193,-125,-126,202,-51,162,23,-90,-76,-77,-78,-94,132,-128,234,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-34,-164,-165,251,-107,-79,23,-108,263,-80,-91,-103,-105,251,-127,-132,-133,-79,-106,-14,-104,]),'COMMA':([10,13,14,15,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,124,126,127,128,129,130,135,141,142,145,146,147,148,149,150,163,164,165,167,175,176,177,178,179,181,192,195,201,204,205,206,207,208,209,211,215,216,221,223,230,232,236,237,239,240,241,246,247,249,250,252,253,259,261,265,266,267,268,270,271,272,273,275,277,],[32,-47,-46,-48,-81,-82,-83,-84,-85,-86,-87,-88,-89,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-45,-101,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,32,-52,-93,-88,-89,-87,183,-92,-102,-123,-124,-109,-110,-117,-118,-125,-126,-51,32,-50,213,213,-90,-76,-77,-78,-94,-119,-128,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-34,183,-79,256,-107,-79,32,-108,213,-80,-91,-116,-115,-121,-122,-103,-105,-79,-127,-132,276,-133,-79,-106,-14,-120,-104,]),'OPERATOR':([10,13,14,15,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,135,163,164,165,177,178,179,201,204,205,206,207,208,209,211,215,216,221,236,237,239,240,246,259,261,271,272,273,277,],[33,-47,-46,-48,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-45,-101,-15,-13,33,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,33,-52,-102,-51,33,-3,-76,-77,-78,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-34,-107,-79,33,-108,-80,-103,-105,-79,-106,-14,-104,]),'ARROW':([10,13,14,15,24,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,124,130,135,141,142,146,147,148,149,150,163,164,165,172,173,176,177,178,179,181,192,195,201,204,205,206,207,208,209,211,215,216,220,221,230,236,237,239,240,246,247,249,252,253,259,261,265,266,267,270,271,272,273,275,277,],[34,-47,-46,-48,-99,-79,-81,-82,-83,-84,-85,-86,-87,-88,-89,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-45,-101,-15,-13,34,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,34,-52,-97,-93,-92,-102,-123,-124,191,-117,-118,-125,-126,-51,34,-3,219,-79,-90,-76,-77,-78,-94,-119,-128,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-95,-34,-79,-107,-79,34,-108,-80,-91,191,-121,-122,-103,-105,-79,-127,-132,-133,-79,-106,-14,-120,-104,]),'PLUS':([10,13,14,15,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,135,163,164,165,177,178,179,201,204,205,206,207,208,209,211,215,216,221,236,237,239,240,246,259,261,271,272,273,277,],[35,-47,-46,-48,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-45,-101,-15,-13,-11,35,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,35,-52,-102,-51,35,-3,-76,-77,-78,-12,-10,35,-6,-4,-2,-1,-49,-33,-53,-34,-107,-79,35,-108,-80,-103,-105,-79,-106,-14,-104,]),'MINUS':([10,13,14,15,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,135,163,164,165,177,178,179,201,204,205,206,207,208,209,211,215,216,221,236,237,239,240,246,259,261,271,272,273,277,],[36,-47,-46,-48,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-45,-101,-15,-13,-11,36,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,36,-52,-102,-51,36,-3,-76,-77,-78,-12,-10,36,-6,-4,-2,-1,-49,-33,-53,-34,-107,-79,36,-108,-80,-103,-105,-79,-106,-14,-104,]),'STAR':([10,13,14,15,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,135,163,164,165,177,178,179,201,204,205,206,207,208,209,211,215,216,221,236,237,239,240,246,259,261,271,272,273,277,],[37,-47,-46,-48,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-45,-101,-15,-13,-11,-9,37,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,37,-52,-102,-51,37,-3,-76,-77,-78,-12,-10,-8,37,-4,-2,-1,-49,-33,-53,-34,-107,-79,37,-108,-80,-103,-105,-79,-106,-14,-104,]),'SLASH':([10,13,14,15,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,135,163,164,165,177,178,179,201,204,205,206,207,208,209,211,215,216,221,236,237,239,240,246,259,261,271,272,273,277,],[38,-47,-46,-48,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-45,-101,-15,-13,-11,-9,38,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,38,-52,-102,-51,38,-3,-76,-77,-78,-12,-10,-8,38,-4,-2,-1,-49,-33,-53,-34,-107,-79,38,-108,-80,-103,-105,-79,-106,-14,-104,]),'DOUBLESLASH':([10,13,14,15,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,135,163,164,165,177,178,179,201,204,205,206,207,208,209,211,215,216,221,236,237,239,240,246,259,261,271,272,273,277,],[39,-47,-46,-48,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-45,-101,-15,-13,-11,-9,39,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,39,-52,-102,-51,39,-3,-76,-77,-78,-12,-10,-8,39,-4,-2,-1,-49,-33,-53,-34,-107,-79,39,-108,-80,-103,-105,-79,-106,-14,-104,]),'PERCENT':([10,13,14,15,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,135,163,164,165,177,178,179,201,204,205,206,207,208,209,211,215,216,221,236,237,239,240,246,259,261,271,272,273,277,],[40,-47,-46,-48,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-45,-101,-15,-13,-11,-9,40,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,40,-52,-102,-51,40,-3,-76,-77,-78,-12,-10,-8,40,-4,-2,-1,-49,-33,-53,-34,-107,-79,40,-108,-80,-103,-105,-79,-106,-14,-104,]),'DOT_OPERATOR':([10,13,14,15,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,135,163,164,165,177,178,179,199,201,204,205,206,207,208,209,211,215,216,221,236,237,239,240,246,259,261,271,272,273,277,],[41,-47,-46,-48,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-45,-101,-15,-13,-11,-9,-7,-5,41,-16,-17,-18,-19,-20,-21,-22,-23,41,-52,-102,-51,41,41,-76,-77,-78,235,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-34,-107,-79,41,-108,-80,-103,-105,-79,-106,-14,-104,]),'KEYWORD_WHERE':([13,14,15,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,135,163,165,166,167,175,177,178,179,200,201,204,205,206,207,208,209,210,211,215,216,221,236,237,240,241,246,259,261,271,272,273,277,],[-47,-46,-48,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-45,155,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,155,-51,-3,155,155,155,-76,-77,-78,155,-12,-10,-8,-6,-4,-2,-1,155,-49,-33,-53,-34,-107,-79,-108,155,155,-103,-105,-79,-106,155,-104,]),'TICK_OPERATOR':([13,14,15,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,135,163,165,166,167,175,177,178,179,200,201,204,205,206,207,208,209,210,211,215,216,221,236,237,240,241,246,259,261,271,272,273,277,],[-47,-46,-48,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-45,156,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,156,-51,-3,156,156,156,-76,-77,-78,156,-12,-10,-8,-6,-4,-2,-1,156,-49,-33,-53,-34,-107,-79,-108,156,156,-103,-105,-79,-106,156,-104,]),'RPAREN':([13,14,15,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,89,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,124,125,126,127,128,129,130,135,141,142,145,146,147,148,149,150,151,163,165,167,168,169,170,173,176,177,178,179,181,182,184,189,192,195,196,201,204,205,206,207,208,209,210,211,212,214,215,216,220,221,222,223,230,231,232,236,237,240,241,246,247,248,249,250,252,253,254,255,259,261,262,265,266,267,268,269,270,271,272,273,275,277,278,],[-47,-46,-48,-99,82,-61,-65,-66,-67,-68,-69,-70,-62,-63,-59,-60,-55,-56,-57,-58,-54,-79,-81,-82,-83,-84,-85,-86,-87,-88,-89,-25,-26,-27,-28,-29,-30,-31,-32,124,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-134,-45,-101,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-79,-52,-97,-93,181,-88,-89,-87,-79,-92,-102,-123,-124,-109,-110,-117,-118,-125,-126,195,-51,-50,211,215,216,-37,-79,-90,-76,-77,-78,-94,-96,-100,227,-119,-128,-135,-12,-10,-8,-6,-4,-2,-1,211,-49,-35,-38,-33,-53,-95,-34,247,-79,-79,-79,-79,-107,-79,-108,-79,-80,-91,-98,-116,-115,-121,-122,266,267,-103,-105,-36,-79,-127,-132,-131,-129,-133,-79,-106,-14,-120,-104,-130,]),'RBRACKET':([13,14,15,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,89,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,119,135,141,142,145,146,147,148,149,150,163,165,170,174,175,177,178,179,190,192,195,196,201,204,205,206,207,208,209,211,212,214,215,216,221,230,233,236,237,240,241,246,249,250,252,253,257,259,261,262,265,266,267,270,271,272,273,275,277,],[-47,-46,-48,-25,-26,-27,-28,-29,-30,-31,-32,130,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-134,-45,-101,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,-79,-102,-123,-124,-109,-110,-117,-118,-125,-126,-51,-50,-37,221,-79,-76,-77,-78,228,-119,-128,-135,-12,-10,-8,-6,-4,-2,-1,-49,-35,-38,-33,-53,-34,-79,-79,-107,-79,-108,-79,-80,-116,-115,-121,-122,270,-103,-105,-36,-79,-127,-132,-133,-79,-106,-14,-120,-104,]),'LBRACKET':([23,26,33,34,35,36,37,38,39,40,41,49,50,69,84,89,91,95,96,109,115,116,118,119,121,143,144,151,152,154,156,157,158,159,160,161,162,164,180,183,185,191,193,194,196,197,198,211,213,216,219,229,235,251,256,258,263,276,],[70,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,-79,119,70,119,-134,144,152,-111,119,119,-52,70,119,70,-79,-79,-79,-79,119,-64,119,119,119,119,119,119,119,70,70,-79,-79,152,-79,-135,-79,-112,-49,119,-53,119,152,-114,152,-79,-113,119,-79,]),'BASE10_INTEGER':([23,26,33,34,35,36,37,38,39,40,41,50,69,84,109,115,116,118,119,121,154,156,157,158,159,160,161,162,164,180,183,211,213,216,219,263,],[71,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,71,71,71,71,71,-52,71,71,71,71,-64,71,71,71,71,71,71,71,71,71,-49,71,-53,71,71,]),'BASE16_INTEGER':([23,26,33,34,35,36,37,38,39,40,41,50,69,84,109,115,116,118,119,121,154,156,157,158,159,160,161,162,164,180,183,211,213,216,219,263,],[72,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,72,72,72,72,72,-52,72,72,72,72,-64,72,72,72,72,72,72,72,72,72,-49,72,-53,72,72,]),'BASE8_INTEGER':([23,26,33,34,35,36,37,38,39,40,41,50,69,84,109,115,116,118,119,121,154,156,157,158,159,160,161,162,164,180,183,211,213,216,219,263,],[73,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,73,73,73,73,73,-52,73,73,73,73,-64,73,73,73,73,73,73,73,73,73,-49,73,-53,73,73,]),'BASE2_INTEGER':([23,26,33,34,35,36,37,38,39,40,41,50,69,84,109,115,116,118,119,121,154,156,157,158,159,160,161,162,164,180,183,211,213,216,219,263,],[74,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,74,74,74,74,74,-52,74,74,74,74,-64,74,74,74,74,74,74,74,74,74,-49,74,-53,74,74,]),'FLOAT':([23,26,33,34,35,36,37,38,39,40,41,50,69,84,109,115,116,118,119,121,154,156,157,158,159,160,161,162,164,180,183,211,213,216,219,263,],[75,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,75,75,75,75,75,-52,75,75,75,75,-64,75,75,75,75,75,75,75,75,75,-49,75,-53,75,75,]),'STRING':([23,26,33,34,35,36,37,38,39,40,41,50,69,84,109,115,116,118,119,121,122,154,156,157,158,159,160,161,162,164,180,183,211,213,216,219,263,],[76,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,76,76,76,76,76,-52,76,76,76,76,76,-64,76,76,76,76,76,76,76,76,76,-49,76,-53,76,76,]),'CHAR':([23,26,33,34,35,36,37,38,39,40,41,50,69,84,109,115,116,118,119,121,122,154,156,157,158,159,160,161,162,164,180,183,211,213,216,219,263,],[77,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,77,77,77,77,77,-52,77,77,77,77,77,-64,77,77,77,77,77,77,77,77,77,-49,77,-53,77,77,]),'DATE':([23,26,33,34,35,36,37,38,39,40,41,50,69,84,109,115,116,118,119,121,154,156,157,158,159,160,161,162,164,180,183,211,213,216,219,263,],[78,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,78,78,78,78,78,-52,78,78,78,78,-64,78,78,78,78,78,78,78,78,78,-49,78,-53,78,78,]),'DATETIME':([23,26,33,34,35,36,37,38,39,40,41,50,69,84,109,115,116,118,119,121,154,156,157,158,159,160,161,162,164,180,183,211,213,216,219,263,],[79,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,79,79,79,79,79,-52,79,79,79,79,-64,79,79,79,79,79,79,79,79,79,-49,79,-53,79,79,]),'DATE_INTERVAL':([23,26,33,34,35,36,37,38,39,40,41,50,69,84,109,115,116,118,119,121,154,156,157,158,159,160,161,162,164,180,183,211,213,216,219,263,],[80,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,80,80,80,80,80,-52,80,80,80,80,-64,80,80,80,80,80,80,80,80,80,-49,80,-53,80,80,]),'DATETIME_INTERVAL':([23,26,33,34,35,36,37,38,39,40,41,50,69,84,109,115,116,118,119,121,154,156,157,158,159,160,161,162,164,180,183,211,213,216,219,263,],[81,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,81,81,81,81,81,-52,81,81,81,81,-64,81,81,81,81,81,81,81,81,81,-49,81,-53,81,81,]),'KEYWORD_LET':([26,33,34,35,36,37,38,39,40,41,50,84,109,115,116,119,154,156,157,158,159,160,161,162,164,211,213,216,219,263,],[-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,117,117,117,117,-52,117,117,-64,117,117,117,117,117,117,117,-49,117,-53,117,117,]),'BACKSLASH':([26,33,34,35,36,37,38,39,40,41,50,84,109,115,116,119,154,156,157,158,159,160,161,162,164,211,213,216,219,263,],[-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,118,118,118,118,-52,118,118,-64,118,118,118,118,118,118,118,-49,118,-53,118,118,]),'PIPE':([46,47,48,87,88,89,90,92,137,138,139,140,141,142,187,188,227,228,],[-79,-157,-79,136,-135,-134,-158,-160,-79,-161,-162,-163,-123,-124,-79,-159,-164,-165,]),'KEYWORD_FORALL':([49,89,143,144,151,152,185,194,196,197,256,276,],[97,-134,97,97,-79,-79,97,97,-135,97,97,97,]),'ANNOTATION':([61,71,72,73,74,75,],[122,-71,-72,-73,-74,-75,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'definitions':([0,],[2,]),'definition':([0,18,244,],[3,44,264,]),'local_definition':([0,18,171,244,],[4,4,218,4,]),'datatype_definition':([0,18,244,],[5,5,5,]),'nametype_decl':([0,18,171,244,],[6,6,6,6,]),'valuedef':([0,18,171,244,],[7,7,7,7,]),'_datatype_lhs':([0,18,244,],[8,8,8,]),'_identifier':([0,18,50,69,84,109,115,119,122,153,154,157,158,159,160,161,162,164,171,202,203,213,219,234,244,260,263,],[9,9,98,123,98,98,98,98,98,199,98,98,98,98,98,98,98,98,9,238,238,98,98,199,9,238,98,]),'equation':([0,18,171,202,203,244,260,],[11,11,11,237,237,11,271,]),'_enclosed_operator':([0,18,50,84,106,109,115,119,154,157,158,159,160,161,162,164,165,171,202,203,209,213,219,244,260,263,],[16,16,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,16,16,16,116,116,116,16,16,116,]),'_definition_set':([3,44,],[17,85,]),'empty':([3,9,16,44,46,48,49,51,83,115,119,129,137,143,144,151,152,167,173,175,185,186,187,191,194,197,218,223,230,231,232,233,237,238,241,256,264,265,271,276,],[19,24,24,19,88,92,96,24,134,170,170,184,92,96,96,196,196,214,24,214,96,134,88,196,96,96,245,184,253,196,196,196,261,24,214,96,245,253,261,96,]),'_patterns':([9,16,51,173,238,],[22,43,120,220,22,]),'_st_operator':([10,115,164,239,],[25,169,169,169,]),'infixl_operator_2':([10,102,115,164,239,],[27,158,27,27,27,]),'infixr_operator_2':([10,102,115,164,239,],[28,157,28,28,28,]),'infixl_operator_6':([10,103,115,164,205,239,],[29,159,29,29,159,29,]),'infixl_operator_7':([10,104,115,164,206,239,],[30,160,30,30,160,30,]),'infixr_operator_9':([10,106,115,164,165,209,239,],[31,161,31,31,161,161,31,]),'_data_rhs':([20,],[45,]),'data_cons':([20,136,],[46,187,]),'_data_cons':([20,136,],[47,47,]),'pattern':([23,69,118,121,180,183,],[51,129,173,176,173,223,]),'literal':([23,50,69,84,109,115,118,119,121,154,157,158,159,160,161,162,164,180,183,213,219,263,],[52,107,52,107,107,107,52,107,52,107,107,107,107,107,107,107,107,52,52,107,107,107,]),'cons_pattern':([23,69,118,121,180,183,],[53,53,53,53,53,53,]),'list_cons_pattern':([23,69,118,121,180,183,],[54,54,54,54,54,54,]),'tuple_cons_pattern':([23,69,118,121,180,183,],[55,55,55,55,55,55,]),'empty_list_pattern':([23,69,118,121,180,183,],[56,56,56,56,56,56,]),'empty_tuple_pattern':([23,69,118,121,180,183,],[57,57,57,57,57,57,]),'number':([23,50,69,84,109,115,118,119,121,154,157,158,159,160,161,162,164,180,183,213,219,263,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'concrete_number':([23,50,69,84,109,115,118,119,121,154,157,158,159,160,161,162,164,180,183,213,219,263,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'string':([23,50,69,84,109,115,118,119,121,122,154,157,158,159,160,161,162,164,180,183,213,219,263,],[63,63,63,63,63,63,63,63,63,177,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'char':([23,50,69,84,109,115,118,119,121,122,154,157,158,159,160,161,162,164,180,183,213,219,263,],[64,64,64,64,64,64,64,64,64,178,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'date':([23,50,69,84,109,115,118,119,121,154,157,158,159,160,161,162,164,180,183,213,219,263,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'datetime':([23,50,69,84,109,115,118,119,121,154,157,158,159,160,161,162,164,180,183,213,219,263,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'date_interval':([23,50,69,84,109,115,118,119,121,154,157,158,159,160,161,162,164,180,183,213,219,263,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'datetime_interval':([23,50,69,84,109,115,118,119,121,154,157,158,159,160,161,162,164,180,183,213,219,263,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'_data_conses':([46,187,],[86,226,]),'_maybe_padding':([46,151,152,187,191,231,232,233,],[87,194,197,87,229,254,255,257,]),'_cons_args':([48,137,],[90,188,]),'st_type_expr':([49,185,],[93,224,]),'type_expr':([49,143,144,185,194,197,256,276,],[94,189,190,94,232,233,268,268,]),'type_scheme':([49,143,144,185,194,197,256,276,],[95,95,95,95,95,95,95,95,]),'expr':([50,84,109,115,119,154,157,158,159,160,161,162,164,213,219,263,],[99,135,166,167,175,200,166,166,166,166,166,166,210,241,246,273,]),'expr_term0':([50,84,109,115,119,154,157,158,159,160,161,162,164,213,219,263,],[100,100,100,100,100,201,100,100,100,100,100,100,100,100,100,100,]),'expr_term1':([50,84,109,115,119,154,157,158,159,160,161,162,164,213,219,263,],[101,101,101,101,101,101,204,101,101,101,101,101,101,101,101,101,]),'expr_term2':([50,84,109,115,119,154,157,158,159,160,161,162,164,213,219,263,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'expr_term6':([50,84,109,115,119,154,157,158,159,160,161,162,164,213,219,263,],[103,103,103,103,103,103,103,205,103,103,103,103,103,103,103,103,]),'expr_term7':([50,84,109,115,119,154,157,158,159,160,161,162,164,213,219,263,],[104,104,104,104,104,104,104,104,206,104,104,104,104,104,104,104,]),'expr_term9':([50,84,109,115,119,154,157,158,159,160,161,162,164,213,219,263,],[105,105,105,105,105,105,105,105,105,207,208,105,105,105,105,105,]),'expr_factor':([50,84,109,115,119,154,157,158,159,160,161,162,164,213,219,263,],[106,106,165,106,106,106,106,106,106,106,106,209,106,106,106,106,]),'identifier':([50,84,109,115,119,122,154,157,158,159,160,161,162,164,213,219,263,],[108,108,108,108,108,179,108,108,108,108,108,108,108,108,108,108,108,]),'enclosed_expr':([50,84,106,109,115,119,154,157,158,159,160,161,162,164,165,209,213,219,263,],[109,109,163,109,109,109,109,109,109,109,109,109,109,109,163,163,109,109,109,]),'letexpr':([50,84,109,115,119,154,157,158,159,160,161,162,164,213,219,263,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'where_expr':([50,84,109,115,119,154,157,158,159,160,161,162,164,213,219,263,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'lambda_expr':([50,84,109,115,119,154,157,158,159,160,161,162,164,213,219,263,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'simple_list_expr':([50,84,109,115,119,154,157,158,159,160,161,162,164,213,219,263,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'simple_tuple_expr':([50,84,109,115,119,154,157,158,159,160,161,162,164,213,219,263,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'patterns_comma_sep':([69,],[125,]),'_cons_params':([83,186,],[133,225,]),'cons_arg':([91,],[137,]),'type_variable':([91,95,193,229,251,],[138,149,149,149,149,]),'type_cons':([91,95,193,229,251,],[139,150,150,150,150,]),'_cons_arg_factor':([91,],[140,]),'type_function_expr':([95,229,],[145,250,]),'type_term':([95,229,],[146,249,]),'type_app_expression':([95,229,],[147,147,]),'type_factor':([95,193,229,251,],[148,230,148,265,]),'infixl_operator_0':([99,135,166,167,175,200,210,241,246,273,],[154,154,154,154,154,154,154,154,154,154,]),'_list_items':([115,119,],[168,174,]),'patterns':([118,180,],[172,222,]),'_patterns_comma':([129,223,],[182,248,]),'_app_args_non_empty':([148,],[192,]),'_type_scheme_generics':([153,234,],[198,258,]),'_list_items_cont':([167,175,241,],[212,212,262,]),'local_definitions':([171,],[217,]),'_type_expr_list':([194,],[231,]),'equations':([202,203,],[236,240,]),'_local_definition_set':([218,264,],[243,274,]),'_app_args':([230,265,],[252,275,]),'_equation_set':([237,271,],[259,277,]),'_type_expr_list_trail':([256,276,],[269,278,]),'st_expr':([263,],[272,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','__init__.py',437),
  ('expr_term9 -> expr_factor infixr_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','__init__.py',444),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','__init__.py',445),
  ('expr_term7 -> expr_term7 infixl_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','__init__.py',447),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','__init__.py',448),
  ('expr_term6 -> expr_term6 infixl_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','__init__.py',450),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','__init__.py',451),
  ('expr_term2 -> expr_term2 infixl_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','__init__.py',453),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','__init__.py',454),
  ('expr_term1 -> expr_term2 infixr_operator_2 expr_term1','expr_term1',3,'p_expressions_precedence_rules','__init__.py',456),
  ('expr_term1 -> expr_term2','expr_term1',1,'p_expressions_precedence_rules','__init__.py',457),
  ('expr_term0 -> expr infixl_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','__init__.py',459),
  ('expr_term0 -> expr_term1','expr_term0',1,'p_expressions_precedence_rules','__init__.py',460),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','__init__.py',473),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','__init__.py',475),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','__init__.py',477),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','__init__.py',478),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','__init__.py',479),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','__init__.py',480),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','__init__.py',481),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','__init__.py',482),
  ('expr_factor -> simple_list_expr','expr_factor',1,'p_standalone_definitions','__init__.py',483),
  ('expr_factor -> simple_tuple_expr','expr_factor',1,'p_standalone_definitions','__init__.py',484),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','__init__.py',486),
  ('literal -> number','literal',1,'p_literals','__init__.py',494),
  ('literal -> concrete_number','literal',1,'p_literals','__init__.py',495),
  ('literal -> string','literal',1,'p_literals','__init__.py',496),
  ('literal -> char','literal',1,'p_literals','__init__.py',497),
  ('literal -> date','literal',1,'p_literals','__init__.py',498),
  ('literal -> datetime','literal',1,'p_literals','__init__.py',499),
  ('literal -> date_interval','literal',1,'p_literals','__init__.py',500),
  ('literal -> datetime_interval','literal',1,'p_literals','__init__.py',501),
  ('simple_tuple_expr -> LPAREN _list_items RPAREN','simple_tuple_expr',3,'p_tuple_expr','__init__.py',507),
  ('simple_list_expr -> LBRACKET _list_items RBRACKET','simple_list_expr',3,'p_list_expr','__init__.py',514),
  ('_list_items -> expr _list_items_cont','_list_items',2,'p_list_items','__init__.py',521),
  ('_list_items_cont -> COMMA expr _list_items_cont','_list_items_cont',3,'p_list_items','__init__.py',522),
  ('_list_items -> empty','_list_items',1,'p_list_items_empty','__init__.py',528),
  ('_list_items_cont -> empty','_list_items_cont',1,'p_list_items_empty','__init__.py',529),
  ('date -> DATE','date',1,'p_date','__init__.py',535),
  ('datetime -> DATETIME','datetime',1,'p_datetime','__init__.py',541),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','__init__.py',547),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','__init__.py',553),
  ('char -> CHAR','char',1,'p_char','__init__.py',559),
  ('string -> STRING','string',1,'p_string','__init__.py',564),
  ('identifier -> _identifier','identifier',1,'p_variable','__init__.py',569),
  ('_identifier -> UNDER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',576),
  ('_identifier -> UPPER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',577),
  ('_identifier -> LOWER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',578),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','__init__.py',585),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','__init__.py',590),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','__init__.py',591),
  ('enclosed_expr -> _enclosed_operator','enclosed_expr',1,'p_operators_as_expressios','__init__.py',597),
  ('_enclosed_operator -> LPAREN _st_operator RPAREN','_enclosed_operator',3,'p_enclosed_operator','__init__.py',603),
  ('infixr_operator_9 -> DOT_OPERATOR','infixr_operator_9',1,'p_operator','__init__.py',613),
  ('infixl_operator_7 -> STAR','infixl_operator_7',1,'p_operator','__init__.py',615),
  ('infixl_operator_7 -> SLASH','infixl_operator_7',1,'p_operator','__init__.py',616),
  ('infixl_operator_7 -> DOUBLESLASH','infixl_operator_7',1,'p_operator','__init__.py',617),
  ('infixl_operator_7 -> PERCENT','infixl_operator_7',1,'p_operator','__init__.py',618),
  ('infixl_operator_6 -> PLUS','infixl_operator_6',1,'p_operator','__init__.py',620),
  ('infixl_operator_6 -> MINUS','infixl_operator_6',1,'p_operator','__init__.py',621),
  ('infixr_operator_2 -> COLON','infixr_operator_2',1,'p_operator','__init__.py',623),
  ('infixl_operator_2 -> OPERATOR','infixl_operator_2',1,'p_operator','__init__.py',625),
  ('infixl_operator_2 -> ARROW','infixl_operator_2',1,'p_operator','__init__.py',626),
  ('infixl_operator_0 -> TICK_OPERATOR','infixl_operator_0',1,'p_operator','__init__.py',628),
  ('_st_operator -> infixl_operator_2','_st_operator',1,'p_operator','__init__.py',630),
  ('_st_operator -> infixr_operator_2','_st_operator',1,'p_operator','__init__.py',631),
  ('_st_operator -> infixl_operator_6','_st_operator',1,'p_operator','__init__.py',632),
  ('_st_operator -> infixl_operator_7','_st_operator',1,'p_operator','__init__.py',633),
  ('_st_operator -> infixr_operator_9','_st_operator',1,'p_operator','__init__.py',634),
  ('_st_operator -> COMMA','_st_operator',1,'p_operator','__init__.py',635),
  ('number -> BASE10_INTEGER','number',1,'p_integer','__init__.py',642),
  ('number -> BASE16_INTEGER','number',1,'p_integer','__init__.py',643),
  ('number -> BASE8_INTEGER','number',1,'p_integer','__init__.py',644),
  ('number -> BASE2_INTEGER','number',1,'p_integer','__init__.py',645),
  ('number -> FLOAT','number',1,'p_float','__init__.py',674),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','__init__.py',679),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','__init__.py',680),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','__init__.py',681),
  ('empty -> <empty>','empty',0,'p_empty','__init__.py',690),
  ('lambda_expr -> BACKSLASH patterns ARROW expr','lambda_expr',4,'p_lambda_definition','__init__.py',695),
  ('pattern -> literal','pattern',1,'p_pattern','__init__.py',704),
  ('pattern -> cons_pattern','pattern',1,'p_pattern','__init__.py',705),
  ('pattern -> list_cons_pattern','pattern',1,'p_pattern','__init__.py',706),
  ('pattern -> tuple_cons_pattern','pattern',1,'p_pattern','__init__.py',707),
  ('pattern -> empty_list_pattern','pattern',1,'p_pattern','__init__.py',708),
  ('pattern -> empty_tuple_pattern','pattern',1,'p_pattern','__init__.py',709),
  ('pattern -> LOWER_IDENTIFIER','pattern',1,'p_var_pattern','__init__.py',715),
  ('pattern -> UNDER_IDENTIFIER','pattern',1,'p_var_pattern','__init__.py',716),
  ('pattern -> UPPER_IDENTIFIER','pattern',1,'p_simplecons_pattern','__init__.py',722),
  ('list_cons_pattern -> pattern COLON pattern','list_cons_pattern',3,'p_list_cons_for_param','__init__.py',728),
  ('cons_pattern -> LPAREN _identifier SPACE patterns RPAREN','cons_pattern',5,'p_param_pattern','__init__.py',734),
  ('empty_list_pattern -> LBRACKET RBRACKET','empty_list_pattern',2,'p_empty_list_as_pattern','__init__.py',739),
  ('empty_tuple_pattern -> LPAREN RPAREN','empty_tuple_pattern',2,'p_unit_value_as_pattern','__init__.py',746),
  ('tuple_cons_pattern -> LPAREN patterns_comma_sep RPAREN','tuple_cons_pattern',3,'p_tuple_cons_pattern','__init__.py',752),
  ('patterns -> pattern _patterns','patterns',2,'p_patterns','__init__.py',760),
  ('patterns_comma_sep -> pattern _patterns_comma','patterns_comma_sep',2,'p_patterns','__init__.py',761),
  ('_patterns -> SPACE pattern _patterns','_patterns',3,'p_patterns','__init__.py',762),
  ('_patterns_comma -> COMMA pattern _patterns_comma','_patterns_comma',3,'p_patterns','__init__.py',763),
  ('_patterns -> empty','_patterns',1,'p_patterns_empty','__init__.py',769),
  ('_patterns_comma -> empty','_patterns_comma',1,'p_patterns_empty','__init__.py',770),
  ('equation -> _identifier _patterns EQ expr','equation',4,'p_equation','__init__.py',776),
  ('equation -> _enclosed_operator _patterns EQ expr','equation',4,'p_equation','__init__.py',777),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','__init__.py',787),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','__init__.py',796),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','__init__.py',805),
  ('letexpr -> KEYWORD_LET SPACE local_definitions KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','__init__.py',815),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','__init__.py',823),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','__init__.py',824),
  ('type_expr -> type_scheme type_function_expr','type_expr',2,'p_type_expr','__init__.py',834),
  ('type_expr -> type_scheme type_term','type_expr',2,'p_type_expr','__init__.py',835),
  ('type_scheme -> empty','type_scheme',1,'p_type_scheme_empty','__init__.py',844),
  ('type_scheme -> KEYWORD_FORALL SPACE _type_scheme_generics','type_scheme',3,'p_type_scheme','__init__.py',848),
  ('_type_scheme_generics -> _identifier SPACE _type_scheme_generics','_type_scheme_generics',3,'p_type_scheme_generics','__init__.py',855),
  ('_type_scheme_generics -> _identifier DOT_OPERATOR','_type_scheme_generics',2,'p_last_type_scheme_generic','__init__.py',860),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','__init__.py',865),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','__init__.py',866),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','__init__.py',876),
  ('type_term -> type_factor','type_term',1,'p_type_term','__init__.py',877),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','__init__.py',882),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','__init__.py',894),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','__init__.py',895),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','__init__.py',901),
  ('type_variable -> LOWER_IDENTIFIER','type_variable',1,'p_type_variable','__init__.py',906),
  ('type_cons -> UPPER_IDENTIFIER','type_cons',1,'p_type_cons','__init__.py',911),
  ('type_factor -> type_variable','type_factor',1,'p_type_factor_identifier','__init__.py',916),
  ('type_factor -> type_cons','type_factor',1,'p_type_factor_identifier','__init__.py',917),
  ('type_factor -> LPAREN _maybe_padding _type_expr_list _maybe_padding RPAREN','type_factor',5,'p_type_factor_tuple','__init__.py',924),
  ('type_factor -> LPAREN RPAREN','type_factor',2,'p_type_factor_unit_type','__init__.py',930),
  ('_type_expr_list -> type_expr COMMA _type_expr_list_trail','_type_expr_list',3,'p_type_expr_list','__init__.py',935),
  ('_type_expr_list_trail -> type_expr COMMA _type_expr_list_trail','_type_expr_list_trail',3,'p_type_expr_list','__init__.py',936),
  ('_type_expr_list_trail -> type_expr','_type_expr_list_trail',1,'p_type_expr_list_last_item','__init__.py',942),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','__init__.py',948),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','__init__.py',953),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','__init__.py',958),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','__init__.py',959),
  ('program -> definitions','program',1,'p_program','__init__.py',965),
  ('definitions -> definition _definition_set','definitions',2,'p_definitions','__init__.py',971),
  ('_definition_set -> NEWLINE definition _definition_set','_definition_set',3,'p_definition_set','__init__.py',977),
  ('_definition_set -> empty','_definition_set',1,'p_definition_set2','__init__.py',983),
  ('definition -> local_definition','definition',1,'p_definition','__init__.py',989),
  ('definition -> datatype_definition','definition',1,'p_definition','__init__.py',990),
  ('local_definition -> nametype_decl','local_definition',1,'p_local_definition','__init__.py',997),
  ('local_definition -> valuedef','local_definition',1,'p_local_definition','__init__.py',998),
  ('local_definitions -> local_definition _local_definition_set','local_definitions',2,'p_local_definitions','__init__.py',1004),
  ('_local_definition_set -> PADDING definition _local_definition_set','_local_definition_set',3,'p_local_definition_set','__init__.py',1010),
  ('_local_definition_set -> empty','_local_definition_set',1,'p_local_definition_set_empty','__init__.py',1016),
  ('valuedef -> equation','valuedef',1,'p_valuedef','__init__.py',1022),
  ('nametype_decl -> _identifier COLON COLON st_type_expr','nametype_decl',4,'p_nametype_decl','__init__.py',1028),
  ('nametype_decl -> LPAREN _st_operator RPAREN COLON COLON st_type_expr','nametype_decl',6,'p_nametype_decl_operators','__init__.py',1037),
  ('datatype_definition -> _datatype_lhs EQ _data_rhs','datatype_definition',3,'p_datatype_definition','__init__.py',1046),
  ('_datatype_lhs -> KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params','_datatype_lhs',4,'p_datatype_lhs','__init__.py',1054),
  ('_cons_params -> SPACE LOWER_IDENTIFIER _cons_params','_cons_params',3,'p_datatype_cons_params','__init__.py',1063),
  ('_cons_params -> empty','_cons_params',1,'p_datatype_cons_params_empty','__init__.py',1069),
  ('_data_rhs -> data_cons _data_conses','_data_rhs',2,'p_datatype_body','__init__.py',1075),
  ('_data_conses -> _maybe_padding PIPE data_cons _data_conses','_data_conses',4,'p_datatype_body','__init__.py',1076),
  ('_data_conses -> empty','_data_conses',1,'p_datatype_conses_empty','__init__.py',1082),
  ('data_cons -> _data_cons','data_cons',1,'p_data_cons','__init__.py',1087),
  ('_data_cons -> UPPER_IDENTIFIER _cons_args','_data_cons',2,'p_bare_data_cons','__init__.py',1093),
  ('_cons_args -> SPACE cons_arg _cons_args','_cons_args',3,'p_data_cons_args','__init__.py',1098),
  ('_cons_args -> empty','_cons_args',1,'p_data_cons_args_empty','__init__.py',1104),
  ('cons_arg -> type_variable','cons_arg',1,'p_cons_arg','__init__.py',1110),
  ('cons_arg -> type_cons','cons_arg',1,'p_cons_arg','__init__.py',1111),
  ('cons_arg -> _cons_arg_factor','cons_arg',1,'p_cons_arg','__init__.py',1112),
  ('_cons_arg_factor -> LPAREN type_expr RPAREN','_cons_arg_factor',3,'p_cons_arg_factor','__init__.py',1118),
  ('_cons_arg_factor -> LBRACKET type_expr RBRACKET','_cons_arg_factor',3,'p_cons_arg_factor_list','__init__.py',1124),
]
