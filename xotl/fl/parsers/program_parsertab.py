
# program_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON COMMA DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FLOAT KEYWORD_CLASS KEYWORD_DATA KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LOWER_IDENTIFIER LPAREN MINUS NEWLINE OPERATOR PADDING PERCENT PIPE PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATOR UNDER_IDENTIFIER UPPER_IDENTIFIERexpr_factor : expr_factor SPACE expr_factor\n    expr_term9 : expr_factor infixr_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infixl_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infixl_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infixl_operator_2 expr_term6\n               | expr_term6\n\n    expr_term1 : expr_term2 infixr_operator_2 expr_term1\n               | expr_term2\n\n    expr_term0 : expr infixl_operator_0 expr_term0\n               | expr_term1\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | letexpr\n                | where_expr\n                | lambda_expr\n                | simple_list_expr\n                | simple_tuple_expr\n\n    st_type_expr : type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    simple_tuple_expr : LPAREN _list_items RPAREN\n    simple_list_expr : LBRACKET _list_items RBRACKET\n    _list_items : expr _list_items_cont\n       _list_items_cont : COMMA expr _list_items_cont\n    _list_items : empty\n       _list_items_cont : empty\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    char : CHARstring : STRINGidentifier : _identifier\n\n    _identifier : UNDER_IDENTIFIER\n                   | UPPER_IDENTIFIER\n                   | LOWER_IDENTIFIER\n\n    enclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : _enclosed_operator\n    _enclosed_operator : LPAREN _st_operator RPAREN\n    infixr_operator_9 : DOT_OPERATOR\n\n    infixl_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infixl_operator_6 : PLUS\n                     | MINUS\n\n    infixr_operator_2 : COLON\n\n    infixl_operator_2 : OPERATOR\n                      | ARROW\n\n    infixl_operator_0 : TICK_OPERATOR\n\n    _st_operator : infixl_operator_2\n                 | infixr_operator_2\n                 | infixl_operator_6\n                 | infixl_operator_7\n                 | infixr_operator_9\n                 | COMMA\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH patterns ARROW expr\n    \n    pattern : identifier\n    pattern : literal\n    pattern : cons_pattern\n    pattern : list_cons_pattern\n    pattern : tuple_cons_pattern\n    pattern : empty_list_pattern\n    pattern : empty_tuple_pattern\n    list_cons_pattern : pattern COLON pattern\n    cons_pattern : LPAREN _identifier SPACE patterns RPARENempty_list_pattern : LBRACKET RBRACKETempty_tuple_pattern : LPAREN RPARENtuple_cons_pattern : error\n    patterns : pattern _patterns\n       _patterns : SPACE pattern _patterns\n    _patterns : empty\n    equation : _identifier _patterns EQ expr\n       equation : _enclosed_operator _patterns EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    type_expr : type_function_expr\n                 | type_termtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_variable : LOWER_IDENTIFIERtype_cons : UPPER_IDENTIFIERtype_factor : type_variable\n                   | type_cons\n\n    type_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET_maybe_padding : PADDING\n                      | empty\n    program : definitions\n    definitions : definition _definition_set\n    _definition_set : NEWLINE definition _definition_set\n    _definition_set : empty\n    definition : nametype_decl\n                  | valuedef\n                  | datatype_definition\n    valuedef : equation\n    nametype_decl : _identifier COLON COLON st_type_expr\n    nametype_decl : LPAREN _st_operator RPAREN COLON COLON st_type_expr\n    datatype_definition : _datatype_lhs EQ _data_rhs\n    _datatype_lhs : KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params\n    _cons_params : SPACE LOWER_IDENTIFIER _cons_params\n    _cons_params : empty\n    _data_rhs : data_cons _data_conses\n       _data_conses : _maybe_padding PIPE data_cons _data_conses\n    _data_conses : emptydata_cons : _data_cons_data_cons : UPPER_IDENTIFIER _cons_args_cons_args : SPACE cons_arg _cons_args\n    _cons_args : empty\n    cons_arg : type_variable\n       cons_arg : type_cons\n       cons_arg : _cons_arg_factor\n    _cons_arg_factor : LPAREN type_expr RPAREN\n    _cons_arg_factor : LBRACKET type_expr RBRACKET\n    '
    
_lr_action_items = {'LPAREN':([0,11,12,13,17,21,24,31,32,33,34,35,36,37,38,39,44,45,54,55,56,57,58,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,82,93,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,119,128,130,132,136,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,159,165,166,167,168,169,175,176,178,183,184,185,186,187,188,189,190,191,193,195,197,198,200,203,205,215,220,221,224,225,226,227,236,237,239,240,241,],[8,-46,-47,-48,8,63,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,93,113,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,113,-79,-79,-96,-15,-13,-11,-9,-7,-5,152,-16,-17,113,-19,-20,-21,-22,-23,113,-52,63,113,63,-120,175,-97,-79,93,93,-121,93,113,-64,113,113,113,113,113,113,-51,113,152,202,-76,-77,-78,63,93,93,93,93,-12,202,202,-10,-8,-6,-4,-2,-1,-49,113,-33,-53,-79,113,-34,93,-102,-103,-98,202,-100,-80,113,-79,-101,-14,-99,]),'UNDER_IDENTIFIER':([0,17,21,24,31,32,33,34,35,36,37,38,39,45,63,82,107,113,114,116,117,119,120,142,144,145,146,147,148,149,150,152,159,168,184,185,193,195,198,203,225,236,],[11,11,11,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,11,11,11,11,11,-52,11,11,11,11,11,-64,11,11,11,11,11,11,11,11,11,11,11,-49,11,-53,11,11,11,]),'UPPER_IDENTIFIER':([0,17,21,24,31,32,33,34,35,36,37,38,39,40,42,44,45,63,82,93,94,107,113,114,116,117,119,120,128,130,136,138,139,140,141,142,144,145,146,147,148,149,150,152,159,168,169,170,175,176,178,184,185,193,195,198,203,215,225,236,],[12,12,12,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,81,83,96,12,12,12,-79,-79,12,12,-52,12,12,12,12,-120,96,-79,96,96,-121,96,12,-64,12,12,12,12,12,12,12,12,12,96,81,96,96,96,12,12,-49,12,-53,12,96,12,12,]),'LOWER_IDENTIFIER':([0,17,21,24,31,32,33,34,35,36,37,38,39,44,45,63,82,93,94,107,113,114,116,117,119,120,128,130,133,136,138,139,140,141,142,144,145,146,147,148,149,150,152,159,168,169,175,176,178,184,185,193,195,198,203,215,225,236,],[13,13,13,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,95,13,13,13,-79,-79,13,13,-52,13,13,13,13,-120,95,177,-79,95,95,-121,95,13,-64,13,13,13,13,13,13,13,13,13,95,95,95,95,13,13,-49,13,-53,13,95,13,13,]),'KEYWORD_DATA':([0,17,],[15,15,]),'$end':([1,2,3,4,5,6,9,11,12,13,16,18,43,54,55,56,57,58,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,84,85,86,87,88,89,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,125,127,129,131,132,137,151,153,165,166,167,171,172,173,174,179,183,186,187,188,189,190,191,193,197,198,200,205,207,208,209,213,214,216,217,220,221,224,226,227,229,230,231,232,233,234,237,238,239,240,241,],[0,-122,-79,-126,-127,-128,-129,-46,-47,-48,-123,-125,-79,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-132,-79,-139,-79,-124,-130,-24,-104,-105,-108,-109,-116,-117,-114,-115,-96,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,-136,-138,-140,-142,-97,-110,-51,-50,-76,-77,-78,-79,-143,-144,-145,-79,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-79,-34,-131,-79,-141,-107,-106,-112,-113,-102,-103,-98,-100,-80,-137,-146,-147,-79,-118,-119,-79,-111,-101,-14,-99,]),'NEWLINE':([3,4,5,6,9,11,12,13,43,54,55,56,57,58,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,85,86,87,88,89,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,125,127,129,131,132,137,151,153,165,166,167,171,172,173,174,179,183,186,187,188,189,190,191,193,197,198,200,205,207,208,209,213,214,216,217,220,221,224,226,227,229,230,231,232,233,234,237,238,239,240,241,],[17,-126,-127,-128,-129,-46,-47,-48,17,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-132,-79,-139,-79,-130,-24,-104,-105,-108,-109,-116,-117,-114,-115,-96,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,-136,-138,-140,-142,-97,-110,-51,-50,-76,-77,-78,-79,-143,-144,-145,-79,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-79,-34,-131,-79,-141,-107,-106,-112,-113,-102,-103,-98,-100,-80,-137,-146,-147,-79,-118,-119,-79,-111,-101,-14,-99,]),'COLON':([7,8,11,12,13,19,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,66,67,68,69,70,71,72,73,74,75,76,77,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,122,123,124,132,151,152,153,161,164,165,166,167,183,186,187,188,189,190,191,193,197,198,200,202,205,220,221,224,226,227,228,237,239,240,241,],[19,24,-46,-47,-48,44,119,-81,-82,-83,-84,-85,-86,-87,-45,-25,-26,-27,-28,-29,-30,-31,-32,-92,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,124,-96,-15,-13,24,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,24,-52,-91,-90,169,-97,-51,24,-3,119,119,-76,-77,-78,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-79,24,-34,-102,-103,-98,-100,-80,-89,-79,-101,-14,-99,]),'SPACE':([7,11,12,13,14,15,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,66,67,68,69,70,71,72,73,74,75,76,77,81,83,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,121,122,123,132,143,151,153,161,164,165,166,167,171,172,173,174,177,179,183,186,187,188,189,190,191,193,197,198,200,201,205,220,221,223,224,226,227,228,230,231,232,233,234,237,239,240,241,],[21,-46,-47,-48,21,42,21,-81,-82,-83,-84,-85,-86,-87,-45,-25,-26,-27,-28,-29,-30,-31,-32,-92,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-53,130,133,138,-116,-117,-114,-115,-96,-15,-13,-11,-9,-7,-5,150,-16,-17,-18,-19,-20,-21,-22,-23,-52,159,168,-91,-90,-97,184,-51,150,21,-88,-76,-77,-78,130,-143,-144,-145,133,215,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-79,21,-34,-102,-103,236,-98,-100,-80,-89,-146,-147,215,-118,-119,-79,-101,-14,-99,]),'EQ':([7,10,11,12,13,14,20,22,41,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,66,67,68,69,70,71,72,73,74,75,76,77,83,118,122,123,134,135,164,165,166,167,177,198,201,212,228,],[-79,40,-46,-47,-48,-79,45,-95,82,-79,-81,-82,-83,-84,-85,-86,-87,-45,-25,-26,-27,-28,-29,-30,-31,-32,-92,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-53,-79,-94,-91,-90,-133,-135,-88,-76,-77,-78,-79,-53,-79,-134,-89,]),'COMMA':([8,11,12,13,54,55,56,57,58,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,132,151,152,153,155,163,165,166,167,183,186,187,188,189,190,191,193,197,198,200,202,205,220,221,222,224,226,227,237,239,240,241,],[30,-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-96,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,30,-52,-97,-51,30,-50,195,195,-76,-77,-78,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-79,30,-34,-102,-103,195,-98,-100,-80,-79,-101,-14,-99,]),'OPERATOR':([8,11,12,13,54,55,56,57,58,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,132,151,152,153,165,166,167,183,186,187,188,189,190,191,193,197,198,200,202,205,220,221,224,226,227,237,239,240,241,],[31,-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-96,-15,-13,31,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,31,-52,-97,-51,31,-3,-76,-77,-78,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-79,31,-34,-102,-103,-98,-100,-80,-79,-101,-14,-99,]),'ARROW':([8,11,12,13,22,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,66,67,68,69,70,71,72,73,74,75,76,88,89,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,122,123,132,137,151,152,153,160,161,164,165,166,167,179,183,186,187,188,189,190,191,193,197,198,200,202,204,205,213,216,217,220,221,224,226,227,228,232,233,234,237,238,239,240,241,],[32,-46,-47,-48,-95,-79,-81,-82,-83,-84,-85,-86,-87,-45,-25,-26,-27,-28,-29,-30,-31,-32,-92,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,136,-108,-109,-116,-117,-114,-115,-96,-15,-13,32,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,32,-52,-94,-91,-90,-97,-110,-51,32,-3,203,-79,-88,-76,-77,-78,-79,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-79,32,-93,-34,136,-112,-113,-102,-103,-98,-100,-80,-89,-79,-118,-119,-79,-111,-101,-14,-99,]),'PLUS':([8,11,12,13,54,55,56,57,58,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,132,151,152,153,165,166,167,183,186,187,188,189,190,191,193,197,198,200,202,205,220,221,224,226,227,237,239,240,241,],[33,-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-96,-15,-13,-11,33,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,33,-52,-97,-51,33,-3,-76,-77,-78,-12,-10,33,-6,-4,-2,-1,-49,-33,-53,-79,33,-34,-102,-103,-98,-100,-80,-79,-101,-14,-99,]),'MINUS':([8,11,12,13,54,55,56,57,58,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,132,151,152,153,165,166,167,183,186,187,188,189,190,191,193,197,198,200,202,205,220,221,224,226,227,237,239,240,241,],[34,-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-96,-15,-13,-11,34,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,34,-52,-97,-51,34,-3,-76,-77,-78,-12,-10,34,-6,-4,-2,-1,-49,-33,-53,-79,34,-34,-102,-103,-98,-100,-80,-79,-101,-14,-99,]),'STAR':([8,11,12,13,54,55,56,57,58,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,132,151,152,153,165,166,167,183,186,187,188,189,190,191,193,197,198,200,202,205,220,221,224,226,227,237,239,240,241,],[35,-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-96,-15,-13,-11,-9,35,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,35,-52,-97,-51,35,-3,-76,-77,-78,-12,-10,-8,35,-4,-2,-1,-49,-33,-53,-79,35,-34,-102,-103,-98,-100,-80,-79,-101,-14,-99,]),'SLASH':([8,11,12,13,54,55,56,57,58,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,132,151,152,153,165,166,167,183,186,187,188,189,190,191,193,197,198,200,202,205,220,221,224,226,227,237,239,240,241,],[36,-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-96,-15,-13,-11,-9,36,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,36,-52,-97,-51,36,-3,-76,-77,-78,-12,-10,-8,36,-4,-2,-1,-49,-33,-53,-79,36,-34,-102,-103,-98,-100,-80,-79,-101,-14,-99,]),'DOUBLESLASH':([8,11,12,13,54,55,56,57,58,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,132,151,152,153,165,166,167,183,186,187,188,189,190,191,193,197,198,200,202,205,220,221,224,226,227,237,239,240,241,],[37,-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-96,-15,-13,-11,-9,37,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,37,-52,-97,-51,37,-3,-76,-77,-78,-12,-10,-8,37,-4,-2,-1,-49,-33,-53,-79,37,-34,-102,-103,-98,-100,-80,-79,-101,-14,-99,]),'PERCENT':([8,11,12,13,54,55,56,57,58,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,132,151,152,153,165,166,167,183,186,187,188,189,190,191,193,197,198,200,202,205,220,221,224,226,227,237,239,240,241,],[38,-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-96,-15,-13,-11,-9,38,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,38,-52,-97,-51,38,-3,-76,-77,-78,-12,-10,-8,38,-4,-2,-1,-49,-33,-53,-79,38,-34,-102,-103,-98,-100,-80,-79,-101,-14,-99,]),'DOT_OPERATOR':([8,11,12,13,54,55,56,57,58,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,132,151,152,153,165,166,167,183,186,187,188,189,190,191,193,197,198,200,202,205,220,221,224,226,227,237,239,240,241,],[39,-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-96,-15,-13,-11,-9,-7,-5,39,-16,-17,-18,-19,-20,-21,-22,-23,39,-52,-97,-51,39,39,-76,-77,-78,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-79,39,-34,-102,-103,-98,-100,-80,-79,-101,-14,-99,]),'RPAREN':([11,12,13,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,87,88,89,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,122,123,128,132,137,140,151,153,155,156,157,158,161,164,165,166,167,179,180,183,186,187,188,189,190,191,192,193,194,196,197,198,200,204,205,206,210,213,214,216,217,218,220,221,222,224,226,227,228,232,233,234,235,237,238,239,240,241,],[-46,-47,-48,-95,77,-61,-65,-66,-67,-68,-69,-70,-62,-63,-59,-60,-55,-56,-57,-58,-54,-79,-81,-82,-83,-84,-85,-86,-87,-45,-25,-26,-27,-28,-29,-30,-31,-32,122,-92,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-104,-105,-108,-109,-116,-117,-114,-115,-96,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-79,-52,-94,-91,-90,-120,-97,-110,-121,-51,-50,193,197,198,-37,-79,-88,-76,-77,-78,-79,-79,-12,-10,-8,-6,-4,-2,-1,193,-49,-35,-38,-33,-53,-79,-93,-34,228,230,-107,-106,-112,-113,233,-102,-103,-79,-98,-100,-80,-89,-79,-118,-119,-36,-79,-111,-101,-14,-99,]),'KEYWORD_WHERE':([11,12,13,54,55,56,57,58,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,132,151,153,154,155,163,165,166,167,182,183,186,187,188,189,190,191,192,193,197,198,200,205,220,221,222,224,226,227,237,239,240,241,],[-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,143,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,143,-51,-3,143,143,143,-76,-77,-78,143,-12,-10,-8,-6,-4,-2,-1,143,-49,-33,-53,-79,-34,-102,-103,143,-98,-100,143,-79,-101,143,-99,]),'TICK_OPERATOR':([11,12,13,54,55,56,57,58,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,132,151,153,154,155,163,165,166,167,182,183,186,187,188,189,190,191,192,193,197,198,200,205,220,221,222,224,226,227,237,239,240,241,],[-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,144,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,144,-51,-3,144,144,144,-76,-77,-78,144,-12,-10,-8,-6,-4,-2,-1,144,-49,-33,-53,-79,-34,-102,-103,144,-98,-100,144,-79,-101,144,-99,]),'PADDING':([11,12,13,54,55,56,57,58,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,79,80,81,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,129,131,132,136,137,143,151,153,165,166,167,171,172,173,174,179,180,181,183,186,187,188,189,190,191,193,197,198,200,205,208,209,213,214,216,217,220,221,224,226,227,230,231,232,233,234,237,238,239,240,241,],[-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,128,-139,-79,-104,-105,-108,-109,-116,-117,128,128,-114,-115,-96,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,-140,-142,-97,128,-110,185,-51,-50,-76,-77,-78,-79,-143,-144,-145,-79,128,128,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,225,-34,128,-141,-107,-106,-112,-113,-102,-103,-98,-100,-80,-146,-147,-79,-118,-119,225,-111,-101,-14,-99,]),'KEYWORD_IN':([11,12,13,54,55,56,57,58,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,132,151,153,165,166,167,183,186,187,188,189,190,191,193,197,198,199,200,205,220,221,224,226,227,237,239,240,241,],[-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-96,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,-97,-51,-50,-76,-77,-78,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,223,-79,-34,-102,-103,-98,-100,-80,-79,-101,-14,-99,]),'RBRACKET':([11,12,13,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,76,87,88,89,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,117,128,132,137,140,151,153,158,162,163,165,166,167,179,181,183,186,187,188,189,190,191,193,194,196,197,198,200,205,211,213,214,216,217,219,220,221,222,224,226,227,232,233,234,235,237,238,239,240,241,],[-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,123,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-104,-105,-108,-109,-116,-117,-114,-115,-96,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,-79,-120,-97,-110,-121,-51,-50,-37,205,-79,-76,-77,-78,-79,-79,-12,-10,-8,-6,-4,-2,-1,-49,-35,-38,-33,-53,-79,-34,231,-107,-106,-112,-113,234,-102,-103,-79,-98,-100,-80,-79,-118,-119,-36,-79,-111,-101,-14,-99,]),'error':([21,116,119,168,],[64,64,64,64,]),'LBRACKET':([21,24,31,32,33,34,35,36,37,38,39,44,45,82,93,94,107,113,114,116,117,119,128,130,136,138,139,140,141,142,144,145,146,147,148,149,150,152,168,169,175,176,178,193,195,198,203,215,236,],[65,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,94,117,117,-79,-79,117,117,-52,65,117,65,-120,176,-79,94,94,-121,94,117,-64,117,117,117,117,117,117,117,65,94,94,94,94,-49,117,-53,117,94,117,]),'BASE10_INTEGER':([21,24,31,32,33,34,35,36,37,38,39,45,82,107,113,114,116,117,119,142,144,145,146,147,148,149,150,152,168,193,195,198,203,236,],[66,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,66,66,66,66,-52,66,66,66,66,-64,66,66,66,66,66,66,66,66,-49,66,-53,66,66,]),'BASE16_INTEGER':([21,24,31,32,33,34,35,36,37,38,39,45,82,107,113,114,116,117,119,142,144,145,146,147,148,149,150,152,168,193,195,198,203,236,],[67,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,67,67,67,67,-52,67,67,67,67,-64,67,67,67,67,67,67,67,67,-49,67,-53,67,67,]),'BASE8_INTEGER':([21,24,31,32,33,34,35,36,37,38,39,45,82,107,113,114,116,117,119,142,144,145,146,147,148,149,150,152,168,193,195,198,203,236,],[68,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,68,68,68,68,-52,68,68,68,68,-64,68,68,68,68,68,68,68,68,-49,68,-53,68,68,]),'BASE2_INTEGER':([21,24,31,32,33,34,35,36,37,38,39,45,82,107,113,114,116,117,119,142,144,145,146,147,148,149,150,152,168,193,195,198,203,236,],[69,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,69,69,69,69,-52,69,69,69,69,-64,69,69,69,69,69,69,69,69,-49,69,-53,69,69,]),'FLOAT':([21,24,31,32,33,34,35,36,37,38,39,45,82,107,113,114,116,117,119,142,144,145,146,147,148,149,150,152,168,193,195,198,203,236,],[70,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,70,70,70,70,-52,70,70,70,70,-64,70,70,70,70,70,70,70,70,-49,70,-53,70,70,]),'STRING':([21,24,31,32,33,34,35,36,37,38,39,45,82,107,113,114,116,117,119,120,142,144,145,146,147,148,149,150,152,168,193,195,198,203,236,],[71,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,71,71,71,71,-52,71,71,71,71,71,-64,71,71,71,71,71,71,71,71,-49,71,-53,71,71,]),'CHAR':([21,24,31,32,33,34,35,36,37,38,39,45,82,107,113,114,116,117,119,120,142,144,145,146,147,148,149,150,152,168,193,195,198,203,236,],[72,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,72,72,72,72,-52,72,72,72,72,72,-64,72,72,72,72,72,72,72,72,-49,72,-53,72,72,]),'DATE':([21,24,31,32,33,34,35,36,37,38,39,45,82,107,113,114,116,117,119,142,144,145,146,147,148,149,150,152,168,193,195,198,203,236,],[73,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,73,73,73,73,-52,73,73,73,73,-64,73,73,73,73,73,73,73,73,-49,73,-53,73,73,]),'DATETIME':([21,24,31,32,33,34,35,36,37,38,39,45,82,107,113,114,116,117,119,142,144,145,146,147,148,149,150,152,168,193,195,198,203,236,],[74,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,74,74,74,74,-52,74,74,74,74,-64,74,74,74,74,74,74,74,74,-49,74,-53,74,74,]),'DATE_INTERVAL':([21,24,31,32,33,34,35,36,37,38,39,45,82,107,113,114,116,117,119,142,144,145,146,147,148,149,150,152,168,193,195,198,203,236,],[75,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,75,75,75,75,-52,75,75,75,75,-64,75,75,75,75,75,75,75,75,-49,75,-53,75,75,]),'DATETIME_INTERVAL':([21,24,31,32,33,34,35,36,37,38,39,45,82,107,113,114,116,117,119,142,144,145,146,147,148,149,150,152,168,193,195,198,203,236,],[76,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,76,76,76,76,-52,76,76,76,76,-64,76,76,76,76,76,76,76,76,-49,76,-53,76,76,]),'KEYWORD_LET':([24,31,32,33,34,35,36,37,38,39,45,82,107,113,114,117,142,144,145,146,147,148,149,150,152,193,195,198,203,236,],[-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,115,115,115,115,-52,115,115,-64,115,115,115,115,115,115,115,-49,115,-53,115,115,]),'BACKSLASH':([24,31,32,33,34,35,36,37,38,39,45,82,107,113,114,117,142,144,145,146,147,148,149,150,152,193,195,198,203,236,],[-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,116,116,116,116,-52,116,116,-64,116,116,116,116,116,116,116,-49,116,-53,116,116,]),'ANNOTATION':([55,66,67,68,69,70,],[120,-71,-72,-73,-74,-75,]),'PIPE':([79,80,81,95,96,126,127,128,129,131,171,172,173,174,208,209,230,231,],[-79,-139,-79,-114,-115,170,-121,-120,-140,-142,-79,-143,-144,-145,-79,-141,-146,-147,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'definitions':([0,],[2,]),'definition':([0,17,],[3,43,]),'nametype_decl':([0,17,],[4,4,]),'valuedef':([0,17,],[5,5,]),'datatype_definition':([0,17,],[6,6,]),'_identifier':([0,17,21,45,63,82,107,113,116,117,119,120,142,145,146,147,148,149,150,152,159,168,184,185,195,203,225,236,],[7,7,54,54,121,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,201,54,201,201,54,54,201,54,]),'equation':([0,17,159,184,185,225,],[9,9,200,200,200,237,]),'_datatype_lhs':([0,17,],[10,10,]),'_enclosed_operator':([0,17,45,82,104,107,113,117,142,145,146,147,148,149,150,152,153,159,184,185,191,195,203,225,236,],[14,14,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,14,14,14,114,114,114,14,114,]),'_definition_set':([3,43,],[16,84,]),'empty':([3,7,14,43,46,79,81,83,93,94,113,117,136,155,161,163,171,177,179,180,181,200,201,208,222,232,237,],[18,22,22,18,22,127,131,135,140,140,158,158,140,196,22,196,131,135,217,140,140,226,22,127,196,217,226,]),'_patterns':([7,14,46,161,201,],[20,41,118,204,20,]),'_st_operator':([8,113,152,202,],[23,157,157,157,]),'infixl_operator_2':([8,100,113,152,202,],[25,146,25,25,25,]),'infixr_operator_2':([8,100,113,152,202,],[26,145,26,26,26,]),'infixl_operator_6':([8,101,113,152,187,202,],[27,147,27,27,147,27,]),'infixl_operator_7':([8,102,113,152,188,202,],[28,148,28,28,148,28,]),'infixr_operator_9':([8,104,113,152,153,191,202,],[29,149,29,29,149,149,29,]),'pattern':([21,116,119,168,],[46,161,164,161,]),'identifier':([21,45,82,107,113,116,117,119,120,142,145,146,147,148,149,150,152,168,195,203,236,],[47,106,106,106,106,47,106,47,167,106,106,106,106,106,106,106,106,47,106,106,106,]),'literal':([21,45,82,107,113,116,117,119,142,145,146,147,148,149,150,152,168,195,203,236,],[48,105,105,105,105,48,105,48,105,105,105,105,105,105,105,105,48,105,105,105,]),'cons_pattern':([21,116,119,168,],[49,49,49,49,]),'list_cons_pattern':([21,116,119,168,],[50,50,50,50,]),'tuple_cons_pattern':([21,116,119,168,],[51,51,51,51,]),'empty_list_pattern':([21,116,119,168,],[52,52,52,52,]),'empty_tuple_pattern':([21,116,119,168,],[53,53,53,53,]),'number':([21,45,82,107,113,116,117,119,142,145,146,147,148,149,150,152,168,195,203,236,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'concrete_number':([21,45,82,107,113,116,117,119,142,145,146,147,148,149,150,152,168,195,203,236,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'string':([21,45,82,107,113,116,117,119,120,142,145,146,147,148,149,150,152,168,195,203,236,],[57,57,57,57,57,57,57,57,165,57,57,57,57,57,57,57,57,57,57,57,57,]),'char':([21,45,82,107,113,116,117,119,120,142,145,146,147,148,149,150,152,168,195,203,236,],[58,58,58,58,58,58,58,58,166,58,58,58,58,58,58,58,58,58,58,58,58,]),'date':([21,45,82,107,113,116,117,119,142,145,146,147,148,149,150,152,168,195,203,236,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'datetime':([21,45,82,107,113,116,117,119,142,145,146,147,148,149,150,152,168,195,203,236,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'date_interval':([21,45,82,107,113,116,117,119,142,145,146,147,148,149,150,152,168,195,203,236,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'datetime_interval':([21,45,82,107,113,116,117,119,142,145,146,147,148,149,150,152,168,195,203,236,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'_data_rhs':([40,],[78,]),'data_cons':([40,170,],[79,208,]),'_data_cons':([40,170,],[80,80,]),'st_type_expr':([44,169,],[85,207,]),'type_expr':([44,139,141,169,175,176,],[86,180,181,86,210,211,]),'type_function_expr':([44,139,141,169,175,176,178,],[87,87,87,87,87,87,214,]),'type_term':([44,139,141,169,175,176,178,],[88,88,88,88,88,88,213,]),'type_app_expression':([44,139,141,169,175,176,178,],[89,89,89,89,89,89,89,]),'type_factor':([44,138,139,141,169,175,176,178,215,],[90,179,90,90,90,90,90,90,232,]),'type_variable':([44,130,138,139,141,169,175,176,178,215,],[91,172,91,91,91,91,91,91,91,91,]),'type_cons':([44,130,138,139,141,169,175,176,178,215,],[92,173,92,92,92,92,92,92,92,92,]),'expr':([45,82,107,113,117,142,145,146,147,148,149,150,152,195,203,236,],[97,132,154,155,163,182,154,154,154,154,154,154,192,222,227,240,]),'expr_term0':([45,82,107,113,117,142,145,146,147,148,149,150,152,195,203,236,],[98,98,98,98,98,183,98,98,98,98,98,98,98,98,98,98,]),'expr_term1':([45,82,107,113,117,142,145,146,147,148,149,150,152,195,203,236,],[99,99,99,99,99,99,186,99,99,99,99,99,99,99,99,99,]),'expr_term2':([45,82,107,113,117,142,145,146,147,148,149,150,152,195,203,236,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'expr_term6':([45,82,107,113,117,142,145,146,147,148,149,150,152,195,203,236,],[101,101,101,101,101,101,101,187,101,101,101,101,101,101,101,101,]),'expr_term7':([45,82,107,113,117,142,145,146,147,148,149,150,152,195,203,236,],[102,102,102,102,102,102,102,102,188,102,102,102,102,102,102,102,]),'expr_term9':([45,82,107,113,117,142,145,146,147,148,149,150,152,195,203,236,],[103,103,103,103,103,103,103,103,103,189,190,103,103,103,103,103,]),'expr_factor':([45,82,107,113,117,142,145,146,147,148,149,150,152,195,203,236,],[104,104,153,104,104,104,104,104,104,104,104,191,104,104,104,104,]),'enclosed_expr':([45,82,104,107,113,117,142,145,146,147,148,149,150,152,153,191,195,203,236,],[107,107,151,107,107,107,107,107,107,107,107,107,107,107,151,151,107,107,107,]),'letexpr':([45,82,107,113,117,142,145,146,147,148,149,150,152,195,203,236,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'where_expr':([45,82,107,113,117,142,145,146,147,148,149,150,152,195,203,236,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'lambda_expr':([45,82,107,113,117,142,145,146,147,148,149,150,152,195,203,236,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'simple_list_expr':([45,82,107,113,117,142,145,146,147,148,149,150,152,195,203,236,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'simple_tuple_expr':([45,82,107,113,117,142,145,146,147,148,149,150,152,195,203,236,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'_data_conses':([79,208,],[125,229,]),'_maybe_padding':([79,93,94,136,180,181,208,],[126,139,141,178,218,219,126,]),'_cons_args':([81,171,],[129,209,]),'_cons_params':([83,177,],[134,212,]),'_app_args_non_empty':([90,],[137,]),'infixl_operator_0':([97,132,154,155,163,182,192,222,227,240,],[142,142,142,142,142,142,142,142,142,142,]),'_list_items':([113,117,],[156,162,]),'patterns':([116,168,],[160,206,]),'cons_arg':([130,],[171,]),'_cons_arg_factor':([130,],[174,]),'_list_items_cont':([155,163,222,],[194,194,235,]),'equations':([159,184,185,],[199,220,221,]),'_app_args':([179,232,],[216,238,]),'_equation_set':([200,237,],[224,241,]),'st_expr':([236,],[239,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','__init__.py',430),
  ('expr_term9 -> expr_factor infixr_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','__init__.py',437),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','__init__.py',438),
  ('expr_term7 -> expr_term7 infixl_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','__init__.py',440),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','__init__.py',441),
  ('expr_term6 -> expr_term6 infixl_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','__init__.py',443),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','__init__.py',444),
  ('expr_term2 -> expr_term2 infixl_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','__init__.py',446),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','__init__.py',447),
  ('expr_term1 -> expr_term2 infixr_operator_2 expr_term1','expr_term1',3,'p_expressions_precedence_rules','__init__.py',449),
  ('expr_term1 -> expr_term2','expr_term1',1,'p_expressions_precedence_rules','__init__.py',450),
  ('expr_term0 -> expr infixl_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','__init__.py',452),
  ('expr_term0 -> expr_term1','expr_term0',1,'p_expressions_precedence_rules','__init__.py',453),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','__init__.py',466),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','__init__.py',468),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','__init__.py',470),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','__init__.py',471),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','__init__.py',472),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','__init__.py',473),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','__init__.py',474),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','__init__.py',475),
  ('expr_factor -> simple_list_expr','expr_factor',1,'p_standalone_definitions','__init__.py',476),
  ('expr_factor -> simple_tuple_expr','expr_factor',1,'p_standalone_definitions','__init__.py',477),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','__init__.py',479),
  ('literal -> number','literal',1,'p_literals','__init__.py',487),
  ('literal -> concrete_number','literal',1,'p_literals','__init__.py',488),
  ('literal -> string','literal',1,'p_literals','__init__.py',489),
  ('literal -> char','literal',1,'p_literals','__init__.py',490),
  ('literal -> date','literal',1,'p_literals','__init__.py',491),
  ('literal -> datetime','literal',1,'p_literals','__init__.py',492),
  ('literal -> date_interval','literal',1,'p_literals','__init__.py',493),
  ('literal -> datetime_interval','literal',1,'p_literals','__init__.py',494),
  ('simple_tuple_expr -> LPAREN _list_items RPAREN','simple_tuple_expr',3,'p_tuple_expr','__init__.py',500),
  ('simple_list_expr -> LBRACKET _list_items RBRACKET','simple_list_expr',3,'p_list_expr','__init__.py',515),
  ('_list_items -> expr _list_items_cont','_list_items',2,'p_list_items','__init__.py',525),
  ('_list_items_cont -> COMMA expr _list_items_cont','_list_items_cont',3,'p_list_items','__init__.py',526),
  ('_list_items -> empty','_list_items',1,'p_list_items_empty','__init__.py',535),
  ('_list_items_cont -> empty','_list_items_cont',1,'p_list_items_empty','__init__.py',536),
  ('date -> DATE','date',1,'p_date','__init__.py',542),
  ('datetime -> DATETIME','datetime',1,'p_datetime','__init__.py',548),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','__init__.py',554),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','__init__.py',560),
  ('char -> CHAR','char',1,'p_char','__init__.py',566),
  ('string -> STRING','string',1,'p_string','__init__.py',571),
  ('identifier -> _identifier','identifier',1,'p_variable','__init__.py',576),
  ('_identifier -> UNDER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',583),
  ('_identifier -> UPPER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',584),
  ('_identifier -> LOWER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',585),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','__init__.py',592),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','__init__.py',597),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','__init__.py',598),
  ('enclosed_expr -> _enclosed_operator','enclosed_expr',1,'p_operators_as_expressios','__init__.py',604),
  ('_enclosed_operator -> LPAREN _st_operator RPAREN','_enclosed_operator',3,'p_enclosed_operator','__init__.py',610),
  ('infixr_operator_9 -> DOT_OPERATOR','infixr_operator_9',1,'p_operator','__init__.py',620),
  ('infixl_operator_7 -> STAR','infixl_operator_7',1,'p_operator','__init__.py',622),
  ('infixl_operator_7 -> SLASH','infixl_operator_7',1,'p_operator','__init__.py',623),
  ('infixl_operator_7 -> DOUBLESLASH','infixl_operator_7',1,'p_operator','__init__.py',624),
  ('infixl_operator_7 -> PERCENT','infixl_operator_7',1,'p_operator','__init__.py',625),
  ('infixl_operator_6 -> PLUS','infixl_operator_6',1,'p_operator','__init__.py',627),
  ('infixl_operator_6 -> MINUS','infixl_operator_6',1,'p_operator','__init__.py',628),
  ('infixr_operator_2 -> COLON','infixr_operator_2',1,'p_operator','__init__.py',630),
  ('infixl_operator_2 -> OPERATOR','infixl_operator_2',1,'p_operator','__init__.py',632),
  ('infixl_operator_2 -> ARROW','infixl_operator_2',1,'p_operator','__init__.py',633),
  ('infixl_operator_0 -> TICK_OPERATOR','infixl_operator_0',1,'p_operator','__init__.py',635),
  ('_st_operator -> infixl_operator_2','_st_operator',1,'p_operator','__init__.py',637),
  ('_st_operator -> infixr_operator_2','_st_operator',1,'p_operator','__init__.py',638),
  ('_st_operator -> infixl_operator_6','_st_operator',1,'p_operator','__init__.py',639),
  ('_st_operator -> infixl_operator_7','_st_operator',1,'p_operator','__init__.py',640),
  ('_st_operator -> infixr_operator_9','_st_operator',1,'p_operator','__init__.py',641),
  ('_st_operator -> COMMA','_st_operator',1,'p_operator','__init__.py',642),
  ('number -> BASE10_INTEGER','number',1,'p_integer','__init__.py',649),
  ('number -> BASE16_INTEGER','number',1,'p_integer','__init__.py',650),
  ('number -> BASE8_INTEGER','number',1,'p_integer','__init__.py',651),
  ('number -> BASE2_INTEGER','number',1,'p_integer','__init__.py',652),
  ('number -> FLOAT','number',1,'p_float','__init__.py',681),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','__init__.py',686),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','__init__.py',687),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','__init__.py',688),
  ('empty -> <empty>','empty',0,'p_empty','__init__.py',697),
  ('lambda_expr -> BACKSLASH patterns ARROW expr','lambda_expr',4,'p_lambda_definition','__init__.py',702),
  ('pattern -> identifier','pattern',1,'p_pattern','__init__.py',711),
  ('pattern -> literal','pattern',1,'p_pattern','__init__.py',712),
  ('pattern -> cons_pattern','pattern',1,'p_pattern','__init__.py',713),
  ('pattern -> list_cons_pattern','pattern',1,'p_pattern','__init__.py',714),
  ('pattern -> tuple_cons_pattern','pattern',1,'p_pattern','__init__.py',715),
  ('pattern -> empty_list_pattern','pattern',1,'p_pattern','__init__.py',716),
  ('pattern -> empty_tuple_pattern','pattern',1,'p_pattern','__init__.py',717),
  ('list_cons_pattern -> pattern COLON pattern','list_cons_pattern',3,'p_list_cons_for_param','__init__.py',723),
  ('cons_pattern -> LPAREN _identifier SPACE patterns RPAREN','cons_pattern',5,'p_param_pattern','__init__.py',729),
  ('empty_list_pattern -> LBRACKET RBRACKET','empty_list_pattern',2,'p_empty_list_as_pattern','__init__.py',734),
  ('empty_tuple_pattern -> LPAREN RPAREN','empty_tuple_pattern',2,'p_unit_value_as_pattern','__init__.py',740),
  ('tuple_cons_pattern -> error','tuple_cons_pattern',1,'p_tuple_cons_pattern','__init__.py',746),
  ('patterns -> pattern _patterns','patterns',2,'p_patterns','__init__.py',751),
  ('_patterns -> SPACE pattern _patterns','_patterns',3,'p_patterns','__init__.py',752),
  ('_patterns -> empty','_patterns',1,'p_patterns_empty','__init__.py',762),
  ('equation -> _identifier _patterns EQ expr','equation',4,'p_equation','__init__.py',768),
  ('equation -> _enclosed_operator _patterns EQ expr','equation',4,'p_equation','__init__.py',769),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','__init__.py',779),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','__init__.py',788),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','__init__.py',797),
  ('letexpr -> KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','__init__.py',807),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','__init__.py',815),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','__init__.py',816),
  ('type_expr -> type_function_expr','type_expr',1,'p_type_expr','__init__.py',826),
  ('type_expr -> type_term','type_expr',1,'p_type_expr','__init__.py',827),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','__init__.py',832),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','__init__.py',833),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','__init__.py',843),
  ('type_term -> type_factor','type_term',1,'p_type_term','__init__.py',844),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','__init__.py',849),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','__init__.py',861),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','__init__.py',862),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','__init__.py',870),
  ('type_variable -> LOWER_IDENTIFIER','type_variable',1,'p_type_variable','__init__.py',875),
  ('type_cons -> UPPER_IDENTIFIER','type_cons',1,'p_type_cons','__init__.py',880),
  ('type_factor -> type_variable','type_factor',1,'p_type_factor_identifier','__init__.py',885),
  ('type_factor -> type_cons','type_factor',1,'p_type_factor_identifier','__init__.py',886),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','__init__.py',893),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','__init__.py',898),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','__init__.py',903),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','__init__.py',904),
  ('program -> definitions','program',1,'p_program','__init__.py',910),
  ('definitions -> definition _definition_set','definitions',2,'p_definitions','__init__.py',926),
  ('_definition_set -> NEWLINE definition _definition_set','_definition_set',3,'p_definition_set','__init__.py',934),
  ('_definition_set -> empty','_definition_set',1,'p_definition_set2','__init__.py',942),
  ('definition -> nametype_decl','definition',1,'p_definition','__init__.py',948),
  ('definition -> valuedef','definition',1,'p_definition','__init__.py',949),
  ('definition -> datatype_definition','definition',1,'p_definition','__init__.py',950),
  ('valuedef -> equation','valuedef',1,'p_valuedef','__init__.py',956),
  ('nametype_decl -> _identifier COLON COLON st_type_expr','nametype_decl',4,'p_nametype_decl','__init__.py',962),
  ('nametype_decl -> LPAREN _st_operator RPAREN COLON COLON st_type_expr','nametype_decl',6,'p_nametype_decl_operators','__init__.py',971),
  ('datatype_definition -> _datatype_lhs EQ _data_rhs','datatype_definition',3,'p_datatype_definition','__init__.py',980),
  ('_datatype_lhs -> KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params','_datatype_lhs',4,'p_datatype_lhs','__init__.py',988),
  ('_cons_params -> SPACE LOWER_IDENTIFIER _cons_params','_cons_params',3,'p_datatype_cons_params','__init__.py',997),
  ('_cons_params -> empty','_cons_params',1,'p_datatype_cons_params_empty','__init__.py',1006),
  ('_data_rhs -> data_cons _data_conses','_data_rhs',2,'p_datatype_body','__init__.py',1012),
  ('_data_conses -> _maybe_padding PIPE data_cons _data_conses','_data_conses',4,'p_datatype_body','__init__.py',1013),
  ('_data_conses -> empty','_data_conses',1,'p_datatype_conses_empty','__init__.py',1022),
  ('data_cons -> _data_cons','data_cons',1,'p_data_cons','__init__.py',1027),
  ('_data_cons -> UPPER_IDENTIFIER _cons_args','_data_cons',2,'p_bare_data_cons','__init__.py',1033),
  ('_cons_args -> SPACE cons_arg _cons_args','_cons_args',3,'p_data_cons_args','__init__.py',1038),
  ('_cons_args -> empty','_cons_args',1,'p_data_cons_args_empty','__init__.py',1047),
  ('cons_arg -> type_variable','cons_arg',1,'p_cons_arg','__init__.py',1053),
  ('cons_arg -> type_cons','cons_arg',1,'p_cons_arg','__init__.py',1054),
  ('cons_arg -> _cons_arg_factor','cons_arg',1,'p_cons_arg','__init__.py',1055),
  ('_cons_arg_factor -> LPAREN type_expr RPAREN','_cons_arg_factor',3,'p_cons_arg_factor','__init__.py',1061),
  ('_cons_arg_factor -> LBRACKET type_expr RBRACKET','_cons_arg_factor',3,'p_cons_arg_factor_list','__init__.py',1067),
]
