
# program_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW ATSYM BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON COMMA DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FATARROW FLOAT KEYWORD_CLASS KEYWORD_DATA KEYWORD_DERIVING KEYWORD_FORALL KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LOWER_IDENTIFIER LPAREN MINUS NEWLINE OPERATOR PADDING PERCENT PIPE PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATOR UNDER_IDENTIFIER UPPER_IDENTIFIERexpr_factor : expr_factor SPACE expr_factor\n    expr_term9 : expr_factor infixr_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infixl_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infixl_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infixl_operator_2 expr_term6\n               | expr_term6\n\n    expr_term1 : expr_term2 infixr_operator_2 expr_term1\n               | expr_term2\n\n    expr_term0 : expr infixl_operator_0 expr_term0\n               | expr_term1\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | letexpr\n                | where_expr\n                | lambda_expr\n                | simple_list_expr\n                | simple_tuple_expr\n\n    st_type_expr : type_expr\n                 | constrained_type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    simple_tuple_expr : LPAREN _list_items RPAREN\n    simple_list_expr : LBRACKET _list_items RBRACKET\n    _list_items : expr _list_items_cont\n       _list_items_cont : COMMA expr _list_items_cont\n    _list_items : empty\n       _list_items_cont : empty\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    char : CHARstring : STRINGidentifier : _identifier\n\n    _identifier : UNDER_IDENTIFIER\n                   | UPPER_IDENTIFIER\n                   | LOWER_IDENTIFIER\n\n    enclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : _enclosed_operator\n    _enclosed_operator : LPAREN _st_operator RPAREN\n    infixr_operator_9 : DOT_OPERATOR\n\n    infixl_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infixl_operator_6 : PLUS\n                     | MINUS\n\n\n    infixr_operator_2 : COLON\n\n    infixl_operator_2 : OPERATOR\n                      | ARROW\n                      | ATSYM\n\n    infixl_operator_0 : TICK_OPERATOR\n\n    _st_operator : infixl_operator_2\n                 | infixr_operator_2\n                 | infixl_operator_6\n                 | infixl_operator_7\n                 | infixr_operator_9\n                 | COMMA\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH patterns ARROW expr\n    \n    pattern : possibly_named_pattern\n\n    simple_pattern : literal\n    simple_pattern : cons_pattern\n    simple_pattern : list_cons_pattern\n    simple_pattern : tuple_cons_pattern\n    simple_pattern : empty_list_pattern\n    simple_pattern : empty_tuple_pattern\n    simple_pattern : LOWER_IDENTIFIER\n       simple_pattern : UNDER_IDENTIFIER\n    possibly_named_pattern : _pattern_name simple_pattern\n    _pattern_name : LOWER_IDENTIFIER ATSYM\n    _pattern_name : empty\n    simple_pattern : UPPER_IDENTIFIER\n    list_cons_pattern : pattern COLON pattern\n       list_cons_pattern : simple_pattern COLON simple_pattern\n    cons_pattern : LPAREN _identifier SPACE patterns RPAREN\n    simple_pattern : LPAREN pattern RPAREN\n    simple_pattern : LPAREN simple_pattern RPAREN\n    empty_list_pattern : LBRACKET RBRACKETempty_tuple_pattern : LPAREN RPARENtuple_cons_pattern : LPAREN patterns_comma_sep RPAREN\n    patterns : pattern _patterns\n       patterns : simple_pattern _patterns\n       patterns_comma_sep : pattern _patterns_comma\n       patterns_comma_sep : simple_pattern _patterns_comma\n       _patterns : SPACE pattern _patterns\n       _patterns : SPACE simple_pattern _patterns\n       _patterns_comma : COMMA pattern _patterns_comma_trail\n       _patterns_comma : COMMA simple_pattern _patterns_comma_trail\n       _patterns_comma_trail : COMMA pattern _patterns_comma_trail\n       _patterns_comma_trail : COMMA simple_pattern _patterns_comma_trail\n    _patterns : empty\n       _patterns_comma_trail : empty\n    equation : _identifier _patterns EQ expr\n       equation : _enclosed_operator _patterns EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE local_definitions KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    type_expr : type_scheme type_function_expr\n                 | type_scheme type_termtype_scheme : emptytype_scheme : KEYWORD_FORALL SPACE _type_scheme_generics_type_scheme_generics : _identifier SPACE _type_scheme_generics_type_scheme_generics : _identifier DOT_OPERATORtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_variable : LOWER_IDENTIFIERtype_cons : UPPER_IDENTIFIERtype_factor : type_variable\n                   | type_cons\n\n    type_factor : LPAREN _maybe_padding _type_expr_list _maybe_padding RPARENtype_factor : LPAREN RPAREN_type_expr_list : type_expr COMMA _type_expr_list_trail\n       _type_expr_list_trail : type_expr COMMA _type_expr_list_trail\n    _type_expr_list_trail : type_expr\n    type_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKETconstrained_type_expr : _constrained_type_expr_bare\n\n    _constrained_type_expr_bare : type_constraints FATARROW type_expr\n    _maybe_constrained_type_expr : type_expr\n    _maybe_constrained_type_expr : _constrained_type_expr_bare\n    instance : KEYWORD_INSTANCE _maybe_constrained_type_expr                   KEYWORD_WHERE PADDING local_definitionstype_constraints : _type_expr_list_trail\n    _maybe_padding : PADDING\n                      | empty\n    program : definitions _trailing_new_lines\n    _trailing_new_lines : empty\n       _trailing_new_lines : NEWLINE _trailing_new_lines\n    definitions : definition _definition_set\n    _definition_set : newlines definition _definition_set\n    newlines : NEWLINE _trailing_new_lines_definition_set : empty\n       _definition_set : newlines\n    definition : local_definition\n                  | datatype_definition\n                  | typeclass\n                  | instance\n    \n    local_definition : nametype_decl\n                     | valuedef\n    local_definitions : local_definition _local_definition_set\n    _local_definition_set : PADDING definition _local_definition_set\n    _local_definition_set : empty\n    typeclass : KEYWORD_CLASS _typeclass_def                    KEYWORD_WHERE PADDING local_definitions\n    _typeclass_def : simple_type_constraint\n    _typeclass_def : simple_type_constraints FATARROW simple_type_constraint\n    simple_type_constraint : UPPER_IDENTIFIER SPACE type_variable\n    simple_type_constraints : simple_type_constraint _simple_type_constraints\n       _simple_type_constraints : COMMA simple_type_constraint _simple_type_constraints\n    _simple_type_constraints : empty\n    valuedef : equation\n    nametype_decl : _identifier COLON COLON st_type_expr\n    nametype_decl : LPAREN _st_operator RPAREN COLON COLON st_type_expr\n    datatype_definition : _datatype_lhs EQ _data_rhs\n    _datatype_lhs : KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params\n    _cons_params : SPACE LOWER_IDENTIFIER _cons_params\n    _cons_params : empty\n    _data_rhs : data_cons _data_conses\n       _data_conses : _maybe_padding PIPE data_cons _data_conses\n    _data_conses : empty_data_conses : _maybe_padding KEYWORD_DERIVING                        LPAREN _derivations_list RPARENdata_cons : _data_cons_data_cons : UPPER_IDENTIFIER _cons_args_cons_args : SPACE cons_arg _cons_args\n    _cons_args : empty\n    cons_arg : type_variable\n       cons_arg : type_cons\n       cons_arg : _cons_arg_factor\n    _cons_arg_factor : LPAREN type_expr RPAREN\n    _cons_arg_factor : LBRACKET type_expr RBRACKET\n    _derivations_list : UPPER_IDENTIFIER _derivations_list_trail\n       _derivations_list_trail : COMMA UPPER_IDENTIFIER _derivations_list_trail\n    _derivations_list_trail : empty\n    '
    
_lr_action_items = {'KEYWORD_CLASS':([0,22,23,25,27,65,67,268,],[11,-158,-81,11,-81,-159,-162,11,]),'KEYWORD_INSTANCE':([0,22,23,25,27,65,67,268,],[12,-158,-81,12,-81,-159,-162,12,]),'LPAREN':([0,12,17,18,19,22,23,25,27,36,38,43,46,53,54,55,56,57,58,59,60,61,62,65,67,79,86,87,90,92,93,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,131,136,138,140,144,147,149,150,152,153,155,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,184,186,187,204,206,211,212,217,223,224,226,227,228,229,230,231,232,233,234,235,241,252,255,257,258,259,260,268,272,277,279,281,282,283,284,285,286,287,288,289,291,293,295,296,298,301,318,319,322,325,326,337,338,339,341,345,346,347,351,],[14,-81,-48,-47,-49,-158,-81,14,-81,86,-126,106,-62,-63,-64,-65,-60,-61,-56,-57,-58,-59,-55,-159,-162,-81,-81,-81,-81,-81,178,106,106,-26,-27,-28,-29,-30,-31,-32,-33,-94,-73,-74,-75,-76,-77,-45,-44,-40,-41,-42,-43,178,-155,211,14,14,-81,86,-81,-156,-81,-127,-46,-116,-15,-13,-11,-9,-7,-5,234,-16,-17,178,-19,-20,-21,-22,-23,178,-53,106,178,-81,106,-93,-117,263,-81,-81,86,-129,178,-66,178,178,178,178,178,178,-52,178,234,14,106,106,-78,-79,-80,-81,14,86,-81,-128,-12,321,321,-10,-8,-6,-4,-2,-1,-50,178,-34,-54,178,-35,-122,-81,-123,-82,106,-118,321,-120,178,-81,-121,-14,-119,]),'KEYWORD_DATA':([0,22,23,25,27,65,67,268,],[16,-158,-81,16,-81,-159,-162,16,]),'UNDER_IDENTIFIER':([0,22,23,25,27,43,46,53,54,55,56,57,58,59,60,61,62,65,67,91,93,106,107,117,131,140,144,172,178,179,181,182,184,186,187,198,222,224,226,227,228,229,230,231,232,234,241,252,255,268,282,283,291,293,296,298,326,338,341,],[18,-158,-81,18,-81,104,-62,-63,-64,-65,-60,-61,-56,-57,-58,-59,-55,-159,-162,18,18,194,104,-94,18,18,18,18,18,-53,104,18,-81,104,-93,18,18,18,-66,18,18,18,18,18,18,18,18,104,104,18,18,18,-50,18,-54,18,104,18,18,]),'UPPER_IDENTIFIER':([0,11,12,22,23,25,27,28,36,38,43,46,53,54,55,56,57,58,59,60,61,62,63,65,67,74,76,79,86,87,90,91,92,93,106,107,117,131,136,138,140,144,147,149,150,152,153,155,172,178,179,181,182,184,186,187,198,205,211,212,217,222,223,224,226,227,228,229,230,231,232,234,241,252,255,260,263,268,272,277,279,282,283,291,293,296,298,326,333,338,341,],[17,32,-81,-158,-81,17,-81,71,89,-126,105,-62,-63,-64,-65,-60,-61,-56,-57,-58,-59,-55,130,-159,-162,32,32,-81,-81,-81,-81,17,-81,17,195,105,-94,17,-155,89,17,17,-81,89,-81,-156,-81,-127,17,17,-53,105,17,-81,105,-93,17,71,-81,-81,89,17,-129,17,-66,17,17,17,17,17,17,17,17,105,105,-81,309,17,89,-81,-128,17,17,-50,17,-54,17,105,344,17,17,]),'LOWER_IDENTIFIER':([0,12,22,23,25,27,36,38,43,46,53,54,55,56,57,58,59,60,61,62,65,67,77,79,86,87,90,91,92,93,106,107,117,131,136,138,140,144,147,149,150,152,153,155,172,178,179,181,182,184,186,187,198,201,211,212,217,222,223,224,226,227,228,229,230,231,232,234,241,252,255,260,268,272,277,279,282,283,291,293,296,298,326,338,341,],[19,-81,-158,-81,19,-81,88,-126,103,-62,-63,-64,-65,-60,-61,-56,-57,-58,-59,-55,-159,-162,88,-81,-81,-81,-81,19,-81,19,193,103,-94,19,-155,88,19,19,-81,88,-81,-156,-81,-127,19,19,-53,103,19,248,103,-93,19,261,-81,-81,88,19,-129,19,-66,19,19,19,19,19,19,19,19,103,103,-81,19,88,-81,-128,19,19,-50,19,-54,19,103,19,19,]),'$end':([1,2,3,4,5,6,7,8,9,15,17,18,19,21,22,23,24,25,26,27,65,66,67,68,69,70,71,80,81,82,83,84,85,88,89,108,109,110,111,112,113,114,115,118,119,120,121,122,123,124,125,126,127,128,132,133,135,137,139,148,151,154,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,204,207,208,209,210,213,214,216,218,233,235,257,258,259,262,264,267,269,270,271,273,274,281,284,285,286,287,288,289,291,295,296,301,305,307,310,311,312,313,314,315,317,318,319,322,325,331,335,336,337,339,345,346,347,351,],[0,-81,-81,-165,-166,-167,-168,-169,-170,-181,-48,-47,-49,-157,-158,-81,-160,-164,-163,-81,-159,-81,-162,-184,-81,-192,-81,-124,-125,-132,-133,-140,-141,-138,-139,-26,-27,-28,-29,-30,-31,-32,-33,-73,-74,-75,-76,-77,-45,-44,-40,-41,-42,-43,-161,-188,-190,-193,-195,-134,-143,-150,-182,-24,-25,-149,-46,-116,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-53,-117,-81,-196,-197,-198,-174,-81,-153,-81,-52,-51,-78,-79,-80,-81,-194,-171,-173,-131,-130,-136,-137,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,-183,-189,-199,-200,-81,-81,-142,-147,-148,-122,-81,-123,-82,-191,-172,-135,-118,-120,-81,-121,-14,-119,]),'NEWLINE':([2,3,4,5,6,7,8,9,15,17,18,19,22,23,24,25,26,27,65,66,67,68,69,70,71,80,81,82,83,84,85,88,89,108,109,110,111,112,113,114,115,118,119,120,121,122,123,124,125,126,127,128,132,133,135,137,139,148,151,154,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,204,207,208,209,210,213,214,216,218,233,235,257,258,259,262,264,267,269,270,271,273,274,281,284,285,286,287,288,289,291,295,296,301,305,307,310,311,312,313,314,315,317,318,319,322,325,331,335,336,337,339,345,346,347,351,],[23,27,-165,-166,-167,-168,-169,-170,-181,-48,-47,-49,-158,23,-160,-164,-163,23,-159,27,-162,-184,-81,-192,-81,-124,-125,-132,-133,-140,-141,-138,-139,-26,-27,-28,-29,-30,-31,-32,-33,-73,-74,-75,-76,-77,-45,-44,-40,-41,-42,-43,-161,-188,-190,-193,-195,-134,-143,-150,-182,-24,-25,-149,-46,-116,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-53,-117,-81,-196,-197,-198,-174,-81,-153,-81,-52,-51,-78,-79,-80,-81,-194,-171,-173,-131,-130,-136,-137,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,-183,-189,-199,-200,-81,-81,-142,-147,-148,-122,-81,-123,-82,-191,-172,-135,-118,-120,-81,-121,-14,-119,]),'PADDING':([4,5,6,7,8,9,15,17,18,19,68,69,70,71,72,78,80,81,82,83,84,85,86,87,88,89,108,109,110,111,112,113,114,115,118,119,120,121,122,123,124,125,126,127,128,133,135,137,139,145,146,147,148,151,154,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,204,207,208,209,210,213,214,216,218,219,220,221,225,233,235,257,258,259,262,264,267,269,270,271,273,274,281,284,285,286,287,288,289,291,295,296,301,305,307,310,311,312,313,314,315,316,317,318,319,322,325,331,335,336,337,339,345,346,347,351,],[-165,-166,-167,-168,-169,-170,-181,-48,-47,-49,-184,136,-192,-81,140,144,-124,-125,-132,-133,-140,-141,136,136,-138,-139,-26,-27,-28,-29,-30,-31,-32,-33,-73,-74,-75,-76,-77,-45,-44,-40,-41,-42,-43,-188,-190,-193,-195,-146,-145,136,-134,-143,-150,-182,-24,-25,-149,-46,-116,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-53,-117,-81,-196,-197,-198,-174,268,-153,-81,136,136,136,283,-52,-51,-78,-79,-80,136,-194,-171,-173,-131,-130,-136,-137,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,-183,-189,-199,-200,268,-81,-142,-147,-144,-148,-122,338,-123,-82,-191,-172,-135,-118,-120,338,-121,-14,-119,]),'KEYWORD_IN':([4,5,6,7,8,9,15,17,18,19,68,69,70,71,80,81,82,83,84,85,88,89,108,109,110,111,112,113,114,115,118,119,120,121,122,123,124,125,126,127,128,133,135,137,139,148,151,154,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,204,207,208,209,210,213,214,216,218,233,235,257,258,259,262,264,267,269,270,271,273,274,281,284,285,286,287,288,289,291,295,296,297,301,305,307,310,311,312,313,314,315,317,318,319,322,325,331,335,336,337,339,345,346,347,351,],[-165,-166,-167,-168,-169,-170,-181,-48,-47,-49,-184,-81,-192,-81,-124,-125,-132,-133,-140,-141,-138,-139,-26,-27,-28,-29,-30,-31,-32,-33,-73,-74,-75,-76,-77,-45,-44,-40,-41,-42,-43,-188,-190,-193,-195,-134,-143,-150,-182,-24,-25,-149,-46,-116,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-53,-117,-81,-196,-197,-198,-174,-81,-153,-81,-52,-51,-78,-79,-80,-81,-194,-171,-173,-131,-130,-136,-137,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,324,-35,-183,-189,-199,-200,-81,-81,-142,-147,-148,-122,-81,-123,-82,-191,-172,-135,-118,-120,-81,-121,-14,-119,]),'EQ':([10,13,17,18,19,20,42,44,64,94,95,96,97,98,99,100,101,102,103,104,105,108,109,110,111,112,113,114,115,118,119,120,121,122,123,124,125,126,127,128,129,130,161,183,185,189,196,199,202,203,247,249,250,253,256,257,258,259,261,296,306,320,330,],[28,-81,-48,-47,-49,-81,93,-114,131,-81,-81,-83,-84,-85,-86,-87,-88,-89,-90,-91,-95,-26,-27,-28,-29,-30,-31,-32,-33,-73,-74,-75,-76,-77,-45,-44,-40,-41,-42,-43,-54,-81,-46,-108,-109,-102,-92,-101,-185,-187,-96,-97,-99,-100,-103,-78,-79,-80,-81,-54,-186,-81,-98,]),'KEYWORD_FORALL':([12,79,86,87,90,92,136,150,152,153,211,212,260,277,],[39,39,-81,-81,39,39,-155,39,-156,39,39,39,39,39,]),'LBRACKET':([12,36,38,43,46,53,54,55,56,57,58,59,60,61,62,79,86,87,90,92,93,106,107,117,131,136,138,147,149,150,152,153,155,172,178,179,181,182,184,186,187,211,212,217,223,224,226,227,228,229,230,231,232,234,252,255,260,272,277,279,291,293,296,298,326,341,],[-81,87,-126,116,-62,-63,-64,-65,-60,-61,-56,-57,-58,-59,-55,-81,-81,-81,-81,-81,182,116,116,-94,182,-155,212,-81,87,-81,-156,-81,-127,182,182,-53,116,182,-81,116,-93,-81,-81,87,-129,182,-66,182,182,182,182,182,182,182,116,116,-81,87,-81,-128,-50,182,-54,182,116,182,]),'COLON':([13,14,17,18,19,41,94,95,96,97,98,99,100,101,102,103,104,105,108,109,110,111,112,113,114,115,118,119,120,121,122,123,124,125,126,127,128,129,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,188,189,190,193,194,195,196,197,199,200,204,233,234,235,243,244,247,249,250,253,256,257,258,259,281,284,285,286,287,288,289,291,295,296,301,302,303,318,319,321,322,325,330,337,339,342,343,345,346,347,351,],[41,46,-48,-47,-49,92,184,186,-83,-84,-85,-86,-87,-88,-89,-90,-91,-95,-26,-27,-28,-29,-30,-31,-32,-33,-73,-74,-75,-76,-77,-45,-44,-40,-41,-42,-43,200,-46,-116,-15,-13,46,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,46,-53,184,-102,186,-90,-91,-95,186,184,-101,260,-117,-52,46,-3,184,186,-96,186,-99,-100,-103,-78,-79,-80,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,184,186,-122,-81,46,-123,-82,-98,-118,-120,184,186,-81,-121,-14,-119,]),'SPACE':([13,16,17,18,19,20,32,39,71,83,84,85,88,89,94,95,96,97,98,99,100,101,102,103,104,105,108,109,110,111,112,113,114,115,118,119,120,121,122,123,124,125,126,127,128,129,130,151,156,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,189,191,193,194,195,196,199,204,207,208,209,210,218,225,233,235,243,244,247,249,250,253,256,257,258,259,261,281,284,285,286,287,288,289,291,295,296,301,310,311,313,314,315,317,318,319,320,322,324,325,330,337,339,345,346,347,351,],[43,63,-48,-47,-49,43,77,91,138,149,-140,-141,-138,-139,43,43,-83,-84,-85,-86,-87,-88,-89,-90,-91,-95,-26,-27,-28,-29,-30,-31,-32,-33,-73,-74,-75,-76,-77,-45,-44,-40,-41,-42,-43,-54,201,-143,222,-46,-116,-15,-13,-11,-9,-7,-5,232,-16,-17,-18,-19,-20,-21,-22,-23,-53,241,-102,255,-49,-47,-48,-92,-101,-117,138,-196,-197,-198,272,282,-52,232,43,43,-96,-97,-99,-100,-103,-78,-79,-80,201,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,-199,-200,272,-142,-147,-148,-122,-81,43,-123,341,-82,-98,-118,-120,-81,-121,-14,-119,]),'COMMA':([14,17,18,19,30,34,80,81,82,83,84,85,88,89,96,97,98,99,100,101,102,103,104,105,108,109,110,111,112,113,114,115,118,119,120,121,122,123,124,125,126,127,128,141,143,145,148,151,158,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,188,189,190,193,194,195,196,199,204,218,220,233,234,235,237,246,247,249,250,253,256,257,258,259,270,271,273,274,281,284,285,286,287,288,289,291,295,296,301,302,303,309,313,314,315,317,318,319,321,322,323,325,330,336,337,339,342,343,344,345,346,347,351,],[52,-48,-47,-49,74,79,-124,-125,-132,-133,-140,-141,-138,-139,-83,-84,-85,-86,-87,-88,-89,-90,-91,-95,-26,-27,-28,-29,-30,-31,-32,-33,-73,-74,-75,-76,-77,-45,-44,-40,-41,-42,-43,74,-177,79,-134,-143,79,-46,-116,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,52,-53,252,-102,252,-90,-91,-95,-92,-101,-117,-81,277,-52,52,-51,293,293,-96,-97,-99,-100,-103,-78,-79,-80,-131,-130,-136,-137,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,326,326,333,-81,-142,-147,-148,-122,-81,52,-123,293,-82,-98,-135,-118,-120,326,326,333,-81,-121,-14,-119,]),'OPERATOR':([14,17,18,19,108,109,110,111,112,113,114,115,118,119,120,121,122,123,124,125,126,127,128,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,204,233,234,235,257,258,259,281,284,285,286,287,288,289,291,295,296,301,318,319,321,322,325,337,339,345,346,347,351,],[53,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-73,-74,-75,-76,-77,-45,-44,-40,-41,-42,-43,-46,-116,-15,-13,53,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,53,-53,-117,-52,53,-3,-78,-79,-80,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,-122,-81,53,-123,-82,-118,-120,-81,-121,-14,-119,]),'ARROW':([14,17,18,19,44,81,82,83,84,85,88,89,94,95,96,97,98,99,100,101,102,103,104,105,108,109,110,111,112,113,114,115,118,119,120,121,122,123,124,125,126,127,128,148,151,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,183,185,189,196,199,204,218,233,234,235,242,243,244,247,249,250,253,256,257,258,259,270,273,274,281,284,285,286,287,288,289,291,295,296,299,300,301,313,314,315,317,318,319,321,322,325,330,336,337,339,345,346,347,351,],[54,-48,-47,-49,-114,147,-132,-133,-140,-141,-138,-139,-81,-81,-83,-84,-85,-86,-87,-88,-89,-90,-91,-95,-26,-27,-28,-29,-30,-31,-32,-33,-73,-74,-75,-76,-77,-45,-44,-40,-41,-42,-43,-134,-143,-46,-116,-15,-13,54,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,54,-53,-108,-109,-102,-92,-101,-117,-81,-52,54,-3,298,-81,-81,-96,-97,-99,-100,-103,-78,-79,-80,147,-136,-137,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-104,-105,-35,-81,-142,-147,-148,-122,-81,54,-123,-82,-98,-135,-118,-120,-81,-121,-14,-119,]),'ATSYM':([14,17,18,19,103,108,109,110,111,112,113,114,115,118,119,120,121,122,123,124,125,126,127,128,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,193,204,233,234,235,248,257,258,259,281,284,285,286,287,288,289,291,295,296,301,318,319,321,322,325,337,339,345,346,347,351,],[55,-48,-47,-49,187,-26,-27,-28,-29,-30,-31,-32,-33,-73,-74,-75,-76,-77,-45,-44,-40,-41,-42,-43,-46,-116,-15,-13,55,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,55,-53,187,-117,-52,55,-3,187,-78,-79,-80,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,-122,-81,55,-123,-82,-118,-120,-81,-121,-14,-119,]),'PLUS':([14,17,18,19,108,109,110,111,112,113,114,115,118,119,120,121,122,123,124,125,126,127,128,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,204,233,234,235,257,258,259,281,284,285,286,287,288,289,291,295,296,301,318,319,321,322,325,337,339,345,346,347,351,],[56,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-73,-74,-75,-76,-77,-45,-44,-40,-41,-42,-43,-46,-116,-15,-13,-11,56,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,56,-53,-117,-52,56,-3,-78,-79,-80,-12,-10,56,-6,-4,-2,-1,-50,-34,-54,-35,-122,-81,56,-123,-82,-118,-120,-81,-121,-14,-119,]),'MINUS':([14,17,18,19,108,109,110,111,112,113,114,115,118,119,120,121,122,123,124,125,126,127,128,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,204,233,234,235,257,258,259,281,284,285,286,287,288,289,291,295,296,301,318,319,321,322,325,337,339,345,346,347,351,],[57,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-73,-74,-75,-76,-77,-45,-44,-40,-41,-42,-43,-46,-116,-15,-13,-11,57,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,57,-53,-117,-52,57,-3,-78,-79,-80,-12,-10,57,-6,-4,-2,-1,-50,-34,-54,-35,-122,-81,57,-123,-82,-118,-120,-81,-121,-14,-119,]),'STAR':([14,17,18,19,108,109,110,111,112,113,114,115,118,119,120,121,122,123,124,125,126,127,128,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,204,233,234,235,257,258,259,281,284,285,286,287,288,289,291,295,296,301,318,319,321,322,325,337,339,345,346,347,351,],[58,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-73,-74,-75,-76,-77,-45,-44,-40,-41,-42,-43,-46,-116,-15,-13,-11,-9,58,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,58,-53,-117,-52,58,-3,-78,-79,-80,-12,-10,-8,58,-4,-2,-1,-50,-34,-54,-35,-122,-81,58,-123,-82,-118,-120,-81,-121,-14,-119,]),'SLASH':([14,17,18,19,108,109,110,111,112,113,114,115,118,119,120,121,122,123,124,125,126,127,128,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,204,233,234,235,257,258,259,281,284,285,286,287,288,289,291,295,296,301,318,319,321,322,325,337,339,345,346,347,351,],[59,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-73,-74,-75,-76,-77,-45,-44,-40,-41,-42,-43,-46,-116,-15,-13,-11,-9,59,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,59,-53,-117,-52,59,-3,-78,-79,-80,-12,-10,-8,59,-4,-2,-1,-50,-34,-54,-35,-122,-81,59,-123,-82,-118,-120,-81,-121,-14,-119,]),'DOUBLESLASH':([14,17,18,19,108,109,110,111,112,113,114,115,118,119,120,121,122,123,124,125,126,127,128,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,204,233,234,235,257,258,259,281,284,285,286,287,288,289,291,295,296,301,318,319,321,322,325,337,339,345,346,347,351,],[60,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-73,-74,-75,-76,-77,-45,-44,-40,-41,-42,-43,-46,-116,-15,-13,-11,-9,60,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,60,-53,-117,-52,60,-3,-78,-79,-80,-12,-10,-8,60,-4,-2,-1,-50,-34,-54,-35,-122,-81,60,-123,-82,-118,-120,-81,-121,-14,-119,]),'PERCENT':([14,17,18,19,108,109,110,111,112,113,114,115,118,119,120,121,122,123,124,125,126,127,128,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,204,233,234,235,257,258,259,281,284,285,286,287,288,289,291,295,296,301,318,319,321,322,325,337,339,345,346,347,351,],[61,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-73,-74,-75,-76,-77,-45,-44,-40,-41,-42,-43,-46,-116,-15,-13,-11,-9,61,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,61,-53,-117,-52,61,-3,-78,-79,-80,-12,-10,-8,61,-4,-2,-1,-50,-34,-54,-35,-122,-81,61,-123,-82,-118,-120,-81,-121,-14,-119,]),'DOT_OPERATOR':([14,17,18,19,108,109,110,111,112,113,114,115,118,119,120,121,122,123,124,125,126,127,128,156,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,204,233,234,235,257,258,259,281,284,285,286,287,288,289,291,295,296,301,318,319,321,322,325,337,339,345,346,347,351,],[62,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-73,-74,-75,-76,-77,-45,-44,-40,-41,-42,-43,223,-46,-116,-15,-13,-11,-9,-7,-5,62,-16,-17,-18,-19,-20,-21,-22,-23,62,-53,-117,-52,62,62,-78,-79,-80,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,-122,-81,62,-123,-82,-118,-120,-81,-121,-14,-119,]),'KEYWORD_WHERE':([17,18,19,29,30,33,34,35,80,81,82,83,84,85,88,89,108,109,110,111,112,113,114,115,118,119,120,121,122,123,124,125,126,127,128,142,143,148,151,154,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,204,218,233,235,236,237,246,257,258,259,270,271,273,274,280,281,284,285,286,287,288,289,290,291,295,296,301,313,314,315,317,318,319,322,323,325,336,337,339,345,346,347,351,],[-48,-47,-49,72,-175,78,-151,-152,-124,-125,-132,-133,-140,-141,-138,-139,-26,-27,-28,-29,-30,-31,-32,-33,-73,-74,-75,-76,-77,-45,-44,-40,-41,-42,-43,-176,-177,-134,-143,-150,-46,225,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-53,225,-81,-52,-3,225,225,225,-78,-79,-80,-131,-130,-136,-137,225,-12,-10,-8,-6,-4,-2,-1,225,-50,-34,-54,-35,-81,-142,-147,-148,-122,-81,-123,225,225,-135,-118,-120,-81,-121,225,-119,]),'TICK_OPERATOR':([17,18,19,108,109,110,111,112,113,114,115,118,119,120,121,122,123,124,125,126,127,128,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,204,233,235,236,237,246,257,258,259,280,281,284,285,286,287,288,289,290,291,295,296,301,318,319,322,323,325,337,339,345,346,347,351,],[-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-73,-74,-75,-76,-77,-45,-44,-40,-41,-42,-43,-46,226,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-53,226,-52,-3,226,226,226,-78,-79,-80,226,-12,-10,-8,-6,-4,-2,-1,226,-50,-34,-54,-35,-122,-81,-123,226,226,-118,-120,-81,-121,226,-119,]),'RPAREN':([17,18,19,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,80,81,82,83,84,85,86,88,89,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,118,119,120,121,122,123,124,125,126,127,128,136,145,146,148,151,152,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,183,185,188,189,190,192,193,194,195,196,199,204,218,219,220,233,235,237,238,239,240,243,244,247,249,250,251,253,254,256,257,258,259,265,270,271,273,274,275,276,281,284,285,286,287,288,289,290,291,292,294,295,296,299,300,301,302,303,304,308,309,313,314,315,316,317,318,319,322,323,325,327,328,329,330,332,334,336,337,339,340,342,343,344,345,346,347,348,349,350,351,],[-48,-47,-49,-114,129,-62,-67,-68,-69,-70,-71,-72,-63,-64,-65,-60,-61,-56,-57,-58,-59,-55,-124,-125,-132,-133,-140,-141,151,-138,-139,-81,-81,-83,-84,-85,-86,-87,-88,-89,-90,-91,-95,189,-26,-27,-28,-29,-30,-31,-32,-33,-73,-74,-75,-76,-77,-45,-44,-40,-41,-42,-43,-155,-146,-145,-134,-143,-156,-46,-116,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-81,-53,-108,-109,250,-102,253,256,-90,-91,-95,-92,-101,-117,-81,-81,-81,-52,-51,291,295,296,-38,-81,-81,-96,-97,-99,-106,-100,-107,-103,-78,-79,-80,310,-131,-130,-136,-137,314,315,-12,-10,-8,-6,-4,-2,-1,291,-50,-36,-39,-34,-54,-104,-105,-35,-81,-81,330,331,-81,-81,-142,-147,-144,-148,-122,-81,-123,-81,-82,-110,-115,-111,-98,-201,-203,-135,-118,-120,-37,-81,-81,-81,-81,-121,-14,-112,-113,-202,-119,]),'RBRACKET':([17,18,19,80,81,82,83,84,85,88,89,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,136,148,151,152,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,182,204,218,221,233,235,240,245,246,257,258,259,266,270,271,273,274,278,281,284,285,286,287,288,289,291,292,294,295,296,301,313,314,315,317,318,319,322,323,325,336,337,339,340,345,346,347,351,],[-48,-47,-49,-124,-125,-132,-133,-140,-141,-138,-139,-26,-27,-28,-29,-30,-31,-32,-33,199,-73,-74,-75,-76,-77,-45,-44,-40,-41,-42,-43,-155,-134,-143,-156,-46,-116,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-53,-81,-117,-81,-81,-52,-51,-38,301,-81,-78,-79,-80,311,-131,-130,-136,-137,317,-12,-10,-8,-6,-4,-2,-1,-50,-36,-39,-34,-54,-35,-81,-142,-147,-148,-122,-81,-123,-81,-82,-135,-118,-120,-37,-81,-121,-14,-119,]),'FATARROW':([30,31,34,37,40,73,75,80,81,82,83,84,85,88,89,141,143,145,146,148,151,158,215,218,270,271,273,274,313,314,315,317,336,],[-81,76,-146,90,-154,-178,-180,-124,-125,-132,-133,-140,-141,-138,-139,-81,-177,-146,-145,-134,-143,-146,-179,-81,-131,-130,-136,-137,-81,-142,-147,-148,-135,]),'BASE10_INTEGER':([43,46,53,54,55,56,57,58,59,60,61,62,93,106,107,117,131,172,178,179,181,182,184,186,187,224,226,227,228,229,230,231,232,234,252,255,291,293,296,298,326,341,],[118,-62,-63,-64,-65,-60,-61,-56,-57,-58,-59,-55,118,118,118,-94,118,118,118,-53,118,118,-81,118,-93,118,-66,118,118,118,118,118,118,118,118,118,-50,118,-54,118,118,118,]),'BASE16_INTEGER':([43,46,53,54,55,56,57,58,59,60,61,62,93,106,107,117,131,172,178,179,181,182,184,186,187,224,226,227,228,229,230,231,232,234,252,255,291,293,296,298,326,341,],[119,-62,-63,-64,-65,-60,-61,-56,-57,-58,-59,-55,119,119,119,-94,119,119,119,-53,119,119,-81,119,-93,119,-66,119,119,119,119,119,119,119,119,119,-50,119,-54,119,119,119,]),'BASE8_INTEGER':([43,46,53,54,55,56,57,58,59,60,61,62,93,106,107,117,131,172,178,179,181,182,184,186,187,224,226,227,228,229,230,231,232,234,252,255,291,293,296,298,326,341,],[120,-62,-63,-64,-65,-60,-61,-56,-57,-58,-59,-55,120,120,120,-94,120,120,120,-53,120,120,-81,120,-93,120,-66,120,120,120,120,120,120,120,120,120,-50,120,-54,120,120,120,]),'BASE2_INTEGER':([43,46,53,54,55,56,57,58,59,60,61,62,93,106,107,117,131,172,178,179,181,182,184,186,187,224,226,227,228,229,230,231,232,234,252,255,291,293,296,298,326,341,],[121,-62,-63,-64,-65,-60,-61,-56,-57,-58,-59,-55,121,121,121,-94,121,121,121,-53,121,121,-81,121,-93,121,-66,121,121,121,121,121,121,121,121,121,-50,121,-54,121,121,121,]),'FLOAT':([43,46,53,54,55,56,57,58,59,60,61,62,93,106,107,117,131,172,178,179,181,182,184,186,187,224,226,227,228,229,230,231,232,234,252,255,291,293,296,298,326,341,],[122,-62,-63,-64,-65,-60,-61,-56,-57,-58,-59,-55,122,122,122,-94,122,122,122,-53,122,122,-81,122,-93,122,-66,122,122,122,122,122,122,122,122,122,-50,122,-54,122,122,122,]),'STRING':([43,46,53,54,55,56,57,58,59,60,61,62,93,106,107,117,131,172,178,179,181,182,184,186,187,198,224,226,227,228,229,230,231,232,234,252,255,291,293,296,298,326,341,],[123,-62,-63,-64,-65,-60,-61,-56,-57,-58,-59,-55,123,123,123,-94,123,123,123,-53,123,123,-81,123,-93,123,123,-66,123,123,123,123,123,123,123,123,123,-50,123,-54,123,123,123,]),'CHAR':([43,46,53,54,55,56,57,58,59,60,61,62,93,106,107,117,131,172,178,179,181,182,184,186,187,198,224,226,227,228,229,230,231,232,234,252,255,291,293,296,298,326,341,],[124,-62,-63,-64,-65,-60,-61,-56,-57,-58,-59,-55,124,124,124,-94,124,124,124,-53,124,124,-81,124,-93,124,124,-66,124,124,124,124,124,124,124,124,124,-50,124,-54,124,124,124,]),'DATE':([43,46,53,54,55,56,57,58,59,60,61,62,93,106,107,117,131,172,178,179,181,182,184,186,187,224,226,227,228,229,230,231,232,234,252,255,291,293,296,298,326,341,],[125,-62,-63,-64,-65,-60,-61,-56,-57,-58,-59,-55,125,125,125,-94,125,125,125,-53,125,125,-81,125,-93,125,-66,125,125,125,125,125,125,125,125,125,-50,125,-54,125,125,125,]),'DATETIME':([43,46,53,54,55,56,57,58,59,60,61,62,93,106,107,117,131,172,178,179,181,182,184,186,187,224,226,227,228,229,230,231,232,234,252,255,291,293,296,298,326,341,],[126,-62,-63,-64,-65,-60,-61,-56,-57,-58,-59,-55,126,126,126,-94,126,126,126,-53,126,126,-81,126,-93,126,-66,126,126,126,126,126,126,126,126,126,-50,126,-54,126,126,126,]),'DATE_INTERVAL':([43,46,53,54,55,56,57,58,59,60,61,62,93,106,107,117,131,172,178,179,181,182,184,186,187,224,226,227,228,229,230,231,232,234,252,255,291,293,296,298,326,341,],[127,-62,-63,-64,-65,-60,-61,-56,-57,-58,-59,-55,127,127,127,-94,127,127,127,-53,127,127,-81,127,-93,127,-66,127,127,127,127,127,127,127,127,127,-50,127,-54,127,127,127,]),'DATETIME_INTERVAL':([43,46,53,54,55,56,57,58,59,60,61,62,93,106,107,117,131,172,178,179,181,182,184,186,187,224,226,227,228,229,230,231,232,234,252,255,291,293,296,298,326,341,],[128,-62,-63,-64,-65,-60,-61,-56,-57,-58,-59,-55,128,128,128,-94,128,128,128,-53,128,128,-81,128,-93,128,-66,128,128,128,128,128,128,128,128,128,-50,128,-54,128,128,128,]),'KEYWORD_LET':([46,53,54,55,56,57,58,59,60,61,62,93,131,172,178,179,182,224,226,227,228,229,230,231,232,234,291,293,296,298,341,],[-62,-63,-64,-65,-60,-61,-56,-57,-58,-59,-55,180,180,180,180,-53,180,180,-66,180,180,180,180,180,180,180,-50,180,-54,180,180,]),'BACKSLASH':([46,53,54,55,56,57,58,59,60,61,62,93,131,172,178,179,182,224,226,227,228,229,230,231,232,234,291,293,296,298,341,],[-62,-63,-64,-65,-60,-61,-56,-57,-58,-59,-55,181,181,181,181,-53,181,181,-66,181,181,181,181,181,181,181,-50,181,-54,181,181,]),'PIPE':([69,70,71,88,89,134,135,136,137,139,207,208,209,210,262,264,310,311,],[-81,-192,-81,-138,-139,205,-156,-155,-193,-195,-81,-196,-197,-198,-81,-194,-199,-200,]),'KEYWORD_DERIVING':([69,70,71,88,89,134,135,136,137,139,207,208,209,210,262,264,310,311,],[-81,-192,-81,-138,-139,206,-156,-155,-193,-195,-81,-196,-197,-198,-81,-194,-199,-200,]),'ANNOTATION':([108,118,119,120,121,122,],[198,-73,-74,-75,-76,-77,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'definitions':([0,],[2,]),'definition':([0,25,268,],[3,66,312,]),'local_definition':([0,25,140,144,241,268,],[4,4,214,214,214,4,]),'datatype_definition':([0,25,268,],[5,5,5,]),'typeclass':([0,25,268,],[6,6,6,]),'instance':([0,25,268,],[7,7,7,]),'nametype_decl':([0,25,140,144,241,268,],[8,8,8,8,8,8,]),'valuedef':([0,25,140,144,241,268,],[9,9,9,9,9,9,]),'_datatype_lhs':([0,25,268,],[10,10,10,]),'_identifier':([0,25,91,93,106,131,140,144,172,178,182,198,222,224,227,228,229,230,231,232,234,241,268,282,283,293,298,338,341,],[13,13,156,161,191,161,13,13,161,161,161,161,156,161,161,161,161,161,161,161,161,13,13,320,320,161,161,320,161,]),'equation':([0,25,140,144,241,268,282,283,338,],[15,15,15,15,15,15,319,319,345,]),'_enclosed_operator':([0,25,93,131,140,144,169,172,178,182,224,227,228,229,230,231,232,234,235,241,268,282,283,289,293,298,338,341,],[20,20,179,179,20,20,179,179,179,179,179,179,179,179,179,179,179,179,179,20,20,20,20,179,179,179,20,179,]),'_trailing_new_lines':([2,23,27,],[21,65,67,]),'empty':([2,3,12,13,20,23,27,30,43,66,69,71,79,86,87,90,92,94,95,106,107,130,141,147,150,153,178,181,182,184,186,207,211,212,214,218,219,220,221,237,243,244,246,252,255,260,261,262,277,302,303,309,312,313,319,320,323,326,342,343,344,345,],[22,26,38,44,44,22,22,75,117,26,135,139,38,152,152,38,38,44,44,117,117,203,75,152,38,38,240,117,240,117,117,139,38,38,269,274,152,152,152,294,44,44,294,117,117,38,203,135,38,328,328,334,269,274,339,44,294,117,328,328,334,339,]),'_definition_set':([3,66,],[24,132,]),'newlines':([3,66,],[25,25,]),'_typeclass_def':([11,],[29,]),'simple_type_constraint':([11,74,76,],[30,141,142,]),'simple_type_constraints':([11,],[31,]),'_maybe_constrained_type_expr':([12,],[33,]),'type_expr':([12,79,90,92,150,153,211,212,260,277,],[34,145,154,158,220,221,265,266,158,145,]),'_constrained_type_expr_bare':([12,92,260,],[35,160,160,]),'type_scheme':([12,79,90,92,150,153,211,212,260,277,],[36,36,36,36,36,36,36,36,36,36,]),'type_constraints':([12,92,260,],[37,37,37,]),'_type_expr_list_trail':([12,79,92,260,277,],[40,146,40,40,316,]),'_patterns':([13,20,94,95,243,244,320,],[42,64,183,185,299,300,42,]),'_st_operator':([14,178,234,321,],[45,239,239,239,]),'infixl_operator_2':([14,165,178,234,321,],[47,228,47,47,47,]),'infixr_operator_2':([14,165,178,234,321,],[48,227,48,48,48,]),'infixl_operator_6':([14,166,178,234,285,321,],[49,229,49,49,229,49,]),'infixl_operator_7':([14,167,178,234,286,321,],[50,230,50,50,230,50,]),'infixr_operator_9':([14,169,178,234,235,289,321,],[51,231,51,51,231,231,51,]),'_data_rhs':([28,],[68,]),'data_cons':([28,205,],[69,262,]),'_data_cons':([28,205,],[70,70,]),'_simple_type_constraints':([30,141,],[73,215,]),'type_function_expr':([36,217,],[80,271,]),'type_term':([36,217,],[81,270,]),'type_app_expression':([36,217,],[82,82,]),'type_factor':([36,149,217,272,],[83,218,83,313,]),'type_variable':([36,77,138,149,217,272,],[84,143,208,84,84,84,]),'type_cons':([36,138,149,217,272,],[85,209,85,85,85,]),'pattern':([43,106,107,181,184,186,252,255,326,],[94,188,197,243,247,197,302,243,342,]),'simple_pattern':([43,106,107,181,186,252,255,326,],[95,190,196,244,249,303,244,343,]),'possibly_named_pattern':([43,106,107,181,184,186,252,255,326,],[96,96,96,96,96,96,96,96,96,]),'literal':([43,93,106,107,131,172,178,181,182,186,224,227,228,229,230,231,232,234,252,255,293,298,326,341,],[97,170,97,97,170,170,170,97,170,97,170,170,170,170,170,170,170,170,97,97,170,170,97,170,]),'cons_pattern':([43,106,107,181,186,252,255,326,],[98,98,98,98,98,98,98,98,]),'list_cons_pattern':([43,106,107,181,186,252,255,326,],[99,99,99,99,99,99,99,99,]),'tuple_cons_pattern':([43,106,107,181,186,252,255,326,],[100,100,100,100,100,100,100,100,]),'empty_list_pattern':([43,106,107,181,186,252,255,326,],[101,101,101,101,101,101,101,101,]),'empty_tuple_pattern':([43,106,107,181,186,252,255,326,],[102,102,102,102,102,102,102,102,]),'_pattern_name':([43,106,107,181,184,186,252,255,326,],[107,107,107,107,107,107,107,107,107,]),'number':([43,93,106,107,131,172,178,181,182,186,224,227,228,229,230,231,232,234,252,255,293,298,326,341,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'concrete_number':([43,93,106,107,131,172,178,181,182,186,224,227,228,229,230,231,232,234,252,255,293,298,326,341,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'string':([43,93,106,107,131,172,178,181,182,186,198,224,227,228,229,230,231,232,234,252,255,293,298,326,341,],[110,110,110,110,110,110,110,110,110,110,257,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'char':([43,93,106,107,131,172,178,181,182,186,198,224,227,228,229,230,231,232,234,252,255,293,298,326,341,],[111,111,111,111,111,111,111,111,111,111,258,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'date':([43,93,106,107,131,172,178,181,182,186,224,227,228,229,230,231,232,234,252,255,293,298,326,341,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'datetime':([43,93,106,107,131,172,178,181,182,186,224,227,228,229,230,231,232,234,252,255,293,298,326,341,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'date_interval':([43,93,106,107,131,172,178,181,182,186,224,227,228,229,230,231,232,234,252,255,293,298,326,341,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'datetime_interval':([43,93,106,107,131,172,178,181,182,186,224,227,228,229,230,231,232,234,252,255,293,298,326,341,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'_data_conses':([69,262,],[133,307,]),'_maybe_padding':([69,86,87,147,219,220,221,262,],[134,150,153,217,275,276,278,134,]),'_cons_args':([71,207,],[137,264,]),'_app_args_non_empty':([83,],[148,]),'_type_scheme_generics':([91,222,],[155,279,]),'st_type_expr':([92,260,],[157,305,]),'constrained_type_expr':([92,260,],[159,159,]),'expr':([93,131,172,178,182,224,227,228,229,230,231,232,234,293,298,341,],[162,204,236,237,246,280,236,236,236,236,236,236,290,323,325,347,]),'expr_term0':([93,131,172,178,182,224,227,228,229,230,231,232,234,293,298,341,],[163,163,163,163,163,281,163,163,163,163,163,163,163,163,163,163,]),'expr_term1':([93,131,172,178,182,224,227,228,229,230,231,232,234,293,298,341,],[164,164,164,164,164,164,284,164,164,164,164,164,164,164,164,164,]),'expr_term2':([93,131,172,178,182,224,227,228,229,230,231,232,234,293,298,341,],[165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,]),'expr_term6':([93,131,172,178,182,224,227,228,229,230,231,232,234,293,298,341,],[166,166,166,166,166,166,166,285,166,166,166,166,166,166,166,166,]),'expr_term7':([93,131,172,178,182,224,227,228,229,230,231,232,234,293,298,341,],[167,167,167,167,167,167,167,167,286,167,167,167,167,167,167,167,]),'expr_term9':([93,131,172,178,182,224,227,228,229,230,231,232,234,293,298,341,],[168,168,168,168,168,168,168,168,168,287,288,168,168,168,168,168,]),'expr_factor':([93,131,172,178,182,224,227,228,229,230,231,232,234,293,298,341,],[169,169,235,169,169,169,169,169,169,169,169,289,169,169,169,169,]),'identifier':([93,131,172,178,182,198,224,227,228,229,230,231,232,234,293,298,341,],[171,171,171,171,171,259,171,171,171,171,171,171,171,171,171,171,171,]),'enclosed_expr':([93,131,169,172,178,182,224,227,228,229,230,231,232,234,235,289,293,298,341,],[172,172,233,172,172,172,172,172,172,172,172,172,172,172,233,233,172,172,172,]),'letexpr':([93,131,172,178,182,224,227,228,229,230,231,232,234,293,298,341,],[173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,]),'where_expr':([93,131,172,178,182,224,227,228,229,230,231,232,234,293,298,341,],[174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,]),'lambda_expr':([93,131,172,178,182,224,227,228,229,230,231,232,234,293,298,341,],[175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,]),'simple_list_expr':([93,131,172,178,182,224,227,228,229,230,231,232,234,293,298,341,],[176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,]),'simple_tuple_expr':([93,131,172,178,182,224,227,228,229,230,231,232,234,293,298,341,],[177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,]),'patterns_comma_sep':([106,],[192,]),'_cons_params':([130,261,],[202,306,]),'cons_arg':([138,],[207,]),'_cons_arg_factor':([138,],[210,]),'local_definitions':([140,144,241,],[213,216,297,]),'_type_expr_list':([150,],[219,]),'infixl_operator_0':([162,204,236,237,246,280,290,323,325,347,],[224,224,224,224,224,224,224,224,224,224,]),'_list_items':([178,182,],[238,245,]),'patterns':([181,255,],[242,304,]),'_patterns_comma':([188,190,],[251,254,]),'_local_definition_set':([214,312,],[267,335,]),'_app_args':([218,313,],[273,336,]),'_list_items_cont':([237,246,323,],[292,292,340,]),'_derivations_list':([263,],[308,]),'equations':([282,283,],[318,322,]),'_patterns_comma_trail':([302,303,342,343,],[327,329,348,349,]),'_derivations_list_trail':([309,344,],[332,350,]),'_equation_set':([319,345,],[337,351,]),'st_expr':([341,],[346,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','__init__.py',531),
  ('expr_term9 -> expr_factor infixr_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','__init__.py',538),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','__init__.py',539),
  ('expr_term7 -> expr_term7 infixl_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','__init__.py',541),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','__init__.py',542),
  ('expr_term6 -> expr_term6 infixl_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','__init__.py',544),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','__init__.py',545),
  ('expr_term2 -> expr_term2 infixl_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','__init__.py',547),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','__init__.py',548),
  ('expr_term1 -> expr_term2 infixr_operator_2 expr_term1','expr_term1',3,'p_expressions_precedence_rules','__init__.py',550),
  ('expr_term1 -> expr_term2','expr_term1',1,'p_expressions_precedence_rules','__init__.py',551),
  ('expr_term0 -> expr infixl_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','__init__.py',553),
  ('expr_term0 -> expr_term1','expr_term0',1,'p_expressions_precedence_rules','__init__.py',554),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','__init__.py',567),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','__init__.py',569),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','__init__.py',571),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','__init__.py',572),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','__init__.py',573),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','__init__.py',574),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','__init__.py',575),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','__init__.py',576),
  ('expr_factor -> simple_list_expr','expr_factor',1,'p_standalone_definitions','__init__.py',577),
  ('expr_factor -> simple_tuple_expr','expr_factor',1,'p_standalone_definitions','__init__.py',578),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','__init__.py',580),
  ('st_type_expr -> constrained_type_expr','st_type_expr',1,'p_standalone_definitions','__init__.py',581),
  ('literal -> number','literal',1,'p_literals','__init__.py',589),
  ('literal -> concrete_number','literal',1,'p_literals','__init__.py',590),
  ('literal -> string','literal',1,'p_literals','__init__.py',591),
  ('literal -> char','literal',1,'p_literals','__init__.py',592),
  ('literal -> date','literal',1,'p_literals','__init__.py',593),
  ('literal -> datetime','literal',1,'p_literals','__init__.py',594),
  ('literal -> date_interval','literal',1,'p_literals','__init__.py',595),
  ('literal -> datetime_interval','literal',1,'p_literals','__init__.py',596),
  ('simple_tuple_expr -> LPAREN _list_items RPAREN','simple_tuple_expr',3,'p_tuple_expr','__init__.py',602),
  ('simple_list_expr -> LBRACKET _list_items RBRACKET','simple_list_expr',3,'p_list_expr','__init__.py',609),
  ('_list_items -> expr _list_items_cont','_list_items',2,'p_list_items','__init__.py',616),
  ('_list_items_cont -> COMMA expr _list_items_cont','_list_items_cont',3,'p_list_items','__init__.py',617),
  ('_list_items -> empty','_list_items',1,'p_list_items_empty','__init__.py',623),
  ('_list_items_cont -> empty','_list_items_cont',1,'p_list_items_empty','__init__.py',624),
  ('date -> DATE','date',1,'p_date','__init__.py',630),
  ('datetime -> DATETIME','datetime',1,'p_datetime','__init__.py',636),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','__init__.py',642),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','__init__.py',648),
  ('char -> CHAR','char',1,'p_char','__init__.py',654),
  ('string -> STRING','string',1,'p_string','__init__.py',659),
  ('identifier -> _identifier','identifier',1,'p_variable','__init__.py',664),
  ('_identifier -> UNDER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',671),
  ('_identifier -> UPPER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',672),
  ('_identifier -> LOWER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',673),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','__init__.py',680),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','__init__.py',685),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','__init__.py',686),
  ('enclosed_expr -> _enclosed_operator','enclosed_expr',1,'p_operators_as_expressios','__init__.py',692),
  ('_enclosed_operator -> LPAREN _st_operator RPAREN','_enclosed_operator',3,'p_enclosed_operator','__init__.py',698),
  ('infixr_operator_9 -> DOT_OPERATOR','infixr_operator_9',1,'p_operator','__init__.py',708),
  ('infixl_operator_7 -> STAR','infixl_operator_7',1,'p_operator','__init__.py',710),
  ('infixl_operator_7 -> SLASH','infixl_operator_7',1,'p_operator','__init__.py',711),
  ('infixl_operator_7 -> DOUBLESLASH','infixl_operator_7',1,'p_operator','__init__.py',712),
  ('infixl_operator_7 -> PERCENT','infixl_operator_7',1,'p_operator','__init__.py',713),
  ('infixl_operator_6 -> PLUS','infixl_operator_6',1,'p_operator','__init__.py',715),
  ('infixl_operator_6 -> MINUS','infixl_operator_6',1,'p_operator','__init__.py',716),
  ('infixr_operator_2 -> COLON','infixr_operator_2',1,'p_operator','__init__.py',719),
  ('infixl_operator_2 -> OPERATOR','infixl_operator_2',1,'p_operator','__init__.py',721),
  ('infixl_operator_2 -> ARROW','infixl_operator_2',1,'p_operator','__init__.py',722),
  ('infixl_operator_2 -> ATSYM','infixl_operator_2',1,'p_operator','__init__.py',723),
  ('infixl_operator_0 -> TICK_OPERATOR','infixl_operator_0',1,'p_operator','__init__.py',725),
  ('_st_operator -> infixl_operator_2','_st_operator',1,'p_operator','__init__.py',727),
  ('_st_operator -> infixr_operator_2','_st_operator',1,'p_operator','__init__.py',728),
  ('_st_operator -> infixl_operator_6','_st_operator',1,'p_operator','__init__.py',729),
  ('_st_operator -> infixl_operator_7','_st_operator',1,'p_operator','__init__.py',730),
  ('_st_operator -> infixr_operator_9','_st_operator',1,'p_operator','__init__.py',731),
  ('_st_operator -> COMMA','_st_operator',1,'p_operator','__init__.py',732),
  ('number -> BASE10_INTEGER','number',1,'p_integer','__init__.py',739),
  ('number -> BASE16_INTEGER','number',1,'p_integer','__init__.py',740),
  ('number -> BASE8_INTEGER','number',1,'p_integer','__init__.py',741),
  ('number -> BASE2_INTEGER','number',1,'p_integer','__init__.py',742),
  ('number -> FLOAT','number',1,'p_float','__init__.py',771),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','__init__.py',776),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','__init__.py',777),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','__init__.py',778),
  ('empty -> <empty>','empty',0,'p_empty','__init__.py',787),
  ('lambda_expr -> BACKSLASH patterns ARROW expr','lambda_expr',4,'p_lambda_definition','__init__.py',792),
  ('pattern -> possibly_named_pattern','pattern',1,'p_pattern','__init__.py',801),
  ('simple_pattern -> literal','simple_pattern',1,'p_pattern','__init__.py',803),
  ('simple_pattern -> cons_pattern','simple_pattern',1,'p_pattern','__init__.py',804),
  ('simple_pattern -> list_cons_pattern','simple_pattern',1,'p_pattern','__init__.py',805),
  ('simple_pattern -> tuple_cons_pattern','simple_pattern',1,'p_pattern','__init__.py',806),
  ('simple_pattern -> empty_list_pattern','simple_pattern',1,'p_pattern','__init__.py',807),
  ('simple_pattern -> empty_tuple_pattern','simple_pattern',1,'p_pattern','__init__.py',808),
  ('simple_pattern -> LOWER_IDENTIFIER','simple_pattern',1,'p_var_pattern','__init__.py',814),
  ('simple_pattern -> UNDER_IDENTIFIER','simple_pattern',1,'p_var_pattern','__init__.py',815),
  ('possibly_named_pattern -> _pattern_name simple_pattern','possibly_named_pattern',2,'p_possibly_named_pattern','__init__.py',821),
  ('_pattern_name -> LOWER_IDENTIFIER ATSYM','_pattern_name',2,'p_pattern_name','__init__.py',832),
  ('_pattern_name -> empty','_pattern_name',1,'p_no_pattern_name','__init__.py',838),
  ('simple_pattern -> UPPER_IDENTIFIER','simple_pattern',1,'p_simplecons_pattern','__init__.py',845),
  ('list_cons_pattern -> pattern COLON pattern','list_cons_pattern',3,'p_list_cons_for_param','__init__.py',851),
  ('list_cons_pattern -> simple_pattern COLON simple_pattern','list_cons_pattern',3,'p_list_cons_for_param','__init__.py',852),
  ('cons_pattern -> LPAREN _identifier SPACE patterns RPAREN','cons_pattern',5,'p_param_pattern','__init__.py',858),
  ('simple_pattern -> LPAREN pattern RPAREN','simple_pattern',3,'p_pattern_trivially_enclosed','__init__.py',866),
  ('simple_pattern -> LPAREN simple_pattern RPAREN','simple_pattern',3,'p_pattern_trivially_enclosed','__init__.py',867),
  ('empty_list_pattern -> LBRACKET RBRACKET','empty_list_pattern',2,'p_empty_list_as_pattern','__init__.py',873),
  ('empty_tuple_pattern -> LPAREN RPAREN','empty_tuple_pattern',2,'p_unit_value_as_pattern','__init__.py',880),
  ('tuple_cons_pattern -> LPAREN patterns_comma_sep RPAREN','tuple_cons_pattern',3,'p_tuple_cons_pattern','__init__.py',886),
  ('patterns -> pattern _patterns','patterns',2,'p_patterns','__init__.py',894),
  ('patterns -> simple_pattern _patterns','patterns',2,'p_patterns','__init__.py',895),
  ('patterns_comma_sep -> pattern _patterns_comma','patterns_comma_sep',2,'p_patterns','__init__.py',896),
  ('patterns_comma_sep -> simple_pattern _patterns_comma','patterns_comma_sep',2,'p_patterns','__init__.py',897),
  ('_patterns -> SPACE pattern _patterns','_patterns',3,'p_patterns','__init__.py',898),
  ('_patterns -> SPACE simple_pattern _patterns','_patterns',3,'p_patterns','__init__.py',899),
  ('_patterns_comma -> COMMA pattern _patterns_comma_trail','_patterns_comma',3,'p_patterns','__init__.py',900),
  ('_patterns_comma -> COMMA simple_pattern _patterns_comma_trail','_patterns_comma',3,'p_patterns','__init__.py',901),
  ('_patterns_comma_trail -> COMMA pattern _patterns_comma_trail','_patterns_comma_trail',3,'p_patterns','__init__.py',902),
  ('_patterns_comma_trail -> COMMA simple_pattern _patterns_comma_trail','_patterns_comma_trail',3,'p_patterns','__init__.py',903),
  ('_patterns -> empty','_patterns',1,'p_patterns_empty','__init__.py',909),
  ('_patterns_comma_trail -> empty','_patterns_comma_trail',1,'p_patterns_empty','__init__.py',910),
  ('equation -> _identifier _patterns EQ expr','equation',4,'p_equation','__init__.py',916),
  ('equation -> _enclosed_operator _patterns EQ expr','equation',4,'p_equation','__init__.py',917),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','__init__.py',927),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','__init__.py',935),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','__init__.py',942),
  ('letexpr -> KEYWORD_LET SPACE local_definitions KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','__init__.py',952),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','__init__.py',960),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','__init__.py',961),
  ('type_expr -> type_scheme type_function_expr','type_expr',2,'p_type_expr','__init__.py',971),
  ('type_expr -> type_scheme type_term','type_expr',2,'p_type_expr','__init__.py',972),
  ('type_scheme -> empty','type_scheme',1,'p_type_scheme_empty','__init__.py',981),
  ('type_scheme -> KEYWORD_FORALL SPACE _type_scheme_generics','type_scheme',3,'p_type_scheme','__init__.py',985),
  ('_type_scheme_generics -> _identifier SPACE _type_scheme_generics','_type_scheme_generics',3,'p_type_scheme_generics','__init__.py',992),
  ('_type_scheme_generics -> _identifier DOT_OPERATOR','_type_scheme_generics',2,'p_last_type_scheme_generic','__init__.py',997),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','__init__.py',1002),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','__init__.py',1003),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','__init__.py',1013),
  ('type_term -> type_factor','type_term',1,'p_type_term','__init__.py',1014),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','__init__.py',1019),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','__init__.py',1031),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','__init__.py',1032),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','__init__.py',1038),
  ('type_variable -> LOWER_IDENTIFIER','type_variable',1,'p_type_variable','__init__.py',1043),
  ('type_cons -> UPPER_IDENTIFIER','type_cons',1,'p_type_cons','__init__.py',1048),
  ('type_factor -> type_variable','type_factor',1,'p_type_factor_identifier','__init__.py',1053),
  ('type_factor -> type_cons','type_factor',1,'p_type_factor_identifier','__init__.py',1054),
  ('type_factor -> LPAREN _maybe_padding _type_expr_list _maybe_padding RPAREN','type_factor',5,'p_type_factor_tuple','__init__.py',1061),
  ('type_factor -> LPAREN RPAREN','type_factor',2,'p_type_factor_unit_type','__init__.py',1067),
  ('_type_expr_list -> type_expr COMMA _type_expr_list_trail','_type_expr_list',3,'p_type_expr_list','__init__.py',1072),
  ('_type_expr_list_trail -> type_expr COMMA _type_expr_list_trail','_type_expr_list_trail',3,'p_type_expr_list','__init__.py',1073),
  ('_type_expr_list_trail -> type_expr','_type_expr_list_trail',1,'p_type_expr_list_last_item','__init__.py',1079),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','__init__.py',1085),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','__init__.py',1090),
  ('constrained_type_expr -> _constrained_type_expr_bare','constrained_type_expr',1,'p_constrained_type_expr','__init__.py',1122),
  ('_constrained_type_expr_bare -> type_constraints FATARROW type_expr','_constrained_type_expr_bare',3,'p_constrained_type_expr_bare','__init__.py',1130),
  ('_maybe_constrained_type_expr -> type_expr','_maybe_constrained_type_expr',1,'p_maybe_constrained_type_expr_no_constraint','__init__.py',1149),
  ('_maybe_constrained_type_expr -> _constrained_type_expr_bare','_maybe_constrained_type_expr',1,'p_maybe_constrained_type_expr_constrained','__init__.py',1155),
  ('instance -> KEYWORD_INSTANCE _maybe_constrained_type_expr KEYWORD_WHERE PADDING local_definitions','instance',5,'p_instance','__init__.py',1161),
  ('type_constraints -> _type_expr_list_trail','type_constraints',1,'p_type_constraint','__init__.py',1180),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','__init__.py',1186),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','__init__.py',1187),
  ('program -> definitions _trailing_new_lines','program',2,'p_program','__init__.py',1195),
  ('_trailing_new_lines -> empty','_trailing_new_lines',1,'p_trailing_new_lines','__init__.py',1201),
  ('_trailing_new_lines -> NEWLINE _trailing_new_lines','_trailing_new_lines',2,'p_trailing_new_lines','__init__.py',1202),
  ('definitions -> definition _definition_set','definitions',2,'p_definitions','__init__.py',1207),
  ('_definition_set -> newlines definition _definition_set','_definition_set',3,'p_definition_set','__init__.py',1213),
  ('newlines -> NEWLINE _trailing_new_lines','newlines',2,'p_newlines','__init__.py',1219),
  ('_definition_set -> empty','_definition_set',1,'p_definition_set2','__init__.py',1223),
  ('_definition_set -> newlines','_definition_set',1,'p_definition_set2','__init__.py',1224),
  ('definition -> local_definition','definition',1,'p_definition','__init__.py',1230),
  ('definition -> datatype_definition','definition',1,'p_definition','__init__.py',1231),
  ('definition -> typeclass','definition',1,'p_definition','__init__.py',1232),
  ('definition -> instance','definition',1,'p_definition','__init__.py',1233),
  ('local_definition -> nametype_decl','local_definition',1,'p_local_definition','__init__.py',1240),
  ('local_definition -> valuedef','local_definition',1,'p_local_definition','__init__.py',1241),
  ('local_definitions -> local_definition _local_definition_set','local_definitions',2,'p_local_definitions','__init__.py',1247),
  ('_local_definition_set -> PADDING definition _local_definition_set','_local_definition_set',3,'p_local_definition_set','__init__.py',1253),
  ('_local_definition_set -> empty','_local_definition_set',1,'p_local_definition_set_empty','__init__.py',1259),
  ('typeclass -> KEYWORD_CLASS _typeclass_def KEYWORD_WHERE PADDING local_definitions','typeclass',5,'p_typeclass','__init__.py',1265),
  ('_typeclass_def -> simple_type_constraint','_typeclass_def',1,'p_typeclass_def','__init__.py',1273),
  ('_typeclass_def -> simple_type_constraints FATARROW simple_type_constraint','_typeclass_def',3,'p_typeclass_def_with_constraints','__init__.py',1279),
  ('simple_type_constraint -> UPPER_IDENTIFIER SPACE type_variable','simple_type_constraint',3,'p_type_constraint_def','__init__.py',1285),
  ('simple_type_constraints -> simple_type_constraint _simple_type_constraints','simple_type_constraints',2,'p_type_constraints','__init__.py',1291),
  ('_simple_type_constraints -> COMMA simple_type_constraint _simple_type_constraints','_simple_type_constraints',3,'p_type_constraints','__init__.py',1292),
  ('_simple_type_constraints -> empty','_simple_type_constraints',1,'p_type_constraints_empty','__init__.py',1298),
  ('valuedef -> equation','valuedef',1,'p_valuedef','__init__.py',1304),
  ('nametype_decl -> _identifier COLON COLON st_type_expr','nametype_decl',4,'p_nametype_decl','__init__.py',1310),
  ('nametype_decl -> LPAREN _st_operator RPAREN COLON COLON st_type_expr','nametype_decl',6,'p_nametype_decl_operators','__init__.py',1319),
  ('datatype_definition -> _datatype_lhs EQ _data_rhs','datatype_definition',3,'p_datatype_definition','__init__.py',1328),
  ('_datatype_lhs -> KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params','_datatype_lhs',4,'p_datatype_lhs','__init__.py',1341),
  ('_cons_params -> SPACE LOWER_IDENTIFIER _cons_params','_cons_params',3,'p_datatype_cons_params','__init__.py',1350),
  ('_cons_params -> empty','_cons_params',1,'p_datatype_cons_params_empty','__init__.py',1356),
  ('_data_rhs -> data_cons _data_conses','_data_rhs',2,'p_datatype_body','__init__.py',1362),
  ('_data_conses -> _maybe_padding PIPE data_cons _data_conses','_data_conses',4,'p_datatype_body','__init__.py',1363),
  ('_data_conses -> empty','_data_conses',1,'p_datatype_conses_empty','__init__.py',1369),
  ('_data_conses -> _maybe_padding KEYWORD_DERIVING LPAREN _derivations_list RPAREN','_data_conses',5,'p_datatype_derivations','__init__.py',1374),
  ('data_cons -> _data_cons','data_cons',1,'p_data_cons','__init__.py',1380),
  ('_data_cons -> UPPER_IDENTIFIER _cons_args','_data_cons',2,'p_bare_data_cons','__init__.py',1386),
  ('_cons_args -> SPACE cons_arg _cons_args','_cons_args',3,'p_data_cons_args','__init__.py',1391),
  ('_cons_args -> empty','_cons_args',1,'p_data_cons_args_empty','__init__.py',1397),
  ('cons_arg -> type_variable','cons_arg',1,'p_cons_arg','__init__.py',1403),
  ('cons_arg -> type_cons','cons_arg',1,'p_cons_arg','__init__.py',1404),
  ('cons_arg -> _cons_arg_factor','cons_arg',1,'p_cons_arg','__init__.py',1405),
  ('_cons_arg_factor -> LPAREN type_expr RPAREN','_cons_arg_factor',3,'p_cons_arg_factor','__init__.py',1411),
  ('_cons_arg_factor -> LBRACKET type_expr RBRACKET','_cons_arg_factor',3,'p_cons_arg_factor_list','__init__.py',1417),
  ('_derivations_list -> UPPER_IDENTIFIER _derivations_list_trail','_derivations_list',2,'p_derivations_list','__init__.py',1423),
  ('_derivations_list_trail -> COMMA UPPER_IDENTIFIER _derivations_list_trail','_derivations_list_trail',3,'p_derivations_list','__init__.py',1424),
  ('_derivations_list_trail -> empty','_derivations_list_trail',1,'p_derivations_list_trail_empty','__init__.py',1430),
]
