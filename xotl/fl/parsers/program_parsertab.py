
# program_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON COMMA DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FATARROW FLOAT KEYWORD_CLASS KEYWORD_DATA KEYWORD_DERIVING KEYWORD_FORALL KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LOWER_IDENTIFIER LPAREN MINUS NEWLINE OPERATOR PADDING PERCENT PIPE PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATOR UNDER_IDENTIFIER UPPER_IDENTIFIERexpr_factor : expr_factor SPACE expr_factor\n    expr_term9 : expr_factor infixr_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infixl_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infixl_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infixl_operator_2 expr_term6\n               | expr_term6\n\n    expr_term1 : expr_term2 infixr_operator_2 expr_term1\n               | expr_term2\n\n    expr_term0 : expr infixl_operator_0 expr_term0\n               | expr_term1\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | letexpr\n                | where_expr\n                | lambda_expr\n                | simple_list_expr\n                | simple_tuple_expr\n\n    st_type_expr : type_expr\n                 | constrained_type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    simple_tuple_expr : LPAREN _list_items RPAREN\n    simple_list_expr : LBRACKET _list_items RBRACKET\n    _list_items : expr _list_items_cont\n       _list_items_cont : COMMA expr _list_items_cont\n    _list_items : empty\n       _list_items_cont : empty\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    char : CHARstring : STRINGidentifier : _identifier\n\n    _identifier : UNDER_IDENTIFIER\n                   | UPPER_IDENTIFIER\n                   | LOWER_IDENTIFIER\n\n    enclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : _enclosed_operator\n    _enclosed_operator : LPAREN _st_operator RPAREN\n    infixr_operator_9 : DOT_OPERATOR\n\n    infixl_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infixl_operator_6 : PLUS\n                     | MINUS\n\n    infixr_operator_2 : COLON\n\n    infixl_operator_2 : OPERATOR\n                      | ARROW\n\n    infixl_operator_0 : TICK_OPERATOR\n\n    _st_operator : infixl_operator_2\n                 | infixr_operator_2\n                 | infixl_operator_6\n                 | infixl_operator_7\n                 | infixr_operator_9\n                 | COMMA\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH patterns ARROW expr\n    \n    pattern : literal\n    pattern : cons_pattern\n    pattern : list_cons_pattern\n    pattern : tuple_cons_pattern\n    pattern : empty_list_pattern\n    pattern : empty_tuple_pattern\n    pattern : LOWER_IDENTIFIER\n       pattern : UNDER_IDENTIFIER\n    pattern : UPPER_IDENTIFIER\n    list_cons_pattern : pattern COLON pattern\n    cons_pattern : LPAREN _identifier SPACE patterns RPARENempty_list_pattern : LBRACKET RBRACKETempty_tuple_pattern : LPAREN RPARENtuple_cons_pattern : LPAREN patterns_comma_sep RPAREN\n    patterns : pattern _patterns\n       patterns_comma_sep : pattern _patterns_comma\n       _patterns : SPACE pattern _patterns\n       _patterns_comma : COMMA pattern _patterns_comma\n    _patterns : empty\n       _patterns_comma : empty\n    equation : _identifier _patterns EQ expr\n       equation : _enclosed_operator _patterns EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE local_definitions KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    type_expr : type_scheme type_function_expr\n                 | type_scheme type_termtype_scheme : emptytype_scheme : KEYWORD_FORALL SPACE _type_scheme_generics_type_scheme_generics : _identifier SPACE _type_scheme_generics_type_scheme_generics : _identifier DOT_OPERATORtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_variable : LOWER_IDENTIFIERtype_cons : UPPER_IDENTIFIERtype_factor : type_variable\n                   | type_cons\n\n    type_factor : LPAREN _maybe_padding _type_expr_list _maybe_padding RPARENtype_factor : LPAREN RPAREN_type_expr_list : type_expr COMMA _type_expr_list_trail\n       _type_expr_list_trail : type_expr COMMA _type_expr_list_trail\n    _type_expr_list_trail : type_expr\n    type_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKETconstrained_type_expr : _constrained_type_expr_bare\n\n    _constrained_type_expr_bare : type_constraints FATARROW type_expr\n    _maybe_constrained_type_expr : type_expr\n    _maybe_constrained_type_expr : _constrained_type_expr_bare\n    instance : KEYWORD_INSTANCE _maybe_constrained_type_expr                   KEYWORD_WHERE PADDING local_definitionstype_constraints : _type_expr_list_trail\n    _maybe_padding : PADDING\n                      | empty\n    program : definitions _trailing_new_lines\n    _trailing_new_lines : empty\n       _trailing_new_lines : NEWLINE _trailing_new_lines\n    definitions : definition _definition_set\n    _definition_set : newlines definition _definition_set\n    newlines : NEWLINE _trailing_new_lines_definition_set : empty\n       _definition_set : newlines\n    definition : local_definition\n                  | datatype_definition\n                  | typeclass\n                  | instance\n    \n    local_definition : nametype_decl\n                     | valuedef\n    local_definitions : local_definition _local_definition_set\n    _local_definition_set : PADDING definition _local_definition_set\n    _local_definition_set : empty\n    typeclass : KEYWORD_CLASS _typeclass_def                    KEYWORD_WHERE PADDING local_definitions\n    _typeclass_def : simple_type_constraint\n    _typeclass_def : simple_type_constraints FATARROW simple_type_constraint\n    simple_type_constraint : UPPER_IDENTIFIER SPACE type_variable\n    simple_type_constraints : simple_type_constraint _simple_type_constraints\n       _simple_type_constraints : COMMA simple_type_constraint _simple_type_constraints\n    _simple_type_constraints : empty\n    valuedef : equation\n    nametype_decl : _identifier COLON COLON st_type_expr\n    nametype_decl : LPAREN _st_operator RPAREN COLON COLON st_type_expr\n    datatype_definition : _datatype_lhs EQ _data_rhs\n    _datatype_lhs : KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params\n    _cons_params : SPACE LOWER_IDENTIFIER _cons_params\n    _cons_params : empty\n    _data_rhs : data_cons _data_conses\n       _data_conses : _maybe_padding PIPE data_cons _data_conses\n    _data_conses : empty_data_conses : _maybe_padding KEYWORD_DERIVING                        LPAREN _derivations_list RPARENdata_cons : _data_cons_data_cons : UPPER_IDENTIFIER _cons_args_cons_args : SPACE cons_arg _cons_args\n    _cons_args : empty\n    cons_arg : type_variable\n       cons_arg : type_cons\n       cons_arg : _cons_arg_factor\n    _cons_arg_factor : LPAREN type_expr RPAREN\n    _cons_arg_factor : LBRACKET type_expr RBRACKET\n    _derivations_list : UPPER_IDENTIFIER _derivations_list_trail\n       _derivations_list_trail : COMMA UPPER_IDENTIFIER _derivations_list_trail\n    _derivations_list_trail : empty\n    '
    
_lr_action_items = {'KEYWORD_CLASS':([0,22,23,25,27,64,66,252,],[11,-144,-80,11,-80,-145,-148,11,]),'KEYWORD_INSTANCE':([0,22,23,25,27,64,66,252,],[12,-144,-80,12,-80,-145,-148,12,]),'LPAREN':([0,12,17,18,19,22,23,25,27,36,38,43,46,53,54,55,56,57,58,59,60,61,64,66,78,85,86,89,91,92,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,126,131,133,135,139,142,144,145,147,148,150,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,179,193,195,200,201,206,212,213,215,216,217,218,219,220,221,222,223,224,230,236,237,238,239,242,244,252,256,261,263,265,266,267,268,269,270,271,272,273,275,277,279,280,282,284,300,301,304,307,316,317,318,320,322,323,324,326,],[14,-80,-48,-47,-49,-144,-80,14,-80,85,-112,111,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,-145,-148,-80,-80,-80,-80,-80,173,-26,-27,-28,-29,-30,-31,-32,-33,111,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,173,-141,200,14,14,-80,85,-80,-142,-80,-113,-46,-102,-15,-13,-11,-9,-7,-5,223,-16,-17,173,-19,-20,-21,-22,-23,173,-53,111,173,111,-103,247,-80,-80,85,-115,173,-65,173,173,173,173,173,173,-52,173,223,14,-77,-78,-79,111,111,-80,14,85,-80,-114,-12,303,303,-10,-8,-6,-4,-2,-1,-50,173,-34,-54,173,-35,-108,-80,-109,-81,-104,303,-106,173,-80,-107,-14,-105,]),'KEYWORD_DATA':([0,22,23,25,27,64,66,252,],[16,-144,-80,16,-80,-145,-148,16,]),'UNDER_IDENTIFIER':([0,22,23,25,27,43,46,53,54,55,56,57,58,59,60,61,64,66,90,92,111,126,135,139,167,173,174,176,177,179,180,211,213,215,216,217,218,219,220,221,223,230,239,242,252,266,267,275,277,280,282,317,320,],[18,-144,-80,18,-80,101,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,-145,-148,18,18,184,18,18,18,18,18,-53,101,18,101,18,18,18,-65,18,18,18,18,18,18,18,18,101,101,18,18,18,-50,18,-54,18,18,18,]),'UPPER_IDENTIFIER':([0,11,12,22,23,25,27,28,36,38,43,46,53,54,55,56,57,58,59,60,61,62,64,66,73,75,78,85,86,89,90,91,92,111,126,131,133,135,139,142,144,145,147,148,150,167,173,174,176,177,179,180,194,200,201,206,211,212,213,215,216,217,218,219,220,221,223,230,239,242,244,247,252,256,261,263,266,267,275,277,280,282,312,317,320,],[17,32,-80,-144,-80,17,-80,70,88,-112,102,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,125,-145,-148,32,32,-80,-80,-80,-80,17,-80,17,185,17,-141,88,17,17,-80,88,-80,-142,-80,-113,17,17,-53,102,17,102,17,70,-80,-80,88,17,-115,17,-65,17,17,17,17,17,17,17,17,102,102,-80,291,17,88,-80,-114,17,17,-50,17,-54,17,321,17,17,]),'LOWER_IDENTIFIER':([0,12,22,23,25,27,36,38,43,46,53,54,55,56,57,58,59,60,61,64,66,76,78,85,86,89,90,91,92,111,126,131,133,135,139,142,144,145,147,148,150,167,173,174,176,177,179,180,190,200,201,206,211,212,213,215,216,217,218,219,220,221,223,230,239,242,244,252,256,261,263,266,267,275,277,280,282,317,320,],[19,-80,-144,-80,19,-80,87,-112,100,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,-145,-148,87,-80,-80,-80,-80,19,-80,19,186,19,-141,87,19,19,-80,87,-80,-142,-80,-113,19,19,-53,100,19,100,19,245,-80,-80,87,19,-115,19,-65,19,19,19,19,19,19,19,19,100,100,-80,19,87,-80,-114,19,19,-50,19,-54,19,19,19,]),'$end':([1,2,3,4,5,6,7,8,9,15,17,18,19,21,22,23,24,25,26,27,64,65,66,67,68,69,70,79,80,81,82,83,84,87,88,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,120,121,122,123,127,128,130,132,134,143,146,149,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,193,196,197,198,199,202,203,205,207,222,224,236,237,238,246,248,251,253,254,255,257,258,265,268,269,270,271,272,273,275,279,280,284,287,289,292,293,294,295,296,297,299,300,301,304,307,310,314,315,316,318,322,323,324,326,],[0,-80,-80,-151,-152,-153,-154,-155,-156,-167,-48,-47,-49,-143,-144,-80,-146,-150,-149,-80,-145,-80,-148,-170,-80,-178,-80,-110,-111,-118,-119,-126,-127,-124,-125,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-147,-174,-176,-179,-181,-120,-129,-136,-168,-24,-25,-135,-46,-102,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-53,-103,-80,-182,-183,-184,-160,-80,-139,-80,-52,-51,-77,-78,-79,-80,-180,-157,-159,-117,-116,-122,-123,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,-169,-175,-185,-186,-80,-80,-128,-133,-134,-108,-80,-109,-81,-177,-158,-121,-104,-106,-80,-107,-14,-105,]),'NEWLINE':([2,3,4,5,6,7,8,9,15,17,18,19,22,23,24,25,26,27,64,65,66,67,68,69,70,79,80,81,82,83,84,87,88,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,120,121,122,123,127,128,130,132,134,143,146,149,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,193,196,197,198,199,202,203,205,207,222,224,236,237,238,246,248,251,253,254,255,257,258,265,268,269,270,271,272,273,275,279,280,284,287,289,292,293,294,295,296,297,299,300,301,304,307,310,314,315,316,318,322,323,324,326,],[23,27,-151,-152,-153,-154,-155,-156,-167,-48,-47,-49,-144,23,-146,-150,-149,23,-145,27,-148,-170,-80,-178,-80,-110,-111,-118,-119,-126,-127,-124,-125,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-147,-174,-176,-179,-181,-120,-129,-136,-168,-24,-25,-135,-46,-102,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-53,-103,-80,-182,-183,-184,-160,-80,-139,-80,-52,-51,-77,-78,-79,-80,-180,-157,-159,-117,-116,-122,-123,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,-169,-175,-185,-186,-80,-80,-128,-133,-134,-108,-80,-109,-81,-177,-158,-121,-104,-106,-80,-107,-14,-105,]),'PADDING':([4,5,6,7,8,9,15,17,18,19,67,68,69,70,71,77,79,80,81,82,83,84,85,86,87,88,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,120,121,122,123,128,130,132,134,140,141,142,143,146,149,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,193,196,197,198,199,202,203,205,207,208,209,210,214,222,224,236,237,238,246,248,251,253,254,255,257,258,265,268,269,270,271,272,273,275,279,280,284,287,289,292,293,294,295,296,297,298,299,300,301,304,307,310,314,315,316,318,322,323,324,326,],[-151,-152,-153,-154,-155,-156,-167,-48,-47,-49,-170,131,-178,-80,135,139,-110,-111,-118,-119,-126,-127,131,131,-124,-125,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-174,-176,-179,-181,-132,-131,131,-120,-129,-136,-168,-24,-25,-135,-46,-102,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-53,-103,-80,-182,-183,-184,-160,252,-139,-80,131,131,131,267,-52,-51,-77,-78,-79,131,-180,-157,-159,-117,-116,-122,-123,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,-169,-175,-185,-186,252,-80,-128,-133,-130,-134,-108,317,-109,-81,-177,-158,-121,-104,-106,317,-107,-14,-105,]),'KEYWORD_IN':([4,5,6,7,8,9,15,17,18,19,67,68,69,70,79,80,81,82,83,84,87,88,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,120,121,122,123,128,130,132,134,143,146,149,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,193,196,197,198,199,202,203,205,207,222,224,236,237,238,246,248,251,253,254,255,257,258,265,268,269,270,271,272,273,275,279,280,281,284,287,289,292,293,294,295,296,297,299,300,301,304,307,310,314,315,316,318,322,323,324,326,],[-151,-152,-153,-154,-155,-156,-167,-48,-47,-49,-170,-80,-178,-80,-110,-111,-118,-119,-126,-127,-124,-125,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-174,-176,-179,-181,-120,-129,-136,-168,-24,-25,-135,-46,-102,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-53,-103,-80,-182,-183,-184,-160,-80,-139,-80,-52,-51,-77,-78,-79,-80,-180,-157,-159,-117,-116,-122,-123,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,306,-35,-169,-175,-185,-186,-80,-80,-128,-133,-134,-108,-80,-109,-81,-177,-158,-121,-104,-106,-80,-107,-14,-105,]),'EQ':([10,13,17,18,19,20,42,44,63,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,120,121,122,123,124,125,156,178,182,188,191,192,235,236,237,238,240,245,280,288,302,308,],[28,-80,-48,-47,-49,-80,92,-100,126,-80,-82,-83,-84,-85,-86,-87,-88,-89,-90,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-54,-80,-46,-98,-94,-93,-171,-173,-91,-77,-78,-79,-95,-80,-54,-172,-80,-92,]),'KEYWORD_FORALL':([12,78,85,86,89,91,131,145,147,148,200,201,244,261,],[39,39,-80,-80,39,39,-141,39,-142,39,39,39,39,39,]),'LBRACKET':([12,36,38,43,46,53,54,55,56,57,58,59,60,61,78,85,86,89,91,92,111,126,131,133,142,144,145,147,148,150,167,173,174,176,177,179,200,201,206,212,213,215,216,217,218,219,220,221,223,239,242,244,256,261,263,275,277,280,282,320,],[-80,86,-112,112,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,-80,-80,-80,-80,-80,177,112,177,-141,201,-80,86,-80,-142,-80,-113,177,177,-53,112,177,112,-80,-80,86,-115,177,-65,177,177,177,177,177,177,177,112,112,-80,86,-80,-114,-50,177,-54,177,177,]),'COLON':([13,14,17,18,19,41,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,120,121,122,123,124,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,182,184,185,186,187,188,189,193,222,223,224,232,235,236,237,238,240,265,268,269,270,271,272,273,275,279,280,284,286,300,301,303,304,307,308,316,318,322,323,324,326,],[41,46,-48,-47,-49,91,179,-82,-83,-84,-85,-86,-87,-88,-89,-90,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,189,-46,-102,-15,-13,46,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,46,-53,-94,-89,-90,-88,179,-93,244,-103,-52,46,-3,179,179,-77,-78,-79,-95,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,179,-108,-80,46,-109,-81,-92,-104,-106,-80,-107,-14,-105,]),'SPACE':([13,16,17,18,19,20,32,39,70,82,83,84,87,88,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,120,121,122,123,124,125,146,151,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,181,182,184,185,186,188,193,196,197,198,199,207,214,222,224,232,235,236,237,238,240,245,265,268,269,270,271,272,273,275,279,280,284,292,293,295,296,297,299,300,301,302,304,306,307,308,316,318,322,323,324,326,],[43,62,-48,-47,-49,43,76,90,133,144,-126,-127,-124,-125,43,-82,-83,-84,-85,-86,-87,-88,-89,-90,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-54,190,-129,211,-46,-102,-15,-13,-11,-9,-7,-5,221,-16,-17,-18,-19,-20,-21,-22,-23,-53,230,239,-94,-47,-48,-49,-93,-103,133,-182,-183,-184,256,266,-52,221,43,-91,-77,-78,-79,-95,190,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,-185,-186,256,-128,-133,-134,-108,-80,43,-109,320,-81,-92,-104,-106,-80,-107,-14,-105,]),'COMMA':([14,17,18,19,30,34,79,80,81,82,83,84,87,88,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,120,121,122,123,136,138,140,143,146,153,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,182,184,185,186,187,188,193,207,209,222,223,224,226,234,235,236,237,238,240,254,255,257,258,265,268,269,270,271,272,273,275,279,280,284,286,291,295,296,297,299,300,301,303,304,305,307,308,315,316,318,321,322,323,324,326,],[52,-48,-47,-49,73,78,-110,-111,-118,-119,-126,-127,-124,-125,-82,-83,-84,-85,-86,-87,-88,-89,-90,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,73,-163,78,-120,-129,78,-46,-102,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,52,-53,-94,-89,-90,-88,242,-93,-103,-80,261,-52,52,-51,277,277,-91,-77,-78,-79,-95,-117,-116,-122,-123,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,242,312,-80,-128,-133,-134,-108,-80,52,-109,277,-81,-92,-121,-104,-106,312,-80,-107,-14,-105,]),'OPERATOR':([14,17,18,19,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,120,121,122,123,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,193,222,223,224,236,237,238,265,268,269,270,271,272,273,275,279,280,284,300,301,303,304,307,316,318,322,323,324,326,],[53,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-46,-102,-15,-13,53,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,53,-53,-103,-52,53,-3,-77,-78,-79,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,-108,-80,53,-109,-81,-104,-106,-80,-107,-14,-105,]),'ARROW':([14,17,18,19,44,80,81,82,83,84,87,88,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,120,121,122,123,143,146,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,178,182,188,193,207,222,223,224,231,232,235,236,237,238,240,254,257,258,265,268,269,270,271,272,273,275,279,280,283,284,295,296,297,299,300,301,303,304,307,308,315,316,318,322,323,324,326,],[54,-48,-47,-49,-100,142,-118,-119,-126,-127,-124,-125,-80,-82,-83,-84,-85,-86,-87,-88,-89,-90,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-120,-129,-46,-102,-15,-13,54,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,54,-53,-98,-94,-93,-103,-80,-52,54,-3,282,-80,-91,-77,-78,-79,-95,142,-122,-123,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-96,-35,-80,-128,-133,-134,-108,-80,54,-109,-81,-92,-121,-104,-106,-80,-107,-14,-105,]),'PLUS':([14,17,18,19,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,120,121,122,123,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,193,222,223,224,236,237,238,265,268,269,270,271,272,273,275,279,280,284,300,301,303,304,307,316,318,322,323,324,326,],[55,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-46,-102,-15,-13,-11,55,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,55,-53,-103,-52,55,-3,-77,-78,-79,-12,-10,55,-6,-4,-2,-1,-50,-34,-54,-35,-108,-80,55,-109,-81,-104,-106,-80,-107,-14,-105,]),'MINUS':([14,17,18,19,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,120,121,122,123,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,193,222,223,224,236,237,238,265,268,269,270,271,272,273,275,279,280,284,300,301,303,304,307,316,318,322,323,324,326,],[56,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-46,-102,-15,-13,-11,56,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,56,-53,-103,-52,56,-3,-77,-78,-79,-12,-10,56,-6,-4,-2,-1,-50,-34,-54,-35,-108,-80,56,-109,-81,-104,-106,-80,-107,-14,-105,]),'STAR':([14,17,18,19,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,120,121,122,123,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,193,222,223,224,236,237,238,265,268,269,270,271,272,273,275,279,280,284,300,301,303,304,307,316,318,322,323,324,326,],[57,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-46,-102,-15,-13,-11,-9,57,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,57,-53,-103,-52,57,-3,-77,-78,-79,-12,-10,-8,57,-4,-2,-1,-50,-34,-54,-35,-108,-80,57,-109,-81,-104,-106,-80,-107,-14,-105,]),'SLASH':([14,17,18,19,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,120,121,122,123,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,193,222,223,224,236,237,238,265,268,269,270,271,272,273,275,279,280,284,300,301,303,304,307,316,318,322,323,324,326,],[58,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-46,-102,-15,-13,-11,-9,58,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,58,-53,-103,-52,58,-3,-77,-78,-79,-12,-10,-8,58,-4,-2,-1,-50,-34,-54,-35,-108,-80,58,-109,-81,-104,-106,-80,-107,-14,-105,]),'DOUBLESLASH':([14,17,18,19,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,120,121,122,123,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,193,222,223,224,236,237,238,265,268,269,270,271,272,273,275,279,280,284,300,301,303,304,307,316,318,322,323,324,326,],[59,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-46,-102,-15,-13,-11,-9,59,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,59,-53,-103,-52,59,-3,-77,-78,-79,-12,-10,-8,59,-4,-2,-1,-50,-34,-54,-35,-108,-80,59,-109,-81,-104,-106,-80,-107,-14,-105,]),'PERCENT':([14,17,18,19,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,120,121,122,123,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,193,222,223,224,236,237,238,265,268,269,270,271,272,273,275,279,280,284,300,301,303,304,307,316,318,322,323,324,326,],[60,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-46,-102,-15,-13,-11,-9,60,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,60,-53,-103,-52,60,-3,-77,-78,-79,-12,-10,-8,60,-4,-2,-1,-50,-34,-54,-35,-108,-80,60,-109,-81,-104,-106,-80,-107,-14,-105,]),'DOT_OPERATOR':([14,17,18,19,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,120,121,122,123,151,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,193,222,223,224,236,237,238,265,268,269,270,271,272,273,275,279,280,284,300,301,303,304,307,316,318,322,323,324,326,],[61,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,212,-46,-102,-15,-13,-11,-9,-7,-5,61,-16,-17,-18,-19,-20,-21,-22,-23,61,-53,-103,-52,61,61,-77,-78,-79,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,-108,-80,61,-109,-81,-104,-106,-80,-107,-14,-105,]),'KEYWORD_WHERE':([17,18,19,29,30,33,34,35,79,80,81,82,83,84,87,88,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,120,121,122,123,137,138,143,146,149,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,193,207,222,224,225,226,234,236,237,238,254,255,257,258,264,265,268,269,270,271,272,273,274,275,279,280,284,295,296,297,299,300,301,304,305,307,315,316,318,322,323,324,326,],[-48,-47,-49,71,-161,77,-137,-138,-110,-111,-118,-119,-126,-127,-124,-125,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-162,-163,-120,-129,-136,-46,214,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-53,214,-80,-52,-3,214,214,214,-77,-78,-79,-117,-116,-122,-123,214,-12,-10,-8,-6,-4,-2,-1,214,-50,-34,-54,-35,-80,-128,-133,-134,-108,-80,-109,214,214,-121,-104,-106,-80,-107,214,-105,]),'TICK_OPERATOR':([17,18,19,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,120,121,122,123,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,193,222,224,225,226,234,236,237,238,264,265,268,269,270,271,272,273,274,275,279,280,284,300,301,304,305,307,316,318,322,323,324,326,],[-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-46,215,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-53,215,-52,-3,215,215,215,-77,-78,-79,215,-12,-10,-8,-6,-4,-2,-1,215,-50,-34,-54,-35,-108,-80,-109,215,215,-104,-106,-80,-107,215,-105,]),'RPAREN':([17,18,19,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,79,80,81,82,83,84,85,87,88,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,131,140,141,143,146,147,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,178,182,183,184,185,186,187,188,193,207,208,209,222,224,226,227,228,229,232,235,236,237,238,240,241,243,249,254,255,257,258,259,260,265,268,269,270,271,272,273,274,275,276,278,279,280,283,284,285,286,290,291,295,296,297,298,299,300,301,304,305,307,308,309,311,313,315,316,318,319,321,322,323,324,325,326,],[-48,-47,-49,-100,124,-62,-66,-67,-68,-69,-70,-71,-63,-64,-60,-61,-56,-57,-58,-59,-55,-110,-111,-118,-119,-126,-127,146,-124,-125,-80,-82,-83,-84,-85,-86,-87,-88,-89,-90,-26,-27,-28,-29,-30,-31,-32,-33,182,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-141,-132,-131,-120,-129,-142,-46,-102,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-80,-53,-98,-94,240,-89,-90,-88,-80,-93,-103,-80,-80,-80,-52,-51,275,279,280,-38,-80,-91,-77,-78,-79,-95,-97,-101,292,-117,-116,-122,-123,296,297,-12,-10,-8,-6,-4,-2,-1,275,-50,-36,-39,-34,-54,-96,-35,308,-80,310,-80,-80,-128,-133,-130,-134,-108,-80,-109,-80,-81,-92,-99,-187,-189,-121,-104,-106,-37,-80,-80,-107,-14,-188,-105,]),'RBRACKET':([17,18,19,79,80,81,82,83,84,87,88,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,131,143,146,147,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,177,193,207,210,222,224,229,233,234,236,237,238,250,254,255,257,258,262,265,268,269,270,271,272,273,275,276,278,279,280,284,295,296,297,299,300,301,304,305,307,315,316,318,319,322,323,324,326,],[-48,-47,-49,-110,-111,-118,-119,-126,-127,-124,-125,-26,-27,-28,-29,-30,-31,-32,-33,188,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-141,-120,-129,-142,-46,-102,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-53,-80,-103,-80,-80,-52,-51,-38,284,-80,-77,-78,-79,293,-117,-116,-122,-123,299,-12,-10,-8,-6,-4,-2,-1,-50,-36,-39,-34,-54,-35,-80,-128,-133,-134,-108,-80,-109,-80,-81,-121,-104,-106,-37,-80,-107,-14,-105,]),'FATARROW':([30,31,34,37,40,72,74,79,80,81,82,83,84,87,88,136,138,140,141,143,146,153,204,207,254,255,257,258,295,296,297,299,315,],[-80,75,-132,89,-140,-164,-166,-110,-111,-118,-119,-126,-127,-124,-125,-80,-163,-132,-131,-120,-129,-132,-165,-80,-117,-116,-122,-123,-80,-128,-133,-134,-121,]),'BASE10_INTEGER':([43,46,53,54,55,56,57,58,59,60,61,92,111,126,167,173,174,176,177,179,213,215,216,217,218,219,220,221,223,239,242,275,277,280,282,320,],[113,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,113,113,113,113,113,-53,113,113,113,113,-65,113,113,113,113,113,113,113,113,113,-50,113,-54,113,113,]),'BASE16_INTEGER':([43,46,53,54,55,56,57,58,59,60,61,92,111,126,167,173,174,176,177,179,213,215,216,217,218,219,220,221,223,239,242,275,277,280,282,320,],[114,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,114,114,114,114,114,-53,114,114,114,114,-65,114,114,114,114,114,114,114,114,114,-50,114,-54,114,114,]),'BASE8_INTEGER':([43,46,53,54,55,56,57,58,59,60,61,92,111,126,167,173,174,176,177,179,213,215,216,217,218,219,220,221,223,239,242,275,277,280,282,320,],[115,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,115,115,115,115,115,-53,115,115,115,115,-65,115,115,115,115,115,115,115,115,115,-50,115,-54,115,115,]),'BASE2_INTEGER':([43,46,53,54,55,56,57,58,59,60,61,92,111,126,167,173,174,176,177,179,213,215,216,217,218,219,220,221,223,239,242,275,277,280,282,320,],[116,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,116,116,116,116,116,-53,116,116,116,116,-65,116,116,116,116,116,116,116,116,116,-50,116,-54,116,116,]),'FLOAT':([43,46,53,54,55,56,57,58,59,60,61,92,111,126,167,173,174,176,177,179,213,215,216,217,218,219,220,221,223,239,242,275,277,280,282,320,],[117,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,117,117,117,117,117,-53,117,117,117,117,-65,117,117,117,117,117,117,117,117,117,-50,117,-54,117,117,]),'STRING':([43,46,53,54,55,56,57,58,59,60,61,92,111,126,167,173,174,176,177,179,180,213,215,216,217,218,219,220,221,223,239,242,275,277,280,282,320,],[118,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,118,118,118,118,118,-53,118,118,118,118,118,-65,118,118,118,118,118,118,118,118,118,-50,118,-54,118,118,]),'CHAR':([43,46,53,54,55,56,57,58,59,60,61,92,111,126,167,173,174,176,177,179,180,213,215,216,217,218,219,220,221,223,239,242,275,277,280,282,320,],[119,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,119,119,119,119,119,-53,119,119,119,119,119,-65,119,119,119,119,119,119,119,119,119,-50,119,-54,119,119,]),'DATE':([43,46,53,54,55,56,57,58,59,60,61,92,111,126,167,173,174,176,177,179,213,215,216,217,218,219,220,221,223,239,242,275,277,280,282,320,],[120,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,120,120,120,120,120,-53,120,120,120,120,-65,120,120,120,120,120,120,120,120,120,-50,120,-54,120,120,]),'DATETIME':([43,46,53,54,55,56,57,58,59,60,61,92,111,126,167,173,174,176,177,179,213,215,216,217,218,219,220,221,223,239,242,275,277,280,282,320,],[121,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,121,121,121,121,121,-53,121,121,121,121,-65,121,121,121,121,121,121,121,121,121,-50,121,-54,121,121,]),'DATE_INTERVAL':([43,46,53,54,55,56,57,58,59,60,61,92,111,126,167,173,174,176,177,179,213,215,216,217,218,219,220,221,223,239,242,275,277,280,282,320,],[122,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,122,122,122,122,122,-53,122,122,122,122,-65,122,122,122,122,122,122,122,122,122,-50,122,-54,122,122,]),'DATETIME_INTERVAL':([43,46,53,54,55,56,57,58,59,60,61,92,111,126,167,173,174,176,177,179,213,215,216,217,218,219,220,221,223,239,242,275,277,280,282,320,],[123,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,123,123,123,123,123,-53,123,123,123,123,-65,123,123,123,123,123,123,123,123,123,-50,123,-54,123,123,]),'KEYWORD_LET':([46,53,54,55,56,57,58,59,60,61,92,126,167,173,174,177,213,215,216,217,218,219,220,221,223,275,277,280,282,320,],[-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,175,175,175,175,-53,175,175,-65,175,175,175,175,175,175,175,-50,175,-54,175,175,]),'BACKSLASH':([46,53,54,55,56,57,58,59,60,61,92,126,167,173,174,177,213,215,216,217,218,219,220,221,223,275,277,280,282,320,],[-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,176,176,176,176,-53,176,176,-65,176,176,176,176,176,176,176,-50,176,-54,176,176,]),'PIPE':([68,69,70,87,88,129,130,131,132,134,196,197,198,199,246,248,292,293,],[-80,-178,-80,-124,-125,194,-142,-141,-179,-181,-80,-182,-183,-184,-80,-180,-185,-186,]),'KEYWORD_DERIVING':([68,69,70,87,88,129,130,131,132,134,196,197,198,199,246,248,292,293,],[-80,-178,-80,-124,-125,195,-142,-141,-179,-181,-80,-182,-183,-184,-80,-180,-185,-186,]),'ANNOTATION':([103,113,114,115,116,117,],[180,-72,-73,-74,-75,-76,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'definitions':([0,],[2,]),'definition':([0,25,252,],[3,65,294,]),'local_definition':([0,25,135,139,230,252,],[4,4,203,203,203,4,]),'datatype_definition':([0,25,252,],[5,5,5,]),'typeclass':([0,25,252,],[6,6,6,]),'instance':([0,25,252,],[7,7,7,]),'nametype_decl':([0,25,135,139,230,252,],[8,8,8,8,8,8,]),'valuedef':([0,25,135,139,230,252,],[9,9,9,9,9,9,]),'_datatype_lhs':([0,25,252,],[10,10,10,]),'_identifier':([0,25,90,92,111,126,135,139,167,173,177,180,211,213,216,217,218,219,220,221,223,230,252,266,267,277,282,317,320,],[13,13,151,156,181,156,13,13,156,156,156,156,151,156,156,156,156,156,156,156,156,13,13,302,302,156,156,302,156,]),'equation':([0,25,135,139,230,252,266,267,317,],[15,15,15,15,15,15,301,301,322,]),'_enclosed_operator':([0,25,92,126,135,139,164,167,173,177,213,216,217,218,219,220,221,223,224,230,252,266,267,273,277,282,317,320,],[20,20,174,174,20,20,174,174,174,174,174,174,174,174,174,174,174,174,174,20,20,20,20,174,174,174,20,174,]),'_trailing_new_lines':([2,23,27,],[21,64,66,]),'empty':([2,3,12,13,20,23,27,30,65,68,70,78,85,86,89,91,93,125,136,142,145,148,173,177,187,196,200,201,203,207,208,209,210,226,232,234,244,245,246,261,286,291,294,295,301,302,305,321,322,],[22,26,38,44,44,22,22,74,26,130,134,38,147,147,38,38,44,192,74,147,38,38,229,229,243,134,38,38,253,258,147,147,147,278,44,278,38,192,130,38,243,313,253,258,318,44,278,313,318,]),'_definition_set':([3,65,],[24,127,]),'newlines':([3,65,],[25,25,]),'_typeclass_def':([11,],[29,]),'simple_type_constraint':([11,73,75,],[30,136,137,]),'simple_type_constraints':([11,],[31,]),'_maybe_constrained_type_expr':([12,],[33,]),'type_expr':([12,78,89,91,145,148,200,201,244,261,],[34,140,149,153,209,210,249,250,153,140,]),'_constrained_type_expr_bare':([12,91,244,],[35,155,155,]),'type_scheme':([12,78,89,91,145,148,200,201,244,261,],[36,36,36,36,36,36,36,36,36,36,]),'type_constraints':([12,91,244,],[37,37,37,]),'_type_expr_list_trail':([12,78,91,244,261,],[40,141,40,40,298,]),'_patterns':([13,20,93,232,302,],[42,63,178,283,42,]),'_st_operator':([14,173,223,303,],[45,228,228,228,]),'infixl_operator_2':([14,160,173,223,303,],[47,217,47,47,47,]),'infixr_operator_2':([14,160,173,223,303,],[48,216,48,48,48,]),'infixl_operator_6':([14,161,173,223,269,303,],[49,218,49,49,218,49,]),'infixl_operator_7':([14,162,173,223,270,303,],[50,219,50,50,219,50,]),'infixr_operator_9':([14,164,173,223,224,273,303,],[51,220,51,51,220,220,51,]),'_data_rhs':([28,],[67,]),'data_cons':([28,194,],[68,246,]),'_data_cons':([28,194,],[69,69,]),'_simple_type_constraints':([30,136,],[72,204,]),'type_function_expr':([36,206,],[79,255,]),'type_term':([36,206,],[80,254,]),'type_app_expression':([36,206,],[81,81,]),'type_factor':([36,144,206,256,],[82,207,82,295,]),'type_variable':([36,76,133,144,206,256,],[83,138,197,83,83,83,]),'type_cons':([36,133,144,206,256,],[84,198,84,84,84,]),'pattern':([43,111,176,179,239,242,],[93,187,232,235,232,286,]),'literal':([43,92,111,126,167,173,176,177,179,213,216,217,218,219,220,221,223,239,242,277,282,320,],[94,165,94,165,165,165,94,165,94,165,165,165,165,165,165,165,165,94,94,165,165,165,]),'cons_pattern':([43,111,176,179,239,242,],[95,95,95,95,95,95,]),'list_cons_pattern':([43,111,176,179,239,242,],[96,96,96,96,96,96,]),'tuple_cons_pattern':([43,111,176,179,239,242,],[97,97,97,97,97,97,]),'empty_list_pattern':([43,111,176,179,239,242,],[98,98,98,98,98,98,]),'empty_tuple_pattern':([43,111,176,179,239,242,],[99,99,99,99,99,99,]),'number':([43,92,111,126,167,173,176,177,179,213,216,217,218,219,220,221,223,239,242,277,282,320,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'concrete_number':([43,92,111,126,167,173,176,177,179,213,216,217,218,219,220,221,223,239,242,277,282,320,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'string':([43,92,111,126,167,173,176,177,179,180,213,216,217,218,219,220,221,223,239,242,277,282,320,],[105,105,105,105,105,105,105,105,105,236,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'char':([43,92,111,126,167,173,176,177,179,180,213,216,217,218,219,220,221,223,239,242,277,282,320,],[106,106,106,106,106,106,106,106,106,237,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'date':([43,92,111,126,167,173,176,177,179,213,216,217,218,219,220,221,223,239,242,277,282,320,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'datetime':([43,92,111,126,167,173,176,177,179,213,216,217,218,219,220,221,223,239,242,277,282,320,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'date_interval':([43,92,111,126,167,173,176,177,179,213,216,217,218,219,220,221,223,239,242,277,282,320,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'datetime_interval':([43,92,111,126,167,173,176,177,179,213,216,217,218,219,220,221,223,239,242,277,282,320,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'_data_conses':([68,246,],[128,289,]),'_maybe_padding':([68,85,86,142,208,209,210,246,],[129,145,148,206,259,260,262,129,]),'_cons_args':([70,196,],[132,248,]),'_app_args_non_empty':([82,],[143,]),'_type_scheme_generics':([90,211,],[150,263,]),'st_type_expr':([91,244,],[152,287,]),'constrained_type_expr':([91,244,],[154,154,]),'expr':([92,126,167,173,177,213,216,217,218,219,220,221,223,277,282,320,],[157,193,225,226,234,264,225,225,225,225,225,225,274,305,307,324,]),'expr_term0':([92,126,167,173,177,213,216,217,218,219,220,221,223,277,282,320,],[158,158,158,158,158,265,158,158,158,158,158,158,158,158,158,158,]),'expr_term1':([92,126,167,173,177,213,216,217,218,219,220,221,223,277,282,320,],[159,159,159,159,159,159,268,159,159,159,159,159,159,159,159,159,]),'expr_term2':([92,126,167,173,177,213,216,217,218,219,220,221,223,277,282,320,],[160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,]),'expr_term6':([92,126,167,173,177,213,216,217,218,219,220,221,223,277,282,320,],[161,161,161,161,161,161,161,269,161,161,161,161,161,161,161,161,]),'expr_term7':([92,126,167,173,177,213,216,217,218,219,220,221,223,277,282,320,],[162,162,162,162,162,162,162,162,270,162,162,162,162,162,162,162,]),'expr_term9':([92,126,167,173,177,213,216,217,218,219,220,221,223,277,282,320,],[163,163,163,163,163,163,163,163,163,271,272,163,163,163,163,163,]),'expr_factor':([92,126,167,173,177,213,216,217,218,219,220,221,223,277,282,320,],[164,164,224,164,164,164,164,164,164,164,164,273,164,164,164,164,]),'identifier':([92,126,167,173,177,180,213,216,217,218,219,220,221,223,277,282,320,],[166,166,166,166,166,238,166,166,166,166,166,166,166,166,166,166,166,]),'enclosed_expr':([92,126,164,167,173,177,213,216,217,218,219,220,221,223,224,273,277,282,320,],[167,167,222,167,167,167,167,167,167,167,167,167,167,167,222,222,167,167,167,]),'letexpr':([92,126,167,173,177,213,216,217,218,219,220,221,223,277,282,320,],[168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,]),'where_expr':([92,126,167,173,177,213,216,217,218,219,220,221,223,277,282,320,],[169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,]),'lambda_expr':([92,126,167,173,177,213,216,217,218,219,220,221,223,277,282,320,],[170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,]),'simple_list_expr':([92,126,167,173,177,213,216,217,218,219,220,221,223,277,282,320,],[171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,]),'simple_tuple_expr':([92,126,167,173,177,213,216,217,218,219,220,221,223,277,282,320,],[172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,]),'patterns_comma_sep':([111,],[183,]),'_cons_params':([125,245,],[191,288,]),'cons_arg':([133,],[196,]),'_cons_arg_factor':([133,],[199,]),'local_definitions':([135,139,230,],[202,205,281,]),'_type_expr_list':([145,],[208,]),'infixl_operator_0':([157,193,225,226,234,264,274,305,307,324,],[213,213,213,213,213,213,213,213,213,213,]),'_list_items':([173,177,],[227,233,]),'patterns':([176,239,],[231,285,]),'_patterns_comma':([187,286,],[241,309,]),'_local_definition_set':([203,294,],[251,314,]),'_app_args':([207,295,],[257,315,]),'_list_items_cont':([226,234,305,],[276,276,319,]),'_derivations_list':([247,],[290,]),'equations':([266,267,],[300,304,]),'_derivations_list_trail':([291,321,],[311,325,]),'_equation_set':([301,322,],[316,326,]),'st_expr':([320,],[323,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','__init__.py',524),
  ('expr_term9 -> expr_factor infixr_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','__init__.py',531),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','__init__.py',532),
  ('expr_term7 -> expr_term7 infixl_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','__init__.py',534),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','__init__.py',535),
  ('expr_term6 -> expr_term6 infixl_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','__init__.py',537),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','__init__.py',538),
  ('expr_term2 -> expr_term2 infixl_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','__init__.py',540),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','__init__.py',541),
  ('expr_term1 -> expr_term2 infixr_operator_2 expr_term1','expr_term1',3,'p_expressions_precedence_rules','__init__.py',543),
  ('expr_term1 -> expr_term2','expr_term1',1,'p_expressions_precedence_rules','__init__.py',544),
  ('expr_term0 -> expr infixl_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','__init__.py',546),
  ('expr_term0 -> expr_term1','expr_term0',1,'p_expressions_precedence_rules','__init__.py',547),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','__init__.py',560),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','__init__.py',562),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','__init__.py',564),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','__init__.py',565),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','__init__.py',566),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','__init__.py',567),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','__init__.py',568),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','__init__.py',569),
  ('expr_factor -> simple_list_expr','expr_factor',1,'p_standalone_definitions','__init__.py',570),
  ('expr_factor -> simple_tuple_expr','expr_factor',1,'p_standalone_definitions','__init__.py',571),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','__init__.py',573),
  ('st_type_expr -> constrained_type_expr','st_type_expr',1,'p_standalone_definitions','__init__.py',574),
  ('literal -> number','literal',1,'p_literals','__init__.py',582),
  ('literal -> concrete_number','literal',1,'p_literals','__init__.py',583),
  ('literal -> string','literal',1,'p_literals','__init__.py',584),
  ('literal -> char','literal',1,'p_literals','__init__.py',585),
  ('literal -> date','literal',1,'p_literals','__init__.py',586),
  ('literal -> datetime','literal',1,'p_literals','__init__.py',587),
  ('literal -> date_interval','literal',1,'p_literals','__init__.py',588),
  ('literal -> datetime_interval','literal',1,'p_literals','__init__.py',589),
  ('simple_tuple_expr -> LPAREN _list_items RPAREN','simple_tuple_expr',3,'p_tuple_expr','__init__.py',595),
  ('simple_list_expr -> LBRACKET _list_items RBRACKET','simple_list_expr',3,'p_list_expr','__init__.py',602),
  ('_list_items -> expr _list_items_cont','_list_items',2,'p_list_items','__init__.py',609),
  ('_list_items_cont -> COMMA expr _list_items_cont','_list_items_cont',3,'p_list_items','__init__.py',610),
  ('_list_items -> empty','_list_items',1,'p_list_items_empty','__init__.py',616),
  ('_list_items_cont -> empty','_list_items_cont',1,'p_list_items_empty','__init__.py',617),
  ('date -> DATE','date',1,'p_date','__init__.py',623),
  ('datetime -> DATETIME','datetime',1,'p_datetime','__init__.py',629),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','__init__.py',635),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','__init__.py',641),
  ('char -> CHAR','char',1,'p_char','__init__.py',647),
  ('string -> STRING','string',1,'p_string','__init__.py',652),
  ('identifier -> _identifier','identifier',1,'p_variable','__init__.py',657),
  ('_identifier -> UNDER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',664),
  ('_identifier -> UPPER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',665),
  ('_identifier -> LOWER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',666),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','__init__.py',673),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','__init__.py',678),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','__init__.py',679),
  ('enclosed_expr -> _enclosed_operator','enclosed_expr',1,'p_operators_as_expressios','__init__.py',685),
  ('_enclosed_operator -> LPAREN _st_operator RPAREN','_enclosed_operator',3,'p_enclosed_operator','__init__.py',691),
  ('infixr_operator_9 -> DOT_OPERATOR','infixr_operator_9',1,'p_operator','__init__.py',701),
  ('infixl_operator_7 -> STAR','infixl_operator_7',1,'p_operator','__init__.py',703),
  ('infixl_operator_7 -> SLASH','infixl_operator_7',1,'p_operator','__init__.py',704),
  ('infixl_operator_7 -> DOUBLESLASH','infixl_operator_7',1,'p_operator','__init__.py',705),
  ('infixl_operator_7 -> PERCENT','infixl_operator_7',1,'p_operator','__init__.py',706),
  ('infixl_operator_6 -> PLUS','infixl_operator_6',1,'p_operator','__init__.py',708),
  ('infixl_operator_6 -> MINUS','infixl_operator_6',1,'p_operator','__init__.py',709),
  ('infixr_operator_2 -> COLON','infixr_operator_2',1,'p_operator','__init__.py',711),
  ('infixl_operator_2 -> OPERATOR','infixl_operator_2',1,'p_operator','__init__.py',713),
  ('infixl_operator_2 -> ARROW','infixl_operator_2',1,'p_operator','__init__.py',714),
  ('infixl_operator_0 -> TICK_OPERATOR','infixl_operator_0',1,'p_operator','__init__.py',716),
  ('_st_operator -> infixl_operator_2','_st_operator',1,'p_operator','__init__.py',718),
  ('_st_operator -> infixr_operator_2','_st_operator',1,'p_operator','__init__.py',719),
  ('_st_operator -> infixl_operator_6','_st_operator',1,'p_operator','__init__.py',720),
  ('_st_operator -> infixl_operator_7','_st_operator',1,'p_operator','__init__.py',721),
  ('_st_operator -> infixr_operator_9','_st_operator',1,'p_operator','__init__.py',722),
  ('_st_operator -> COMMA','_st_operator',1,'p_operator','__init__.py',723),
  ('number -> BASE10_INTEGER','number',1,'p_integer','__init__.py',730),
  ('number -> BASE16_INTEGER','number',1,'p_integer','__init__.py',731),
  ('number -> BASE8_INTEGER','number',1,'p_integer','__init__.py',732),
  ('number -> BASE2_INTEGER','number',1,'p_integer','__init__.py',733),
  ('number -> FLOAT','number',1,'p_float','__init__.py',762),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','__init__.py',767),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','__init__.py',768),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','__init__.py',769),
  ('empty -> <empty>','empty',0,'p_empty','__init__.py',778),
  ('lambda_expr -> BACKSLASH patterns ARROW expr','lambda_expr',4,'p_lambda_definition','__init__.py',783),
  ('pattern -> literal','pattern',1,'p_pattern','__init__.py',792),
  ('pattern -> cons_pattern','pattern',1,'p_pattern','__init__.py',793),
  ('pattern -> list_cons_pattern','pattern',1,'p_pattern','__init__.py',794),
  ('pattern -> tuple_cons_pattern','pattern',1,'p_pattern','__init__.py',795),
  ('pattern -> empty_list_pattern','pattern',1,'p_pattern','__init__.py',796),
  ('pattern -> empty_tuple_pattern','pattern',1,'p_pattern','__init__.py',797),
  ('pattern -> LOWER_IDENTIFIER','pattern',1,'p_var_pattern','__init__.py',803),
  ('pattern -> UNDER_IDENTIFIER','pattern',1,'p_var_pattern','__init__.py',804),
  ('pattern -> UPPER_IDENTIFIER','pattern',1,'p_simplecons_pattern','__init__.py',810),
  ('list_cons_pattern -> pattern COLON pattern','list_cons_pattern',3,'p_list_cons_for_param','__init__.py',816),
  ('cons_pattern -> LPAREN _identifier SPACE patterns RPAREN','cons_pattern',5,'p_param_pattern','__init__.py',822),
  ('empty_list_pattern -> LBRACKET RBRACKET','empty_list_pattern',2,'p_empty_list_as_pattern','__init__.py',827),
  ('empty_tuple_pattern -> LPAREN RPAREN','empty_tuple_pattern',2,'p_unit_value_as_pattern','__init__.py',834),
  ('tuple_cons_pattern -> LPAREN patterns_comma_sep RPAREN','tuple_cons_pattern',3,'p_tuple_cons_pattern','__init__.py',840),
  ('patterns -> pattern _patterns','patterns',2,'p_patterns','__init__.py',848),
  ('patterns_comma_sep -> pattern _patterns_comma','patterns_comma_sep',2,'p_patterns','__init__.py',849),
  ('_patterns -> SPACE pattern _patterns','_patterns',3,'p_patterns','__init__.py',850),
  ('_patterns_comma -> COMMA pattern _patterns_comma','_patterns_comma',3,'p_patterns','__init__.py',851),
  ('_patterns -> empty','_patterns',1,'p_patterns_empty','__init__.py',857),
  ('_patterns_comma -> empty','_patterns_comma',1,'p_patterns_empty','__init__.py',858),
  ('equation -> _identifier _patterns EQ expr','equation',4,'p_equation','__init__.py',864),
  ('equation -> _enclosed_operator _patterns EQ expr','equation',4,'p_equation','__init__.py',865),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','__init__.py',875),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','__init__.py',884),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','__init__.py',893),
  ('letexpr -> KEYWORD_LET SPACE local_definitions KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','__init__.py',903),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','__init__.py',911),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','__init__.py',912),
  ('type_expr -> type_scheme type_function_expr','type_expr',2,'p_type_expr','__init__.py',922),
  ('type_expr -> type_scheme type_term','type_expr',2,'p_type_expr','__init__.py',923),
  ('type_scheme -> empty','type_scheme',1,'p_type_scheme_empty','__init__.py',932),
  ('type_scheme -> KEYWORD_FORALL SPACE _type_scheme_generics','type_scheme',3,'p_type_scheme','__init__.py',936),
  ('_type_scheme_generics -> _identifier SPACE _type_scheme_generics','_type_scheme_generics',3,'p_type_scheme_generics','__init__.py',943),
  ('_type_scheme_generics -> _identifier DOT_OPERATOR','_type_scheme_generics',2,'p_last_type_scheme_generic','__init__.py',948),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','__init__.py',953),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','__init__.py',954),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','__init__.py',964),
  ('type_term -> type_factor','type_term',1,'p_type_term','__init__.py',965),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','__init__.py',970),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','__init__.py',982),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','__init__.py',983),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','__init__.py',989),
  ('type_variable -> LOWER_IDENTIFIER','type_variable',1,'p_type_variable','__init__.py',994),
  ('type_cons -> UPPER_IDENTIFIER','type_cons',1,'p_type_cons','__init__.py',999),
  ('type_factor -> type_variable','type_factor',1,'p_type_factor_identifier','__init__.py',1004),
  ('type_factor -> type_cons','type_factor',1,'p_type_factor_identifier','__init__.py',1005),
  ('type_factor -> LPAREN _maybe_padding _type_expr_list _maybe_padding RPAREN','type_factor',5,'p_type_factor_tuple','__init__.py',1012),
  ('type_factor -> LPAREN RPAREN','type_factor',2,'p_type_factor_unit_type','__init__.py',1018),
  ('_type_expr_list -> type_expr COMMA _type_expr_list_trail','_type_expr_list',3,'p_type_expr_list','__init__.py',1023),
  ('_type_expr_list_trail -> type_expr COMMA _type_expr_list_trail','_type_expr_list_trail',3,'p_type_expr_list','__init__.py',1024),
  ('_type_expr_list_trail -> type_expr','_type_expr_list_trail',1,'p_type_expr_list_last_item','__init__.py',1030),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','__init__.py',1036),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','__init__.py',1041),
  ('constrained_type_expr -> _constrained_type_expr_bare','constrained_type_expr',1,'p_constrained_type_expr','__init__.py',1073),
  ('_constrained_type_expr_bare -> type_constraints FATARROW type_expr','_constrained_type_expr_bare',3,'p_constrained_type_expr_bare','__init__.py',1081),
  ('_maybe_constrained_type_expr -> type_expr','_maybe_constrained_type_expr',1,'p_maybe_constrained_type_expr_no_constraint','__init__.py',1100),
  ('_maybe_constrained_type_expr -> _constrained_type_expr_bare','_maybe_constrained_type_expr',1,'p_maybe_constrained_type_expr_constrained','__init__.py',1106),
  ('instance -> KEYWORD_INSTANCE _maybe_constrained_type_expr KEYWORD_WHERE PADDING local_definitions','instance',5,'p_instance','__init__.py',1112),
  ('type_constraints -> _type_expr_list_trail','type_constraints',1,'p_type_constraint','__init__.py',1131),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','__init__.py',1137),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','__init__.py',1138),
  ('program -> definitions _trailing_new_lines','program',2,'p_program','__init__.py',1146),
  ('_trailing_new_lines -> empty','_trailing_new_lines',1,'p_trailing_new_lines','__init__.py',1152),
  ('_trailing_new_lines -> NEWLINE _trailing_new_lines','_trailing_new_lines',2,'p_trailing_new_lines','__init__.py',1153),
  ('definitions -> definition _definition_set','definitions',2,'p_definitions','__init__.py',1158),
  ('_definition_set -> newlines definition _definition_set','_definition_set',3,'p_definition_set','__init__.py',1164),
  ('newlines -> NEWLINE _trailing_new_lines','newlines',2,'p_newlines','__init__.py',1170),
  ('_definition_set -> empty','_definition_set',1,'p_definition_set2','__init__.py',1174),
  ('_definition_set -> newlines','_definition_set',1,'p_definition_set2','__init__.py',1175),
  ('definition -> local_definition','definition',1,'p_definition','__init__.py',1181),
  ('definition -> datatype_definition','definition',1,'p_definition','__init__.py',1182),
  ('definition -> typeclass','definition',1,'p_definition','__init__.py',1183),
  ('definition -> instance','definition',1,'p_definition','__init__.py',1184),
  ('local_definition -> nametype_decl','local_definition',1,'p_local_definition','__init__.py',1191),
  ('local_definition -> valuedef','local_definition',1,'p_local_definition','__init__.py',1192),
  ('local_definitions -> local_definition _local_definition_set','local_definitions',2,'p_local_definitions','__init__.py',1198),
  ('_local_definition_set -> PADDING definition _local_definition_set','_local_definition_set',3,'p_local_definition_set','__init__.py',1204),
  ('_local_definition_set -> empty','_local_definition_set',1,'p_local_definition_set_empty','__init__.py',1210),
  ('typeclass -> KEYWORD_CLASS _typeclass_def KEYWORD_WHERE PADDING local_definitions','typeclass',5,'p_typeclass','__init__.py',1216),
  ('_typeclass_def -> simple_type_constraint','_typeclass_def',1,'p_typeclass_def','__init__.py',1224),
  ('_typeclass_def -> simple_type_constraints FATARROW simple_type_constraint','_typeclass_def',3,'p_typeclass_def_with_constraints','__init__.py',1230),
  ('simple_type_constraint -> UPPER_IDENTIFIER SPACE type_variable','simple_type_constraint',3,'p_type_constraint_def','__init__.py',1236),
  ('simple_type_constraints -> simple_type_constraint _simple_type_constraints','simple_type_constraints',2,'p_type_constraints','__init__.py',1242),
  ('_simple_type_constraints -> COMMA simple_type_constraint _simple_type_constraints','_simple_type_constraints',3,'p_type_constraints','__init__.py',1243),
  ('_simple_type_constraints -> empty','_simple_type_constraints',1,'p_type_constraints_empty','__init__.py',1249),
  ('valuedef -> equation','valuedef',1,'p_valuedef','__init__.py',1255),
  ('nametype_decl -> _identifier COLON COLON st_type_expr','nametype_decl',4,'p_nametype_decl','__init__.py',1261),
  ('nametype_decl -> LPAREN _st_operator RPAREN COLON COLON st_type_expr','nametype_decl',6,'p_nametype_decl_operators','__init__.py',1270),
  ('datatype_definition -> _datatype_lhs EQ _data_rhs','datatype_definition',3,'p_datatype_definition','__init__.py',1279),
  ('_datatype_lhs -> KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params','_datatype_lhs',4,'p_datatype_lhs','__init__.py',1292),
  ('_cons_params -> SPACE LOWER_IDENTIFIER _cons_params','_cons_params',3,'p_datatype_cons_params','__init__.py',1301),
  ('_cons_params -> empty','_cons_params',1,'p_datatype_cons_params_empty','__init__.py',1307),
  ('_data_rhs -> data_cons _data_conses','_data_rhs',2,'p_datatype_body','__init__.py',1313),
  ('_data_conses -> _maybe_padding PIPE data_cons _data_conses','_data_conses',4,'p_datatype_body','__init__.py',1314),
  ('_data_conses -> empty','_data_conses',1,'p_datatype_conses_empty','__init__.py',1320),
  ('_data_conses -> _maybe_padding KEYWORD_DERIVING LPAREN _derivations_list RPAREN','_data_conses',5,'p_datatype_derivations','__init__.py',1325),
  ('data_cons -> _data_cons','data_cons',1,'p_data_cons','__init__.py',1331),
  ('_data_cons -> UPPER_IDENTIFIER _cons_args','_data_cons',2,'p_bare_data_cons','__init__.py',1337),
  ('_cons_args -> SPACE cons_arg _cons_args','_cons_args',3,'p_data_cons_args','__init__.py',1342),
  ('_cons_args -> empty','_cons_args',1,'p_data_cons_args_empty','__init__.py',1348),
  ('cons_arg -> type_variable','cons_arg',1,'p_cons_arg','__init__.py',1354),
  ('cons_arg -> type_cons','cons_arg',1,'p_cons_arg','__init__.py',1355),
  ('cons_arg -> _cons_arg_factor','cons_arg',1,'p_cons_arg','__init__.py',1356),
  ('_cons_arg_factor -> LPAREN type_expr RPAREN','_cons_arg_factor',3,'p_cons_arg_factor','__init__.py',1362),
  ('_cons_arg_factor -> LBRACKET type_expr RBRACKET','_cons_arg_factor',3,'p_cons_arg_factor_list','__init__.py',1368),
  ('_derivations_list -> UPPER_IDENTIFIER _derivations_list_trail','_derivations_list',2,'p_derivations_list','__init__.py',1374),
  ('_derivations_list_trail -> COMMA UPPER_IDENTIFIER _derivations_list_trail','_derivations_list_trail',3,'p_derivations_list','__init__.py',1375),
  ('_derivations_list_trail -> empty','_derivations_list_trail',1,'p_derivations_list_trail_empty','__init__.py',1381),
]
