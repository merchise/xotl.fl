
# program_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON COMMA DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FLOAT KEYWORD_CLASS KEYWORD_DATA KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LOWER_IDENTIFIER LPAREN MINUS NEWLINE OPERATOR PADDING PERCENT PIPE PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATOR UNDER_IDENTIFIER UPPER_IDENTIFIERexpr_factor : expr_factor SPACE expr_factor\n    expr_term9 : expr_factor infixr_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infixl_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infixl_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infixl_operator_2 expr_term6\n               | expr_term6\n\n    expr_term1 : expr_term2 infixr_operator_2 expr_term1\n               | expr_term2\n\n    expr_term0 : expr infixl_operator_0 expr_term0\n               | expr_term1\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | letexpr\n                | where_expr\n                | lambda_expr\n                | simple_list_expr\n                | simple_tuple_expr\n\n    st_type_expr : type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    simple_tuple_expr : LPAREN _list_items RPAREN\n    simple_list_expr : LBRACKET _list_items RBRACKET\n    _list_items : expr _list_items_cont\n       _list_items_cont : COMMA expr _list_items_cont\n    _list_items : empty\n       _list_items_cont : empty\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    char : CHARstring : STRINGidentifier : _identifier\n\n    _identifier : UNDER_IDENTIFIER\n                   | UPPER_IDENTIFIER\n                   | LOWER_IDENTIFIER\n\n    enclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : _enclosed_operator\n    _enclosed_operator : LPAREN _st_operator RPAREN\n    infixr_operator_9 : DOT_OPERATOR\n\n    infixl_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infixl_operator_6 : PLUS\n                     | MINUS\n\n    infixr_operator_2 : COLON\n\n    infixl_operator_2 : OPERATOR\n                      | ARROW\n\n    infixl_operator_0 : TICK_OPERATOR\n\n    _st_operator : infixl_operator_2\n                 | infixr_operator_2\n                 | infixl_operator_6\n                 | infixl_operator_7\n                 | infixr_operator_9\n                 | COMMA\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH patterns ARROW expr\n    \n    pattern : identifier\n    pattern : literal\n    pattern : cons_pattern\n    pattern : list_cons_pattern\n    pattern : tuple_cons_pattern\n    pattern : empty_list_pattern\n    pattern : empty_tuple_pattern\n    list_cons_pattern : pattern COLON pattern\n    cons_pattern : LPAREN _identifier SPACE patterns RPARENempty_list_pattern : LBRACKET RBRACKETempty_tuple_pattern : LPAREN RPARENtuple_cons_pattern : LPAREN patterns_comma_sep RPAREN\n    patterns : pattern _patterns\n       patterns_comma_sep : pattern _patterns_comma\n       _patterns : SPACE pattern _patterns\n       _patterns_comma : COMMA pattern _patterns_comma\n    _patterns : empty\n       _patterns_comma : empty\n    equation : _identifier _patterns EQ expr\n       equation : _enclosed_operator _patterns EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    type_expr : type_function_expr\n                 | type_termtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_variable : LOWER_IDENTIFIERtype_cons : UPPER_IDENTIFIERtype_factor : type_variable\n                   | type_cons\n\n    type_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET_maybe_padding : PADDING\n                      | empty\n    program : definitions\n    definitions : definition _definition_set\n    _definition_set : NEWLINE definition _definition_set\n    _definition_set : empty\n    definition : nametype_decl\n                  | valuedef\n                  | datatype_definition\n    valuedef : equation\n    nametype_decl : _identifier COLON COLON st_type_expr\n    nametype_decl : LPAREN _st_operator RPAREN COLON COLON st_type_expr\n    datatype_definition : _datatype_lhs EQ _data_rhs\n    _datatype_lhs : KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params\n    _cons_params : SPACE LOWER_IDENTIFIER _cons_params\n    _cons_params : empty\n    _data_rhs : data_cons _data_conses\n       _data_conses : _maybe_padding PIPE data_cons _data_conses\n    _data_conses : emptydata_cons : _data_cons_data_cons : UPPER_IDENTIFIER _cons_args_cons_args : SPACE cons_arg _cons_args\n    _cons_args : empty\n    cons_arg : type_variable\n       cons_arg : type_cons\n       cons_arg : _cons_arg_factor\n    _cons_arg_factor : LPAREN type_expr RPAREN\n    _cons_arg_factor : LBRACKET type_expr RBRACKET\n    '
    
_lr_action_items = {'LPAREN':([0,11,12,13,17,21,24,31,32,33,34,35,36,37,38,39,44,45,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,81,92,93,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,118,129,131,133,137,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,160,166,167,168,169,172,174,180,181,183,188,189,190,191,192,193,194,195,196,198,200,202,203,205,208,210,221,226,227,230,231,232,233,243,244,246,247,248,],[8,-46,-47,-48,8,63,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,92,112,-45,-25,-26,-27,-28,-29,-30,-31,-32,63,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,112,-79,-79,-99,-15,-13,-11,-9,-7,-5,153,-16,-17,112,-19,-20,-21,-22,-23,112,-52,63,112,63,-123,180,-100,-79,92,92,-124,92,112,-64,112,112,112,112,112,112,-51,112,153,207,-76,-77,-78,63,63,92,92,92,92,-12,207,207,-10,-8,-6,-4,-2,-1,-49,112,-33,-53,-79,112,-34,92,-105,-106,-101,207,-103,-80,112,-79,-104,-14,-102,]),'UNDER_IDENTIFIER':([0,17,21,24,31,32,33,34,35,36,37,38,39,45,63,81,106,112,113,115,116,118,119,143,145,146,147,148,149,150,151,153,160,169,172,189,190,198,200,203,208,231,243,],[11,11,11,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,11,11,11,11,11,-52,11,11,11,11,11,-64,11,11,11,11,11,11,11,11,11,11,11,11,-49,11,-53,11,11,11,]),'UPPER_IDENTIFIER':([0,17,21,24,31,32,33,34,35,36,37,38,39,40,42,44,45,63,81,92,93,106,112,113,115,116,118,119,129,131,137,139,140,141,142,143,145,146,147,148,149,150,151,153,160,169,172,174,175,180,181,183,189,190,198,200,203,208,221,231,243,],[12,12,12,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,80,82,95,12,12,12,-79,-79,12,12,-52,12,12,12,12,-123,95,-79,95,95,-124,95,12,-64,12,12,12,12,12,12,12,12,12,12,95,80,95,95,95,12,12,-49,12,-53,12,95,12,12,]),'LOWER_IDENTIFIER':([0,17,21,24,31,32,33,34,35,36,37,38,39,44,45,63,81,92,93,106,112,113,115,116,118,119,129,131,134,137,139,140,141,142,143,145,146,147,148,149,150,151,153,160,169,172,174,180,181,183,189,190,198,200,203,208,221,231,243,],[13,13,13,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,94,13,13,13,-79,-79,13,13,-52,13,13,13,13,-123,94,182,-79,94,94,-124,94,13,-64,13,13,13,13,13,13,13,13,13,13,94,94,94,94,13,13,-49,13,-53,13,94,13,13,]),'KEYWORD_DATA':([0,17,],[15,15,]),'$end':([1,2,3,4,5,6,9,11,12,13,16,18,43,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,83,84,85,86,87,88,89,90,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,126,128,130,132,133,138,152,154,166,167,168,176,177,178,179,184,188,191,192,193,194,195,196,198,202,203,205,210,213,214,215,219,220,222,223,226,227,230,232,233,236,237,238,239,240,241,244,245,246,247,248,],[0,-125,-79,-129,-130,-131,-132,-46,-47,-48,-126,-128,-79,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-135,-79,-142,-79,-127,-133,-24,-107,-108,-111,-112,-119,-120,-117,-118,-99,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,-139,-141,-143,-145,-100,-113,-51,-50,-76,-77,-78,-79,-146,-147,-148,-79,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-79,-34,-134,-79,-144,-110,-109,-115,-116,-105,-106,-101,-103,-80,-140,-149,-150,-79,-121,-122,-79,-114,-104,-14,-102,]),'NEWLINE':([3,4,5,6,9,11,12,13,43,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,84,85,86,87,88,89,90,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,126,128,130,132,133,138,152,154,166,167,168,176,177,178,179,184,188,191,192,193,194,195,196,198,202,203,205,210,213,214,215,219,220,222,223,226,227,230,232,233,236,237,238,239,240,241,244,245,246,247,248,],[17,-129,-130,-131,-132,-46,-47,-48,17,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-135,-79,-142,-79,-133,-24,-107,-108,-111,-112,-119,-120,-117,-118,-99,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,-139,-141,-143,-145,-100,-113,-51,-50,-76,-77,-78,-79,-146,-147,-148,-79,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-79,-34,-134,-79,-144,-110,-109,-115,-116,-105,-106,-101,-103,-80,-140,-149,-150,-79,-121,-122,-79,-114,-104,-14,-102,]),'COLON':([7,8,11,12,13,19,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,76,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,120,121,123,124,125,133,152,153,154,162,165,166,167,168,170,188,191,192,193,194,195,196,198,202,203,205,207,210,212,226,227,230,232,233,234,244,246,247,248,],[19,24,-46,-47,-48,44,118,-81,-82,-83,-84,-85,-86,-87,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,125,-99,-15,-13,24,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,24,-52,-45,-91,118,-90,174,-100,-51,24,-3,118,118,-76,-77,-78,-92,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-79,24,-34,118,-105,-106,-101,-103,-80,-89,-79,-104,-14,-102,]),'SPACE':([7,11,12,13,14,15,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,76,80,82,89,90,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,120,121,124,133,144,152,154,162,165,166,167,168,170,176,177,178,179,182,184,188,191,192,193,194,195,196,198,202,203,205,206,210,226,227,229,230,232,233,234,237,238,239,240,241,244,246,247,248,],[21,-46,-47,-48,21,42,21,-81,-82,-83,-84,-85,-86,-87,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-53,131,134,139,-119,-120,-117,-118,-99,-15,-13,-11,-9,-7,-5,151,-16,-17,-18,-19,-20,-21,-22,-23,-52,160,169,-91,-90,-100,189,-51,151,21,-88,-76,-77,-78,-92,131,-146,-147,-148,134,221,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-79,21,-34,-105,-106,243,-101,-103,-80,-89,-149,-150,221,-121,-122,-79,-104,-14,-102,]),'EQ':([7,10,11,12,13,14,20,22,41,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,76,82,117,121,124,135,136,165,166,167,168,170,182,203,206,218,234,],[-79,40,-46,-47,-48,-79,45,-97,81,-79,-81,-82,-83,-84,-85,-86,-87,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-53,-79,-95,-91,-90,-136,-138,-88,-76,-77,-78,-92,-79,-53,-79,-137,-89,]),'COMMA':([8,11,12,13,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,120,121,123,124,133,152,153,154,156,164,165,166,167,168,170,188,191,192,193,194,195,196,198,202,203,205,207,210,212,226,227,228,230,232,233,234,244,246,247,248,],[30,-46,-47,-48,-81,-82,-83,-84,-85,-86,-87,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,30,-52,-45,-91,172,-90,-100,-51,30,-50,200,200,-88,-76,-77,-78,-92,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-79,30,-34,172,-105,-106,200,-101,-103,-80,-89,-79,-104,-14,-102,]),'OPERATOR':([8,11,12,13,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,133,152,153,154,166,167,168,188,191,192,193,194,195,196,198,202,203,205,207,210,226,227,230,232,233,244,246,247,248,],[31,-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,31,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,31,-52,-100,-51,31,-3,-76,-77,-78,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-79,31,-34,-105,-106,-101,-103,-80,-79,-104,-14,-102,]),'ARROW':([8,11,12,13,22,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,87,88,89,90,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,117,121,124,133,138,152,153,154,161,162,165,166,167,168,170,184,188,191,192,193,194,195,196,198,202,203,205,207,209,210,219,222,223,226,227,230,232,233,234,239,240,241,244,245,246,247,248,],[32,-46,-47,-48,-97,-79,-81,-82,-83,-84,-85,-86,-87,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,137,-111,-112,-119,-120,-117,-118,-99,-15,-13,32,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,32,-52,-95,-91,-90,-100,-113,-51,32,-3,208,-79,-88,-76,-77,-78,-92,-79,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-79,32,-93,-34,137,-115,-116,-105,-106,-101,-103,-80,-89,-79,-121,-122,-79,-114,-104,-14,-102,]),'PLUS':([8,11,12,13,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,133,152,153,154,166,167,168,188,191,192,193,194,195,196,198,202,203,205,207,210,226,227,230,232,233,244,246,247,248,],[33,-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,-11,33,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,33,-52,-100,-51,33,-3,-76,-77,-78,-12,-10,33,-6,-4,-2,-1,-49,-33,-53,-79,33,-34,-105,-106,-101,-103,-80,-79,-104,-14,-102,]),'MINUS':([8,11,12,13,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,133,152,153,154,166,167,168,188,191,192,193,194,195,196,198,202,203,205,207,210,226,227,230,232,233,244,246,247,248,],[34,-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,-11,34,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,34,-52,-100,-51,34,-3,-76,-77,-78,-12,-10,34,-6,-4,-2,-1,-49,-33,-53,-79,34,-34,-105,-106,-101,-103,-80,-79,-104,-14,-102,]),'STAR':([8,11,12,13,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,133,152,153,154,166,167,168,188,191,192,193,194,195,196,198,202,203,205,207,210,226,227,230,232,233,244,246,247,248,],[35,-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,-11,-9,35,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,35,-52,-100,-51,35,-3,-76,-77,-78,-12,-10,-8,35,-4,-2,-1,-49,-33,-53,-79,35,-34,-105,-106,-101,-103,-80,-79,-104,-14,-102,]),'SLASH':([8,11,12,13,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,133,152,153,154,166,167,168,188,191,192,193,194,195,196,198,202,203,205,207,210,226,227,230,232,233,244,246,247,248,],[36,-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,-11,-9,36,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,36,-52,-100,-51,36,-3,-76,-77,-78,-12,-10,-8,36,-4,-2,-1,-49,-33,-53,-79,36,-34,-105,-106,-101,-103,-80,-79,-104,-14,-102,]),'DOUBLESLASH':([8,11,12,13,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,133,152,153,154,166,167,168,188,191,192,193,194,195,196,198,202,203,205,207,210,226,227,230,232,233,244,246,247,248,],[37,-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,-11,-9,37,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,37,-52,-100,-51,37,-3,-76,-77,-78,-12,-10,-8,37,-4,-2,-1,-49,-33,-53,-79,37,-34,-105,-106,-101,-103,-80,-79,-104,-14,-102,]),'PERCENT':([8,11,12,13,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,133,152,153,154,166,167,168,188,191,192,193,194,195,196,198,202,203,205,207,210,226,227,230,232,233,244,246,247,248,],[38,-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,-11,-9,38,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,38,-52,-100,-51,38,-3,-76,-77,-78,-12,-10,-8,38,-4,-2,-1,-49,-33,-53,-79,38,-34,-105,-106,-101,-103,-80,-79,-104,-14,-102,]),'DOT_OPERATOR':([8,11,12,13,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,133,152,153,154,166,167,168,188,191,192,193,194,195,196,198,202,203,205,207,210,226,227,230,232,233,244,246,247,248,],[39,-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,-11,-9,-7,-5,39,-16,-17,-18,-19,-20,-21,-22,-23,39,-52,-100,-51,39,39,-76,-77,-78,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-79,39,-34,-105,-106,-101,-103,-80,-79,-104,-14,-102,]),'RPAREN':([11,12,13,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,86,87,88,89,90,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,117,120,121,122,123,124,129,133,138,141,152,154,156,157,158,159,162,165,166,167,168,170,171,173,184,185,188,191,192,193,194,195,196,197,198,199,201,202,203,205,209,210,211,212,216,219,220,222,223,224,226,227,228,230,232,233,234,235,239,240,241,242,244,245,246,247,248,],[-46,-47,-48,-97,76,-61,-65,-66,-67,-68,-69,-70,-62,-63,-59,-60,-55,-56,-57,-58,-54,-79,-81,-82,-83,-84,-85,-86,-87,-45,-25,-26,-27,-28,-29,-30,-31,-32,121,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-107,-108,-111,-112,-119,-120,-117,-118,-99,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-79,-52,-95,-45,-91,170,-79,-90,-123,-100,-113,-124,-51,-50,198,202,203,-37,-79,-88,-76,-77,-78,-92,-94,-98,-79,-79,-12,-10,-8,-6,-4,-2,-1,198,-49,-35,-38,-33,-53,-79,-93,-34,234,-79,237,-110,-109,-115,-116,240,-105,-106,-79,-101,-103,-80,-89,-96,-79,-121,-122,-36,-79,-114,-104,-14,-102,]),'KEYWORD_WHERE':([11,12,13,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,133,152,154,155,156,164,166,167,168,187,188,191,192,193,194,195,196,197,198,202,203,205,210,226,227,228,230,232,233,244,246,247,248,],[-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,144,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,144,-51,-3,144,144,144,-76,-77,-78,144,-12,-10,-8,-6,-4,-2,-1,144,-49,-33,-53,-79,-34,-105,-106,144,-101,-103,144,-79,-104,144,-102,]),'TICK_OPERATOR':([11,12,13,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,133,152,154,155,156,164,166,167,168,187,188,191,192,193,194,195,196,197,198,202,203,205,210,226,227,228,230,232,233,244,246,247,248,],[-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,145,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,145,-51,-3,145,145,145,-76,-77,-78,145,-12,-10,-8,-6,-4,-2,-1,145,-49,-33,-53,-79,-34,-105,-106,145,-101,-103,145,-79,-104,145,-102,]),'PADDING':([11,12,13,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,78,79,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,130,132,133,137,138,144,152,154,166,167,168,176,177,178,179,184,185,186,188,191,192,193,194,195,196,198,202,203,205,210,214,215,219,220,222,223,226,227,230,232,233,237,238,239,240,241,244,245,246,247,248,],[-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,129,-142,-79,-107,-108,-111,-112,-119,-120,129,129,-117,-118,-99,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,-143,-145,-100,129,-113,190,-51,-50,-76,-77,-78,-79,-146,-147,-148,-79,129,129,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,231,-34,129,-144,-110,-109,-115,-116,-105,-106,-101,-103,-80,-149,-150,-79,-121,-122,231,-114,-104,-14,-102,]),'KEYWORD_IN':([11,12,13,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,133,152,154,166,167,168,188,191,192,193,194,195,196,198,202,203,204,205,210,226,227,230,232,233,244,246,247,248,],[-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,-100,-51,-50,-76,-77,-78,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,229,-79,-34,-105,-106,-101,-103,-80,-79,-104,-14,-102,]),'RBRACKET':([11,12,13,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,86,87,88,89,90,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,116,129,133,138,141,152,154,159,163,164,166,167,168,184,186,188,191,192,193,194,195,196,198,199,201,202,203,205,210,217,219,220,222,223,225,226,227,228,230,232,233,239,240,241,242,244,245,246,247,248,],[-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,124,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-107,-108,-111,-112,-119,-120,-117,-118,-99,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,-79,-123,-100,-113,-124,-51,-50,-37,210,-79,-76,-77,-78,-79,-79,-12,-10,-8,-6,-4,-2,-1,-49,-35,-38,-33,-53,-79,-34,238,-110,-109,-115,-116,241,-105,-106,-79,-101,-103,-80,-79,-121,-122,-36,-79,-114,-104,-14,-102,]),'LBRACKET':([21,24,31,32,33,34,35,36,37,38,39,44,45,63,81,92,93,106,112,113,115,116,118,129,131,137,139,140,141,142,143,145,146,147,148,149,150,151,153,169,172,174,180,181,183,198,200,203,208,221,243,],[64,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,93,116,64,116,-79,-79,116,116,-52,64,116,64,-123,181,-79,93,93,-124,93,116,-64,116,116,116,116,116,116,116,64,64,93,93,93,93,-49,116,-53,116,93,116,]),'BASE10_INTEGER':([21,24,31,32,33,34,35,36,37,38,39,45,63,81,106,112,113,115,116,118,143,145,146,147,148,149,150,151,153,169,172,198,200,203,208,243,],[65,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,65,65,65,65,65,-52,65,65,65,65,-64,65,65,65,65,65,65,65,65,65,-49,65,-53,65,65,]),'BASE16_INTEGER':([21,24,31,32,33,34,35,36,37,38,39,45,63,81,106,112,113,115,116,118,143,145,146,147,148,149,150,151,153,169,172,198,200,203,208,243,],[66,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,66,66,66,66,66,-52,66,66,66,66,-64,66,66,66,66,66,66,66,66,66,-49,66,-53,66,66,]),'BASE8_INTEGER':([21,24,31,32,33,34,35,36,37,38,39,45,63,81,106,112,113,115,116,118,143,145,146,147,148,149,150,151,153,169,172,198,200,203,208,243,],[67,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,67,67,67,67,67,-52,67,67,67,67,-64,67,67,67,67,67,67,67,67,67,-49,67,-53,67,67,]),'BASE2_INTEGER':([21,24,31,32,33,34,35,36,37,38,39,45,63,81,106,112,113,115,116,118,143,145,146,147,148,149,150,151,153,169,172,198,200,203,208,243,],[68,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,68,68,68,68,68,-52,68,68,68,68,-64,68,68,68,68,68,68,68,68,68,-49,68,-53,68,68,]),'FLOAT':([21,24,31,32,33,34,35,36,37,38,39,45,63,81,106,112,113,115,116,118,143,145,146,147,148,149,150,151,153,169,172,198,200,203,208,243,],[69,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,69,69,69,69,69,-52,69,69,69,69,-64,69,69,69,69,69,69,69,69,69,-49,69,-53,69,69,]),'STRING':([21,24,31,32,33,34,35,36,37,38,39,45,63,81,106,112,113,115,116,118,119,143,145,146,147,148,149,150,151,153,169,172,198,200,203,208,243,],[70,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,70,70,70,70,70,-52,70,70,70,70,70,-64,70,70,70,70,70,70,70,70,70,-49,70,-53,70,70,]),'CHAR':([21,24,31,32,33,34,35,36,37,38,39,45,63,81,106,112,113,115,116,118,119,143,145,146,147,148,149,150,151,153,169,172,198,200,203,208,243,],[71,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,71,71,71,71,71,-52,71,71,71,71,71,-64,71,71,71,71,71,71,71,71,71,-49,71,-53,71,71,]),'DATE':([21,24,31,32,33,34,35,36,37,38,39,45,63,81,106,112,113,115,116,118,143,145,146,147,148,149,150,151,153,169,172,198,200,203,208,243,],[72,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,72,72,72,72,72,-52,72,72,72,72,-64,72,72,72,72,72,72,72,72,72,-49,72,-53,72,72,]),'DATETIME':([21,24,31,32,33,34,35,36,37,38,39,45,63,81,106,112,113,115,116,118,143,145,146,147,148,149,150,151,153,169,172,198,200,203,208,243,],[73,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,73,73,73,73,73,-52,73,73,73,73,-64,73,73,73,73,73,73,73,73,73,-49,73,-53,73,73,]),'DATE_INTERVAL':([21,24,31,32,33,34,35,36,37,38,39,45,63,81,106,112,113,115,116,118,143,145,146,147,148,149,150,151,153,169,172,198,200,203,208,243,],[74,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,74,74,74,74,74,-52,74,74,74,74,-64,74,74,74,74,74,74,74,74,74,-49,74,-53,74,74,]),'DATETIME_INTERVAL':([21,24,31,32,33,34,35,36,37,38,39,45,63,81,106,112,113,115,116,118,143,145,146,147,148,149,150,151,153,169,172,198,200,203,208,243,],[75,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,75,75,75,75,75,-52,75,75,75,75,-64,75,75,75,75,75,75,75,75,75,-49,75,-53,75,75,]),'KEYWORD_LET':([24,31,32,33,34,35,36,37,38,39,45,81,106,112,113,116,143,145,146,147,148,149,150,151,153,198,200,203,208,243,],[-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,114,114,114,114,-52,114,114,-64,114,114,114,114,114,114,114,-49,114,-53,114,114,]),'BACKSLASH':([24,31,32,33,34,35,36,37,38,39,45,81,106,112,113,116,143,145,146,147,148,149,150,151,153,198,200,203,208,243,],[-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,115,115,115,115,-52,115,115,-64,115,115,115,115,115,115,115,-49,115,-53,115,115,]),'ANNOTATION':([55,65,66,67,68,69,],[119,-71,-72,-73,-74,-75,]),'PIPE':([78,79,80,94,95,127,128,129,130,132,176,177,178,179,214,215,237,238,],[-79,-142,-79,-117,-118,175,-124,-123,-143,-145,-79,-146,-147,-148,-79,-144,-149,-150,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'definitions':([0,],[2,]),'definition':([0,17,],[3,43,]),'nametype_decl':([0,17,],[4,4,]),'valuedef':([0,17,],[5,5,]),'datatype_definition':([0,17,],[6,6,]),'_identifier':([0,17,21,45,63,81,106,112,115,116,118,119,143,146,147,148,149,150,151,153,160,169,172,189,190,200,208,231,243,],[7,7,54,54,120,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,206,54,54,206,206,54,54,206,54,]),'equation':([0,17,160,189,190,231,],[9,9,205,205,205,244,]),'_datatype_lhs':([0,17,],[10,10,]),'_enclosed_operator':([0,17,45,81,103,106,112,116,143,146,147,148,149,150,151,153,154,160,189,190,196,200,208,231,243,],[14,14,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,14,14,14,113,113,113,14,113,]),'_definition_set':([3,43,],[16,83,]),'empty':([3,7,14,43,46,78,80,82,92,93,112,116,123,137,156,162,164,176,182,184,185,186,205,206,212,214,228,239,244,],[18,22,22,18,22,128,132,136,141,141,159,159,173,141,201,22,201,132,136,223,141,141,232,22,173,128,201,223,232,]),'_patterns':([7,14,46,162,206,],[20,41,117,209,20,]),'_st_operator':([8,112,153,207,],[23,158,158,158,]),'infixl_operator_2':([8,99,112,153,207,],[25,147,25,25,25,]),'infixr_operator_2':([8,99,112,153,207,],[26,146,26,26,26,]),'infixl_operator_6':([8,100,112,153,192,207,],[27,148,27,27,148,27,]),'infixl_operator_7':([8,101,112,153,193,207,],[28,149,28,28,149,28,]),'infixr_operator_9':([8,103,112,153,154,196,207,],[29,150,29,29,150,150,29,]),'pattern':([21,63,115,118,169,172,],[46,123,162,165,162,212,]),'identifier':([21,45,63,81,106,112,115,116,118,119,143,146,147,148,149,150,151,153,169,172,200,208,243,],[47,105,47,105,105,105,47,105,47,168,105,105,105,105,105,105,105,105,47,47,105,105,105,]),'literal':([21,45,63,81,106,112,115,116,118,143,146,147,148,149,150,151,153,169,172,200,208,243,],[48,104,48,104,104,104,48,104,48,104,104,104,104,104,104,104,104,48,48,104,104,104,]),'cons_pattern':([21,63,115,118,169,172,],[49,49,49,49,49,49,]),'list_cons_pattern':([21,63,115,118,169,172,],[50,50,50,50,50,50,]),'tuple_cons_pattern':([21,63,115,118,169,172,],[51,51,51,51,51,51,]),'empty_list_pattern':([21,63,115,118,169,172,],[52,52,52,52,52,52,]),'empty_tuple_pattern':([21,63,115,118,169,172,],[53,53,53,53,53,53,]),'number':([21,45,63,81,106,112,115,116,118,143,146,147,148,149,150,151,153,169,172,200,208,243,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'concrete_number':([21,45,63,81,106,112,115,116,118,143,146,147,148,149,150,151,153,169,172,200,208,243,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'string':([21,45,63,81,106,112,115,116,118,119,143,146,147,148,149,150,151,153,169,172,200,208,243,],[57,57,57,57,57,57,57,57,57,166,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'char':([21,45,63,81,106,112,115,116,118,119,143,146,147,148,149,150,151,153,169,172,200,208,243,],[58,58,58,58,58,58,58,58,58,167,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'date':([21,45,63,81,106,112,115,116,118,143,146,147,148,149,150,151,153,169,172,200,208,243,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'datetime':([21,45,63,81,106,112,115,116,118,143,146,147,148,149,150,151,153,169,172,200,208,243,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'date_interval':([21,45,63,81,106,112,115,116,118,143,146,147,148,149,150,151,153,169,172,200,208,243,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'datetime_interval':([21,45,63,81,106,112,115,116,118,143,146,147,148,149,150,151,153,169,172,200,208,243,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'_data_rhs':([40,],[77,]),'data_cons':([40,175,],[78,214,]),'_data_cons':([40,175,],[79,79,]),'st_type_expr':([44,174,],[84,213,]),'type_expr':([44,140,142,174,180,181,],[85,185,186,85,216,217,]),'type_function_expr':([44,140,142,174,180,181,183,],[86,86,86,86,86,86,220,]),'type_term':([44,140,142,174,180,181,183,],[87,87,87,87,87,87,219,]),'type_app_expression':([44,140,142,174,180,181,183,],[88,88,88,88,88,88,88,]),'type_factor':([44,139,140,142,174,180,181,183,221,],[89,184,89,89,89,89,89,89,239,]),'type_variable':([44,131,139,140,142,174,180,181,183,221,],[90,177,90,90,90,90,90,90,90,90,]),'type_cons':([44,131,139,140,142,174,180,181,183,221,],[91,178,91,91,91,91,91,91,91,91,]),'expr':([45,81,106,112,116,143,146,147,148,149,150,151,153,200,208,243,],[96,133,155,156,164,187,155,155,155,155,155,155,197,228,233,247,]),'expr_term0':([45,81,106,112,116,143,146,147,148,149,150,151,153,200,208,243,],[97,97,97,97,97,188,97,97,97,97,97,97,97,97,97,97,]),'expr_term1':([45,81,106,112,116,143,146,147,148,149,150,151,153,200,208,243,],[98,98,98,98,98,98,191,98,98,98,98,98,98,98,98,98,]),'expr_term2':([45,81,106,112,116,143,146,147,148,149,150,151,153,200,208,243,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'expr_term6':([45,81,106,112,116,143,146,147,148,149,150,151,153,200,208,243,],[100,100,100,100,100,100,100,192,100,100,100,100,100,100,100,100,]),'expr_term7':([45,81,106,112,116,143,146,147,148,149,150,151,153,200,208,243,],[101,101,101,101,101,101,101,101,193,101,101,101,101,101,101,101,]),'expr_term9':([45,81,106,112,116,143,146,147,148,149,150,151,153,200,208,243,],[102,102,102,102,102,102,102,102,102,194,195,102,102,102,102,102,]),'expr_factor':([45,81,106,112,116,143,146,147,148,149,150,151,153,200,208,243,],[103,103,154,103,103,103,103,103,103,103,103,196,103,103,103,103,]),'enclosed_expr':([45,81,103,106,112,116,143,146,147,148,149,150,151,153,154,196,200,208,243,],[106,106,152,106,106,106,106,106,106,106,106,106,106,106,152,152,106,106,106,]),'letexpr':([45,81,106,112,116,143,146,147,148,149,150,151,153,200,208,243,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'where_expr':([45,81,106,112,116,143,146,147,148,149,150,151,153,200,208,243,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'lambda_expr':([45,81,106,112,116,143,146,147,148,149,150,151,153,200,208,243,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'simple_list_expr':([45,81,106,112,116,143,146,147,148,149,150,151,153,200,208,243,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'simple_tuple_expr':([45,81,106,112,116,143,146,147,148,149,150,151,153,200,208,243,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'patterns_comma_sep':([63,],[122,]),'_data_conses':([78,214,],[126,236,]),'_maybe_padding':([78,92,93,137,185,186,214,],[127,140,142,183,224,225,127,]),'_cons_args':([80,176,],[130,215,]),'_cons_params':([82,182,],[135,218,]),'_app_args_non_empty':([89,],[138,]),'infixl_operator_0':([96,133,155,156,164,187,197,228,233,247,],[143,143,143,143,143,143,143,143,143,143,]),'_list_items':([112,116,],[157,163,]),'patterns':([115,169,],[161,211,]),'_patterns_comma':([123,212,],[171,235,]),'cons_arg':([131,],[176,]),'_cons_arg_factor':([131,],[179,]),'_list_items_cont':([156,164,228,],[199,199,242,]),'equations':([160,189,190,],[204,226,227,]),'_app_args':([184,239,],[222,245,]),'_equation_set':([205,244,],[230,248,]),'st_expr':([243,],[246,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','__init__.py',430),
  ('expr_term9 -> expr_factor infixr_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','__init__.py',437),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','__init__.py',438),
  ('expr_term7 -> expr_term7 infixl_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','__init__.py',440),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','__init__.py',441),
  ('expr_term6 -> expr_term6 infixl_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','__init__.py',443),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','__init__.py',444),
  ('expr_term2 -> expr_term2 infixl_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','__init__.py',446),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','__init__.py',447),
  ('expr_term1 -> expr_term2 infixr_operator_2 expr_term1','expr_term1',3,'p_expressions_precedence_rules','__init__.py',449),
  ('expr_term1 -> expr_term2','expr_term1',1,'p_expressions_precedence_rules','__init__.py',450),
  ('expr_term0 -> expr infixl_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','__init__.py',452),
  ('expr_term0 -> expr_term1','expr_term0',1,'p_expressions_precedence_rules','__init__.py',453),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','__init__.py',466),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','__init__.py',468),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','__init__.py',470),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','__init__.py',471),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','__init__.py',472),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','__init__.py',473),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','__init__.py',474),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','__init__.py',475),
  ('expr_factor -> simple_list_expr','expr_factor',1,'p_standalone_definitions','__init__.py',476),
  ('expr_factor -> simple_tuple_expr','expr_factor',1,'p_standalone_definitions','__init__.py',477),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','__init__.py',479),
  ('literal -> number','literal',1,'p_literals','__init__.py',487),
  ('literal -> concrete_number','literal',1,'p_literals','__init__.py',488),
  ('literal -> string','literal',1,'p_literals','__init__.py',489),
  ('literal -> char','literal',1,'p_literals','__init__.py',490),
  ('literal -> date','literal',1,'p_literals','__init__.py',491),
  ('literal -> datetime','literal',1,'p_literals','__init__.py',492),
  ('literal -> date_interval','literal',1,'p_literals','__init__.py',493),
  ('literal -> datetime_interval','literal',1,'p_literals','__init__.py',494),
  ('simple_tuple_expr -> LPAREN _list_items RPAREN','simple_tuple_expr',3,'p_tuple_expr','__init__.py',500),
  ('simple_list_expr -> LBRACKET _list_items RBRACKET','simple_list_expr',3,'p_list_expr','__init__.py',515),
  ('_list_items -> expr _list_items_cont','_list_items',2,'p_list_items','__init__.py',525),
  ('_list_items_cont -> COMMA expr _list_items_cont','_list_items_cont',3,'p_list_items','__init__.py',526),
  ('_list_items -> empty','_list_items',1,'p_list_items_empty','__init__.py',535),
  ('_list_items_cont -> empty','_list_items_cont',1,'p_list_items_empty','__init__.py',536),
  ('date -> DATE','date',1,'p_date','__init__.py',542),
  ('datetime -> DATETIME','datetime',1,'p_datetime','__init__.py',548),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','__init__.py',554),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','__init__.py',560),
  ('char -> CHAR','char',1,'p_char','__init__.py',566),
  ('string -> STRING','string',1,'p_string','__init__.py',571),
  ('identifier -> _identifier','identifier',1,'p_variable','__init__.py',576),
  ('_identifier -> UNDER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',583),
  ('_identifier -> UPPER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',584),
  ('_identifier -> LOWER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',585),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','__init__.py',592),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','__init__.py',597),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','__init__.py',598),
  ('enclosed_expr -> _enclosed_operator','enclosed_expr',1,'p_operators_as_expressios','__init__.py',604),
  ('_enclosed_operator -> LPAREN _st_operator RPAREN','_enclosed_operator',3,'p_enclosed_operator','__init__.py',610),
  ('infixr_operator_9 -> DOT_OPERATOR','infixr_operator_9',1,'p_operator','__init__.py',620),
  ('infixl_operator_7 -> STAR','infixl_operator_7',1,'p_operator','__init__.py',622),
  ('infixl_operator_7 -> SLASH','infixl_operator_7',1,'p_operator','__init__.py',623),
  ('infixl_operator_7 -> DOUBLESLASH','infixl_operator_7',1,'p_operator','__init__.py',624),
  ('infixl_operator_7 -> PERCENT','infixl_operator_7',1,'p_operator','__init__.py',625),
  ('infixl_operator_6 -> PLUS','infixl_operator_6',1,'p_operator','__init__.py',627),
  ('infixl_operator_6 -> MINUS','infixl_operator_6',1,'p_operator','__init__.py',628),
  ('infixr_operator_2 -> COLON','infixr_operator_2',1,'p_operator','__init__.py',630),
  ('infixl_operator_2 -> OPERATOR','infixl_operator_2',1,'p_operator','__init__.py',632),
  ('infixl_operator_2 -> ARROW','infixl_operator_2',1,'p_operator','__init__.py',633),
  ('infixl_operator_0 -> TICK_OPERATOR','infixl_operator_0',1,'p_operator','__init__.py',635),
  ('_st_operator -> infixl_operator_2','_st_operator',1,'p_operator','__init__.py',637),
  ('_st_operator -> infixr_operator_2','_st_operator',1,'p_operator','__init__.py',638),
  ('_st_operator -> infixl_operator_6','_st_operator',1,'p_operator','__init__.py',639),
  ('_st_operator -> infixl_operator_7','_st_operator',1,'p_operator','__init__.py',640),
  ('_st_operator -> infixr_operator_9','_st_operator',1,'p_operator','__init__.py',641),
  ('_st_operator -> COMMA','_st_operator',1,'p_operator','__init__.py',642),
  ('number -> BASE10_INTEGER','number',1,'p_integer','__init__.py',649),
  ('number -> BASE16_INTEGER','number',1,'p_integer','__init__.py',650),
  ('number -> BASE8_INTEGER','number',1,'p_integer','__init__.py',651),
  ('number -> BASE2_INTEGER','number',1,'p_integer','__init__.py',652),
  ('number -> FLOAT','number',1,'p_float','__init__.py',681),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','__init__.py',686),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','__init__.py',687),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','__init__.py',688),
  ('empty -> <empty>','empty',0,'p_empty','__init__.py',697),
  ('lambda_expr -> BACKSLASH patterns ARROW expr','lambda_expr',4,'p_lambda_definition','__init__.py',702),
  ('pattern -> identifier','pattern',1,'p_pattern','__init__.py',711),
  ('pattern -> literal','pattern',1,'p_pattern','__init__.py',712),
  ('pattern -> cons_pattern','pattern',1,'p_pattern','__init__.py',713),
  ('pattern -> list_cons_pattern','pattern',1,'p_pattern','__init__.py',714),
  ('pattern -> tuple_cons_pattern','pattern',1,'p_pattern','__init__.py',715),
  ('pattern -> empty_list_pattern','pattern',1,'p_pattern','__init__.py',716),
  ('pattern -> empty_tuple_pattern','pattern',1,'p_pattern','__init__.py',717),
  ('list_cons_pattern -> pattern COLON pattern','list_cons_pattern',3,'p_list_cons_for_param','__init__.py',723),
  ('cons_pattern -> LPAREN _identifier SPACE patterns RPAREN','cons_pattern',5,'p_param_pattern','__init__.py',729),
  ('empty_list_pattern -> LBRACKET RBRACKET','empty_list_pattern',2,'p_empty_list_as_pattern','__init__.py',734),
  ('empty_tuple_pattern -> LPAREN RPAREN','empty_tuple_pattern',2,'p_unit_value_as_pattern','__init__.py',740),
  ('tuple_cons_pattern -> LPAREN patterns_comma_sep RPAREN','tuple_cons_pattern',3,'p_tuple_cons_pattern','__init__.py',746),
  ('patterns -> pattern _patterns','patterns',2,'p_patterns','__init__.py',751),
  ('patterns_comma_sep -> pattern _patterns_comma','patterns_comma_sep',2,'p_patterns','__init__.py',752),
  ('_patterns -> SPACE pattern _patterns','_patterns',3,'p_patterns','__init__.py',753),
  ('_patterns_comma -> COMMA pattern _patterns_comma','_patterns_comma',3,'p_patterns','__init__.py',754),
  ('_patterns -> empty','_patterns',1,'p_patterns_empty','__init__.py',764),
  ('_patterns_comma -> empty','_patterns_comma',1,'p_patterns_empty','__init__.py',765),
  ('equation -> _identifier _patterns EQ expr','equation',4,'p_equation','__init__.py',771),
  ('equation -> _enclosed_operator _patterns EQ expr','equation',4,'p_equation','__init__.py',772),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','__init__.py',782),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','__init__.py',791),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','__init__.py',800),
  ('letexpr -> KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','__init__.py',810),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','__init__.py',818),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','__init__.py',819),
  ('type_expr -> type_function_expr','type_expr',1,'p_type_expr','__init__.py',829),
  ('type_expr -> type_term','type_expr',1,'p_type_expr','__init__.py',830),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','__init__.py',835),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','__init__.py',836),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','__init__.py',846),
  ('type_term -> type_factor','type_term',1,'p_type_term','__init__.py',847),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','__init__.py',852),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','__init__.py',864),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','__init__.py',865),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','__init__.py',873),
  ('type_variable -> LOWER_IDENTIFIER','type_variable',1,'p_type_variable','__init__.py',878),
  ('type_cons -> UPPER_IDENTIFIER','type_cons',1,'p_type_cons','__init__.py',883),
  ('type_factor -> type_variable','type_factor',1,'p_type_factor_identifier','__init__.py',888),
  ('type_factor -> type_cons','type_factor',1,'p_type_factor_identifier','__init__.py',889),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','__init__.py',896),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','__init__.py',901),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','__init__.py',906),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','__init__.py',907),
  ('program -> definitions','program',1,'p_program','__init__.py',913),
  ('definitions -> definition _definition_set','definitions',2,'p_definitions','__init__.py',929),
  ('_definition_set -> NEWLINE definition _definition_set','_definition_set',3,'p_definition_set','__init__.py',937),
  ('_definition_set -> empty','_definition_set',1,'p_definition_set2','__init__.py',945),
  ('definition -> nametype_decl','definition',1,'p_definition','__init__.py',951),
  ('definition -> valuedef','definition',1,'p_definition','__init__.py',952),
  ('definition -> datatype_definition','definition',1,'p_definition','__init__.py',953),
  ('valuedef -> equation','valuedef',1,'p_valuedef','__init__.py',959),
  ('nametype_decl -> _identifier COLON COLON st_type_expr','nametype_decl',4,'p_nametype_decl','__init__.py',965),
  ('nametype_decl -> LPAREN _st_operator RPAREN COLON COLON st_type_expr','nametype_decl',6,'p_nametype_decl_operators','__init__.py',974),
  ('datatype_definition -> _datatype_lhs EQ _data_rhs','datatype_definition',3,'p_datatype_definition','__init__.py',983),
  ('_datatype_lhs -> KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params','_datatype_lhs',4,'p_datatype_lhs','__init__.py',991),
  ('_cons_params -> SPACE LOWER_IDENTIFIER _cons_params','_cons_params',3,'p_datatype_cons_params','__init__.py',1000),
  ('_cons_params -> empty','_cons_params',1,'p_datatype_cons_params_empty','__init__.py',1009),
  ('_data_rhs -> data_cons _data_conses','_data_rhs',2,'p_datatype_body','__init__.py',1015),
  ('_data_conses -> _maybe_padding PIPE data_cons _data_conses','_data_conses',4,'p_datatype_body','__init__.py',1016),
  ('_data_conses -> empty','_data_conses',1,'p_datatype_conses_empty','__init__.py',1025),
  ('data_cons -> _data_cons','data_cons',1,'p_data_cons','__init__.py',1030),
  ('_data_cons -> UPPER_IDENTIFIER _cons_args','_data_cons',2,'p_bare_data_cons','__init__.py',1036),
  ('_cons_args -> SPACE cons_arg _cons_args','_cons_args',3,'p_data_cons_args','__init__.py',1041),
  ('_cons_args -> empty','_cons_args',1,'p_data_cons_args_empty','__init__.py',1050),
  ('cons_arg -> type_variable','cons_arg',1,'p_cons_arg','__init__.py',1056),
  ('cons_arg -> type_cons','cons_arg',1,'p_cons_arg','__init__.py',1057),
  ('cons_arg -> _cons_arg_factor','cons_arg',1,'p_cons_arg','__init__.py',1058),
  ('_cons_arg_factor -> LPAREN type_expr RPAREN','_cons_arg_factor',3,'p_cons_arg_factor','__init__.py',1064),
  ('_cons_arg_factor -> LBRACKET type_expr RBRACKET','_cons_arg_factor',3,'p_cons_arg_factor_list','__init__.py',1070),
]
