
# program_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON COMMA DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FATARROW FLOAT KEYWORD_CLASS KEYWORD_DATA KEYWORD_FORALL KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LOWER_IDENTIFIER LPAREN MINUS NEWLINE OPERATOR PADDING PERCENT PIPE PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATOR UNDER_IDENTIFIER UPPER_IDENTIFIERexpr_factor : expr_factor SPACE expr_factor\n    expr_term9 : expr_factor infixr_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infixl_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infixl_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infixl_operator_2 expr_term6\n               | expr_term6\n\n    expr_term1 : expr_term2 infixr_operator_2 expr_term1\n               | expr_term2\n\n    expr_term0 : expr infixl_operator_0 expr_term0\n               | expr_term1\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | letexpr\n                | where_expr\n                | lambda_expr\n                | simple_list_expr\n                | simple_tuple_expr\n\n    st_type_expr : type_expr\n                 | constrained_type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    simple_tuple_expr : LPAREN _list_items RPAREN\n    simple_list_expr : LBRACKET _list_items RBRACKET\n    _list_items : expr _list_items_cont\n       _list_items_cont : COMMA expr _list_items_cont\n    _list_items : empty\n       _list_items_cont : empty\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    char : CHARstring : STRINGidentifier : _identifier\n\n    _identifier : UNDER_IDENTIFIER\n                   | UPPER_IDENTIFIER\n                   | LOWER_IDENTIFIER\n\n    enclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : _enclosed_operator\n    _enclosed_operator : LPAREN _st_operator RPAREN\n    infixr_operator_9 : DOT_OPERATOR\n\n    infixl_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infixl_operator_6 : PLUS\n                     | MINUS\n\n    infixr_operator_2 : COLON\n\n    infixl_operator_2 : OPERATOR\n                      | ARROW\n\n    infixl_operator_0 : TICK_OPERATOR\n\n    _st_operator : infixl_operator_2\n                 | infixr_operator_2\n                 | infixl_operator_6\n                 | infixl_operator_7\n                 | infixr_operator_9\n                 | COMMA\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH patterns ARROW expr\n    \n    pattern : literal\n    pattern : cons_pattern\n    pattern : list_cons_pattern\n    pattern : tuple_cons_pattern\n    pattern : empty_list_pattern\n    pattern : empty_tuple_pattern\n    pattern : LOWER_IDENTIFIER\n       pattern : UNDER_IDENTIFIER\n    pattern : UPPER_IDENTIFIER\n    list_cons_pattern : pattern COLON pattern\n    cons_pattern : LPAREN _identifier SPACE patterns RPARENempty_list_pattern : LBRACKET RBRACKETempty_tuple_pattern : LPAREN RPARENtuple_cons_pattern : LPAREN patterns_comma_sep RPAREN\n    patterns : pattern _patterns\n       patterns_comma_sep : pattern _patterns_comma\n       _patterns : SPACE pattern _patterns\n       _patterns_comma : COMMA pattern _patterns_comma\n    _patterns : empty\n       _patterns_comma : empty\n    equation : _identifier _patterns EQ expr\n       equation : _enclosed_operator _patterns EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE local_definitions KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    type_expr : type_scheme type_function_expr\n                 | type_scheme type_termtype_scheme : emptytype_scheme : KEYWORD_FORALL SPACE _type_scheme_generics_type_scheme_generics : _identifier SPACE _type_scheme_generics_type_scheme_generics : _identifier DOT_OPERATORtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_variable : LOWER_IDENTIFIERtype_cons : UPPER_IDENTIFIERtype_factor : type_variable\n                   | type_cons\n\n    type_factor : LPAREN _maybe_padding _type_expr_list _maybe_padding RPARENtype_factor : LPAREN RPAREN_type_expr_list : type_expr COMMA _type_expr_list_trail\n       _type_expr_list_trail : type_expr COMMA _type_expr_list_trail\n    _type_expr_list_trail : type_expr\n    type_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKETconstrained_type_expr : type_constraints FATARROW type_expr\n\n    type_constraints : _type_expr_list_trail\n    _maybe_padding : PADDING\n                      | empty\n    program : definitions _trailing_new_lines\n    _trailing_new_lines : empty\n       _trailing_new_lines : NEWLINE _trailing_new_lines\n    definitions : definition _definition_set\n    _definition_set : newlines definition _definition_set\n    newlines : NEWLINE _trailing_new_lines_definition_set : empty\n       _definition_set : newlines\n    definition : local_definition\n                  | datatype_definition\n    \n    local_definition : nametype_decl\n                     | valuedef\n    local_definitions : local_definition _local_definition_set\n    _local_definition_set : PADDING definition _local_definition_set\n    _local_definition_set : empty\n    valuedef : equation\n    nametype_decl : _identifier COLON COLON st_type_expr\n    nametype_decl : LPAREN _st_operator RPAREN COLON COLON st_type_expr\n    datatype_definition : _datatype_lhs EQ _data_rhs\n    _datatype_lhs : KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params\n    _cons_params : SPACE LOWER_IDENTIFIER _cons_params\n    _cons_params : empty\n    _data_rhs : data_cons _data_conses\n       _data_conses : _maybe_padding PIPE data_cons _data_conses\n    _data_conses : emptydata_cons : _data_cons_data_cons : UPPER_IDENTIFIER _cons_args_cons_args : SPACE cons_arg _cons_args\n    _cons_args : empty\n    cons_arg : type_variable\n       cons_arg : type_cons\n       cons_arg : _cons_arg_factor\n    _cons_arg_factor : LPAREN type_expr RPAREN\n    _cons_arg_factor : LBRACKET type_expr RBRACKET\n    '
    
_lr_action_items = {'LPAREN':([0,13,14,15,18,19,21,23,27,30,37,38,39,40,41,42,43,44,45,48,50,55,56,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,90,95,97,102,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,130,144,152,153,154,161,162,163,165,167,168,169,170,171,172,173,174,175,176,182,188,189,190,191,194,196,204,206,207,209,210,212,215,216,217,218,219,220,221,222,223,225,227,229,230,233,235,243,249,250,251,254,258,260,265,270,272,273,274,275,277,284,285,286,289,],[10,-48,-47,-49,-140,-80,10,-80,75,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,-141,-144,-80,124,-26,-27,-28,-29,-30,-31,-32,-33,75,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,124,-137,152,161,-112,-46,-102,-15,-13,-11,-9,-7,-5,175,-16,-17,124,-19,-20,-21,-22,-23,124,-53,75,124,75,-103,-80,-80,-80,-80,-80,-80,124,-65,124,124,124,124,124,124,-52,124,175,10,-77,-78,-79,75,75,-80,-80,161,-80,-138,-80,-113,-12,253,253,-10,-8,-6,-4,-2,-1,-50,124,-34,-54,124,-35,161,-115,-108,-80,-109,10,-81,161,-80,-114,-104,253,-106,124,-80,-107,-14,-105,]),'KEYWORD_DATA':([0,18,19,21,23,48,50,258,],[12,-140,-80,12,-80,-141,-144,12,]),'UNDER_IDENTIFIER':([0,18,19,21,23,27,30,37,38,39,40,41,42,43,44,45,48,50,56,75,90,118,124,125,127,128,130,131,164,165,167,168,169,170,171,172,173,175,182,191,194,216,217,225,227,230,233,248,258,274,277,],[14,-140,-80,14,-80,65,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,-141,-144,14,135,14,14,14,-53,65,14,65,14,14,14,-65,14,14,14,14,14,14,14,14,65,65,14,14,-50,14,-54,14,14,14,14,14,]),'UPPER_IDENTIFIER':([0,18,19,21,23,24,27,30,37,38,39,40,41,42,43,44,45,46,48,50,55,56,75,90,95,97,102,104,118,124,125,127,128,130,131,145,152,153,154,161,162,163,164,165,167,168,169,170,171,172,173,175,182,191,194,196,204,206,207,209,210,212,216,217,225,227,230,233,243,248,249,258,265,270,272,274,277,],[13,-140,-80,13,-80,54,66,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,89,-141,-144,-80,13,136,13,-137,151,151,-112,13,13,-53,66,13,66,13,54,-80,-80,-80,-80,-80,-80,13,13,-65,13,13,13,13,13,13,13,13,66,66,-80,-80,151,-80,-138,-80,-113,13,13,-50,13,-54,13,151,13,-115,13,151,-80,-114,13,13,]),'LOWER_IDENTIFIER':([0,18,19,21,23,27,30,37,38,39,40,41,42,43,44,45,48,50,55,56,75,90,95,97,102,104,118,124,125,127,128,130,131,141,152,153,154,161,162,163,164,165,167,168,169,170,171,172,173,175,182,191,194,196,204,206,207,209,210,212,216,217,225,227,230,233,243,248,249,258,265,270,272,274,277,],[15,-140,-80,15,-80,64,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,-141,-144,-80,15,137,15,-137,150,150,-112,15,15,-53,64,15,64,15,197,-80,-80,-80,-80,-80,-80,15,15,-65,15,15,15,15,15,15,15,15,64,64,-80,-80,150,-80,-138,-80,-113,15,15,-50,15,-54,15,150,15,-115,15,150,-80,-114,15,15,]),'$end':([1,2,3,4,5,6,7,11,13,14,15,17,18,19,20,21,22,23,48,49,50,51,52,53,54,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,91,92,94,96,98,99,100,101,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,144,146,147,148,149,150,151,155,156,157,158,159,160,174,176,188,189,190,198,199,205,208,211,215,218,219,220,221,222,223,225,229,230,235,238,240,241,242,244,250,251,254,260,263,264,266,267,273,275,279,280,281,283,284,285,286,288,289,],[0,-80,-80,-147,-148,-149,-150,-154,-48,-47,-49,-139,-140,-80,-142,-146,-145,-80,-141,-80,-144,-157,-80,-164,-80,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-143,-161,-163,-165,-167,-155,-24,-25,-46,-102,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-53,-103,-80,-168,-169,-170,-124,-125,-110,-111,-118,-119,-126,-127,-52,-51,-77,-78,-79,-80,-166,-120,-129,-135,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,-156,-162,-171,-172,-80,-108,-80,-109,-81,-117,-116,-122,-123,-104,-106,-80,-128,-133,-134,-80,-107,-14,-121,-105,]),'NEWLINE':([2,3,4,5,6,7,11,13,14,15,18,19,20,21,22,23,48,49,50,51,52,53,54,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,91,92,94,96,98,99,100,101,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,144,146,147,148,149,150,151,155,156,157,158,159,160,174,176,188,189,190,198,199,205,208,211,215,218,219,220,221,222,223,225,229,230,235,238,240,241,242,244,250,251,254,260,263,264,266,267,273,275,279,280,281,283,284,285,286,288,289,],[19,23,-147,-148,-149,-150,-154,-48,-47,-49,-140,19,-142,-146,-145,19,-141,23,-144,-157,-80,-164,-80,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-143,-161,-163,-165,-167,-155,-24,-25,-46,-102,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-53,-103,-80,-168,-169,-170,-124,-125,-110,-111,-118,-119,-126,-127,-52,-51,-77,-78,-79,-80,-166,-120,-129,-135,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,-156,-162,-171,-172,-80,-108,-80,-109,-81,-117,-116,-122,-123,-104,-106,-80,-128,-133,-134,-80,-107,-14,-121,-105,]),'PADDING':([4,5,6,7,11,13,14,15,51,52,53,54,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,92,94,96,98,99,100,101,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,144,146,147,148,149,150,151,155,156,157,158,159,160,161,162,166,174,176,188,189,190,198,199,202,203,204,205,208,211,215,218,219,220,221,222,223,225,229,230,232,235,238,240,241,242,244,245,246,247,250,251,254,260,263,264,266,267,273,275,278,279,280,281,282,283,284,285,286,288,289,],[-147,-148,-149,-150,-154,-48,-47,-49,-157,95,-164,-80,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-161,-163,-165,-167,-155,-24,-25,-46,-102,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-53,-103,-80,-168,-169,-170,-124,-125,-110,-111,-118,-119,-126,-127,95,95,217,-52,-51,-77,-78,-79,95,-166,-132,-131,95,-120,-129,-135,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,258,-35,-156,-162,-171,-172,-80,95,95,95,-108,274,-109,-81,-117,-116,-122,-123,-104,-106,258,-80,-128,-133,-130,-134,274,-107,-14,-121,-105,]),'KEYWORD_IN':([4,5,6,7,11,13,14,15,51,52,53,54,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,92,94,96,98,99,100,101,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,144,146,147,148,149,150,151,155,156,157,158,159,160,174,176,188,189,190,198,199,205,208,211,215,218,219,220,221,222,223,225,229,230,231,232,235,238,240,241,242,244,250,251,254,257,259,260,263,264,266,267,273,275,278,279,280,281,283,284,285,286,287,288,289,],[-147,-148,-149,-150,-154,-48,-47,-49,-157,-80,-164,-80,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-161,-163,-165,-167,-155,-24,-25,-46,-102,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-53,-103,-80,-168,-169,-170,-124,-125,-110,-111,-118,-119,-126,-127,-52,-51,-77,-78,-79,-80,-166,-120,-129,-135,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,256,-80,-35,-156,-162,-171,-172,-80,-108,-80,-109,-151,-153,-81,-117,-116,-122,-123,-104,-106,-80,-80,-128,-133,-134,-80,-107,-14,-152,-121,-105,]),'EQ':([8,9,13,14,15,16,26,28,47,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,107,129,133,139,142,143,187,188,189,190,192,197,230,239,252,261,],[24,-80,-48,-47,-49,-80,56,-100,90,-80,-82,-83,-84,-85,-86,-87,-88,-89,-90,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-54,-80,-46,-98,-94,-93,-158,-160,-91,-77,-78,-79,-95,-80,-54,-159,-80,-92,]),'COLON':([9,10,13,14,15,25,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,133,135,136,137,138,139,140,144,174,175,176,184,187,188,189,190,192,215,218,219,220,221,222,223,225,229,230,235,237,250,251,253,254,260,261,273,275,284,285,286,289,],[25,30,-48,-47,-49,55,130,-82,-83,-84,-85,-86,-87,-88,-89,-90,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,140,-46,-102,-15,-13,30,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,30,-53,-94,-89,-90,-88,130,-93,196,-103,-52,30,-3,130,130,-77,-78,-79,-95,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,130,-108,-80,30,-109,-81,-92,-104,-106,-80,-107,-14,-105,]),'SPACE':([9,12,13,14,15,16,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,132,133,135,136,137,139,144,146,147,148,149,150,151,158,159,160,166,174,176,184,187,188,189,190,192,197,208,213,215,218,219,220,221,222,223,225,229,230,235,241,242,244,250,251,252,254,256,260,261,273,275,279,280,281,283,284,285,286,289,],[27,46,-48,-47,-49,27,97,27,-82,-83,-84,-85,-86,-87,-88,-89,-90,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-54,141,164,-46,-102,-15,-13,-11,-9,-7,-5,173,-16,-17,-18,-19,-20,-21,-22,-23,-53,182,191,-94,-47,-48,-49,-93,-103,97,-168,-169,-170,-124,-125,206,-126,-127,216,-52,173,27,-91,-77,-78,-79,-95,141,-129,248,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,-171,-172,265,-108,-80,27,-109,277,-81,-92,-104,-106,265,-128,-133,-134,-80,-107,-14,-105,]),'COMMA':([10,13,14,15,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,100,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,133,135,136,137,138,139,144,150,151,155,156,157,158,159,160,174,175,176,178,186,187,188,189,190,192,202,205,208,215,218,219,220,221,222,223,225,229,230,235,237,244,246,250,251,253,254,255,260,261,263,264,266,267,273,275,279,280,281,283,284,285,286,288,289,],[36,-48,-47,-49,-82,-83,-84,-85,-86,-87,-88,-89,-90,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,154,-46,-102,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,36,-53,-94,-89,-90,-88,194,-93,-103,-124,-125,-110,-111,-118,-119,-126,-127,-52,36,-51,227,227,-91,-77,-78,-79,-95,154,-120,-129,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,194,-80,270,-108,-80,36,-109,227,-81,-92,-117,-116,-122,-123,-104,-106,-80,-128,-133,-134,-80,-107,-14,-121,-105,]),'OPERATOR':([10,13,14,15,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,144,174,175,176,188,189,190,215,218,219,220,221,222,223,225,229,230,235,250,251,253,254,260,273,275,284,285,286,289,],[37,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-46,-102,-15,-13,37,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,37,-53,-103,-52,37,-3,-77,-78,-79,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,-108,-80,37,-109,-81,-104,-106,-80,-107,-14,-105,]),'ARROW':([10,13,14,15,28,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,133,139,144,150,151,156,157,158,159,160,174,175,176,183,184,187,188,189,190,192,205,208,215,218,219,220,221,222,223,225,229,230,234,235,244,250,251,253,254,260,261,263,266,267,273,275,279,280,281,283,284,285,286,288,289,],[38,-48,-47,-49,-100,-80,-82,-83,-84,-85,-86,-87,-88,-89,-90,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-46,-102,-15,-13,38,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,38,-53,-98,-94,-93,-103,-124,-125,204,-118,-119,-126,-127,-52,38,-3,233,-80,-91,-77,-78,-79,-95,-120,-129,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-96,-35,-80,-108,-80,38,-109,-81,-92,204,-122,-123,-104,-106,-80,-128,-133,-134,-80,-107,-14,-121,-105,]),'PLUS':([10,13,14,15,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,144,174,175,176,188,189,190,215,218,219,220,221,222,223,225,229,230,235,250,251,253,254,260,273,275,284,285,286,289,],[39,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-46,-102,-15,-13,-11,39,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,39,-53,-103,-52,39,-3,-77,-78,-79,-12,-10,39,-6,-4,-2,-1,-50,-34,-54,-35,-108,-80,39,-109,-81,-104,-106,-80,-107,-14,-105,]),'MINUS':([10,13,14,15,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,144,174,175,176,188,189,190,215,218,219,220,221,222,223,225,229,230,235,250,251,253,254,260,273,275,284,285,286,289,],[40,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-46,-102,-15,-13,-11,40,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,40,-53,-103,-52,40,-3,-77,-78,-79,-12,-10,40,-6,-4,-2,-1,-50,-34,-54,-35,-108,-80,40,-109,-81,-104,-106,-80,-107,-14,-105,]),'STAR':([10,13,14,15,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,144,174,175,176,188,189,190,215,218,219,220,221,222,223,225,229,230,235,250,251,253,254,260,273,275,284,285,286,289,],[41,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-46,-102,-15,-13,-11,-9,41,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,41,-53,-103,-52,41,-3,-77,-78,-79,-12,-10,-8,41,-4,-2,-1,-50,-34,-54,-35,-108,-80,41,-109,-81,-104,-106,-80,-107,-14,-105,]),'SLASH':([10,13,14,15,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,144,174,175,176,188,189,190,215,218,219,220,221,222,223,225,229,230,235,250,251,253,254,260,273,275,284,285,286,289,],[42,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-46,-102,-15,-13,-11,-9,42,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,42,-53,-103,-52,42,-3,-77,-78,-79,-12,-10,-8,42,-4,-2,-1,-50,-34,-54,-35,-108,-80,42,-109,-81,-104,-106,-80,-107,-14,-105,]),'DOUBLESLASH':([10,13,14,15,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,144,174,175,176,188,189,190,215,218,219,220,221,222,223,225,229,230,235,250,251,253,254,260,273,275,284,285,286,289,],[43,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-46,-102,-15,-13,-11,-9,43,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,43,-53,-103,-52,43,-3,-77,-78,-79,-12,-10,-8,43,-4,-2,-1,-50,-34,-54,-35,-108,-80,43,-109,-81,-104,-106,-80,-107,-14,-105,]),'PERCENT':([10,13,14,15,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,144,174,175,176,188,189,190,215,218,219,220,221,222,223,225,229,230,235,250,251,253,254,260,273,275,284,285,286,289,],[44,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-46,-102,-15,-13,-11,-9,44,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,44,-53,-103,-52,44,-3,-77,-78,-79,-12,-10,-8,44,-4,-2,-1,-50,-34,-54,-35,-108,-80,44,-109,-81,-104,-106,-80,-107,-14,-105,]),'DOT_OPERATOR':([10,13,14,15,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,144,174,175,176,188,189,190,213,215,218,219,220,221,222,223,225,229,230,235,250,251,253,254,260,273,275,284,285,286,289,],[45,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-46,-102,-15,-13,-11,-9,-7,-5,45,-16,-17,-18,-19,-20,-21,-22,-23,45,-53,-103,-52,45,45,-77,-78,-79,249,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,-108,-80,45,-109,-81,-104,-106,-80,-107,-14,-105,]),'KEYWORD_WHERE':([13,14,15,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,144,174,176,177,178,186,188,189,190,214,215,218,219,220,221,222,223,224,225,229,230,235,250,251,254,255,260,273,275,284,285,286,289,],[-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-46,166,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-53,166,-52,-3,166,166,166,-77,-78,-79,166,-12,-10,-8,-6,-4,-2,-1,166,-50,-34,-54,-35,-108,-80,-109,166,166,-104,-106,-80,-107,166,-105,]),'TICK_OPERATOR':([13,14,15,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,144,174,176,177,178,186,188,189,190,214,215,218,219,220,221,222,223,224,225,229,230,235,250,251,254,255,260,273,275,284,285,286,289,],[-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-46,167,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-53,167,-52,-3,167,167,167,-77,-78,-79,167,-12,-10,-8,-6,-4,-2,-1,167,-50,-34,-54,-35,-108,-80,-109,167,167,-104,-106,-80,-107,167,-105,]),'RPAREN':([13,14,15,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,95,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,133,134,135,136,137,138,139,144,150,151,155,156,157,158,159,160,161,174,176,178,179,180,181,184,187,188,189,190,192,193,195,200,202,203,205,208,209,215,218,219,220,221,222,223,224,225,226,228,229,230,234,235,236,237,244,245,246,250,251,254,255,260,261,262,263,264,266,267,268,269,273,275,276,279,280,281,282,283,284,285,286,288,289,],[-48,-47,-49,-100,88,-62,-66,-67,-68,-69,-70,-71,-63,-64,-60,-61,-56,-57,-58,-59,-55,-80,-82,-83,-84,-85,-86,-87,-88,-89,-90,-26,-27,-28,-29,-30,-31,-32,-33,133,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-137,-46,-102,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-80,-53,-98,-94,192,-89,-90,-88,-80,-93,-103,-124,-125,-110,-111,-118,-119,-126,-127,208,-52,-51,225,229,230,-38,-80,-91,-77,-78,-79,-95,-97,-101,241,-132,-131,-120,-129,-138,-12,-10,-8,-6,-4,-2,-1,225,-50,-36,-39,-34,-54,-96,-35,261,-80,-80,-80,-80,-108,-80,-109,-80,-81,-92,-99,-117,-116,-122,-123,280,281,-104,-106,-37,-80,-128,-133,-130,-134,-80,-107,-14,-121,-105,]),'RBRACKET':([13,14,15,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,95,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,128,144,150,151,155,156,157,158,159,160,174,176,181,185,186,188,189,190,201,205,208,209,215,218,219,220,221,222,223,225,226,228,229,230,235,244,247,250,251,254,255,260,263,264,266,267,271,273,275,276,279,280,281,283,284,285,286,288,289,],[-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,139,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-137,-46,-102,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-53,-80,-103,-124,-125,-110,-111,-118,-119,-126,-127,-52,-51,-38,235,-80,-77,-78,-79,242,-120,-129,-138,-12,-10,-8,-6,-4,-2,-1,-50,-36,-39,-34,-54,-35,-80,-80,-108,-80,-109,-80,-81,-117,-116,-122,-123,283,-104,-106,-37,-80,-128,-133,-134,-80,-107,-14,-121,-105,]),'LBRACKET':([27,30,37,38,39,40,41,42,43,44,45,55,56,75,90,95,97,102,104,118,124,125,127,128,130,152,153,154,161,162,163,165,167,168,169,170,171,172,173,175,191,194,196,204,206,207,209,210,212,225,227,230,233,243,249,265,270,272,277,],[76,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,-80,128,76,128,-137,153,162,-112,128,128,-53,76,128,76,-80,-80,-80,-80,-80,-80,128,-65,128,128,128,128,128,128,128,76,76,-80,-80,162,-80,-138,-80,-113,-50,128,-54,128,162,-115,162,-80,-114,128,]),'BASE10_INTEGER':([27,30,37,38,39,40,41,42,43,44,45,56,75,90,118,124,125,127,128,130,165,167,168,169,170,171,172,173,175,191,194,225,227,230,233,277,],[77,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,77,77,77,77,77,-53,77,77,77,77,-65,77,77,77,77,77,77,77,77,77,-50,77,-54,77,77,]),'BASE16_INTEGER':([27,30,37,38,39,40,41,42,43,44,45,56,75,90,118,124,125,127,128,130,165,167,168,169,170,171,172,173,175,191,194,225,227,230,233,277,],[78,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,78,78,78,78,78,-53,78,78,78,78,-65,78,78,78,78,78,78,78,78,78,-50,78,-54,78,78,]),'BASE8_INTEGER':([27,30,37,38,39,40,41,42,43,44,45,56,75,90,118,124,125,127,128,130,165,167,168,169,170,171,172,173,175,191,194,225,227,230,233,277,],[79,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,79,79,79,79,79,-53,79,79,79,79,-65,79,79,79,79,79,79,79,79,79,-50,79,-54,79,79,]),'BASE2_INTEGER':([27,30,37,38,39,40,41,42,43,44,45,56,75,90,118,124,125,127,128,130,165,167,168,169,170,171,172,173,175,191,194,225,227,230,233,277,],[80,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,80,80,80,80,80,-53,80,80,80,80,-65,80,80,80,80,80,80,80,80,80,-50,80,-54,80,80,]),'FLOAT':([27,30,37,38,39,40,41,42,43,44,45,56,75,90,118,124,125,127,128,130,165,167,168,169,170,171,172,173,175,191,194,225,227,230,233,277,],[81,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,81,81,81,81,81,-53,81,81,81,81,-65,81,81,81,81,81,81,81,81,81,-50,81,-54,81,81,]),'STRING':([27,30,37,38,39,40,41,42,43,44,45,56,75,90,118,124,125,127,128,130,131,165,167,168,169,170,171,172,173,175,191,194,225,227,230,233,277,],[82,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,82,82,82,82,82,-53,82,82,82,82,82,-65,82,82,82,82,82,82,82,82,82,-50,82,-54,82,82,]),'CHAR':([27,30,37,38,39,40,41,42,43,44,45,56,75,90,118,124,125,127,128,130,131,165,167,168,169,170,171,172,173,175,191,194,225,227,230,233,277,],[83,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,83,83,83,83,83,-53,83,83,83,83,83,-65,83,83,83,83,83,83,83,83,83,-50,83,-54,83,83,]),'DATE':([27,30,37,38,39,40,41,42,43,44,45,56,75,90,118,124,125,127,128,130,165,167,168,169,170,171,172,173,175,191,194,225,227,230,233,277,],[84,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,84,84,84,84,84,-53,84,84,84,84,-65,84,84,84,84,84,84,84,84,84,-50,84,-54,84,84,]),'DATETIME':([27,30,37,38,39,40,41,42,43,44,45,56,75,90,118,124,125,127,128,130,165,167,168,169,170,171,172,173,175,191,194,225,227,230,233,277,],[85,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,85,85,85,85,85,-53,85,85,85,85,-65,85,85,85,85,85,85,85,85,85,-50,85,-54,85,85,]),'DATE_INTERVAL':([27,30,37,38,39,40,41,42,43,44,45,56,75,90,118,124,125,127,128,130,165,167,168,169,170,171,172,173,175,191,194,225,227,230,233,277,],[86,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,86,86,86,86,86,-53,86,86,86,86,-65,86,86,86,86,86,86,86,86,86,-50,86,-54,86,86,]),'DATETIME_INTERVAL':([27,30,37,38,39,40,41,42,43,44,45,56,75,90,118,124,125,127,128,130,165,167,168,169,170,171,172,173,175,191,194,225,227,230,233,277,],[87,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,87,87,87,87,87,-53,87,87,87,87,-65,87,87,87,87,87,87,87,87,87,-50,87,-54,87,87,]),'KEYWORD_LET':([30,37,38,39,40,41,42,43,44,45,56,90,118,124,125,128,165,167,168,169,170,171,172,173,175,225,227,230,233,277,],[-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,126,126,126,126,-53,126,126,-65,126,126,126,126,126,126,126,-50,126,-54,126,126,]),'BACKSLASH':([30,37,38,39,40,41,42,43,44,45,56,90,118,124,125,128,165,167,168,169,170,171,172,173,175,225,227,230,233,277,],[-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,127,127,127,127,-53,127,127,-65,127,127,127,127,127,127,127,-50,127,-54,127,127,]),'PIPE':([52,53,54,93,94,95,96,98,146,147,148,149,150,151,198,199,241,242,],[-80,-164,-80,145,-138,-137,-165,-167,-80,-168,-169,-170,-124,-125,-80,-166,-171,-172,]),'KEYWORD_FORALL':([55,95,152,153,154,161,162,163,196,207,209,210,270,],[105,-137,105,105,105,-80,-80,105,105,105,-138,105,105,]),'ANNOTATION':([67,77,78,79,80,81,],[131,-72,-73,-74,-75,-76,]),'FATARROW':([100,103,106,150,151,155,156,157,158,159,160,202,203,205,208,244,263,264,266,267,279,280,281,283,288,],[-132,163,-136,-124,-125,-110,-111,-118,-119,-126,-127,-132,-131,-120,-129,-80,-117,-116,-122,-123,-80,-128,-133,-134,-121,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'definitions':([0,],[2,]),'definition':([0,21,258,],[3,49,278,]),'local_definition':([0,21,182,258,],[4,4,232,4,]),'datatype_definition':([0,21,258,],[5,5,5,]),'nametype_decl':([0,21,182,258,],[6,6,6,6,]),'valuedef':([0,21,182,258,],[7,7,7,7,]),'_datatype_lhs':([0,21,258,],[8,8,8,]),'_identifier':([0,21,56,75,90,118,124,128,131,164,165,168,169,170,171,172,173,175,182,216,217,227,233,248,258,274,277,],[9,9,107,132,107,107,107,107,107,213,107,107,107,107,107,107,107,107,9,252,252,107,107,213,9,252,107,]),'equation':([0,21,182,216,217,258,274,],[11,11,11,251,251,11,284,]),'_enclosed_operator':([0,21,56,90,115,118,124,128,165,168,169,170,171,172,173,175,176,182,216,217,223,227,233,258,274,277,],[16,16,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,16,16,16,125,125,125,16,16,125,]),'_trailing_new_lines':([2,19,23,],[17,48,50,]),'empty':([2,3,9,16,19,23,49,52,54,55,57,89,124,128,138,146,152,153,154,161,162,163,178,184,186,196,197,198,204,207,210,232,237,244,245,246,247,251,252,255,270,278,279,284,],[18,22,28,28,18,18,22,94,98,104,28,143,181,181,195,98,104,104,104,209,209,104,228,28,228,104,143,94,209,104,104,259,195,267,209,209,209,275,28,228,104,259,267,275,]),'_definition_set':([3,49,],[20,91,]),'newlines':([3,49,],[21,21,]),'_patterns':([9,16,57,184,252,],[26,47,129,234,26,]),'_st_operator':([10,124,175,253,],[29,180,180,180,]),'infixl_operator_2':([10,111,124,175,253,],[31,169,31,31,31,]),'infixr_operator_2':([10,111,124,175,253,],[32,168,32,32,32,]),'infixl_operator_6':([10,112,124,175,219,253,],[33,170,33,33,170,33,]),'infixl_operator_7':([10,113,124,175,220,253,],[34,171,34,34,171,34,]),'infixr_operator_9':([10,115,124,175,176,223,253,],[35,172,35,35,172,172,35,]),'_data_rhs':([24,],[51,]),'data_cons':([24,145,],[52,198,]),'_data_cons':([24,145,],[53,53,]),'pattern':([27,75,127,130,191,194,],[57,138,184,187,184,237,]),'literal':([27,56,75,90,118,124,127,128,130,165,168,169,170,171,172,173,175,191,194,227,233,277,],[58,116,58,116,116,116,58,116,58,116,116,116,116,116,116,116,116,58,58,116,116,116,]),'cons_pattern':([27,75,127,130,191,194,],[59,59,59,59,59,59,]),'list_cons_pattern':([27,75,127,130,191,194,],[60,60,60,60,60,60,]),'tuple_cons_pattern':([27,75,127,130,191,194,],[61,61,61,61,61,61,]),'empty_list_pattern':([27,75,127,130,191,194,],[62,62,62,62,62,62,]),'empty_tuple_pattern':([27,75,127,130,191,194,],[63,63,63,63,63,63,]),'number':([27,56,75,90,118,124,127,128,130,165,168,169,170,171,172,173,175,191,194,227,233,277,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'concrete_number':([27,56,75,90,118,124,127,128,130,165,168,169,170,171,172,173,175,191,194,227,233,277,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'string':([27,56,75,90,118,124,127,128,130,131,165,168,169,170,171,172,173,175,191,194,227,233,277,],[69,69,69,69,69,69,69,69,69,188,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'char':([27,56,75,90,118,124,127,128,130,131,165,168,169,170,171,172,173,175,191,194,227,233,277,],[70,70,70,70,70,70,70,70,70,189,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'date':([27,56,75,90,118,124,127,128,130,165,168,169,170,171,172,173,175,191,194,227,233,277,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'datetime':([27,56,75,90,118,124,127,128,130,165,168,169,170,171,172,173,175,191,194,227,233,277,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'date_interval':([27,56,75,90,118,124,127,128,130,165,168,169,170,171,172,173,175,191,194,227,233,277,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'datetime_interval':([27,56,75,90,118,124,127,128,130,165,168,169,170,171,172,173,175,191,194,227,233,277,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'_data_conses':([52,198,],[92,240,]),'_maybe_padding':([52,161,162,198,204,245,246,247,],[93,207,210,93,243,268,269,271,]),'_cons_args':([54,146,],[96,199,]),'st_type_expr':([55,196,],[99,238,]),'type_expr':([55,152,153,154,163,196,207,210,270,],[100,200,201,202,211,100,246,247,202,]),'constrained_type_expr':([55,196,],[101,101,]),'type_scheme':([55,152,153,154,163,196,207,210,270,],[102,102,102,102,102,102,102,102,102,]),'type_constraints':([55,196,],[103,103,]),'_type_expr_list_trail':([55,154,196,270,],[106,203,106,282,]),'expr':([56,90,118,124,128,165,168,169,170,171,172,173,175,227,233,277,],[108,144,177,178,186,214,177,177,177,177,177,177,224,255,260,286,]),'expr_term0':([56,90,118,124,128,165,168,169,170,171,172,173,175,227,233,277,],[109,109,109,109,109,215,109,109,109,109,109,109,109,109,109,109,]),'expr_term1':([56,90,118,124,128,165,168,169,170,171,172,173,175,227,233,277,],[110,110,110,110,110,110,218,110,110,110,110,110,110,110,110,110,]),'expr_term2':([56,90,118,124,128,165,168,169,170,171,172,173,175,227,233,277,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'expr_term6':([56,90,118,124,128,165,168,169,170,171,172,173,175,227,233,277,],[112,112,112,112,112,112,112,219,112,112,112,112,112,112,112,112,]),'expr_term7':([56,90,118,124,128,165,168,169,170,171,172,173,175,227,233,277,],[113,113,113,113,113,113,113,113,220,113,113,113,113,113,113,113,]),'expr_term9':([56,90,118,124,128,165,168,169,170,171,172,173,175,227,233,277,],[114,114,114,114,114,114,114,114,114,221,222,114,114,114,114,114,]),'expr_factor':([56,90,118,124,128,165,168,169,170,171,172,173,175,227,233,277,],[115,115,176,115,115,115,115,115,115,115,115,223,115,115,115,115,]),'identifier':([56,90,118,124,128,131,165,168,169,170,171,172,173,175,227,233,277,],[117,117,117,117,117,190,117,117,117,117,117,117,117,117,117,117,117,]),'enclosed_expr':([56,90,115,118,124,128,165,168,169,170,171,172,173,175,176,223,227,233,277,],[118,118,174,118,118,118,118,118,118,118,118,118,118,118,174,174,118,118,118,]),'letexpr':([56,90,118,124,128,165,168,169,170,171,172,173,175,227,233,277,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'where_expr':([56,90,118,124,128,165,168,169,170,171,172,173,175,227,233,277,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'lambda_expr':([56,90,118,124,128,165,168,169,170,171,172,173,175,227,233,277,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'simple_list_expr':([56,90,118,124,128,165,168,169,170,171,172,173,175,227,233,277,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'simple_tuple_expr':([56,90,118,124,128,165,168,169,170,171,172,173,175,227,233,277,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'patterns_comma_sep':([75,],[134,]),'_cons_params':([89,197,],[142,239,]),'cons_arg':([97,],[146,]),'type_variable':([97,102,206,243,265,],[147,159,159,159,159,]),'type_cons':([97,102,206,243,265,],[148,160,160,160,160,]),'_cons_arg_factor':([97,],[149,]),'type_function_expr':([102,243,],[155,264,]),'type_term':([102,243,],[156,263,]),'type_app_expression':([102,243,],[157,157,]),'type_factor':([102,206,243,265,],[158,244,158,279,]),'infixl_operator_0':([108,144,177,178,186,214,224,255,260,286,],[165,165,165,165,165,165,165,165,165,165,]),'_list_items':([124,128,],[179,185,]),'patterns':([127,191,],[183,236,]),'_patterns_comma':([138,237,],[193,262,]),'_app_args_non_empty':([158,],[205,]),'_type_scheme_generics':([164,248,],[212,272,]),'_list_items_cont':([178,186,255,],[226,226,276,]),'local_definitions':([182,],[231,]),'_type_expr_list':([207,],[245,]),'equations':([216,217,],[250,254,]),'_local_definition_set':([232,278,],[257,287,]),'_app_args':([244,279,],[266,288,]),'_equation_set':([251,284,],[273,289,]),'st_expr':([277,],[285,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','__init__.py',458),
  ('expr_term9 -> expr_factor infixr_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','__init__.py',465),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','__init__.py',466),
  ('expr_term7 -> expr_term7 infixl_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','__init__.py',468),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','__init__.py',469),
  ('expr_term6 -> expr_term6 infixl_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','__init__.py',471),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','__init__.py',472),
  ('expr_term2 -> expr_term2 infixl_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','__init__.py',474),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','__init__.py',475),
  ('expr_term1 -> expr_term2 infixr_operator_2 expr_term1','expr_term1',3,'p_expressions_precedence_rules','__init__.py',477),
  ('expr_term1 -> expr_term2','expr_term1',1,'p_expressions_precedence_rules','__init__.py',478),
  ('expr_term0 -> expr infixl_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','__init__.py',480),
  ('expr_term0 -> expr_term1','expr_term0',1,'p_expressions_precedence_rules','__init__.py',481),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','__init__.py',494),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','__init__.py',496),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','__init__.py',498),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','__init__.py',499),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','__init__.py',500),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','__init__.py',501),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','__init__.py',502),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','__init__.py',503),
  ('expr_factor -> simple_list_expr','expr_factor',1,'p_standalone_definitions','__init__.py',504),
  ('expr_factor -> simple_tuple_expr','expr_factor',1,'p_standalone_definitions','__init__.py',505),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','__init__.py',507),
  ('st_type_expr -> constrained_type_expr','st_type_expr',1,'p_standalone_definitions','__init__.py',508),
  ('literal -> number','literal',1,'p_literals','__init__.py',516),
  ('literal -> concrete_number','literal',1,'p_literals','__init__.py',517),
  ('literal -> string','literal',1,'p_literals','__init__.py',518),
  ('literal -> char','literal',1,'p_literals','__init__.py',519),
  ('literal -> date','literal',1,'p_literals','__init__.py',520),
  ('literal -> datetime','literal',1,'p_literals','__init__.py',521),
  ('literal -> date_interval','literal',1,'p_literals','__init__.py',522),
  ('literal -> datetime_interval','literal',1,'p_literals','__init__.py',523),
  ('simple_tuple_expr -> LPAREN _list_items RPAREN','simple_tuple_expr',3,'p_tuple_expr','__init__.py',529),
  ('simple_list_expr -> LBRACKET _list_items RBRACKET','simple_list_expr',3,'p_list_expr','__init__.py',536),
  ('_list_items -> expr _list_items_cont','_list_items',2,'p_list_items','__init__.py',543),
  ('_list_items_cont -> COMMA expr _list_items_cont','_list_items_cont',3,'p_list_items','__init__.py',544),
  ('_list_items -> empty','_list_items',1,'p_list_items_empty','__init__.py',550),
  ('_list_items_cont -> empty','_list_items_cont',1,'p_list_items_empty','__init__.py',551),
  ('date -> DATE','date',1,'p_date','__init__.py',557),
  ('datetime -> DATETIME','datetime',1,'p_datetime','__init__.py',563),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','__init__.py',569),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','__init__.py',575),
  ('char -> CHAR','char',1,'p_char','__init__.py',581),
  ('string -> STRING','string',1,'p_string','__init__.py',586),
  ('identifier -> _identifier','identifier',1,'p_variable','__init__.py',591),
  ('_identifier -> UNDER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',598),
  ('_identifier -> UPPER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',599),
  ('_identifier -> LOWER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',600),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','__init__.py',607),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','__init__.py',612),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','__init__.py',613),
  ('enclosed_expr -> _enclosed_operator','enclosed_expr',1,'p_operators_as_expressios','__init__.py',619),
  ('_enclosed_operator -> LPAREN _st_operator RPAREN','_enclosed_operator',3,'p_enclosed_operator','__init__.py',625),
  ('infixr_operator_9 -> DOT_OPERATOR','infixr_operator_9',1,'p_operator','__init__.py',635),
  ('infixl_operator_7 -> STAR','infixl_operator_7',1,'p_operator','__init__.py',637),
  ('infixl_operator_7 -> SLASH','infixl_operator_7',1,'p_operator','__init__.py',638),
  ('infixl_operator_7 -> DOUBLESLASH','infixl_operator_7',1,'p_operator','__init__.py',639),
  ('infixl_operator_7 -> PERCENT','infixl_operator_7',1,'p_operator','__init__.py',640),
  ('infixl_operator_6 -> PLUS','infixl_operator_6',1,'p_operator','__init__.py',642),
  ('infixl_operator_6 -> MINUS','infixl_operator_6',1,'p_operator','__init__.py',643),
  ('infixr_operator_2 -> COLON','infixr_operator_2',1,'p_operator','__init__.py',645),
  ('infixl_operator_2 -> OPERATOR','infixl_operator_2',1,'p_operator','__init__.py',647),
  ('infixl_operator_2 -> ARROW','infixl_operator_2',1,'p_operator','__init__.py',648),
  ('infixl_operator_0 -> TICK_OPERATOR','infixl_operator_0',1,'p_operator','__init__.py',650),
  ('_st_operator -> infixl_operator_2','_st_operator',1,'p_operator','__init__.py',652),
  ('_st_operator -> infixr_operator_2','_st_operator',1,'p_operator','__init__.py',653),
  ('_st_operator -> infixl_operator_6','_st_operator',1,'p_operator','__init__.py',654),
  ('_st_operator -> infixl_operator_7','_st_operator',1,'p_operator','__init__.py',655),
  ('_st_operator -> infixr_operator_9','_st_operator',1,'p_operator','__init__.py',656),
  ('_st_operator -> COMMA','_st_operator',1,'p_operator','__init__.py',657),
  ('number -> BASE10_INTEGER','number',1,'p_integer','__init__.py',664),
  ('number -> BASE16_INTEGER','number',1,'p_integer','__init__.py',665),
  ('number -> BASE8_INTEGER','number',1,'p_integer','__init__.py',666),
  ('number -> BASE2_INTEGER','number',1,'p_integer','__init__.py',667),
  ('number -> FLOAT','number',1,'p_float','__init__.py',696),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','__init__.py',701),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','__init__.py',702),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','__init__.py',703),
  ('empty -> <empty>','empty',0,'p_empty','__init__.py',712),
  ('lambda_expr -> BACKSLASH patterns ARROW expr','lambda_expr',4,'p_lambda_definition','__init__.py',717),
  ('pattern -> literal','pattern',1,'p_pattern','__init__.py',726),
  ('pattern -> cons_pattern','pattern',1,'p_pattern','__init__.py',727),
  ('pattern -> list_cons_pattern','pattern',1,'p_pattern','__init__.py',728),
  ('pattern -> tuple_cons_pattern','pattern',1,'p_pattern','__init__.py',729),
  ('pattern -> empty_list_pattern','pattern',1,'p_pattern','__init__.py',730),
  ('pattern -> empty_tuple_pattern','pattern',1,'p_pattern','__init__.py',731),
  ('pattern -> LOWER_IDENTIFIER','pattern',1,'p_var_pattern','__init__.py',737),
  ('pattern -> UNDER_IDENTIFIER','pattern',1,'p_var_pattern','__init__.py',738),
  ('pattern -> UPPER_IDENTIFIER','pattern',1,'p_simplecons_pattern','__init__.py',744),
  ('list_cons_pattern -> pattern COLON pattern','list_cons_pattern',3,'p_list_cons_for_param','__init__.py',750),
  ('cons_pattern -> LPAREN _identifier SPACE patterns RPAREN','cons_pattern',5,'p_param_pattern','__init__.py',756),
  ('empty_list_pattern -> LBRACKET RBRACKET','empty_list_pattern',2,'p_empty_list_as_pattern','__init__.py',761),
  ('empty_tuple_pattern -> LPAREN RPAREN','empty_tuple_pattern',2,'p_unit_value_as_pattern','__init__.py',768),
  ('tuple_cons_pattern -> LPAREN patterns_comma_sep RPAREN','tuple_cons_pattern',3,'p_tuple_cons_pattern','__init__.py',774),
  ('patterns -> pattern _patterns','patterns',2,'p_patterns','__init__.py',782),
  ('patterns_comma_sep -> pattern _patterns_comma','patterns_comma_sep',2,'p_patterns','__init__.py',783),
  ('_patterns -> SPACE pattern _patterns','_patterns',3,'p_patterns','__init__.py',784),
  ('_patterns_comma -> COMMA pattern _patterns_comma','_patterns_comma',3,'p_patterns','__init__.py',785),
  ('_patterns -> empty','_patterns',1,'p_patterns_empty','__init__.py',791),
  ('_patterns_comma -> empty','_patterns_comma',1,'p_patterns_empty','__init__.py',792),
  ('equation -> _identifier _patterns EQ expr','equation',4,'p_equation','__init__.py',798),
  ('equation -> _enclosed_operator _patterns EQ expr','equation',4,'p_equation','__init__.py',799),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','__init__.py',809),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','__init__.py',818),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','__init__.py',827),
  ('letexpr -> KEYWORD_LET SPACE local_definitions KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','__init__.py',837),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','__init__.py',845),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','__init__.py',846),
  ('type_expr -> type_scheme type_function_expr','type_expr',2,'p_type_expr','__init__.py',856),
  ('type_expr -> type_scheme type_term','type_expr',2,'p_type_expr','__init__.py',857),
  ('type_scheme -> empty','type_scheme',1,'p_type_scheme_empty','__init__.py',866),
  ('type_scheme -> KEYWORD_FORALL SPACE _type_scheme_generics','type_scheme',3,'p_type_scheme','__init__.py',870),
  ('_type_scheme_generics -> _identifier SPACE _type_scheme_generics','_type_scheme_generics',3,'p_type_scheme_generics','__init__.py',877),
  ('_type_scheme_generics -> _identifier DOT_OPERATOR','_type_scheme_generics',2,'p_last_type_scheme_generic','__init__.py',882),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','__init__.py',887),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','__init__.py',888),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','__init__.py',898),
  ('type_term -> type_factor','type_term',1,'p_type_term','__init__.py',899),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','__init__.py',904),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','__init__.py',916),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','__init__.py',917),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','__init__.py',923),
  ('type_variable -> LOWER_IDENTIFIER','type_variable',1,'p_type_variable','__init__.py',928),
  ('type_cons -> UPPER_IDENTIFIER','type_cons',1,'p_type_cons','__init__.py',933),
  ('type_factor -> type_variable','type_factor',1,'p_type_factor_identifier','__init__.py',938),
  ('type_factor -> type_cons','type_factor',1,'p_type_factor_identifier','__init__.py',939),
  ('type_factor -> LPAREN _maybe_padding _type_expr_list _maybe_padding RPAREN','type_factor',5,'p_type_factor_tuple','__init__.py',946),
  ('type_factor -> LPAREN RPAREN','type_factor',2,'p_type_factor_unit_type','__init__.py',952),
  ('_type_expr_list -> type_expr COMMA _type_expr_list_trail','_type_expr_list',3,'p_type_expr_list','__init__.py',957),
  ('_type_expr_list_trail -> type_expr COMMA _type_expr_list_trail','_type_expr_list_trail',3,'p_type_expr_list','__init__.py',958),
  ('_type_expr_list_trail -> type_expr','_type_expr_list_trail',1,'p_type_expr_list_last_item','__init__.py',964),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','__init__.py',970),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','__init__.py',975),
  ('constrained_type_expr -> type_constraints FATARROW type_expr','constrained_type_expr',3,'p_constrained_type_expr','__init__.py',995),
  ('type_constraints -> _type_expr_list_trail','type_constraints',1,'p_type_constraint','__init__.py',1015),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','__init__.py',1021),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','__init__.py',1022),
  ('program -> definitions _trailing_new_lines','program',2,'p_program','__init__.py',1030),
  ('_trailing_new_lines -> empty','_trailing_new_lines',1,'p_trailing_new_lines','__init__.py',1036),
  ('_trailing_new_lines -> NEWLINE _trailing_new_lines','_trailing_new_lines',2,'p_trailing_new_lines','__init__.py',1037),
  ('definitions -> definition _definition_set','definitions',2,'p_definitions','__init__.py',1042),
  ('_definition_set -> newlines definition _definition_set','_definition_set',3,'p_definition_set','__init__.py',1048),
  ('newlines -> NEWLINE _trailing_new_lines','newlines',2,'p_newlines','__init__.py',1054),
  ('_definition_set -> empty','_definition_set',1,'p_definition_set2','__init__.py',1058),
  ('_definition_set -> newlines','_definition_set',1,'p_definition_set2','__init__.py',1059),
  ('definition -> local_definition','definition',1,'p_definition','__init__.py',1065),
  ('definition -> datatype_definition','definition',1,'p_definition','__init__.py',1066),
  ('local_definition -> nametype_decl','local_definition',1,'p_local_definition','__init__.py',1073),
  ('local_definition -> valuedef','local_definition',1,'p_local_definition','__init__.py',1074),
  ('local_definitions -> local_definition _local_definition_set','local_definitions',2,'p_local_definitions','__init__.py',1080),
  ('_local_definition_set -> PADDING definition _local_definition_set','_local_definition_set',3,'p_local_definition_set','__init__.py',1086),
  ('_local_definition_set -> empty','_local_definition_set',1,'p_local_definition_set_empty','__init__.py',1092),
  ('valuedef -> equation','valuedef',1,'p_valuedef','__init__.py',1098),
  ('nametype_decl -> _identifier COLON COLON st_type_expr','nametype_decl',4,'p_nametype_decl','__init__.py',1104),
  ('nametype_decl -> LPAREN _st_operator RPAREN COLON COLON st_type_expr','nametype_decl',6,'p_nametype_decl_operators','__init__.py',1113),
  ('datatype_definition -> _datatype_lhs EQ _data_rhs','datatype_definition',3,'p_datatype_definition','__init__.py',1122),
  ('_datatype_lhs -> KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params','_datatype_lhs',4,'p_datatype_lhs','__init__.py',1130),
  ('_cons_params -> SPACE LOWER_IDENTIFIER _cons_params','_cons_params',3,'p_datatype_cons_params','__init__.py',1139),
  ('_cons_params -> empty','_cons_params',1,'p_datatype_cons_params_empty','__init__.py',1145),
  ('_data_rhs -> data_cons _data_conses','_data_rhs',2,'p_datatype_body','__init__.py',1151),
  ('_data_conses -> _maybe_padding PIPE data_cons _data_conses','_data_conses',4,'p_datatype_body','__init__.py',1152),
  ('_data_conses -> empty','_data_conses',1,'p_datatype_conses_empty','__init__.py',1158),
  ('data_cons -> _data_cons','data_cons',1,'p_data_cons','__init__.py',1163),
  ('_data_cons -> UPPER_IDENTIFIER _cons_args','_data_cons',2,'p_bare_data_cons','__init__.py',1169),
  ('_cons_args -> SPACE cons_arg _cons_args','_cons_args',3,'p_data_cons_args','__init__.py',1174),
  ('_cons_args -> empty','_cons_args',1,'p_data_cons_args_empty','__init__.py',1180),
  ('cons_arg -> type_variable','cons_arg',1,'p_cons_arg','__init__.py',1186),
  ('cons_arg -> type_cons','cons_arg',1,'p_cons_arg','__init__.py',1187),
  ('cons_arg -> _cons_arg_factor','cons_arg',1,'p_cons_arg','__init__.py',1188),
  ('_cons_arg_factor -> LPAREN type_expr RPAREN','_cons_arg_factor',3,'p_cons_arg_factor','__init__.py',1194),
  ('_cons_arg_factor -> LBRACKET type_expr RBRACKET','_cons_arg_factor',3,'p_cons_arg_factor_list','__init__.py',1200),
]
