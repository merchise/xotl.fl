
# program_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON COMMA DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FATARROW FLOAT KEYWORD_CLASS KEYWORD_DATA KEYWORD_FORALL KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LOWER_IDENTIFIER LPAREN MINUS NEWLINE OPERATOR PADDING PERCENT PIPE PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATOR UNDER_IDENTIFIER UPPER_IDENTIFIERexpr_factor : expr_factor SPACE expr_factor\n    expr_term9 : expr_factor infixr_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infixl_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infixl_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infixl_operator_2 expr_term6\n               | expr_term6\n\n    expr_term1 : expr_term2 infixr_operator_2 expr_term1\n               | expr_term2\n\n    expr_term0 : expr infixl_operator_0 expr_term0\n               | expr_term1\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | letexpr\n                | where_expr\n                | lambda_expr\n                | simple_list_expr\n                | simple_tuple_expr\n\n    st_type_expr : type_expr\n                 | constrained_type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    simple_tuple_expr : LPAREN _list_items RPAREN\n    simple_list_expr : LBRACKET _list_items RBRACKET\n    _list_items : expr _list_items_cont\n       _list_items_cont : COMMA expr _list_items_cont\n    _list_items : empty\n       _list_items_cont : empty\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    char : CHARstring : STRINGidentifier : _identifier\n\n    _identifier : UNDER_IDENTIFIER\n                   | UPPER_IDENTIFIER\n                   | LOWER_IDENTIFIER\n\n    enclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : _enclosed_operator\n    _enclosed_operator : LPAREN _st_operator RPAREN\n    infixr_operator_9 : DOT_OPERATOR\n\n    infixl_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infixl_operator_6 : PLUS\n                     | MINUS\n\n    infixr_operator_2 : COLON\n\n    infixl_operator_2 : OPERATOR\n                      | ARROW\n\n    infixl_operator_0 : TICK_OPERATOR\n\n    _st_operator : infixl_operator_2\n                 | infixr_operator_2\n                 | infixl_operator_6\n                 | infixl_operator_7\n                 | infixr_operator_9\n                 | COMMA\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH patterns ARROW expr\n    \n    pattern : literal\n    pattern : cons_pattern\n    pattern : list_cons_pattern\n    pattern : tuple_cons_pattern\n    pattern : empty_list_pattern\n    pattern : empty_tuple_pattern\n    pattern : LOWER_IDENTIFIER\n       pattern : UNDER_IDENTIFIER\n    pattern : UPPER_IDENTIFIER\n    list_cons_pattern : pattern COLON pattern\n    cons_pattern : LPAREN _identifier SPACE patterns RPARENempty_list_pattern : LBRACKET RBRACKETempty_tuple_pattern : LPAREN RPARENtuple_cons_pattern : LPAREN patterns_comma_sep RPAREN\n    patterns : pattern _patterns\n       patterns_comma_sep : pattern _patterns_comma\n       _patterns : SPACE pattern _patterns\n       _patterns_comma : COMMA pattern _patterns_comma\n    _patterns : empty\n       _patterns_comma : empty\n    equation : _identifier _patterns EQ expr\n       equation : _enclosed_operator _patterns EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE local_definitions KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    type_expr : type_scheme type_function_expr\n                 | type_scheme type_termtype_scheme : emptytype_scheme : KEYWORD_FORALL SPACE _type_scheme_generics_type_scheme_generics : _identifier SPACE _type_scheme_generics_type_scheme_generics : _identifier DOT_OPERATORtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_variable : LOWER_IDENTIFIERtype_cons : UPPER_IDENTIFIERtype_factor : type_variable\n                   | type_cons\n\n    type_factor : LPAREN _maybe_padding _type_expr_list _maybe_padding RPARENtype_factor : LPAREN RPAREN_type_expr_list : type_expr COMMA _type_expr_list_trail\n       _type_expr_list_trail : type_expr COMMA _type_expr_list_trail\n    _type_expr_list_trail : type_expr\n    type_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKETconstrained_type_expr : type_constraints FATARROW type_expr\n\n    type_constraints : _type_expr_list_trail\n    _maybe_padding : PADDING\n                      | empty\n    program : definitions\n    definitions : definition _definition_set\n    _definition_set : NEWLINE definition _definition_set\n    _definition_set : empty\n    definition : local_definition\n                  | datatype_definition\n    \n    local_definition : nametype_decl\n                     | valuedef\n    local_definitions : local_definition _local_definition_set\n    _local_definition_set : PADDING definition _local_definition_set\n    _local_definition_set : empty\n    valuedef : equation\n    nametype_decl : _identifier COLON COLON st_type_expr\n    nametype_decl : LPAREN _st_operator RPAREN COLON COLON st_type_expr\n    datatype_definition : _datatype_lhs EQ _data_rhs\n    _datatype_lhs : KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params\n    _cons_params : SPACE LOWER_IDENTIFIER _cons_params\n    _cons_params : empty\n    _data_rhs : data_cons _data_conses\n       _data_conses : _maybe_padding PIPE data_cons _data_conses\n    _data_conses : emptydata_cons : _data_cons_data_cons : UPPER_IDENTIFIER _cons_args_cons_args : SPACE cons_arg _cons_args\n    _cons_args : empty\n    cons_arg : type_variable\n       cons_arg : type_cons\n       cons_arg : _cons_arg_factor\n    _cons_arg_factor : LPAREN type_expr RPAREN\n    _cons_arg_factor : LBRACKET type_expr RBRACKET\n    '
    
_lr_action_items = {'LPAREN':([0,13,14,15,18,23,26,33,34,35,36,37,38,39,40,41,49,50,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,84,89,91,96,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,124,138,146,147,148,155,156,157,159,161,162,163,164,165,166,167,168,169,170,176,182,183,184,185,188,190,198,200,201,203,204,206,209,210,211,212,213,214,215,216,217,219,221,223,224,227,229,237,243,244,245,248,252,254,259,264,266,267,268,269,271,278,279,280,283,],[10,-48,-47,-49,10,69,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,-80,118,-26,-27,-28,-29,-30,-31,-32,-33,69,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,118,-137,146,155,-112,-46,-102,-15,-13,-11,-9,-7,-5,169,-16,-17,118,-19,-20,-21,-22,-23,118,-53,69,118,69,-103,-80,-80,-80,-80,-80,-80,118,-65,118,118,118,118,118,118,-52,118,169,10,-77,-78,-79,69,69,-80,-80,155,-80,-138,-80,-113,-12,247,247,-10,-8,-6,-4,-2,-1,-50,118,-34,-54,118,-35,155,-115,-108,-80,-109,10,-81,155,-80,-114,-104,247,-106,118,-80,-107,-14,-105,]),'KEYWORD_DATA':([0,18,252,],[12,12,12,]),'UNDER_IDENTIFIER':([0,18,23,26,33,34,35,36,37,38,39,40,41,50,69,84,112,118,119,121,122,124,125,158,159,161,162,163,164,165,166,167,169,176,185,188,210,211,219,221,224,227,242,252,268,271,],[14,14,59,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,14,129,14,14,14,-53,59,14,59,14,14,14,-65,14,14,14,14,14,14,14,14,59,59,14,14,-50,14,-54,14,14,14,14,14,]),'UPPER_IDENTIFIER':([0,18,20,23,26,33,34,35,36,37,38,39,40,41,42,49,50,69,84,89,91,96,98,112,118,119,121,122,124,125,139,146,147,148,155,156,157,158,159,161,162,163,164,165,166,167,169,176,185,188,190,198,200,201,203,204,206,210,211,219,221,224,227,237,242,243,252,259,264,266,268,271,],[13,13,48,60,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,83,-80,13,130,13,-137,145,145,-112,13,13,-53,60,13,60,13,48,-80,-80,-80,-80,-80,-80,13,13,-65,13,13,13,13,13,13,13,13,60,60,-80,-80,145,-80,-138,-80,-113,13,13,-50,13,-54,13,145,13,-115,13,145,-80,-114,13,13,]),'LOWER_IDENTIFIER':([0,18,23,26,33,34,35,36,37,38,39,40,41,49,50,69,84,89,91,96,98,112,118,119,121,122,124,125,135,146,147,148,155,156,157,158,159,161,162,163,164,165,166,167,169,176,185,188,190,198,200,201,203,204,206,210,211,219,221,224,227,237,242,243,252,259,264,266,268,271,],[15,15,58,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,-80,15,131,15,-137,144,144,-112,15,15,-53,58,15,58,15,191,-80,-80,-80,-80,-80,-80,15,15,-65,15,15,15,15,15,15,15,15,58,58,-80,-80,144,-80,-138,-80,-113,15,15,-50,15,-54,15,144,15,-115,15,144,-80,-114,15,15,]),'$end':([1,2,3,4,5,6,7,11,13,14,15,17,19,44,45,46,47,48,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,85,86,88,90,92,93,94,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,138,140,141,142,143,144,145,149,150,151,152,153,154,168,170,182,183,184,192,193,199,202,205,209,212,213,214,215,216,217,219,223,224,229,232,234,235,236,238,244,245,248,254,257,258,260,261,267,269,273,274,275,277,278,279,280,282,283,],[0,-139,-80,-143,-144,-145,-146,-150,-48,-47,-49,-140,-142,-80,-153,-80,-160,-80,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-141,-157,-159,-161,-163,-151,-24,-25,-46,-102,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-53,-103,-80,-164,-165,-166,-124,-125,-110,-111,-118,-119,-126,-127,-52,-51,-77,-78,-79,-80,-162,-120,-129,-135,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,-152,-158,-167,-168,-80,-108,-80,-109,-81,-117,-116,-122,-123,-104,-106,-80,-128,-133,-134,-80,-107,-14,-121,-105,]),'NEWLINE':([3,4,5,6,7,11,13,14,15,44,45,46,47,48,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,86,88,90,92,93,94,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,138,140,141,142,143,144,145,149,150,151,152,153,154,168,170,182,183,184,192,193,199,202,205,209,212,213,214,215,216,217,219,223,224,229,232,234,235,236,238,244,245,248,254,257,258,260,261,267,269,273,274,275,277,278,279,280,282,283,],[18,-143,-144,-145,-146,-150,-48,-47,-49,18,-153,-80,-160,-80,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-157,-159,-161,-163,-151,-24,-25,-46,-102,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-53,-103,-80,-164,-165,-166,-124,-125,-110,-111,-118,-119,-126,-127,-52,-51,-77,-78,-79,-80,-162,-120,-129,-135,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,-152,-158,-167,-168,-80,-108,-80,-109,-81,-117,-116,-122,-123,-104,-106,-80,-128,-133,-134,-80,-107,-14,-121,-105,]),'PADDING':([4,5,6,7,11,13,14,15,45,46,47,48,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,86,88,90,92,93,94,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,138,140,141,142,143,144,145,149,150,151,152,153,154,155,156,160,168,170,182,183,184,192,193,196,197,198,199,202,205,209,212,213,214,215,216,217,219,223,224,226,229,232,234,235,236,238,239,240,241,244,245,248,254,257,258,260,261,267,269,272,273,274,275,276,277,278,279,280,282,283,],[-143,-144,-145,-146,-150,-48,-47,-49,-153,89,-160,-80,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-157,-159,-161,-163,-151,-24,-25,-46,-102,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-53,-103,-80,-164,-165,-166,-124,-125,-110,-111,-118,-119,-126,-127,89,89,211,-52,-51,-77,-78,-79,89,-162,-132,-131,89,-120,-129,-135,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,252,-35,-152,-158,-167,-168,-80,89,89,89,-108,268,-109,-81,-117,-116,-122,-123,-104,-106,252,-80,-128,-133,-130,-134,268,-107,-14,-121,-105,]),'KEYWORD_IN':([4,5,6,7,11,13,14,15,45,46,47,48,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,86,88,90,92,93,94,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,138,140,141,142,143,144,145,149,150,151,152,153,154,168,170,182,183,184,192,193,199,202,205,209,212,213,214,215,216,217,219,223,224,225,226,229,232,234,235,236,238,244,245,248,251,253,254,257,258,260,261,267,269,272,273,274,275,277,278,279,280,281,282,283,],[-143,-144,-145,-146,-150,-48,-47,-49,-153,-80,-160,-80,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-157,-159,-161,-163,-151,-24,-25,-46,-102,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-53,-103,-80,-164,-165,-166,-124,-125,-110,-111,-118,-119,-126,-127,-52,-51,-77,-78,-79,-80,-162,-120,-129,-135,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,250,-80,-35,-152,-158,-167,-168,-80,-108,-80,-109,-147,-149,-81,-117,-116,-122,-123,-104,-106,-80,-80,-128,-133,-134,-80,-107,-14,-148,-121,-105,]),'EQ':([8,9,13,14,15,16,22,24,43,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,101,123,127,133,136,137,181,182,183,184,186,191,224,233,246,255,],[20,-80,-48,-47,-49,-80,50,-100,84,-80,-82,-83,-84,-85,-86,-87,-88,-89,-90,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-54,-80,-46,-98,-94,-93,-154,-156,-91,-77,-78,-79,-95,-80,-54,-155,-80,-92,]),'COLON':([9,10,13,14,15,21,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,127,129,130,131,132,133,134,138,168,169,170,178,181,182,183,184,186,209,212,213,214,215,216,217,219,223,224,229,231,244,245,247,248,254,255,267,269,278,279,280,283,],[21,26,-48,-47,-49,49,124,-82,-83,-84,-85,-86,-87,-88,-89,-90,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,134,-46,-102,-15,-13,26,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,26,-53,-94,-89,-90,-88,124,-93,190,-103,-52,26,-3,124,124,-77,-78,-79,-95,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,124,-108,-80,26,-109,-81,-92,-104,-106,-80,-107,-14,-105,]),'SPACE':([9,12,13,14,15,16,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,126,127,129,130,131,133,138,140,141,142,143,144,145,152,153,154,160,168,170,178,181,182,183,184,186,191,202,207,209,212,213,214,215,216,217,219,223,224,229,235,236,238,244,245,246,248,250,254,255,267,269,273,274,275,277,278,279,280,283,],[23,42,-48,-47,-49,23,91,23,-82,-83,-84,-85,-86,-87,-88,-89,-90,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-54,135,158,-46,-102,-15,-13,-11,-9,-7,-5,167,-16,-17,-18,-19,-20,-21,-22,-23,-53,176,185,-94,-47,-48,-49,-93,-103,91,-164,-165,-166,-124,-125,200,-126,-127,210,-52,167,23,-91,-77,-78,-79,-95,135,-129,242,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,-167,-168,259,-108,-80,23,-109,271,-81,-92,-104,-106,259,-128,-133,-134,-80,-107,-14,-105,]),'COMMA':([10,13,14,15,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,94,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,127,129,130,131,132,133,138,144,145,149,150,151,152,153,154,168,169,170,172,180,181,182,183,184,186,196,199,202,209,212,213,214,215,216,217,219,223,224,229,231,238,240,244,245,247,248,249,254,255,257,258,260,261,267,269,273,274,275,277,278,279,280,282,283,],[32,-48,-47,-49,-82,-83,-84,-85,-86,-87,-88,-89,-90,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,148,-46,-102,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,32,-53,-94,-89,-90,-88,188,-93,-103,-124,-125,-110,-111,-118,-119,-126,-127,-52,32,-51,221,221,-91,-77,-78,-79,-95,148,-120,-129,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,188,-80,264,-108,-80,32,-109,221,-81,-92,-117,-116,-122,-123,-104,-106,-80,-128,-133,-134,-80,-107,-14,-121,-105,]),'OPERATOR':([10,13,14,15,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,138,168,169,170,182,183,184,209,212,213,214,215,216,217,219,223,224,229,244,245,247,248,254,267,269,278,279,280,283,],[33,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-46,-102,-15,-13,33,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,33,-53,-103,-52,33,-3,-77,-78,-79,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,-108,-80,33,-109,-81,-104,-106,-80,-107,-14,-105,]),'ARROW':([10,13,14,15,24,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,123,127,133,138,144,145,150,151,152,153,154,168,169,170,177,178,181,182,183,184,186,199,202,209,212,213,214,215,216,217,219,223,224,228,229,238,244,245,247,248,254,255,257,260,261,267,269,273,274,275,277,278,279,280,282,283,],[34,-48,-47,-49,-100,-80,-82,-83,-84,-85,-86,-87,-88,-89,-90,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-46,-102,-15,-13,34,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,34,-53,-98,-94,-93,-103,-124,-125,198,-118,-119,-126,-127,-52,34,-3,227,-80,-91,-77,-78,-79,-95,-120,-129,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-96,-35,-80,-108,-80,34,-109,-81,-92,198,-122,-123,-104,-106,-80,-128,-133,-134,-80,-107,-14,-121,-105,]),'PLUS':([10,13,14,15,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,138,168,169,170,182,183,184,209,212,213,214,215,216,217,219,223,224,229,244,245,247,248,254,267,269,278,279,280,283,],[35,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-46,-102,-15,-13,-11,35,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,35,-53,-103,-52,35,-3,-77,-78,-79,-12,-10,35,-6,-4,-2,-1,-50,-34,-54,-35,-108,-80,35,-109,-81,-104,-106,-80,-107,-14,-105,]),'MINUS':([10,13,14,15,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,138,168,169,170,182,183,184,209,212,213,214,215,216,217,219,223,224,229,244,245,247,248,254,267,269,278,279,280,283,],[36,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-46,-102,-15,-13,-11,36,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,36,-53,-103,-52,36,-3,-77,-78,-79,-12,-10,36,-6,-4,-2,-1,-50,-34,-54,-35,-108,-80,36,-109,-81,-104,-106,-80,-107,-14,-105,]),'STAR':([10,13,14,15,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,138,168,169,170,182,183,184,209,212,213,214,215,216,217,219,223,224,229,244,245,247,248,254,267,269,278,279,280,283,],[37,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-46,-102,-15,-13,-11,-9,37,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,37,-53,-103,-52,37,-3,-77,-78,-79,-12,-10,-8,37,-4,-2,-1,-50,-34,-54,-35,-108,-80,37,-109,-81,-104,-106,-80,-107,-14,-105,]),'SLASH':([10,13,14,15,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,138,168,169,170,182,183,184,209,212,213,214,215,216,217,219,223,224,229,244,245,247,248,254,267,269,278,279,280,283,],[38,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-46,-102,-15,-13,-11,-9,38,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,38,-53,-103,-52,38,-3,-77,-78,-79,-12,-10,-8,38,-4,-2,-1,-50,-34,-54,-35,-108,-80,38,-109,-81,-104,-106,-80,-107,-14,-105,]),'DOUBLESLASH':([10,13,14,15,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,138,168,169,170,182,183,184,209,212,213,214,215,216,217,219,223,224,229,244,245,247,248,254,267,269,278,279,280,283,],[39,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-46,-102,-15,-13,-11,-9,39,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,39,-53,-103,-52,39,-3,-77,-78,-79,-12,-10,-8,39,-4,-2,-1,-50,-34,-54,-35,-108,-80,39,-109,-81,-104,-106,-80,-107,-14,-105,]),'PERCENT':([10,13,14,15,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,138,168,169,170,182,183,184,209,212,213,214,215,216,217,219,223,224,229,244,245,247,248,254,267,269,278,279,280,283,],[40,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-46,-102,-15,-13,-11,-9,40,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,40,-53,-103,-52,40,-3,-77,-78,-79,-12,-10,-8,40,-4,-2,-1,-50,-34,-54,-35,-108,-80,40,-109,-81,-104,-106,-80,-107,-14,-105,]),'DOT_OPERATOR':([10,13,14,15,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,138,168,169,170,182,183,184,207,209,212,213,214,215,216,217,219,223,224,229,244,245,247,248,254,267,269,278,279,280,283,],[41,-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-46,-102,-15,-13,-11,-9,-7,-5,41,-16,-17,-18,-19,-20,-21,-22,-23,41,-53,-103,-52,41,41,-77,-78,-79,243,-12,-10,-8,-6,-4,-2,-1,-50,-34,-54,-35,-108,-80,41,-109,-81,-104,-106,-80,-107,-14,-105,]),'KEYWORD_WHERE':([13,14,15,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,138,168,170,171,172,180,182,183,184,208,209,212,213,214,215,216,217,218,219,223,224,229,244,245,248,249,254,267,269,278,279,280,283,],[-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-46,160,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-53,160,-52,-3,160,160,160,-77,-78,-79,160,-12,-10,-8,-6,-4,-2,-1,160,-50,-34,-54,-35,-108,-80,-109,160,160,-104,-106,-80,-107,160,-105,]),'TICK_OPERATOR':([13,14,15,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,138,168,170,171,172,180,182,183,184,208,209,212,213,214,215,216,217,218,219,223,224,229,244,245,248,249,254,267,269,278,279,280,283,],[-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-46,161,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-53,161,-52,-3,161,161,161,-77,-78,-79,161,-12,-10,-8,-6,-4,-2,-1,161,-50,-34,-54,-35,-108,-80,-109,161,161,-104,-106,-80,-107,161,-105,]),'RPAREN':([13,14,15,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,89,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,123,127,128,129,130,131,132,133,138,144,145,149,150,151,152,153,154,155,168,170,172,173,174,175,178,181,182,183,184,186,187,189,194,196,197,199,202,203,209,212,213,214,215,216,217,218,219,220,222,223,224,228,229,230,231,238,239,240,244,245,248,249,254,255,256,257,258,260,261,262,263,267,269,270,273,274,275,276,277,278,279,280,282,283,],[-48,-47,-49,-100,82,-62,-66,-67,-68,-69,-70,-71,-63,-64,-60,-61,-56,-57,-58,-59,-55,-80,-82,-83,-84,-85,-86,-87,-88,-89,-90,-26,-27,-28,-29,-30,-31,-32,-33,127,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-137,-46,-102,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-80,-53,-98,-94,186,-89,-90,-88,-80,-93,-103,-124,-125,-110,-111,-118,-119,-126,-127,202,-52,-51,219,223,224,-38,-80,-91,-77,-78,-79,-95,-97,-101,235,-132,-131,-120,-129,-138,-12,-10,-8,-6,-4,-2,-1,219,-50,-36,-39,-34,-54,-96,-35,255,-80,-80,-80,-80,-108,-80,-109,-80,-81,-92,-99,-117,-116,-122,-123,274,275,-104,-106,-37,-80,-128,-133,-130,-134,-80,-107,-14,-121,-105,]),'RBRACKET':([13,14,15,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,89,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,122,138,144,145,149,150,151,152,153,154,168,170,175,179,180,182,183,184,195,199,202,203,209,212,213,214,215,216,217,219,220,222,223,224,229,238,241,244,245,248,249,254,257,258,260,261,265,267,269,270,273,274,275,277,278,279,280,282,283,],[-48,-47,-49,-26,-27,-28,-29,-30,-31,-32,-33,133,-72,-73,-74,-75,-76,-45,-44,-40,-41,-42,-43,-137,-46,-102,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-53,-80,-103,-124,-125,-110,-111,-118,-119,-126,-127,-52,-51,-38,229,-80,-77,-78,-79,236,-120,-129,-138,-12,-10,-8,-6,-4,-2,-1,-50,-36,-39,-34,-54,-35,-80,-80,-108,-80,-109,-80,-81,-117,-116,-122,-123,277,-104,-106,-37,-80,-128,-133,-134,-80,-107,-14,-121,-105,]),'LBRACKET':([23,26,33,34,35,36,37,38,39,40,41,49,50,69,84,89,91,96,98,112,118,119,121,122,124,146,147,148,155,156,157,159,161,162,163,164,165,166,167,169,185,188,190,198,200,201,203,204,206,219,221,224,227,237,243,259,264,266,271,],[70,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,-80,122,70,122,-137,147,156,-112,122,122,-53,70,122,70,-80,-80,-80,-80,-80,-80,122,-65,122,122,122,122,122,122,122,70,70,-80,-80,156,-80,-138,-80,-113,-50,122,-54,122,156,-115,156,-80,-114,122,]),'BASE10_INTEGER':([23,26,33,34,35,36,37,38,39,40,41,50,69,84,112,118,119,121,122,124,159,161,162,163,164,165,166,167,169,185,188,219,221,224,227,271,],[71,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,71,71,71,71,71,-53,71,71,71,71,-65,71,71,71,71,71,71,71,71,71,-50,71,-54,71,71,]),'BASE16_INTEGER':([23,26,33,34,35,36,37,38,39,40,41,50,69,84,112,118,119,121,122,124,159,161,162,163,164,165,166,167,169,185,188,219,221,224,227,271,],[72,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,72,72,72,72,72,-53,72,72,72,72,-65,72,72,72,72,72,72,72,72,72,-50,72,-54,72,72,]),'BASE8_INTEGER':([23,26,33,34,35,36,37,38,39,40,41,50,69,84,112,118,119,121,122,124,159,161,162,163,164,165,166,167,169,185,188,219,221,224,227,271,],[73,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,73,73,73,73,73,-53,73,73,73,73,-65,73,73,73,73,73,73,73,73,73,-50,73,-54,73,73,]),'BASE2_INTEGER':([23,26,33,34,35,36,37,38,39,40,41,50,69,84,112,118,119,121,122,124,159,161,162,163,164,165,166,167,169,185,188,219,221,224,227,271,],[74,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,74,74,74,74,74,-53,74,74,74,74,-65,74,74,74,74,74,74,74,74,74,-50,74,-54,74,74,]),'FLOAT':([23,26,33,34,35,36,37,38,39,40,41,50,69,84,112,118,119,121,122,124,159,161,162,163,164,165,166,167,169,185,188,219,221,224,227,271,],[75,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,75,75,75,75,75,-53,75,75,75,75,-65,75,75,75,75,75,75,75,75,75,-50,75,-54,75,75,]),'STRING':([23,26,33,34,35,36,37,38,39,40,41,50,69,84,112,118,119,121,122,124,125,159,161,162,163,164,165,166,167,169,185,188,219,221,224,227,271,],[76,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,76,76,76,76,76,-53,76,76,76,76,76,-65,76,76,76,76,76,76,76,76,76,-50,76,-54,76,76,]),'CHAR':([23,26,33,34,35,36,37,38,39,40,41,50,69,84,112,118,119,121,122,124,125,159,161,162,163,164,165,166,167,169,185,188,219,221,224,227,271,],[77,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,77,77,77,77,77,-53,77,77,77,77,77,-65,77,77,77,77,77,77,77,77,77,-50,77,-54,77,77,]),'DATE':([23,26,33,34,35,36,37,38,39,40,41,50,69,84,112,118,119,121,122,124,159,161,162,163,164,165,166,167,169,185,188,219,221,224,227,271,],[78,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,78,78,78,78,78,-53,78,78,78,78,-65,78,78,78,78,78,78,78,78,78,-50,78,-54,78,78,]),'DATETIME':([23,26,33,34,35,36,37,38,39,40,41,50,69,84,112,118,119,121,122,124,159,161,162,163,164,165,166,167,169,185,188,219,221,224,227,271,],[79,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,79,79,79,79,79,-53,79,79,79,79,-65,79,79,79,79,79,79,79,79,79,-50,79,-54,79,79,]),'DATE_INTERVAL':([23,26,33,34,35,36,37,38,39,40,41,50,69,84,112,118,119,121,122,124,159,161,162,163,164,165,166,167,169,185,188,219,221,224,227,271,],[80,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,80,80,80,80,80,-53,80,80,80,80,-65,80,80,80,80,80,80,80,80,80,-50,80,-54,80,80,]),'DATETIME_INTERVAL':([23,26,33,34,35,36,37,38,39,40,41,50,69,84,112,118,119,121,122,124,159,161,162,163,164,165,166,167,169,185,188,219,221,224,227,271,],[81,-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,81,81,81,81,81,-53,81,81,81,81,-65,81,81,81,81,81,81,81,81,81,-50,81,-54,81,81,]),'KEYWORD_LET':([26,33,34,35,36,37,38,39,40,41,50,84,112,118,119,122,159,161,162,163,164,165,166,167,169,219,221,224,227,271,],[-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,120,120,120,120,-53,120,120,-65,120,120,120,120,120,120,120,-50,120,-54,120,120,]),'BACKSLASH':([26,33,34,35,36,37,38,39,40,41,50,84,112,118,119,122,159,161,162,163,164,165,166,167,169,219,221,224,227,271,],[-62,-63,-64,-60,-61,-56,-57,-58,-59,-55,121,121,121,121,-53,121,121,-65,121,121,121,121,121,121,121,-50,121,-54,121,121,]),'PIPE':([46,47,48,87,88,89,90,92,140,141,142,143,144,145,192,193,235,236,],[-80,-160,-80,139,-138,-137,-161,-163,-80,-164,-165,-166,-124,-125,-80,-162,-167,-168,]),'KEYWORD_FORALL':([49,89,146,147,148,155,156,157,190,201,203,204,264,],[99,-137,99,99,99,-80,-80,99,99,99,-138,99,99,]),'ANNOTATION':([61,71,72,73,74,75,],[125,-72,-73,-74,-75,-76,]),'FATARROW':([94,97,100,144,145,149,150,151,152,153,154,196,197,199,202,238,257,258,260,261,273,274,275,277,282,],[-132,157,-136,-124,-125,-110,-111,-118,-119,-126,-127,-132,-131,-120,-129,-80,-117,-116,-122,-123,-80,-128,-133,-134,-121,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'definitions':([0,],[2,]),'definition':([0,18,252,],[3,44,272,]),'local_definition':([0,18,176,252,],[4,4,226,4,]),'datatype_definition':([0,18,252,],[5,5,5,]),'nametype_decl':([0,18,176,252,],[6,6,6,6,]),'valuedef':([0,18,176,252,],[7,7,7,7,]),'_datatype_lhs':([0,18,252,],[8,8,8,]),'_identifier':([0,18,50,69,84,112,118,122,125,158,159,162,163,164,165,166,167,169,176,210,211,221,227,242,252,268,271,],[9,9,101,126,101,101,101,101,101,207,101,101,101,101,101,101,101,101,9,246,246,101,101,207,9,246,101,]),'equation':([0,18,176,210,211,252,268,],[11,11,11,245,245,11,278,]),'_enclosed_operator':([0,18,50,84,109,112,118,122,159,162,163,164,165,166,167,169,170,176,210,211,217,221,227,252,268,271,],[16,16,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,16,16,16,119,119,119,16,16,119,]),'_definition_set':([3,44,],[17,85,]),'empty':([3,9,16,44,46,48,49,51,83,118,122,132,140,146,147,148,155,156,157,172,178,180,190,191,192,198,201,204,226,231,238,239,240,241,245,246,249,264,272,273,278,],[19,24,24,19,88,92,98,24,137,175,175,189,92,98,98,98,203,203,98,222,24,222,98,137,88,203,98,98,253,189,261,203,203,203,269,24,222,98,253,261,269,]),'_patterns':([9,16,51,178,246,],[22,43,123,228,22,]),'_st_operator':([10,118,169,247,],[25,174,174,174,]),'infixl_operator_2':([10,105,118,169,247,],[27,163,27,27,27,]),'infixr_operator_2':([10,105,118,169,247,],[28,162,28,28,28,]),'infixl_operator_6':([10,106,118,169,213,247,],[29,164,29,29,164,29,]),'infixl_operator_7':([10,107,118,169,214,247,],[30,165,30,30,165,30,]),'infixr_operator_9':([10,109,118,169,170,217,247,],[31,166,31,31,166,166,31,]),'_data_rhs':([20,],[45,]),'data_cons':([20,139,],[46,192,]),'_data_cons':([20,139,],[47,47,]),'pattern':([23,69,121,124,185,188,],[51,132,178,181,178,231,]),'literal':([23,50,69,84,112,118,121,122,124,159,162,163,164,165,166,167,169,185,188,221,227,271,],[52,110,52,110,110,110,52,110,52,110,110,110,110,110,110,110,110,52,52,110,110,110,]),'cons_pattern':([23,69,121,124,185,188,],[53,53,53,53,53,53,]),'list_cons_pattern':([23,69,121,124,185,188,],[54,54,54,54,54,54,]),'tuple_cons_pattern':([23,69,121,124,185,188,],[55,55,55,55,55,55,]),'empty_list_pattern':([23,69,121,124,185,188,],[56,56,56,56,56,56,]),'empty_tuple_pattern':([23,69,121,124,185,188,],[57,57,57,57,57,57,]),'number':([23,50,69,84,112,118,121,122,124,159,162,163,164,165,166,167,169,185,188,221,227,271,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'concrete_number':([23,50,69,84,112,118,121,122,124,159,162,163,164,165,166,167,169,185,188,221,227,271,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'string':([23,50,69,84,112,118,121,122,124,125,159,162,163,164,165,166,167,169,185,188,221,227,271,],[63,63,63,63,63,63,63,63,63,182,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'char':([23,50,69,84,112,118,121,122,124,125,159,162,163,164,165,166,167,169,185,188,221,227,271,],[64,64,64,64,64,64,64,64,64,183,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'date':([23,50,69,84,112,118,121,122,124,159,162,163,164,165,166,167,169,185,188,221,227,271,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'datetime':([23,50,69,84,112,118,121,122,124,159,162,163,164,165,166,167,169,185,188,221,227,271,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'date_interval':([23,50,69,84,112,118,121,122,124,159,162,163,164,165,166,167,169,185,188,221,227,271,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'datetime_interval':([23,50,69,84,112,118,121,122,124,159,162,163,164,165,166,167,169,185,188,221,227,271,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'_data_conses':([46,192,],[86,234,]),'_maybe_padding':([46,155,156,192,198,239,240,241,],[87,201,204,87,237,262,263,265,]),'_cons_args':([48,140,],[90,193,]),'st_type_expr':([49,190,],[93,232,]),'type_expr':([49,146,147,148,157,190,201,204,264,],[94,194,195,196,205,94,240,241,196,]),'constrained_type_expr':([49,190,],[95,95,]),'type_scheme':([49,146,147,148,157,190,201,204,264,],[96,96,96,96,96,96,96,96,96,]),'type_constraints':([49,190,],[97,97,]),'_type_expr_list_trail':([49,148,190,264,],[100,197,100,276,]),'expr':([50,84,112,118,122,159,162,163,164,165,166,167,169,221,227,271,],[102,138,171,172,180,208,171,171,171,171,171,171,218,249,254,280,]),'expr_term0':([50,84,112,118,122,159,162,163,164,165,166,167,169,221,227,271,],[103,103,103,103,103,209,103,103,103,103,103,103,103,103,103,103,]),'expr_term1':([50,84,112,118,122,159,162,163,164,165,166,167,169,221,227,271,],[104,104,104,104,104,104,212,104,104,104,104,104,104,104,104,104,]),'expr_term2':([50,84,112,118,122,159,162,163,164,165,166,167,169,221,227,271,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'expr_term6':([50,84,112,118,122,159,162,163,164,165,166,167,169,221,227,271,],[106,106,106,106,106,106,106,213,106,106,106,106,106,106,106,106,]),'expr_term7':([50,84,112,118,122,159,162,163,164,165,166,167,169,221,227,271,],[107,107,107,107,107,107,107,107,214,107,107,107,107,107,107,107,]),'expr_term9':([50,84,112,118,122,159,162,163,164,165,166,167,169,221,227,271,],[108,108,108,108,108,108,108,108,108,215,216,108,108,108,108,108,]),'expr_factor':([50,84,112,118,122,159,162,163,164,165,166,167,169,221,227,271,],[109,109,170,109,109,109,109,109,109,109,109,217,109,109,109,109,]),'identifier':([50,84,112,118,122,125,159,162,163,164,165,166,167,169,221,227,271,],[111,111,111,111,111,184,111,111,111,111,111,111,111,111,111,111,111,]),'enclosed_expr':([50,84,109,112,118,122,159,162,163,164,165,166,167,169,170,217,221,227,271,],[112,112,168,112,112,112,112,112,112,112,112,112,112,112,168,168,112,112,112,]),'letexpr':([50,84,112,118,122,159,162,163,164,165,166,167,169,221,227,271,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'where_expr':([50,84,112,118,122,159,162,163,164,165,166,167,169,221,227,271,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'lambda_expr':([50,84,112,118,122,159,162,163,164,165,166,167,169,221,227,271,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'simple_list_expr':([50,84,112,118,122,159,162,163,164,165,166,167,169,221,227,271,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'simple_tuple_expr':([50,84,112,118,122,159,162,163,164,165,166,167,169,221,227,271,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'patterns_comma_sep':([69,],[128,]),'_cons_params':([83,191,],[136,233,]),'cons_arg':([91,],[140,]),'type_variable':([91,96,200,237,259,],[141,153,153,153,153,]),'type_cons':([91,96,200,237,259,],[142,154,154,154,154,]),'_cons_arg_factor':([91,],[143,]),'type_function_expr':([96,237,],[149,258,]),'type_term':([96,237,],[150,257,]),'type_app_expression':([96,237,],[151,151,]),'type_factor':([96,200,237,259,],[152,238,152,273,]),'infixl_operator_0':([102,138,171,172,180,208,218,249,254,280,],[159,159,159,159,159,159,159,159,159,159,]),'_list_items':([118,122,],[173,179,]),'patterns':([121,185,],[177,230,]),'_patterns_comma':([132,231,],[187,256,]),'_app_args_non_empty':([152,],[199,]),'_type_scheme_generics':([158,242,],[206,266,]),'_list_items_cont':([172,180,249,],[220,220,270,]),'local_definitions':([176,],[225,]),'_type_expr_list':([201,],[239,]),'equations':([210,211,],[244,248,]),'_local_definition_set':([226,272,],[251,281,]),'_app_args':([238,273,],[260,282,]),'_equation_set':([245,278,],[267,283,]),'st_expr':([271,],[279,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','__init__.py',441),
  ('expr_term9 -> expr_factor infixr_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','__init__.py',448),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','__init__.py',449),
  ('expr_term7 -> expr_term7 infixl_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','__init__.py',451),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','__init__.py',452),
  ('expr_term6 -> expr_term6 infixl_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','__init__.py',454),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','__init__.py',455),
  ('expr_term2 -> expr_term2 infixl_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','__init__.py',457),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','__init__.py',458),
  ('expr_term1 -> expr_term2 infixr_operator_2 expr_term1','expr_term1',3,'p_expressions_precedence_rules','__init__.py',460),
  ('expr_term1 -> expr_term2','expr_term1',1,'p_expressions_precedence_rules','__init__.py',461),
  ('expr_term0 -> expr infixl_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','__init__.py',463),
  ('expr_term0 -> expr_term1','expr_term0',1,'p_expressions_precedence_rules','__init__.py',464),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','__init__.py',477),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','__init__.py',479),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','__init__.py',481),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','__init__.py',482),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','__init__.py',483),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','__init__.py',484),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','__init__.py',485),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','__init__.py',486),
  ('expr_factor -> simple_list_expr','expr_factor',1,'p_standalone_definitions','__init__.py',487),
  ('expr_factor -> simple_tuple_expr','expr_factor',1,'p_standalone_definitions','__init__.py',488),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','__init__.py',490),
  ('st_type_expr -> constrained_type_expr','st_type_expr',1,'p_standalone_definitions','__init__.py',491),
  ('literal -> number','literal',1,'p_literals','__init__.py',499),
  ('literal -> concrete_number','literal',1,'p_literals','__init__.py',500),
  ('literal -> string','literal',1,'p_literals','__init__.py',501),
  ('literal -> char','literal',1,'p_literals','__init__.py',502),
  ('literal -> date','literal',1,'p_literals','__init__.py',503),
  ('literal -> datetime','literal',1,'p_literals','__init__.py',504),
  ('literal -> date_interval','literal',1,'p_literals','__init__.py',505),
  ('literal -> datetime_interval','literal',1,'p_literals','__init__.py',506),
  ('simple_tuple_expr -> LPAREN _list_items RPAREN','simple_tuple_expr',3,'p_tuple_expr','__init__.py',512),
  ('simple_list_expr -> LBRACKET _list_items RBRACKET','simple_list_expr',3,'p_list_expr','__init__.py',519),
  ('_list_items -> expr _list_items_cont','_list_items',2,'p_list_items','__init__.py',526),
  ('_list_items_cont -> COMMA expr _list_items_cont','_list_items_cont',3,'p_list_items','__init__.py',527),
  ('_list_items -> empty','_list_items',1,'p_list_items_empty','__init__.py',533),
  ('_list_items_cont -> empty','_list_items_cont',1,'p_list_items_empty','__init__.py',534),
  ('date -> DATE','date',1,'p_date','__init__.py',540),
  ('datetime -> DATETIME','datetime',1,'p_datetime','__init__.py',546),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','__init__.py',552),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','__init__.py',558),
  ('char -> CHAR','char',1,'p_char','__init__.py',564),
  ('string -> STRING','string',1,'p_string','__init__.py',569),
  ('identifier -> _identifier','identifier',1,'p_variable','__init__.py',574),
  ('_identifier -> UNDER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',581),
  ('_identifier -> UPPER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',582),
  ('_identifier -> LOWER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',583),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','__init__.py',590),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','__init__.py',595),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','__init__.py',596),
  ('enclosed_expr -> _enclosed_operator','enclosed_expr',1,'p_operators_as_expressios','__init__.py',602),
  ('_enclosed_operator -> LPAREN _st_operator RPAREN','_enclosed_operator',3,'p_enclosed_operator','__init__.py',608),
  ('infixr_operator_9 -> DOT_OPERATOR','infixr_operator_9',1,'p_operator','__init__.py',618),
  ('infixl_operator_7 -> STAR','infixl_operator_7',1,'p_operator','__init__.py',620),
  ('infixl_operator_7 -> SLASH','infixl_operator_7',1,'p_operator','__init__.py',621),
  ('infixl_operator_7 -> DOUBLESLASH','infixl_operator_7',1,'p_operator','__init__.py',622),
  ('infixl_operator_7 -> PERCENT','infixl_operator_7',1,'p_operator','__init__.py',623),
  ('infixl_operator_6 -> PLUS','infixl_operator_6',1,'p_operator','__init__.py',625),
  ('infixl_operator_6 -> MINUS','infixl_operator_6',1,'p_operator','__init__.py',626),
  ('infixr_operator_2 -> COLON','infixr_operator_2',1,'p_operator','__init__.py',628),
  ('infixl_operator_2 -> OPERATOR','infixl_operator_2',1,'p_operator','__init__.py',630),
  ('infixl_operator_2 -> ARROW','infixl_operator_2',1,'p_operator','__init__.py',631),
  ('infixl_operator_0 -> TICK_OPERATOR','infixl_operator_0',1,'p_operator','__init__.py',633),
  ('_st_operator -> infixl_operator_2','_st_operator',1,'p_operator','__init__.py',635),
  ('_st_operator -> infixr_operator_2','_st_operator',1,'p_operator','__init__.py',636),
  ('_st_operator -> infixl_operator_6','_st_operator',1,'p_operator','__init__.py',637),
  ('_st_operator -> infixl_operator_7','_st_operator',1,'p_operator','__init__.py',638),
  ('_st_operator -> infixr_operator_9','_st_operator',1,'p_operator','__init__.py',639),
  ('_st_operator -> COMMA','_st_operator',1,'p_operator','__init__.py',640),
  ('number -> BASE10_INTEGER','number',1,'p_integer','__init__.py',647),
  ('number -> BASE16_INTEGER','number',1,'p_integer','__init__.py',648),
  ('number -> BASE8_INTEGER','number',1,'p_integer','__init__.py',649),
  ('number -> BASE2_INTEGER','number',1,'p_integer','__init__.py',650),
  ('number -> FLOAT','number',1,'p_float','__init__.py',679),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','__init__.py',684),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','__init__.py',685),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','__init__.py',686),
  ('empty -> <empty>','empty',0,'p_empty','__init__.py',695),
  ('lambda_expr -> BACKSLASH patterns ARROW expr','lambda_expr',4,'p_lambda_definition','__init__.py',700),
  ('pattern -> literal','pattern',1,'p_pattern','__init__.py',709),
  ('pattern -> cons_pattern','pattern',1,'p_pattern','__init__.py',710),
  ('pattern -> list_cons_pattern','pattern',1,'p_pattern','__init__.py',711),
  ('pattern -> tuple_cons_pattern','pattern',1,'p_pattern','__init__.py',712),
  ('pattern -> empty_list_pattern','pattern',1,'p_pattern','__init__.py',713),
  ('pattern -> empty_tuple_pattern','pattern',1,'p_pattern','__init__.py',714),
  ('pattern -> LOWER_IDENTIFIER','pattern',1,'p_var_pattern','__init__.py',720),
  ('pattern -> UNDER_IDENTIFIER','pattern',1,'p_var_pattern','__init__.py',721),
  ('pattern -> UPPER_IDENTIFIER','pattern',1,'p_simplecons_pattern','__init__.py',727),
  ('list_cons_pattern -> pattern COLON pattern','list_cons_pattern',3,'p_list_cons_for_param','__init__.py',733),
  ('cons_pattern -> LPAREN _identifier SPACE patterns RPAREN','cons_pattern',5,'p_param_pattern','__init__.py',739),
  ('empty_list_pattern -> LBRACKET RBRACKET','empty_list_pattern',2,'p_empty_list_as_pattern','__init__.py',744),
  ('empty_tuple_pattern -> LPAREN RPAREN','empty_tuple_pattern',2,'p_unit_value_as_pattern','__init__.py',751),
  ('tuple_cons_pattern -> LPAREN patterns_comma_sep RPAREN','tuple_cons_pattern',3,'p_tuple_cons_pattern','__init__.py',757),
  ('patterns -> pattern _patterns','patterns',2,'p_patterns','__init__.py',765),
  ('patterns_comma_sep -> pattern _patterns_comma','patterns_comma_sep',2,'p_patterns','__init__.py',766),
  ('_patterns -> SPACE pattern _patterns','_patterns',3,'p_patterns','__init__.py',767),
  ('_patterns_comma -> COMMA pattern _patterns_comma','_patterns_comma',3,'p_patterns','__init__.py',768),
  ('_patterns -> empty','_patterns',1,'p_patterns_empty','__init__.py',774),
  ('_patterns_comma -> empty','_patterns_comma',1,'p_patterns_empty','__init__.py',775),
  ('equation -> _identifier _patterns EQ expr','equation',4,'p_equation','__init__.py',781),
  ('equation -> _enclosed_operator _patterns EQ expr','equation',4,'p_equation','__init__.py',782),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','__init__.py',792),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','__init__.py',801),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','__init__.py',810),
  ('letexpr -> KEYWORD_LET SPACE local_definitions KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','__init__.py',820),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','__init__.py',828),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','__init__.py',829),
  ('type_expr -> type_scheme type_function_expr','type_expr',2,'p_type_expr','__init__.py',839),
  ('type_expr -> type_scheme type_term','type_expr',2,'p_type_expr','__init__.py',840),
  ('type_scheme -> empty','type_scheme',1,'p_type_scheme_empty','__init__.py',849),
  ('type_scheme -> KEYWORD_FORALL SPACE _type_scheme_generics','type_scheme',3,'p_type_scheme','__init__.py',853),
  ('_type_scheme_generics -> _identifier SPACE _type_scheme_generics','_type_scheme_generics',3,'p_type_scheme_generics','__init__.py',860),
  ('_type_scheme_generics -> _identifier DOT_OPERATOR','_type_scheme_generics',2,'p_last_type_scheme_generic','__init__.py',865),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','__init__.py',870),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','__init__.py',871),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','__init__.py',881),
  ('type_term -> type_factor','type_term',1,'p_type_term','__init__.py',882),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','__init__.py',887),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','__init__.py',899),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','__init__.py',900),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','__init__.py',906),
  ('type_variable -> LOWER_IDENTIFIER','type_variable',1,'p_type_variable','__init__.py',911),
  ('type_cons -> UPPER_IDENTIFIER','type_cons',1,'p_type_cons','__init__.py',916),
  ('type_factor -> type_variable','type_factor',1,'p_type_factor_identifier','__init__.py',921),
  ('type_factor -> type_cons','type_factor',1,'p_type_factor_identifier','__init__.py',922),
  ('type_factor -> LPAREN _maybe_padding _type_expr_list _maybe_padding RPAREN','type_factor',5,'p_type_factor_tuple','__init__.py',929),
  ('type_factor -> LPAREN RPAREN','type_factor',2,'p_type_factor_unit_type','__init__.py',935),
  ('_type_expr_list -> type_expr COMMA _type_expr_list_trail','_type_expr_list',3,'p_type_expr_list','__init__.py',940),
  ('_type_expr_list_trail -> type_expr COMMA _type_expr_list_trail','_type_expr_list_trail',3,'p_type_expr_list','__init__.py',941),
  ('_type_expr_list_trail -> type_expr','_type_expr_list_trail',1,'p_type_expr_list_last_item','__init__.py',947),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','__init__.py',953),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','__init__.py',958),
  ('constrained_type_expr -> type_constraints FATARROW type_expr','constrained_type_expr',3,'p_constrained_type_expr','__init__.py',977),
  ('type_constraints -> _type_expr_list_trail','type_constraints',1,'p_type_constraint','__init__.py',986),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','__init__.py',992),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','__init__.py',993),
  ('program -> definitions','program',1,'p_program','__init__.py',999),
  ('definitions -> definition _definition_set','definitions',2,'p_definitions','__init__.py',1005),
  ('_definition_set -> NEWLINE definition _definition_set','_definition_set',3,'p_definition_set','__init__.py',1011),
  ('_definition_set -> empty','_definition_set',1,'p_definition_set2','__init__.py',1017),
  ('definition -> local_definition','definition',1,'p_definition','__init__.py',1023),
  ('definition -> datatype_definition','definition',1,'p_definition','__init__.py',1024),
  ('local_definition -> nametype_decl','local_definition',1,'p_local_definition','__init__.py',1031),
  ('local_definition -> valuedef','local_definition',1,'p_local_definition','__init__.py',1032),
  ('local_definitions -> local_definition _local_definition_set','local_definitions',2,'p_local_definitions','__init__.py',1038),
  ('_local_definition_set -> PADDING definition _local_definition_set','_local_definition_set',3,'p_local_definition_set','__init__.py',1044),
  ('_local_definition_set -> empty','_local_definition_set',1,'p_local_definition_set_empty','__init__.py',1050),
  ('valuedef -> equation','valuedef',1,'p_valuedef','__init__.py',1056),
  ('nametype_decl -> _identifier COLON COLON st_type_expr','nametype_decl',4,'p_nametype_decl','__init__.py',1062),
  ('nametype_decl -> LPAREN _st_operator RPAREN COLON COLON st_type_expr','nametype_decl',6,'p_nametype_decl_operators','__init__.py',1071),
  ('datatype_definition -> _datatype_lhs EQ _data_rhs','datatype_definition',3,'p_datatype_definition','__init__.py',1080),
  ('_datatype_lhs -> KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params','_datatype_lhs',4,'p_datatype_lhs','__init__.py',1088),
  ('_cons_params -> SPACE LOWER_IDENTIFIER _cons_params','_cons_params',3,'p_datatype_cons_params','__init__.py',1097),
  ('_cons_params -> empty','_cons_params',1,'p_datatype_cons_params_empty','__init__.py',1103),
  ('_data_rhs -> data_cons _data_conses','_data_rhs',2,'p_datatype_body','__init__.py',1109),
  ('_data_conses -> _maybe_padding PIPE data_cons _data_conses','_data_conses',4,'p_datatype_body','__init__.py',1110),
  ('_data_conses -> empty','_data_conses',1,'p_datatype_conses_empty','__init__.py',1116),
  ('data_cons -> _data_cons','data_cons',1,'p_data_cons','__init__.py',1121),
  ('_data_cons -> UPPER_IDENTIFIER _cons_args','_data_cons',2,'p_bare_data_cons','__init__.py',1127),
  ('_cons_args -> SPACE cons_arg _cons_args','_cons_args',3,'p_data_cons_args','__init__.py',1132),
  ('_cons_args -> empty','_cons_args',1,'p_data_cons_args_empty','__init__.py',1138),
  ('cons_arg -> type_variable','cons_arg',1,'p_cons_arg','__init__.py',1144),
  ('cons_arg -> type_cons','cons_arg',1,'p_cons_arg','__init__.py',1145),
  ('cons_arg -> _cons_arg_factor','cons_arg',1,'p_cons_arg','__init__.py',1146),
  ('_cons_arg_factor -> LPAREN type_expr RPAREN','_cons_arg_factor',3,'p_cons_arg_factor','__init__.py',1152),
  ('_cons_arg_factor -> LBRACKET type_expr RBRACKET','_cons_arg_factor',3,'p_cons_arg_factor_list','__init__.py',1158),
]
