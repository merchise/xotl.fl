
# program_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON COMMA DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FLOAT KEYWORD_CLASS KEYWORD_DATA KEYWORD_FORALL KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LOWER_IDENTIFIER LPAREN MINUS NEWLINE OPERATOR PADDING PERCENT PIPE PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATOR UNDER_IDENTIFIER UPPER_IDENTIFIERexpr_factor : expr_factor SPACE expr_factor\n    expr_term9 : expr_factor infixr_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infixl_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infixl_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infixl_operator_2 expr_term6\n               | expr_term6\n\n    expr_term1 : expr_term2 infixr_operator_2 expr_term1\n               | expr_term2\n\n    expr_term0 : expr infixl_operator_0 expr_term0\n               | expr_term1\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | letexpr\n                | where_expr\n                | lambda_expr\n                | simple_list_expr\n                | simple_tuple_expr\n\n    st_type_expr : type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    simple_tuple_expr : LPAREN _list_items RPAREN\n    simple_list_expr : LBRACKET _list_items RBRACKET\n    _list_items : expr _list_items_cont\n       _list_items_cont : COMMA expr _list_items_cont\n    _list_items : empty\n       _list_items_cont : empty\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    char : CHARstring : STRINGidentifier : _identifier\n\n    _identifier : UNDER_IDENTIFIER\n                   | UPPER_IDENTIFIER\n                   | LOWER_IDENTIFIER\n\n    enclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : _enclosed_operator\n    _enclosed_operator : LPAREN _st_operator RPAREN\n    infixr_operator_9 : DOT_OPERATOR\n\n    infixl_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infixl_operator_6 : PLUS\n                     | MINUS\n\n    infixr_operator_2 : COLON\n\n    infixl_operator_2 : OPERATOR\n                      | ARROW\n\n    infixl_operator_0 : TICK_OPERATOR\n\n    _st_operator : infixl_operator_2\n                 | infixr_operator_2\n                 | infixl_operator_6\n                 | infixl_operator_7\n                 | infixr_operator_9\n                 | COMMA\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH patterns ARROW expr\n    \n    pattern : identifier\n    pattern : literal\n    pattern : cons_pattern\n    pattern : list_cons_pattern\n    pattern : tuple_cons_pattern\n    pattern : empty_list_pattern\n    pattern : empty_tuple_pattern\n    list_cons_pattern : pattern COLON pattern\n    cons_pattern : LPAREN _identifier SPACE patterns RPARENempty_list_pattern : LBRACKET RBRACKETempty_tuple_pattern : LPAREN RPARENtuple_cons_pattern : LPAREN patterns_comma_sep RPAREN\n    patterns : pattern _patterns\n       patterns_comma_sep : pattern _patterns_comma\n       _patterns : SPACE pattern _patterns\n       _patterns_comma : COMMA pattern _patterns_comma\n    _patterns : empty\n       _patterns_comma : empty\n    equation : _identifier _patterns EQ expr\n       equation : _enclosed_operator _patterns EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    type_expr : type_scheme type_function_expr\n                 | type_scheme type_termtype_scheme : emptytype_scheme : KEYWORD_FORALL SPACE _type_scheme_generics_type_scheme_generics : _identifier SPACE _type_scheme_generics_type_scheme_generics : _identifier DOT_OPERATORtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_variable : LOWER_IDENTIFIERtype_cons : UPPER_IDENTIFIERtype_factor : type_variable\n                   | type_cons\n\n    type_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET_maybe_padding : PADDING\n                      | empty\n    program : definitions\n    definitions : definition _definition_set\n    _definition_set : NEWLINE definition _definition_set\n    _definition_set : empty\n    definition : nametype_decl\n                  | valuedef\n                  | datatype_definition\n    valuedef : equation\n    nametype_decl : _identifier COLON COLON st_type_expr\n    nametype_decl : LPAREN _st_operator RPAREN COLON COLON st_type_expr\n    datatype_definition : _datatype_lhs EQ _data_rhs\n    _datatype_lhs : KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params\n    _cons_params : SPACE LOWER_IDENTIFIER _cons_params\n    _cons_params : empty\n    _data_rhs : data_cons _data_conses\n       _data_conses : _maybe_padding PIPE data_cons _data_conses\n    _data_conses : emptydata_cons : _data_cons_data_cons : UPPER_IDENTIFIER _cons_args_cons_args : SPACE cons_arg _cons_args\n    _cons_args : empty\n    cons_arg : type_variable\n       cons_arg : type_cons\n       cons_arg : _cons_arg_factor\n    _cons_arg_factor : LPAREN type_expr RPAREN\n    _cons_arg_factor : LBRACKET type_expr RBRACKET\n    '
    
_lr_action_items = {'LPAREN':([0,11,12,13,17,21,24,31,32,33,34,35,36,37,38,39,44,45,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,81,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,111,122,124,126,136,137,141,143,144,145,146,147,148,149,150,151,152,158,164,165,166,167,170,172,178,179,181,183,184,185,186,187,190,191,192,193,194,195,196,197,198,200,202,204,205,207,210,212,221,226,227,228,231,232,233,234,242,247,249,250,254,255,256,],[8,-46,-47,-48,8,63,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,-79,105,-45,-25,-26,-27,-28,-29,-30,-31,-32,63,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,105,136,-109,-99,-15,-13,-11,-9,-7,-5,151,-16,-17,105,-19,-20,-21,-22,-23,105,-52,63,105,63,-127,178,-100,-79,-79,105,-64,105,105,105,105,105,105,-51,105,151,209,-76,-77,-78,63,63,-79,-79,-79,-79,136,-79,-128,-79,-110,-12,209,209,-10,-8,-6,-4,-2,-1,-49,105,-33,-53,-79,105,-34,136,-112,-105,-106,-101,209,-103,-80,136,-111,105,-79,-104,-14,-102,]),'UNDER_IDENTIFIER':([0,17,21,24,31,32,33,34,35,36,37,38,39,45,63,81,99,105,106,108,109,111,112,140,141,143,144,145,146,147,148,149,151,158,167,170,191,192,200,202,205,210,225,232,249,],[11,11,11,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,11,11,11,11,11,-52,11,11,11,11,11,11,-64,11,11,11,11,11,11,11,11,11,11,11,11,-49,11,-53,11,11,11,11,]),'UPPER_IDENTIFIER':([0,17,21,24,31,32,33,34,35,36,37,38,39,40,42,44,45,63,81,86,87,99,105,106,108,109,111,112,122,124,136,137,140,141,143,144,145,146,147,148,149,151,158,167,170,172,173,178,179,181,183,184,185,186,187,191,192,200,202,205,210,221,225,226,232,242,247,249,],[12,12,12,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,80,82,-79,12,12,12,139,-109,12,12,-52,12,12,12,12,-127,139,-79,-79,12,12,-64,12,12,12,12,12,12,12,12,12,12,-79,80,-79,-79,-79,139,-79,-128,-79,-110,12,12,-49,12,-53,12,139,12,-112,12,139,-111,12,]),'LOWER_IDENTIFIER':([0,17,21,24,31,32,33,34,35,36,37,38,39,44,45,63,81,86,87,99,105,106,108,109,111,112,122,124,127,136,137,140,141,143,144,145,146,147,148,149,151,158,167,170,172,178,179,181,183,184,185,186,187,191,192,200,202,205,210,221,225,226,232,242,247,249,],[13,13,13,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,-79,13,13,13,138,-109,13,13,-52,13,13,13,13,-127,138,180,-79,-79,13,13,-64,13,13,13,13,13,13,13,13,13,13,-79,-79,-79,-79,138,-79,-128,-79,-110,13,13,-49,13,-53,13,138,13,-112,13,138,-111,13,]),'KEYWORD_DATA':([0,17,],[15,15,]),'$end':([1,2,3,4,5,6,9,11,12,13,16,18,43,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,83,84,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,119,121,123,125,126,130,131,132,133,134,135,138,139,150,152,164,165,166,174,175,176,177,182,190,193,194,195,196,197,198,200,204,205,207,212,215,216,217,222,227,228,231,233,234,237,238,239,240,241,243,244,250,251,252,253,254,255,256,257,],[0,-129,-79,-133,-134,-135,-136,-46,-47,-48,-130,-132,-79,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-139,-79,-146,-79,-131,-137,-24,-99,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,-143,-145,-147,-149,-100,-107,-108,-115,-116,-123,-124,-121,-122,-51,-50,-76,-77,-78,-79,-150,-151,-152,-117,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-79,-34,-138,-79,-148,-79,-105,-106,-101,-103,-80,-144,-153,-154,-114,-113,-119,-120,-79,-79,-125,-126,-104,-14,-102,-118,]),'NEWLINE':([3,4,5,6,9,11,12,13,43,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,84,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,119,121,123,125,126,130,131,132,133,134,135,138,139,150,152,164,165,166,174,175,176,177,182,190,193,194,195,196,197,198,200,204,205,207,212,215,216,217,222,227,228,231,233,234,237,238,239,240,241,243,244,250,251,252,253,254,255,256,257,],[17,-133,-134,-135,-136,-46,-47,-48,17,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-139,-79,-146,-79,-137,-24,-99,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,-143,-145,-147,-149,-100,-107,-108,-115,-116,-123,-124,-121,-122,-51,-50,-76,-77,-78,-79,-150,-151,-152,-117,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-79,-34,-138,-79,-148,-79,-105,-106,-101,-103,-80,-144,-153,-154,-114,-113,-119,-120,-79,-79,-125,-126,-104,-14,-102,-118,]),'COLON':([7,8,11,12,13,19,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,76,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,114,116,117,118,126,150,151,152,160,163,164,165,166,168,190,193,194,195,196,197,198,200,204,205,207,209,212,214,227,228,231,233,234,235,250,254,255,256,],[19,24,-46,-47,-48,44,111,-81,-82,-83,-84,-85,-86,-87,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,118,-99,-15,-13,24,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,24,-52,-45,-91,111,-90,172,-100,-51,24,-3,111,111,-76,-77,-78,-92,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-79,24,-34,111,-105,-106,-101,-103,-80,-89,-79,-104,-14,-102,]),'SPACE':([7,11,12,13,14,15,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,76,80,82,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,113,114,117,126,133,134,135,138,139,142,150,152,160,163,164,165,166,168,174,175,176,177,180,188,190,193,194,195,196,197,198,200,204,205,207,208,212,222,227,228,230,231,233,234,235,238,239,250,251,252,253,254,255,256,],[21,-46,-47,-48,21,42,21,-81,-82,-83,-84,-85,-86,-87,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-53,124,127,140,-99,-15,-13,-11,-9,-7,-5,149,-16,-17,-18,-19,-20,-21,-22,-23,-52,158,167,-91,-90,-100,183,-123,-124,-121,-122,191,-51,149,21,-88,-76,-77,-78,-92,124,-150,-151,-152,127,225,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-79,21,-34,242,-105,-106,249,-101,-103,-80,-89,-153,-154,-79,242,-125,-126,-104,-14,-102,]),'EQ':([7,10,11,12,13,14,20,22,41,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,76,82,110,114,117,128,129,163,164,165,166,168,180,205,208,220,235,],[-79,40,-46,-47,-48,-79,45,-97,81,-79,-81,-82,-83,-84,-85,-86,-87,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-53,-79,-95,-91,-90,-140,-142,-88,-76,-77,-78,-92,-79,-53,-79,-141,-89,]),'COMMA':([8,11,12,13,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,114,116,117,126,150,151,152,154,162,163,164,165,166,168,190,193,194,195,196,197,198,200,204,205,207,209,212,214,227,228,229,231,233,234,235,250,254,255,256,],[30,-46,-47,-48,-81,-82,-83,-84,-85,-86,-87,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,30,-52,-45,-91,170,-90,-100,-51,30,-50,202,202,-88,-76,-77,-78,-92,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-79,30,-34,170,-105,-106,202,-101,-103,-80,-89,-79,-104,-14,-102,]),'OPERATOR':([8,11,12,13,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,126,150,151,152,164,165,166,190,193,194,195,196,197,198,200,204,205,207,209,212,227,228,231,233,234,250,254,255,256,],[31,-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,31,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,31,-52,-100,-51,31,-3,-76,-77,-78,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-79,31,-34,-105,-106,-101,-103,-80,-79,-104,-14,-102,]),'ARROW':([8,11,12,13,22,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,110,114,117,126,131,132,133,134,135,138,139,150,151,152,159,160,163,164,165,166,168,182,190,193,194,195,196,197,198,200,204,205,207,209,211,212,222,227,228,231,233,234,235,240,243,244,250,251,252,253,254,255,256,257,],[32,-46,-47,-48,-97,-79,-81,-82,-83,-84,-85,-86,-87,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,32,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,32,-52,-95,-91,-90,-100,181,-115,-116,-123,-124,-121,-122,-51,32,-3,210,-79,-88,-76,-77,-78,-92,-117,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-79,32,-93,-34,-79,-105,-106,-101,-103,-80,-89,181,-119,-120,-79,-79,-125,-126,-104,-14,-102,-118,]),'PLUS':([8,11,12,13,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,126,150,151,152,164,165,166,190,193,194,195,196,197,198,200,204,205,207,209,212,227,228,231,233,234,250,254,255,256,],[33,-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,-11,33,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,33,-52,-100,-51,33,-3,-76,-77,-78,-12,-10,33,-6,-4,-2,-1,-49,-33,-53,-79,33,-34,-105,-106,-101,-103,-80,-79,-104,-14,-102,]),'MINUS':([8,11,12,13,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,126,150,151,152,164,165,166,190,193,194,195,196,197,198,200,204,205,207,209,212,227,228,231,233,234,250,254,255,256,],[34,-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,-11,34,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,34,-52,-100,-51,34,-3,-76,-77,-78,-12,-10,34,-6,-4,-2,-1,-49,-33,-53,-79,34,-34,-105,-106,-101,-103,-80,-79,-104,-14,-102,]),'STAR':([8,11,12,13,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,126,150,151,152,164,165,166,190,193,194,195,196,197,198,200,204,205,207,209,212,227,228,231,233,234,250,254,255,256,],[35,-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,-11,-9,35,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,35,-52,-100,-51,35,-3,-76,-77,-78,-12,-10,-8,35,-4,-2,-1,-49,-33,-53,-79,35,-34,-105,-106,-101,-103,-80,-79,-104,-14,-102,]),'SLASH':([8,11,12,13,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,126,150,151,152,164,165,166,190,193,194,195,196,197,198,200,204,205,207,209,212,227,228,231,233,234,250,254,255,256,],[36,-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,-11,-9,36,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,36,-52,-100,-51,36,-3,-76,-77,-78,-12,-10,-8,36,-4,-2,-1,-49,-33,-53,-79,36,-34,-105,-106,-101,-103,-80,-79,-104,-14,-102,]),'DOUBLESLASH':([8,11,12,13,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,126,150,151,152,164,165,166,190,193,194,195,196,197,198,200,204,205,207,209,212,227,228,231,233,234,250,254,255,256,],[37,-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,-11,-9,37,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,37,-52,-100,-51,37,-3,-76,-77,-78,-12,-10,-8,37,-4,-2,-1,-49,-33,-53,-79,37,-34,-105,-106,-101,-103,-80,-79,-104,-14,-102,]),'PERCENT':([8,11,12,13,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,126,150,151,152,164,165,166,190,193,194,195,196,197,198,200,204,205,207,209,212,227,228,231,233,234,250,254,255,256,],[38,-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,-11,-9,38,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,38,-52,-100,-51,38,-3,-76,-77,-78,-12,-10,-8,38,-4,-2,-1,-49,-33,-53,-79,38,-34,-105,-106,-101,-103,-80,-79,-104,-14,-102,]),'DOT_OPERATOR':([8,11,12,13,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,126,150,151,152,164,165,166,188,190,193,194,195,196,197,198,200,204,205,207,209,212,227,228,231,233,234,250,254,255,256,],[39,-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,-11,-9,-7,-5,39,-16,-17,-18,-19,-20,-21,-22,-23,39,-52,-100,-51,39,39,-76,-77,-78,226,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,-79,39,-34,-105,-106,-101,-103,-80,-79,-104,-14,-102,]),'RPAREN':([11,12,13,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,110,113,114,115,116,117,122,126,130,131,132,133,134,135,138,139,150,152,154,155,156,157,160,163,164,165,166,168,169,171,182,185,190,193,194,195,196,197,198,199,200,201,203,204,205,207,211,212,213,214,218,222,223,227,228,229,231,233,234,235,236,240,241,243,244,245,248,250,251,252,253,254,255,256,257,],[-46,-47,-48,-97,76,-61,-65,-66,-67,-68,-69,-70,-62,-63,-59,-60,-55,-56,-57,-58,-54,-79,-81,-82,-83,-84,-85,-86,-87,-45,-25,-26,-27,-28,-29,-30,-31,-32,114,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-79,-52,-95,-45,-91,168,-79,-90,-127,-100,-107,-108,-115,-116,-123,-124,-121,-122,-51,-50,200,204,205,-37,-79,-88,-76,-77,-78,-92,-94,-98,-117,-128,-12,-10,-8,-6,-4,-2,-1,200,-49,-35,-38,-33,-53,-79,-93,-34,235,-79,238,-79,-79,-105,-106,-79,-101,-103,-80,-89,-96,-114,-113,-119,-120,252,-36,-79,-79,-125,-126,-104,-14,-102,-118,]),'KEYWORD_WHERE':([11,12,13,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,126,150,152,153,154,162,164,165,166,189,190,193,194,195,196,197,198,199,200,204,205,207,212,227,228,229,231,233,234,250,254,255,256,],[-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,142,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,142,-51,-3,142,142,142,-76,-77,-78,142,-12,-10,-8,-6,-4,-2,-1,142,-49,-33,-53,-79,-34,-105,-106,142,-101,-103,142,-79,-104,142,-102,]),'TICK_OPERATOR':([11,12,13,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,126,150,152,153,154,162,164,165,166,189,190,193,194,195,196,197,198,199,200,204,205,207,212,227,228,229,231,233,234,250,254,255,256,],[-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,143,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,143,-51,-3,143,143,143,-76,-77,-78,143,-12,-10,-8,-6,-4,-2,-1,143,-49,-33,-53,-79,-34,-105,-106,143,-101,-103,143,-79,-104,143,-102,]),'PADDING':([11,12,13,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,78,79,80,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,123,125,126,130,131,132,133,134,135,136,137,138,139,142,150,152,164,165,166,174,175,176,177,181,182,190,193,194,195,196,197,198,200,204,205,207,212,216,217,222,223,224,227,228,231,233,234,238,239,240,241,243,244,250,251,252,253,254,255,256,257,],[-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,122,-146,-79,-99,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,-147,-149,-100,-107,-108,-115,-116,-123,-124,122,122,-121,-122,192,-51,-50,-76,-77,-78,-79,-150,-151,-152,122,-117,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,232,-34,122,-148,-79,122,122,-105,-106,-101,-103,-80,-153,-154,-114,-113,-119,-120,232,-79,-125,-126,-104,-14,-102,-118,]),'KEYWORD_IN':([11,12,13,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,126,150,152,164,165,166,190,193,194,195,196,197,198,200,204,205,206,207,212,227,228,231,233,234,250,254,255,256,],[-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,-100,-51,-50,-76,-77,-78,-12,-10,-8,-6,-4,-2,-1,-49,-33,-53,230,-79,-34,-105,-106,-101,-103,-80,-79,-104,-14,-102,]),'RBRACKET':([11,12,13,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,109,122,126,130,131,132,133,134,135,138,139,150,152,157,161,162,164,165,166,182,185,190,193,194,195,196,197,198,200,201,203,204,205,207,212,219,222,224,227,228,229,231,233,234,240,241,243,244,246,248,250,251,252,253,254,255,256,257,],[-46,-47,-48,-45,-25,-26,-27,-28,-29,-30,-31,-32,117,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-52,-79,-127,-100,-107,-108,-115,-116,-123,-124,-121,-122,-51,-50,-37,212,-79,-76,-77,-78,-117,-128,-12,-10,-8,-6,-4,-2,-1,-49,-35,-38,-33,-53,-79,-34,239,-79,-79,-105,-106,-79,-101,-103,-80,-114,-113,-119,-120,253,-36,-79,-79,-125,-126,-104,-14,-102,-118,]),'LBRACKET':([21,24,31,32,33,34,35,36,37,38,39,44,45,63,81,86,87,99,105,106,108,109,111,122,124,136,137,141,143,144,145,146,147,148,149,151,167,170,172,178,179,181,183,184,185,186,187,200,202,205,210,221,226,242,247,249,],[64,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,-79,109,64,109,137,-109,109,109,-52,64,109,64,-127,179,-79,-79,109,-64,109,109,109,109,109,109,109,64,64,-79,-79,-79,-79,137,-79,-128,-79,-110,-49,109,-53,109,137,-112,137,-111,109,]),'BASE10_INTEGER':([21,24,31,32,33,34,35,36,37,38,39,45,63,81,99,105,106,108,109,111,141,143,144,145,146,147,148,149,151,167,170,200,202,205,210,249,],[65,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,65,65,65,65,65,-52,65,65,65,65,-64,65,65,65,65,65,65,65,65,65,-49,65,-53,65,65,]),'BASE16_INTEGER':([21,24,31,32,33,34,35,36,37,38,39,45,63,81,99,105,106,108,109,111,141,143,144,145,146,147,148,149,151,167,170,200,202,205,210,249,],[66,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,66,66,66,66,66,-52,66,66,66,66,-64,66,66,66,66,66,66,66,66,66,-49,66,-53,66,66,]),'BASE8_INTEGER':([21,24,31,32,33,34,35,36,37,38,39,45,63,81,99,105,106,108,109,111,141,143,144,145,146,147,148,149,151,167,170,200,202,205,210,249,],[67,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,67,67,67,67,67,-52,67,67,67,67,-64,67,67,67,67,67,67,67,67,67,-49,67,-53,67,67,]),'BASE2_INTEGER':([21,24,31,32,33,34,35,36,37,38,39,45,63,81,99,105,106,108,109,111,141,143,144,145,146,147,148,149,151,167,170,200,202,205,210,249,],[68,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,68,68,68,68,68,-52,68,68,68,68,-64,68,68,68,68,68,68,68,68,68,-49,68,-53,68,68,]),'FLOAT':([21,24,31,32,33,34,35,36,37,38,39,45,63,81,99,105,106,108,109,111,141,143,144,145,146,147,148,149,151,167,170,200,202,205,210,249,],[69,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,69,69,69,69,69,-52,69,69,69,69,-64,69,69,69,69,69,69,69,69,69,-49,69,-53,69,69,]),'STRING':([21,24,31,32,33,34,35,36,37,38,39,45,63,81,99,105,106,108,109,111,112,141,143,144,145,146,147,148,149,151,167,170,200,202,205,210,249,],[70,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,70,70,70,70,70,-52,70,70,70,70,70,-64,70,70,70,70,70,70,70,70,70,-49,70,-53,70,70,]),'CHAR':([21,24,31,32,33,34,35,36,37,38,39,45,63,81,99,105,106,108,109,111,112,141,143,144,145,146,147,148,149,151,167,170,200,202,205,210,249,],[71,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,71,71,71,71,71,-52,71,71,71,71,71,-64,71,71,71,71,71,71,71,71,71,-49,71,-53,71,71,]),'DATE':([21,24,31,32,33,34,35,36,37,38,39,45,63,81,99,105,106,108,109,111,141,143,144,145,146,147,148,149,151,167,170,200,202,205,210,249,],[72,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,72,72,72,72,72,-52,72,72,72,72,-64,72,72,72,72,72,72,72,72,72,-49,72,-53,72,72,]),'DATETIME':([21,24,31,32,33,34,35,36,37,38,39,45,63,81,99,105,106,108,109,111,141,143,144,145,146,147,148,149,151,167,170,200,202,205,210,249,],[73,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,73,73,73,73,73,-52,73,73,73,73,-64,73,73,73,73,73,73,73,73,73,-49,73,-53,73,73,]),'DATE_INTERVAL':([21,24,31,32,33,34,35,36,37,38,39,45,63,81,99,105,106,108,109,111,141,143,144,145,146,147,148,149,151,167,170,200,202,205,210,249,],[74,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,74,74,74,74,74,-52,74,74,74,74,-64,74,74,74,74,74,74,74,74,74,-49,74,-53,74,74,]),'DATETIME_INTERVAL':([21,24,31,32,33,34,35,36,37,38,39,45,63,81,99,105,106,108,109,111,141,143,144,145,146,147,148,149,151,167,170,200,202,205,210,249,],[75,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,75,75,75,75,75,-52,75,75,75,75,-64,75,75,75,75,75,75,75,75,75,-49,75,-53,75,75,]),'KEYWORD_LET':([24,31,32,33,34,35,36,37,38,39,45,81,99,105,106,109,141,143,144,145,146,147,148,149,151,200,202,205,210,249,],[-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,107,107,107,107,-52,107,107,-64,107,107,107,107,107,107,107,-49,107,-53,107,107,]),'BACKSLASH':([24,31,32,33,34,35,36,37,38,39,45,81,99,105,106,109,141,143,144,145,146,147,148,149,151,200,202,205,210,249,],[-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,108,108,108,108,-52,108,108,-64,108,108,108,108,108,108,108,-49,108,-53,108,108,]),'KEYWORD_FORALL':([44,122,136,137,172,178,179,184,185,186,],[88,-127,-79,-79,88,88,88,88,-128,88,]),'ANNOTATION':([55,65,66,67,68,69,],[112,-71,-72,-73,-74,-75,]),'PIPE':([78,79,80,120,121,122,123,125,138,139,174,175,176,177,216,217,238,239,],[-79,-146,-79,173,-128,-127,-147,-149,-121,-122,-79,-150,-151,-152,-79,-148,-153,-154,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'definitions':([0,],[2,]),'definition':([0,17,],[3,43,]),'nametype_decl':([0,17,],[4,4,]),'valuedef':([0,17,],[5,5,]),'datatype_definition':([0,17,],[6,6,]),'_identifier':([0,17,21,45,63,81,99,105,108,109,111,112,140,141,144,145,146,147,148,149,151,158,167,170,191,192,202,210,225,232,249,],[7,7,54,54,113,54,54,54,54,54,54,54,188,54,54,54,54,54,54,54,54,208,54,54,208,208,54,54,188,208,54,]),'equation':([0,17,158,191,192,232,],[9,9,207,207,207,250,]),'_datatype_lhs':([0,17,],[10,10,]),'_enclosed_operator':([0,17,45,81,96,99,105,109,141,144,145,146,147,148,149,151,152,158,191,192,198,202,210,232,249,],[14,14,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,14,14,14,106,106,106,14,106,]),'_definition_set':([3,43,],[16,83,]),'empty':([3,7,14,43,44,46,78,80,82,105,109,116,136,137,154,160,162,172,174,178,179,180,181,184,186,207,208,214,216,222,223,224,229,250,251,],[18,22,22,18,87,22,121,125,129,157,157,171,185,185,203,22,203,87,125,87,87,129,185,87,87,233,22,171,121,244,185,185,203,233,244,]),'_patterns':([7,14,46,160,208,],[20,41,110,211,20,]),'_st_operator':([8,105,151,209,],[23,156,156,156,]),'infixl_operator_2':([8,92,105,151,209,],[25,145,25,25,25,]),'infixr_operator_2':([8,92,105,151,209,],[26,144,26,26,26,]),'infixl_operator_6':([8,93,105,151,194,209,],[27,146,27,27,146,27,]),'infixl_operator_7':([8,94,105,151,195,209,],[28,147,28,28,147,28,]),'infixr_operator_9':([8,96,105,151,152,198,209,],[29,148,29,29,148,148,29,]),'pattern':([21,63,108,111,167,170,],[46,116,160,163,160,214,]),'identifier':([21,45,63,81,99,105,108,109,111,112,141,144,145,146,147,148,149,151,167,170,202,210,249,],[47,98,47,98,98,98,47,98,47,166,98,98,98,98,98,98,98,98,47,47,98,98,98,]),'literal':([21,45,63,81,99,105,108,109,111,141,144,145,146,147,148,149,151,167,170,202,210,249,],[48,97,48,97,97,97,48,97,48,97,97,97,97,97,97,97,97,48,48,97,97,97,]),'cons_pattern':([21,63,108,111,167,170,],[49,49,49,49,49,49,]),'list_cons_pattern':([21,63,108,111,167,170,],[50,50,50,50,50,50,]),'tuple_cons_pattern':([21,63,108,111,167,170,],[51,51,51,51,51,51,]),'empty_list_pattern':([21,63,108,111,167,170,],[52,52,52,52,52,52,]),'empty_tuple_pattern':([21,63,108,111,167,170,],[53,53,53,53,53,53,]),'number':([21,45,63,81,99,105,108,109,111,141,144,145,146,147,148,149,151,167,170,202,210,249,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'concrete_number':([21,45,63,81,99,105,108,109,111,141,144,145,146,147,148,149,151,167,170,202,210,249,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'string':([21,45,63,81,99,105,108,109,111,112,141,144,145,146,147,148,149,151,167,170,202,210,249,],[57,57,57,57,57,57,57,57,57,164,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'char':([21,45,63,81,99,105,108,109,111,112,141,144,145,146,147,148,149,151,167,170,202,210,249,],[58,58,58,58,58,58,58,58,58,165,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'date':([21,45,63,81,99,105,108,109,111,141,144,145,146,147,148,149,151,167,170,202,210,249,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'datetime':([21,45,63,81,99,105,108,109,111,141,144,145,146,147,148,149,151,167,170,202,210,249,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'date_interval':([21,45,63,81,99,105,108,109,111,141,144,145,146,147,148,149,151,167,170,202,210,249,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'datetime_interval':([21,45,63,81,99,105,108,109,111,141,144,145,146,147,148,149,151,167,170,202,210,249,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'_data_rhs':([40,],[77,]),'data_cons':([40,173,],[78,216,]),'_data_cons':([40,173,],[79,79,]),'st_type_expr':([44,172,],[84,215,]),'type_expr':([44,172,178,179,184,186,],[85,85,218,219,223,224,]),'type_scheme':([44,172,178,179,184,186,],[86,86,86,86,86,86,]),'expr':([45,81,99,105,109,141,144,145,146,147,148,149,151,202,210,249,],[89,126,153,154,162,189,153,153,153,153,153,153,199,229,234,255,]),'expr_term0':([45,81,99,105,109,141,144,145,146,147,148,149,151,202,210,249,],[90,90,90,90,90,190,90,90,90,90,90,90,90,90,90,90,]),'expr_term1':([45,81,99,105,109,141,144,145,146,147,148,149,151,202,210,249,],[91,91,91,91,91,91,193,91,91,91,91,91,91,91,91,91,]),'expr_term2':([45,81,99,105,109,141,144,145,146,147,148,149,151,202,210,249,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'expr_term6':([45,81,99,105,109,141,144,145,146,147,148,149,151,202,210,249,],[93,93,93,93,93,93,93,194,93,93,93,93,93,93,93,93,]),'expr_term7':([45,81,99,105,109,141,144,145,146,147,148,149,151,202,210,249,],[94,94,94,94,94,94,94,94,195,94,94,94,94,94,94,94,]),'expr_term9':([45,81,99,105,109,141,144,145,146,147,148,149,151,202,210,249,],[95,95,95,95,95,95,95,95,95,196,197,95,95,95,95,95,]),'expr_factor':([45,81,99,105,109,141,144,145,146,147,148,149,151,202,210,249,],[96,96,152,96,96,96,96,96,96,96,96,198,96,96,96,96,]),'enclosed_expr':([45,81,96,99,105,109,141,144,145,146,147,148,149,151,152,198,202,210,249,],[99,99,150,99,99,99,99,99,99,99,99,99,99,99,150,150,99,99,99,]),'letexpr':([45,81,99,105,109,141,144,145,146,147,148,149,151,202,210,249,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'where_expr':([45,81,99,105,109,141,144,145,146,147,148,149,151,202,210,249,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'lambda_expr':([45,81,99,105,109,141,144,145,146,147,148,149,151,202,210,249,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'simple_list_expr':([45,81,99,105,109,141,144,145,146,147,148,149,151,202,210,249,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'simple_tuple_expr':([45,81,99,105,109,141,144,145,146,147,148,149,151,202,210,249,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'patterns_comma_sep':([63,],[115,]),'_data_conses':([78,216,],[119,237,]),'_maybe_padding':([78,136,137,181,216,223,224,],[120,184,186,221,120,245,246,]),'_cons_args':([80,174,],[123,217,]),'_cons_params':([82,180,],[128,220,]),'type_function_expr':([86,221,],[130,241,]),'type_term':([86,221,],[131,240,]),'type_app_expression':([86,221,],[132,132,]),'type_factor':([86,183,221,242,],[133,222,133,251,]),'type_variable':([86,124,183,221,242,],[134,175,134,134,134,]),'type_cons':([86,124,183,221,242,],[135,176,135,135,135,]),'infixl_operator_0':([89,126,153,154,162,189,199,229,234,255,],[141,141,141,141,141,141,141,141,141,141,]),'_list_items':([105,109,],[155,161,]),'patterns':([108,167,],[159,213,]),'_patterns_comma':([116,214,],[169,236,]),'cons_arg':([124,],[174,]),'_cons_arg_factor':([124,],[177,]),'_app_args_non_empty':([133,],[182,]),'_type_scheme_generics':([140,225,],[187,247,]),'_list_items_cont':([154,162,229,],[201,201,248,]),'equations':([158,191,192,],[206,227,228,]),'_equation_set':([207,250,],[231,256,]),'_app_args':([222,251,],[243,257,]),'st_expr':([249,],[254,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','__init__.py',433),
  ('expr_term9 -> expr_factor infixr_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','__init__.py',440),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','__init__.py',441),
  ('expr_term7 -> expr_term7 infixl_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','__init__.py',443),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','__init__.py',444),
  ('expr_term6 -> expr_term6 infixl_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','__init__.py',446),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','__init__.py',447),
  ('expr_term2 -> expr_term2 infixl_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','__init__.py',449),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','__init__.py',450),
  ('expr_term1 -> expr_term2 infixr_operator_2 expr_term1','expr_term1',3,'p_expressions_precedence_rules','__init__.py',452),
  ('expr_term1 -> expr_term2','expr_term1',1,'p_expressions_precedence_rules','__init__.py',453),
  ('expr_term0 -> expr infixl_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','__init__.py',455),
  ('expr_term0 -> expr_term1','expr_term0',1,'p_expressions_precedence_rules','__init__.py',456),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','__init__.py',469),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','__init__.py',471),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','__init__.py',473),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','__init__.py',474),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','__init__.py',475),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','__init__.py',476),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','__init__.py',477),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','__init__.py',478),
  ('expr_factor -> simple_list_expr','expr_factor',1,'p_standalone_definitions','__init__.py',479),
  ('expr_factor -> simple_tuple_expr','expr_factor',1,'p_standalone_definitions','__init__.py',480),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','__init__.py',482),
  ('literal -> number','literal',1,'p_literals','__init__.py',490),
  ('literal -> concrete_number','literal',1,'p_literals','__init__.py',491),
  ('literal -> string','literal',1,'p_literals','__init__.py',492),
  ('literal -> char','literal',1,'p_literals','__init__.py',493),
  ('literal -> date','literal',1,'p_literals','__init__.py',494),
  ('literal -> datetime','literal',1,'p_literals','__init__.py',495),
  ('literal -> date_interval','literal',1,'p_literals','__init__.py',496),
  ('literal -> datetime_interval','literal',1,'p_literals','__init__.py',497),
  ('simple_tuple_expr -> LPAREN _list_items RPAREN','simple_tuple_expr',3,'p_tuple_expr','__init__.py',503),
  ('simple_list_expr -> LBRACKET _list_items RBRACKET','simple_list_expr',3,'p_list_expr','__init__.py',518),
  ('_list_items -> expr _list_items_cont','_list_items',2,'p_list_items','__init__.py',528),
  ('_list_items_cont -> COMMA expr _list_items_cont','_list_items_cont',3,'p_list_items','__init__.py',529),
  ('_list_items -> empty','_list_items',1,'p_list_items_empty','__init__.py',538),
  ('_list_items_cont -> empty','_list_items_cont',1,'p_list_items_empty','__init__.py',539),
  ('date -> DATE','date',1,'p_date','__init__.py',545),
  ('datetime -> DATETIME','datetime',1,'p_datetime','__init__.py',551),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','__init__.py',557),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','__init__.py',563),
  ('char -> CHAR','char',1,'p_char','__init__.py',569),
  ('string -> STRING','string',1,'p_string','__init__.py',574),
  ('identifier -> _identifier','identifier',1,'p_variable','__init__.py',579),
  ('_identifier -> UNDER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',586),
  ('_identifier -> UPPER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',587),
  ('_identifier -> LOWER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',588),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','__init__.py',595),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','__init__.py',600),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','__init__.py',601),
  ('enclosed_expr -> _enclosed_operator','enclosed_expr',1,'p_operators_as_expressios','__init__.py',607),
  ('_enclosed_operator -> LPAREN _st_operator RPAREN','_enclosed_operator',3,'p_enclosed_operator','__init__.py',613),
  ('infixr_operator_9 -> DOT_OPERATOR','infixr_operator_9',1,'p_operator','__init__.py',623),
  ('infixl_operator_7 -> STAR','infixl_operator_7',1,'p_operator','__init__.py',625),
  ('infixl_operator_7 -> SLASH','infixl_operator_7',1,'p_operator','__init__.py',626),
  ('infixl_operator_7 -> DOUBLESLASH','infixl_operator_7',1,'p_operator','__init__.py',627),
  ('infixl_operator_7 -> PERCENT','infixl_operator_7',1,'p_operator','__init__.py',628),
  ('infixl_operator_6 -> PLUS','infixl_operator_6',1,'p_operator','__init__.py',630),
  ('infixl_operator_6 -> MINUS','infixl_operator_6',1,'p_operator','__init__.py',631),
  ('infixr_operator_2 -> COLON','infixr_operator_2',1,'p_operator','__init__.py',633),
  ('infixl_operator_2 -> OPERATOR','infixl_operator_2',1,'p_operator','__init__.py',635),
  ('infixl_operator_2 -> ARROW','infixl_operator_2',1,'p_operator','__init__.py',636),
  ('infixl_operator_0 -> TICK_OPERATOR','infixl_operator_0',1,'p_operator','__init__.py',638),
  ('_st_operator -> infixl_operator_2','_st_operator',1,'p_operator','__init__.py',640),
  ('_st_operator -> infixr_operator_2','_st_operator',1,'p_operator','__init__.py',641),
  ('_st_operator -> infixl_operator_6','_st_operator',1,'p_operator','__init__.py',642),
  ('_st_operator -> infixl_operator_7','_st_operator',1,'p_operator','__init__.py',643),
  ('_st_operator -> infixr_operator_9','_st_operator',1,'p_operator','__init__.py',644),
  ('_st_operator -> COMMA','_st_operator',1,'p_operator','__init__.py',645),
  ('number -> BASE10_INTEGER','number',1,'p_integer','__init__.py',652),
  ('number -> BASE16_INTEGER','number',1,'p_integer','__init__.py',653),
  ('number -> BASE8_INTEGER','number',1,'p_integer','__init__.py',654),
  ('number -> BASE2_INTEGER','number',1,'p_integer','__init__.py',655),
  ('number -> FLOAT','number',1,'p_float','__init__.py',684),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','__init__.py',689),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','__init__.py',690),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','__init__.py',691),
  ('empty -> <empty>','empty',0,'p_empty','__init__.py',700),
  ('lambda_expr -> BACKSLASH patterns ARROW expr','lambda_expr',4,'p_lambda_definition','__init__.py',705),
  ('pattern -> identifier','pattern',1,'p_pattern','__init__.py',714),
  ('pattern -> literal','pattern',1,'p_pattern','__init__.py',715),
  ('pattern -> cons_pattern','pattern',1,'p_pattern','__init__.py',716),
  ('pattern -> list_cons_pattern','pattern',1,'p_pattern','__init__.py',717),
  ('pattern -> tuple_cons_pattern','pattern',1,'p_pattern','__init__.py',718),
  ('pattern -> empty_list_pattern','pattern',1,'p_pattern','__init__.py',719),
  ('pattern -> empty_tuple_pattern','pattern',1,'p_pattern','__init__.py',720),
  ('list_cons_pattern -> pattern COLON pattern','list_cons_pattern',3,'p_list_cons_for_param','__init__.py',726),
  ('cons_pattern -> LPAREN _identifier SPACE patterns RPAREN','cons_pattern',5,'p_param_pattern','__init__.py',732),
  ('empty_list_pattern -> LBRACKET RBRACKET','empty_list_pattern',2,'p_empty_list_as_pattern','__init__.py',737),
  ('empty_tuple_pattern -> LPAREN RPAREN','empty_tuple_pattern',2,'p_unit_value_as_pattern','__init__.py',743),
  ('tuple_cons_pattern -> LPAREN patterns_comma_sep RPAREN','tuple_cons_pattern',3,'p_tuple_cons_pattern','__init__.py',749),
  ('patterns -> pattern _patterns','patterns',2,'p_patterns','__init__.py',757),
  ('patterns_comma_sep -> pattern _patterns_comma','patterns_comma_sep',2,'p_patterns','__init__.py',758),
  ('_patterns -> SPACE pattern _patterns','_patterns',3,'p_patterns','__init__.py',759),
  ('_patterns_comma -> COMMA pattern _patterns_comma','_patterns_comma',3,'p_patterns','__init__.py',760),
  ('_patterns -> empty','_patterns',1,'p_patterns_empty','__init__.py',770),
  ('_patterns_comma -> empty','_patterns_comma',1,'p_patterns_empty','__init__.py',771),
  ('equation -> _identifier _patterns EQ expr','equation',4,'p_equation','__init__.py',777),
  ('equation -> _enclosed_operator _patterns EQ expr','equation',4,'p_equation','__init__.py',778),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','__init__.py',788),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','__init__.py',797),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','__init__.py',806),
  ('letexpr -> KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','__init__.py',816),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','__init__.py',824),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','__init__.py',825),
  ('type_expr -> type_scheme type_function_expr','type_expr',2,'p_type_expr','__init__.py',835),
  ('type_expr -> type_scheme type_term','type_expr',2,'p_type_expr','__init__.py',836),
  ('type_scheme -> empty','type_scheme',1,'p_type_scheme_empty','__init__.py',845),
  ('type_scheme -> KEYWORD_FORALL SPACE _type_scheme_generics','type_scheme',3,'p_type_scheme','__init__.py',849),
  ('_type_scheme_generics -> _identifier SPACE _type_scheme_generics','_type_scheme_generics',3,'p_type_scheme_generics','__init__.py',856),
  ('_type_scheme_generics -> _identifier DOT_OPERATOR','_type_scheme_generics',2,'p_last_type_scheme_generic','__init__.py',863),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','__init__.py',868),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','__init__.py',869),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','__init__.py',879),
  ('type_term -> type_factor','type_term',1,'p_type_term','__init__.py',880),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','__init__.py',885),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','__init__.py',897),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','__init__.py',898),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','__init__.py',906),
  ('type_variable -> LOWER_IDENTIFIER','type_variable',1,'p_type_variable','__init__.py',911),
  ('type_cons -> UPPER_IDENTIFIER','type_cons',1,'p_type_cons','__init__.py',916),
  ('type_factor -> type_variable','type_factor',1,'p_type_factor_identifier','__init__.py',921),
  ('type_factor -> type_cons','type_factor',1,'p_type_factor_identifier','__init__.py',922),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','__init__.py',929),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','__init__.py',934),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','__init__.py',939),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','__init__.py',940),
  ('program -> definitions','program',1,'p_program','__init__.py',946),
  ('definitions -> definition _definition_set','definitions',2,'p_definitions','__init__.py',962),
  ('_definition_set -> NEWLINE definition _definition_set','_definition_set',3,'p_definition_set','__init__.py',970),
  ('_definition_set -> empty','_definition_set',1,'p_definition_set2','__init__.py',978),
  ('definition -> nametype_decl','definition',1,'p_definition','__init__.py',984),
  ('definition -> valuedef','definition',1,'p_definition','__init__.py',985),
  ('definition -> datatype_definition','definition',1,'p_definition','__init__.py',986),
  ('valuedef -> equation','valuedef',1,'p_valuedef','__init__.py',992),
  ('nametype_decl -> _identifier COLON COLON st_type_expr','nametype_decl',4,'p_nametype_decl','__init__.py',998),
  ('nametype_decl -> LPAREN _st_operator RPAREN COLON COLON st_type_expr','nametype_decl',6,'p_nametype_decl_operators','__init__.py',1007),
  ('datatype_definition -> _datatype_lhs EQ _data_rhs','datatype_definition',3,'p_datatype_definition','__init__.py',1016),
  ('_datatype_lhs -> KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params','_datatype_lhs',4,'p_datatype_lhs','__init__.py',1024),
  ('_cons_params -> SPACE LOWER_IDENTIFIER _cons_params','_cons_params',3,'p_datatype_cons_params','__init__.py',1033),
  ('_cons_params -> empty','_cons_params',1,'p_datatype_cons_params_empty','__init__.py',1042),
  ('_data_rhs -> data_cons _data_conses','_data_rhs',2,'p_datatype_body','__init__.py',1048),
  ('_data_conses -> _maybe_padding PIPE data_cons _data_conses','_data_conses',4,'p_datatype_body','__init__.py',1049),
  ('_data_conses -> empty','_data_conses',1,'p_datatype_conses_empty','__init__.py',1058),
  ('data_cons -> _data_cons','data_cons',1,'p_data_cons','__init__.py',1063),
  ('_data_cons -> UPPER_IDENTIFIER _cons_args','_data_cons',2,'p_bare_data_cons','__init__.py',1069),
  ('_cons_args -> SPACE cons_arg _cons_args','_cons_args',3,'p_data_cons_args','__init__.py',1074),
  ('_cons_args -> empty','_cons_args',1,'p_data_cons_args_empty','__init__.py',1083),
  ('cons_arg -> type_variable','cons_arg',1,'p_cons_arg','__init__.py',1089),
  ('cons_arg -> type_cons','cons_arg',1,'p_cons_arg','__init__.py',1090),
  ('cons_arg -> _cons_arg_factor','cons_arg',1,'p_cons_arg','__init__.py',1091),
  ('_cons_arg_factor -> LPAREN type_expr RPAREN','_cons_arg_factor',3,'p_cons_arg_factor','__init__.py',1097),
  ('_cons_arg_factor -> LBRACKET type_expr RBRACKET','_cons_arg_factor',3,'p_cons_arg_factor_list','__init__.py',1103),
]
