
# program_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON COMMA DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FLOAT KEYWORD_CLASS KEYWORD_DATA KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LOWER_IDENTIFIER LPAREN MINUS NEWLINE OPERATOR PADDING PERCENT PIPE PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATOR UNDER_IDENTIFIER UPPER_IDENTIFIERexpr_factor : expr_factor SPACE expr_factor\n    expr_term9 : expr_factor infixr_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infixl_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infixl_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infixl_operator_2 expr_term6\n               | expr_term6\n\n    expr_term1 : expr_term2 infixr_operator_2 expr_term1\n               | expr_term2\n\n    expr_term0 : expr infixl_operator_0 expr_term0\n               | expr_term1\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | letexpr\n                | where_expr\n                | lambda_expr\n                | simple_list_expr\n                | simple_tuple_expr\n\n    st_type_expr : type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    simple_tuple_expr : LPAREN _list_items RPAREN\n    simple_list_expr : LBRACKET _list_items RBRACKET\n    _list_items : expr _list_items_cont\n       _list_items_cont : COMMA expr _list_items_cont\n    _list_items : empty\n       _list_items_cont : empty\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    char : CHARstring : STRINGidentifier : _identifier\n\n    _identifier : UNDER_IDENTIFIER\n                   | UPPER_IDENTIFIER\n                   | LOWER_IDENTIFIER\n\n    enclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : _enclosed_operator\n    _enclosed_operator : LPAREN _st_operator RPAREN\n    infixr_operator_9 : DOT_OPERATOR\n\n    infixl_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infixl_operator_6 : PLUS\n                     | MINUS\n\n    infixr_operator_2 : COLON\n\n    infixl_operator_2 : OPERATOR\n                      | ARROW\n\n    infixl_operator_0 : TICK_OPERATOR\n\n    _st_operator : infixl_operator_2\n                 | infixr_operator_2\n                 | infixl_operator_6\n                 | infixl_operator_7\n                 | infixr_operator_9\n                 | COMMA\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH parameters ARROW expr\n    parameters : _param _parameters\n       _parameters : SPACE _param _parameters\n    _parameters : empty\n    _param : _non_empty_list_cons\n    _non_empty_list_cons : _param COLON _param\n    _param : _identifier_param : _enclosed_operator_param : LPAREN pattern RPAREN_param : LBRACKET RBRACKET_param : LPAREN RPARENpattern : parametersequation : pattern EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    type_expr : type_function_expr\n                 | type_termtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_variable : LOWER_IDENTIFIERtype_cons : UPPER_IDENTIFIERtype_factor : type_variable\n                   | type_cons\n\n    type_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET_maybe_padding : PADDING\n                      | empty\n    program : definitions\n    definitions : definition _definition_set\n    _definition_set : NEWLINE definition _definition_set\n    _definition_set : empty\n    definition : nametype_decl\n                  | valuedef\n                  | datatype_definition\n    valuedef : equation\n    nametype_decl : _identifier COLON COLON st_type_expr\n    nametype_decl : LPAREN _st_operator RPAREN COLON COLON st_type_expr\n    datatype_definition : _datatype_lhs EQ _data_rhs\n    _datatype_lhs : KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params\n    _cons_params : SPACE LOWER_IDENTIFIER _cons_params\n    _cons_params : empty\n    _data_rhs : data_cons _data_conses\n       _data_conses : _maybe_padding PIPE data_cons _data_conses\n    _data_conses : emptydata_cons : _data_cons_data_cons : UPPER_IDENTIFIER _cons_args_cons_args : SPACE cons_arg _cons_args\n    _cons_args : empty\n    cons_arg : type_variable\n       cons_arg : type_cons\n       cons_arg : _cons_arg_factor\n    _cons_arg_factor : LPAREN type_expr RPAREN\n    _cons_arg_factor : LBRACKET type_expr RBRACKET\n    '
    
_lr_action_items = {'LPAREN':([0,8,11,12,13,22,25,28,36,37,38,39,40,41,42,43,44,47,50,51,55,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,116,117,120,125,127,129,131,132,133,134,135,136,137,138,139,140,146,154,156,157,158,159,160,166,167,169,170,171,172,173,174,175,176,177,179,180,181,182,184,186,188,189,190,192,201,202,205,206,207,208,212,221,222,226,227,228,],[8,25,-46,-47,-48,8,25,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,88,25,25,116,-92,-15,-13,-11,-9,-7,-5,139,-16,-17,88,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,88,-52,25,88,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-79,-79,-53,-115,166,88,-64,88,88,88,88,88,88,-51,88,139,25,-79,116,116,-116,116,116,116,116,-12,25,25,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,88,-33,-79,88,-34,116,-97,-98,-93,25,-95,-80,116,88,-79,-96,-14,-94,]),'UNDER_IDENTIFIER':([0,8,22,25,28,36,37,38,39,40,41,42,43,44,47,50,51,73,88,89,91,92,120,129,131,132,133,134,135,136,137,139,142,146,170,171,182,184,189,206,221,],[11,11,11,11,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,11,11,11,11,11,-52,11,11,-53,11,-64,11,11,11,11,11,11,11,11,11,11,11,-49,11,11,11,11,]),'UPPER_IDENTIFIER':([0,8,22,25,28,36,37,38,39,40,41,42,43,44,46,47,48,50,51,55,73,88,89,91,92,116,117,120,125,127,129,131,132,133,134,135,136,137,139,142,146,154,156,157,158,159,160,161,166,167,170,171,182,184,189,192,206,212,221,],[12,12,12,12,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,62,12,104,12,12,119,12,12,-52,12,12,-79,-79,-53,-115,119,12,-64,12,12,12,12,12,12,12,12,12,-79,119,119,-116,119,119,62,119,119,12,12,-49,12,12,119,12,119,12,]),'LOWER_IDENTIFIER':([0,8,22,25,28,36,37,38,39,40,41,42,43,44,47,50,51,55,73,88,89,91,92,116,117,120,125,127,129,131,132,133,134,135,136,137,139,142,146,150,154,156,157,158,159,160,166,167,170,171,182,184,189,192,206,212,221,],[13,13,13,13,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,13,13,13,118,13,13,-52,13,13,-79,-79,-53,-115,118,13,-64,13,13,13,13,13,13,13,13,13,191,-79,118,118,-116,118,118,118,118,13,13,-49,13,13,118,13,118,13,]),'KEYWORD_DATA':([0,22,],[15,15,]),'LBRACKET':([0,8,22,25,28,36,37,38,39,40,41,42,43,44,47,50,51,55,73,88,89,91,92,116,117,120,125,127,129,131,132,133,134,135,136,137,139,146,154,156,157,158,159,160,166,167,170,171,182,184,189,192,206,212,221,],[20,20,20,20,-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,92,20,20,117,92,92,-52,20,92,-79,-79,-53,-115,167,92,-64,92,92,92,92,92,92,92,20,-79,117,117,-116,117,117,117,117,20,20,-49,92,92,117,20,117,92,]),'$end':([1,2,3,4,5,6,9,11,12,13,21,23,54,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,93,94,95,96,97,98,99,100,101,102,103,107,108,109,110,111,112,113,114,115,118,119,120,122,124,126,128,138,140,155,162,163,164,165,169,172,173,174,175,176,177,179,180,181,182,186,188,190,193,196,197,198,201,202,205,207,208,210,211,213,214,217,218,219,222,223,224,225,226,227,228,229,],[0,-117,-79,-121,-122,-123,-124,-46,-47,-48,-118,-120,-79,-127,-79,-134,-79,-92,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-119,-125,-24,-99,-100,-103,-104,-111,-112,-109,-110,-53,-131,-133,-135,-137,-51,-50,-105,-79,-138,-139,-140,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-79,-34,-79,-126,-79,-136,-97,-98,-93,-95,-80,-102,-101,-107,-108,-132,-141,-142,-79,-79,-113,-114,-96,-14,-94,-106,]),'NEWLINE':([3,4,5,6,9,11,12,13,54,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,93,94,95,96,97,98,99,100,101,102,103,108,109,110,111,112,113,114,115,118,119,120,122,124,126,128,138,140,155,162,163,164,165,169,172,173,174,175,176,177,179,180,181,182,186,188,190,193,196,197,198,201,202,205,207,208,210,211,213,214,217,218,219,222,223,224,225,226,227,228,229,],[22,-121,-122,-123,-124,-46,-47,-48,22,-127,-79,-134,-79,-92,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-125,-24,-99,-100,-103,-104,-111,-112,-109,-110,-53,-131,-133,-135,-137,-51,-50,-105,-79,-138,-139,-140,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-79,-34,-79,-126,-79,-136,-97,-98,-93,-95,-80,-102,-101,-107,-108,-132,-141,-142,-79,-79,-113,-114,-96,-14,-94,-106,]),'COLON':([7,8,11,12,13,17,18,19,24,25,27,45,53,57,58,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,97,98,99,100,101,102,103,105,106,120,121,138,139,140,169,172,173,174,175,176,177,179,180,181,182,186,188,190,201,202,205,207,208,222,226,227,228,],[24,28,-46,-47,-48,50,-84,-87,55,28,-90,-86,-89,121,-88,-92,-15,-13,28,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,28,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,50,50,-53,160,-51,28,-3,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-79,-34,-97,-98,-93,-95,-80,-79,-96,-14,-94,]),'SPACE':([7,11,12,13,15,17,18,19,27,45,53,57,58,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,114,115,118,119,120,130,138,140,162,163,164,165,169,172,173,174,175,176,177,179,180,181,182,186,188,190,191,193,201,202,204,205,207,208,218,219,222,223,224,225,226,227,228,],[-86,-46,-47,-48,48,51,-84,-87,-90,-86,-89,-53,-88,127,-92,-15,-13,-11,-9,-7,-5,137,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-52,146,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,150,-85,51,156,-111,-112,-109,-110,-53,170,-51,137,127,-138,-139,-140,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-79,-34,150,212,-97,-98,221,-93,-95,-80,-141,-142,-79,212,-113,-114,-96,-14,-94,]),'EQ':([7,10,11,12,13,14,16,17,18,19,27,45,49,52,53,57,58,104,105,106,120,151,152,153,191,209,],[-86,46,-46,-47,-48,47,-91,-79,-84,-87,-90,-86,-81,-83,-89,-53,-88,-79,-85,-79,-53,-128,-130,-82,-79,-129,]),'RPAREN':([8,11,12,13,16,17,18,19,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,52,53,56,58,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,97,98,99,100,101,102,103,105,106,110,111,112,113,114,115,118,119,120,125,138,140,143,144,145,153,155,158,169,172,173,174,175,176,177,178,179,180,181,182,183,185,186,188,190,193,194,199,201,202,203,205,207,208,210,211,213,214,215,220,222,223,224,225,226,227,228,229,],[27,-46,-47,-48,-91,-79,-84,-87,27,57,-90,-61,58,-65,-66,-67,-68,-69,-70,-62,-63,-59,-60,-55,-56,-57,-58,-54,-86,-81,-83,-89,120,-88,-92,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-79,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-85,-79,-99,-100,-103,-104,-111,-112,-109,-110,-53,-115,-51,-50,182,186,-37,-82,-105,-116,-12,-10,-8,-6,-4,-2,-1,182,-76,-77,-78,-49,-35,-38,-33,-79,-34,-79,-79,218,-97,-98,-79,-93,-95,-80,-102,-101,-107,-108,224,-36,-79,-79,-113,-114,-96,-14,-94,-106,]),'COMMA':([8,11,12,13,25,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,97,98,99,100,101,102,103,120,138,139,140,143,149,169,172,173,174,175,176,177,179,180,181,182,186,188,190,201,202,203,205,207,208,222,226,227,228,],[35,-46,-47,-48,35,-92,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,35,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-53,-51,35,-50,184,184,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-79,-34,-97,-98,184,-93,-95,-80,-79,-96,-14,-94,]),'OPERATOR':([8,11,12,13,25,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,97,98,99,100,101,102,103,120,138,139,140,169,172,173,174,175,176,177,179,180,181,182,186,188,190,201,202,205,207,208,222,226,227,228,],[36,-46,-47,-48,36,-92,-15,-13,36,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,36,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-53,-51,36,-3,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-79,-34,-97,-98,-93,-95,-80,-79,-96,-14,-94,]),'ARROW':([8,11,12,13,17,18,19,25,27,45,49,52,53,58,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,97,98,99,100,101,102,103,105,106,111,112,113,114,115,118,119,120,138,139,140,147,153,155,169,172,173,174,175,176,177,179,180,181,182,186,188,190,193,201,202,205,207,208,210,213,214,222,223,224,225,226,227,228,229,],[37,-46,-47,-48,-79,-84,-87,37,-90,-86,-81,-83,-89,-88,-92,-15,-13,37,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,37,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-85,-79,154,-103,-104,-111,-112,-109,-110,-53,-51,37,-3,189,-82,-105,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-79,-34,-79,-97,-98,-93,-95,-80,154,-107,-108,-79,-79,-113,-114,-96,-14,-94,-106,]),'PLUS':([8,11,12,13,25,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,97,98,99,100,101,102,103,120,138,139,140,169,172,173,174,175,176,177,179,180,181,182,186,188,190,201,202,205,207,208,222,226,227,228,],[38,-46,-47,-48,38,-92,-15,-13,-11,38,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,38,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-53,-51,38,-3,-12,-10,38,-6,-4,-2,-1,-76,-77,-78,-49,-33,-79,-34,-97,-98,-93,-95,-80,-79,-96,-14,-94,]),'MINUS':([8,11,12,13,25,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,97,98,99,100,101,102,103,120,138,139,140,169,172,173,174,175,176,177,179,180,181,182,186,188,190,201,202,205,207,208,222,226,227,228,],[39,-46,-47,-48,39,-92,-15,-13,-11,39,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,39,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-53,-51,39,-3,-12,-10,39,-6,-4,-2,-1,-76,-77,-78,-49,-33,-79,-34,-97,-98,-93,-95,-80,-79,-96,-14,-94,]),'STAR':([8,11,12,13,25,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,97,98,99,100,101,102,103,120,138,139,140,169,172,173,174,175,176,177,179,180,181,182,186,188,190,201,202,205,207,208,222,226,227,228,],[40,-46,-47,-48,40,-92,-15,-13,-11,-9,40,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,40,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-53,-51,40,-3,-12,-10,-8,40,-4,-2,-1,-76,-77,-78,-49,-33,-79,-34,-97,-98,-93,-95,-80,-79,-96,-14,-94,]),'SLASH':([8,11,12,13,25,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,97,98,99,100,101,102,103,120,138,139,140,169,172,173,174,175,176,177,179,180,181,182,186,188,190,201,202,205,207,208,222,226,227,228,],[41,-46,-47,-48,41,-92,-15,-13,-11,-9,41,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,41,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-53,-51,41,-3,-12,-10,-8,41,-4,-2,-1,-76,-77,-78,-49,-33,-79,-34,-97,-98,-93,-95,-80,-79,-96,-14,-94,]),'DOUBLESLASH':([8,11,12,13,25,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,97,98,99,100,101,102,103,120,138,139,140,169,172,173,174,175,176,177,179,180,181,182,186,188,190,201,202,205,207,208,222,226,227,228,],[42,-46,-47,-48,42,-92,-15,-13,-11,-9,42,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,42,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-53,-51,42,-3,-12,-10,-8,42,-4,-2,-1,-76,-77,-78,-49,-33,-79,-34,-97,-98,-93,-95,-80,-79,-96,-14,-94,]),'PERCENT':([8,11,12,13,25,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,97,98,99,100,101,102,103,120,138,139,140,169,172,173,174,175,176,177,179,180,181,182,186,188,190,201,202,205,207,208,222,226,227,228,],[43,-46,-47,-48,43,-92,-15,-13,-11,-9,43,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,43,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-53,-51,43,-3,-12,-10,-8,43,-4,-2,-1,-76,-77,-78,-49,-33,-79,-34,-97,-98,-93,-95,-80,-79,-96,-14,-94,]),'DOT_OPERATOR':([8,11,12,13,25,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,97,98,99,100,101,102,103,120,138,139,140,169,172,173,174,175,176,177,179,180,181,182,186,188,190,201,202,205,207,208,222,226,227,228,],[44,-46,-47,-48,44,-92,-15,-13,-11,-9,-7,-5,44,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,44,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-53,-51,44,44,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,-79,-34,-97,-98,-93,-95,-80,-79,-96,-14,-94,]),'KEYWORD_WHERE':([11,12,13,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,93,94,95,96,97,98,99,100,101,102,103,120,138,140,141,143,149,168,169,172,173,174,175,176,177,178,179,180,181,182,186,188,190,201,202,203,205,207,208,222,226,227,228,],[-46,-47,-48,130,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-53,-51,-3,130,130,130,130,-12,-10,-8,-6,-4,-2,-1,130,-76,-77,-78,-49,-33,-79,-34,-97,-98,130,-93,-95,130,-79,-96,130,-94,]),'TICK_OPERATOR':([11,12,13,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,93,94,95,96,97,98,99,100,101,102,103,120,138,140,141,143,149,168,169,172,173,174,175,176,177,178,179,180,181,182,186,188,190,201,202,203,205,207,208,222,226,227,228,],[-46,-47,-48,131,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-53,-51,-3,131,131,131,131,-12,-10,-8,-6,-4,-2,-1,131,-76,-77,-78,-49,-33,-79,-34,-97,-98,131,-93,-95,131,-79,-96,131,-94,]),'PADDING':([11,12,13,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,93,94,95,96,97,98,99,100,101,102,103,110,111,112,113,114,115,116,117,118,119,120,126,128,130,138,140,154,155,162,163,164,165,169,172,173,174,175,176,177,179,180,181,182,186,188,190,193,194,195,197,198,201,202,205,207,208,210,211,213,214,218,219,222,223,224,225,226,227,228,229,],[-46,-47,-48,125,-134,-79,-92,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-100,-103,-104,-111,-112,125,125,-109,-110,-53,-135,-137,171,-51,-50,125,-105,-79,-138,-139,-140,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,206,-34,-79,125,125,125,-136,-97,-98,-93,-95,-80,-102,-101,-107,-108,-141,-142,206,-79,-113,-114,-96,-14,-94,-106,]),'KEYWORD_IN':([11,12,13,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,93,94,95,96,97,98,99,100,101,102,103,120,138,140,169,172,173,174,175,176,177,179,180,181,182,186,187,188,190,201,202,205,207,208,222,226,227,228,],[-46,-47,-48,-92,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-52,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-53,-51,-50,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-33,204,-79,-34,-97,-98,-93,-95,-80,-79,-96,-14,-94,]),'RBRACKET':([11,12,13,20,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,92,93,94,95,96,97,98,99,100,101,102,103,110,111,112,113,114,115,118,119,120,125,138,140,145,148,149,155,158,169,172,173,174,175,176,177,179,180,181,182,183,185,186,188,190,193,195,200,201,202,203,205,207,208,210,211,213,214,216,220,222,223,224,225,226,227,228,229,],[-46,-47,-48,53,-92,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-45,-52,-79,-71,-72,-73,-74,-75,-44,-43,-39,-40,-41,-42,-99,-100,-103,-104,-111,-112,-109,-110,-53,-115,-51,-50,-37,190,-79,-105,-116,-12,-10,-8,-6,-4,-2,-1,-76,-77,-78,-49,-35,-38,-33,-79,-34,-79,-79,219,-97,-98,-79,-93,-95,-80,-102,-101,-107,-108,225,-36,-79,-79,-113,-114,-96,-14,-94,-106,]),'KEYWORD_LET':([28,36,37,38,39,40,41,42,43,44,47,73,88,89,92,120,129,131,132,133,134,135,136,137,139,182,184,189,221,],[-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,90,90,90,-52,90,-53,90,-64,90,90,90,90,90,90,90,-49,90,90,90,]),'BACKSLASH':([28,36,37,38,39,40,41,42,43,44,47,73,88,89,92,120,129,131,132,133,134,135,136,137,139,182,184,189,221,],[-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,91,91,91,-52,91,-53,91,-64,91,91,91,91,91,91,91,-49,91,91,91,]),'BASE10_INTEGER':([28,36,37,38,39,40,41,42,43,44,47,73,88,89,92,120,129,131,132,133,134,135,136,137,139,182,184,189,221,],[-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,93,93,93,-52,93,-53,93,-64,93,93,93,93,93,93,93,-49,93,93,93,]),'BASE16_INTEGER':([28,36,37,38,39,40,41,42,43,44,47,73,88,89,92,120,129,131,132,133,134,135,136,137,139,182,184,189,221,],[-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,94,94,94,-52,94,-53,94,-64,94,94,94,94,94,94,94,-49,94,94,94,]),'BASE8_INTEGER':([28,36,37,38,39,40,41,42,43,44,47,73,88,89,92,120,129,131,132,133,134,135,136,137,139,182,184,189,221,],[-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,95,95,95,-52,95,-53,95,-64,95,95,95,95,95,95,95,-49,95,95,95,]),'BASE2_INTEGER':([28,36,37,38,39,40,41,42,43,44,47,73,88,89,92,120,129,131,132,133,134,135,136,137,139,182,184,189,221,],[-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,96,96,96,-52,96,-53,96,-64,96,96,96,96,96,96,96,-49,96,96,96,]),'FLOAT':([28,36,37,38,39,40,41,42,43,44,47,73,88,89,92,120,129,131,132,133,134,135,136,137,139,182,184,189,221,],[-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,97,97,97,-52,97,-53,97,-64,97,97,97,97,97,97,97,-49,97,97,97,]),'STRING':([28,36,37,38,39,40,41,42,43,44,47,73,88,89,92,120,129,131,132,133,134,135,136,137,139,142,182,184,189,221,],[-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,98,98,98,-52,98,-53,98,-64,98,98,98,98,98,98,98,98,-49,98,98,98,]),'CHAR':([28,36,37,38,39,40,41,42,43,44,47,73,88,89,92,120,129,131,132,133,134,135,136,137,139,142,182,184,189,221,],[-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,99,99,99,-52,99,-53,99,-64,99,99,99,99,99,99,99,99,-49,99,99,99,]),'DATE':([28,36,37,38,39,40,41,42,43,44,47,73,88,89,92,120,129,131,132,133,134,135,136,137,139,182,184,189,221,],[-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,100,100,100,-52,100,-53,100,-64,100,100,100,100,100,100,100,-49,100,100,100,]),'DATETIME':([28,36,37,38,39,40,41,42,43,44,47,73,88,89,92,120,129,131,132,133,134,135,136,137,139,182,184,189,221,],[-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,101,101,101,-52,101,-53,101,-64,101,101,101,101,101,101,101,-49,101,101,101,]),'DATE_INTERVAL':([28,36,37,38,39,40,41,42,43,44,47,73,88,89,92,120,129,131,132,133,134,135,136,137,139,182,184,189,221,],[-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,102,102,102,-52,102,-53,102,-64,102,102,102,102,102,102,102,-49,102,102,102,]),'DATETIME_INTERVAL':([28,36,37,38,39,40,41,42,43,44,47,73,88,89,92,120,129,131,132,133,134,135,136,137,139,182,184,189,221,],[-61,-62,-63,-59,-60,-55,-56,-57,-58,-54,103,103,103,-52,103,-53,103,-64,103,103,103,103,103,103,103,-49,103,103,103,]),'PIPE':([60,61,62,118,119,123,124,125,126,128,162,163,164,165,197,198,218,219,],[-79,-134,-79,-109,-110,161,-116,-115,-135,-137,-79,-138,-139,-140,-79,-136,-141,-142,]),'ANNOTATION':([79,93,94,95,96,97,],[142,-71,-72,-73,-74,-75,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'definitions':([0,],[2,]),'definition':([0,22,],[3,54,]),'nametype_decl':([0,22,],[4,4,]),'valuedef':([0,22,],[5,5,]),'datatype_definition':([0,22,],[6,6,]),'_identifier':([0,8,22,25,47,50,51,73,88,91,92,129,132,133,134,135,136,137,139,142,146,170,171,184,189,206,221,],[7,45,7,45,87,45,45,87,87,45,87,87,87,87,87,87,87,87,87,87,45,45,45,87,87,45,87,]),'equation':([0,22,146,170,171,206,],[9,9,188,188,188,222,]),'_datatype_lhs':([0,22,],[10,10,]),'pattern':([0,8,22,25,146,170,171,206,],[14,29,14,29,14,14,14,14,]),'parameters':([0,8,22,25,91,146,170,171,206,],[16,16,16,16,147,16,16,16,16,]),'_param':([0,8,22,25,50,51,91,146,170,171,206,],[17,17,17,17,105,106,17,17,17,17,17,]),'_non_empty_list_cons':([0,8,22,25,50,51,91,146,170,171,206,],[18,18,18,18,18,18,18,18,18,18,18,]),'_enclosed_operator':([0,8,22,25,47,50,51,70,73,88,91,92,129,132,133,134,135,136,137,139,140,146,170,171,177,184,189,206,221,],[19,19,19,19,89,19,19,89,89,89,19,89,89,89,89,89,89,89,89,89,89,19,19,19,89,89,89,19,89,]),'_definition_set':([3,54,],[21,107,]),'empty':([3,17,54,60,62,88,92,104,106,116,117,143,149,154,162,188,191,193,194,195,197,203,222,223,],[23,52,23,124,128,145,145,152,52,158,158,185,185,158,128,207,152,214,158,158,124,185,207,214,]),'_st_operator':([8,25,88,139,],[26,56,56,56,]),'infixl_operator_2':([8,25,66,88,139,],[30,30,133,30,30,]),'infixr_operator_2':([8,25,66,88,139,],[31,31,132,31,31,]),'infixl_operator_6':([8,25,67,88,139,173,],[32,32,134,32,32,134,]),'infixl_operator_7':([8,25,68,88,139,174,],[33,33,135,33,33,135,]),'infixr_operator_9':([8,25,70,88,139,140,177,],[34,34,136,34,34,136,136,]),'_parameters':([17,106,],[49,153,]),'_data_rhs':([46,],[59,]),'data_cons':([46,161,],[60,197,]),'_data_cons':([46,161,],[61,61,]),'expr':([47,73,88,92,129,132,133,134,135,136,137,139,184,189,221,],[63,141,143,149,168,141,141,141,141,141,141,178,203,208,227,]),'expr_term0':([47,73,88,92,129,132,133,134,135,136,137,139,184,189,221,],[64,64,64,64,169,64,64,64,64,64,64,64,64,64,64,]),'expr_term1':([47,73,88,92,129,132,133,134,135,136,137,139,184,189,221,],[65,65,65,65,65,172,65,65,65,65,65,65,65,65,65,]),'expr_term2':([47,73,88,92,129,132,133,134,135,136,137,139,184,189,221,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'expr_term6':([47,73,88,92,129,132,133,134,135,136,137,139,184,189,221,],[67,67,67,67,67,67,173,67,67,67,67,67,67,67,67,]),'expr_term7':([47,73,88,92,129,132,133,134,135,136,137,139,184,189,221,],[68,68,68,68,68,68,68,174,68,68,68,68,68,68,68,]),'expr_term9':([47,73,88,92,129,132,133,134,135,136,137,139,184,189,221,],[69,69,69,69,69,69,69,69,175,176,69,69,69,69,69,]),'expr_factor':([47,73,88,92,129,132,133,134,135,136,137,139,184,189,221,],[70,140,70,70,70,70,70,70,70,70,177,70,70,70,70,]),'literal':([47,73,88,92,129,132,133,134,135,136,137,139,184,189,221,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'identifier':([47,73,88,92,129,132,133,134,135,136,137,139,142,184,189,221,],[72,72,72,72,72,72,72,72,72,72,72,72,181,72,72,72,]),'enclosed_expr':([47,70,73,88,92,129,132,133,134,135,136,137,139,140,177,184,189,221,],[73,138,73,73,73,73,73,73,73,73,73,73,73,138,138,73,73,73,]),'letexpr':([47,73,88,92,129,132,133,134,135,136,137,139,184,189,221,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'where_expr':([47,73,88,92,129,132,133,134,135,136,137,139,184,189,221,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'lambda_expr':([47,73,88,92,129,132,133,134,135,136,137,139,184,189,221,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'simple_list_expr':([47,73,88,92,129,132,133,134,135,136,137,139,184,189,221,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'simple_tuple_expr':([47,73,88,92,129,132,133,134,135,136,137,139,184,189,221,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'number':([47,73,88,92,129,132,133,134,135,136,137,139,184,189,221,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'concrete_number':([47,73,88,92,129,132,133,134,135,136,137,139,184,189,221,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'string':([47,73,88,92,129,132,133,134,135,136,137,139,142,184,189,221,],[81,81,81,81,81,81,81,81,81,81,81,81,179,81,81,81,]),'char':([47,73,88,92,129,132,133,134,135,136,137,139,142,184,189,221,],[82,82,82,82,82,82,82,82,82,82,82,82,180,82,82,82,]),'date':([47,73,88,92,129,132,133,134,135,136,137,139,184,189,221,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'datetime':([47,73,88,92,129,132,133,134,135,136,137,139,184,189,221,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'date_interval':([47,73,88,92,129,132,133,134,135,136,137,139,184,189,221,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'datetime_interval':([47,73,88,92,129,132,133,134,135,136,137,139,184,189,221,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'st_type_expr':([55,160,],[108,196,]),'type_expr':([55,157,159,160,166,167,],[109,194,195,109,199,200,]),'type_function_expr':([55,157,159,160,166,167,192,],[110,110,110,110,110,110,211,]),'type_term':([55,157,159,160,166,167,192,],[111,111,111,111,111,111,210,]),'type_app_expression':([55,157,159,160,166,167,192,],[112,112,112,112,112,112,112,]),'type_factor':([55,156,157,159,160,166,167,192,212,],[113,193,113,113,113,113,113,113,223,]),'type_variable':([55,127,156,157,159,160,166,167,192,212,],[114,163,114,114,114,114,114,114,114,114,]),'type_cons':([55,127,156,157,159,160,166,167,192,212,],[115,164,115,115,115,115,115,115,115,115,]),'_data_conses':([60,197,],[122,217,]),'_maybe_padding':([60,116,117,154,194,195,197,],[123,157,159,192,215,216,123,]),'_cons_args':([62,162,],[126,198,]),'infixl_operator_0':([63,141,143,149,168,178,203,208,227,],[129,129,129,129,129,129,129,129,129,]),'_list_items':([88,92,],[144,148,]),'_cons_params':([104,191,],[151,209,]),'_app_args_non_empty':([113,],[155,]),'cons_arg':([127,],[162,]),'_cons_arg_factor':([127,],[165,]),'_list_items_cont':([143,149,203,],[183,183,220,]),'equations':([146,170,171,],[187,201,202,]),'_equation_set':([188,222,],[205,228,]),'_app_args':([193,223,],[213,229,]),'st_expr':([221,],[226,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','__init__.py',431),
  ('expr_term9 -> expr_factor infixr_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','__init__.py',438),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','__init__.py',439),
  ('expr_term7 -> expr_term7 infixl_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','__init__.py',441),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','__init__.py',442),
  ('expr_term6 -> expr_term6 infixl_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','__init__.py',444),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','__init__.py',445),
  ('expr_term2 -> expr_term2 infixl_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','__init__.py',447),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','__init__.py',448),
  ('expr_term1 -> expr_term2 infixr_operator_2 expr_term1','expr_term1',3,'p_expressions_precedence_rules','__init__.py',450),
  ('expr_term1 -> expr_term2','expr_term1',1,'p_expressions_precedence_rules','__init__.py',451),
  ('expr_term0 -> expr infixl_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','__init__.py',453),
  ('expr_term0 -> expr_term1','expr_term0',1,'p_expressions_precedence_rules','__init__.py',454),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','__init__.py',467),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','__init__.py',469),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','__init__.py',471),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','__init__.py',472),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','__init__.py',473),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','__init__.py',474),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','__init__.py',475),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','__init__.py',476),
  ('expr_factor -> simple_list_expr','expr_factor',1,'p_standalone_definitions','__init__.py',477),
  ('expr_factor -> simple_tuple_expr','expr_factor',1,'p_standalone_definitions','__init__.py',478),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','__init__.py',480),
  ('literal -> number','literal',1,'p_literals','__init__.py',488),
  ('literal -> concrete_number','literal',1,'p_literals','__init__.py',489),
  ('literal -> string','literal',1,'p_literals','__init__.py',490),
  ('literal -> char','literal',1,'p_literals','__init__.py',491),
  ('literal -> date','literal',1,'p_literals','__init__.py',492),
  ('literal -> datetime','literal',1,'p_literals','__init__.py',493),
  ('literal -> date_interval','literal',1,'p_literals','__init__.py',494),
  ('literal -> datetime_interval','literal',1,'p_literals','__init__.py',495),
  ('simple_tuple_expr -> LPAREN _list_items RPAREN','simple_tuple_expr',3,'p_tuple_expr','__init__.py',501),
  ('simple_list_expr -> LBRACKET _list_items RBRACKET','simple_list_expr',3,'p_list_expr','__init__.py',516),
  ('_list_items -> expr _list_items_cont','_list_items',2,'p_list_items','__init__.py',526),
  ('_list_items_cont -> COMMA expr _list_items_cont','_list_items_cont',3,'p_list_items','__init__.py',527),
  ('_list_items -> empty','_list_items',1,'p_list_items_empty','__init__.py',536),
  ('_list_items_cont -> empty','_list_items_cont',1,'p_list_items_empty','__init__.py',537),
  ('date -> DATE','date',1,'p_date','__init__.py',543),
  ('datetime -> DATETIME','datetime',1,'p_datetime','__init__.py',549),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','__init__.py',555),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','__init__.py',561),
  ('char -> CHAR','char',1,'p_char','__init__.py',567),
  ('string -> STRING','string',1,'p_string','__init__.py',572),
  ('identifier -> _identifier','identifier',1,'p_variable','__init__.py',577),
  ('_identifier -> UNDER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',584),
  ('_identifier -> UPPER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',585),
  ('_identifier -> LOWER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',586),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','__init__.py',593),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','__init__.py',598),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','__init__.py',599),
  ('enclosed_expr -> _enclosed_operator','enclosed_expr',1,'p_operators_as_expressios','__init__.py',605),
  ('_enclosed_operator -> LPAREN _st_operator RPAREN','_enclosed_operator',3,'p_enclosed_operator','__init__.py',611),
  ('infixr_operator_9 -> DOT_OPERATOR','infixr_operator_9',1,'p_operator','__init__.py',621),
  ('infixl_operator_7 -> STAR','infixl_operator_7',1,'p_operator','__init__.py',623),
  ('infixl_operator_7 -> SLASH','infixl_operator_7',1,'p_operator','__init__.py',624),
  ('infixl_operator_7 -> DOUBLESLASH','infixl_operator_7',1,'p_operator','__init__.py',625),
  ('infixl_operator_7 -> PERCENT','infixl_operator_7',1,'p_operator','__init__.py',626),
  ('infixl_operator_6 -> PLUS','infixl_operator_6',1,'p_operator','__init__.py',628),
  ('infixl_operator_6 -> MINUS','infixl_operator_6',1,'p_operator','__init__.py',629),
  ('infixr_operator_2 -> COLON','infixr_operator_2',1,'p_operator','__init__.py',631),
  ('infixl_operator_2 -> OPERATOR','infixl_operator_2',1,'p_operator','__init__.py',633),
  ('infixl_operator_2 -> ARROW','infixl_operator_2',1,'p_operator','__init__.py',634),
  ('infixl_operator_0 -> TICK_OPERATOR','infixl_operator_0',1,'p_operator','__init__.py',636),
  ('_st_operator -> infixl_operator_2','_st_operator',1,'p_operator','__init__.py',638),
  ('_st_operator -> infixr_operator_2','_st_operator',1,'p_operator','__init__.py',639),
  ('_st_operator -> infixl_operator_6','_st_operator',1,'p_operator','__init__.py',640),
  ('_st_operator -> infixl_operator_7','_st_operator',1,'p_operator','__init__.py',641),
  ('_st_operator -> infixr_operator_9','_st_operator',1,'p_operator','__init__.py',642),
  ('_st_operator -> COMMA','_st_operator',1,'p_operator','__init__.py',643),
  ('number -> BASE10_INTEGER','number',1,'p_integer','__init__.py',650),
  ('number -> BASE16_INTEGER','number',1,'p_integer','__init__.py',651),
  ('number -> BASE8_INTEGER','number',1,'p_integer','__init__.py',652),
  ('number -> BASE2_INTEGER','number',1,'p_integer','__init__.py',653),
  ('number -> FLOAT','number',1,'p_float','__init__.py',682),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','__init__.py',687),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','__init__.py',688),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','__init__.py',689),
  ('empty -> <empty>','empty',0,'p_empty','__init__.py',698),
  ('lambda_expr -> BACKSLASH parameters ARROW expr','lambda_expr',4,'p_lambda_definition','__init__.py',703),
  ('parameters -> _param _parameters','parameters',2,'p_parameters','__init__.py',711),
  ('_parameters -> SPACE _param _parameters','_parameters',3,'p_parameters','__init__.py',712),
  ('_parameters -> empty','_parameters',1,'p_empty__parameters','__init__.py',721),
  ('_param -> _non_empty_list_cons','_param',1,'p_param_list_cons','__init__.py',727),
  ('_non_empty_list_cons -> _param COLON _param','_non_empty_list_cons',3,'p_list_cons_for_param','__init__.py',733),
  ('_param -> _identifier','_param',1,'p_param_identitifier','__init__.py',739),
  ('_param -> _enclosed_operator','_param',1,'p_param_operator','__init__.py',744),
  ('_param -> LPAREN pattern RPAREN','_param',3,'p_param_pattern','__init__.py',749),
  ('_param -> LBRACKET RBRACKET','_param',2,'p_empty_list_as_param','__init__.py',754),
  ('_param -> LPAREN RPAREN','_param',2,'p_unit_value_as_param','__init__.py',760),
  ('pattern -> parameters','pattern',1,'p_pattern','__init__.py',766),
  ('equation -> pattern EQ expr','equation',3,'p_equation','__init__.py',772),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','__init__.py',782),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','__init__.py',791),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','__init__.py',800),
  ('letexpr -> KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','__init__.py',810),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','__init__.py',818),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','__init__.py',819),
  ('type_expr -> type_function_expr','type_expr',1,'p_type_expr','__init__.py',829),
  ('type_expr -> type_term','type_expr',1,'p_type_expr','__init__.py',830),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','__init__.py',835),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','__init__.py',836),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','__init__.py',846),
  ('type_term -> type_factor','type_term',1,'p_type_term','__init__.py',847),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','__init__.py',852),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','__init__.py',864),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','__init__.py',865),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','__init__.py',873),
  ('type_variable -> LOWER_IDENTIFIER','type_variable',1,'p_type_variable','__init__.py',878),
  ('type_cons -> UPPER_IDENTIFIER','type_cons',1,'p_type_cons','__init__.py',883),
  ('type_factor -> type_variable','type_factor',1,'p_type_factor_identifier','__init__.py',888),
  ('type_factor -> type_cons','type_factor',1,'p_type_factor_identifier','__init__.py',889),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','__init__.py',896),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','__init__.py',901),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','__init__.py',906),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','__init__.py',907),
  ('program -> definitions','program',1,'p_program','__init__.py',913),
  ('definitions -> definition _definition_set','definitions',2,'p_definitions','__init__.py',929),
  ('_definition_set -> NEWLINE definition _definition_set','_definition_set',3,'p_definition_set','__init__.py',937),
  ('_definition_set -> empty','_definition_set',1,'p_definition_set2','__init__.py',945),
  ('definition -> nametype_decl','definition',1,'p_definition','__init__.py',951),
  ('definition -> valuedef','definition',1,'p_definition','__init__.py',952),
  ('definition -> datatype_definition','definition',1,'p_definition','__init__.py',953),
  ('valuedef -> equation','valuedef',1,'p_valuedef','__init__.py',959),
  ('nametype_decl -> _identifier COLON COLON st_type_expr','nametype_decl',4,'p_nametype_decl','__init__.py',965),
  ('nametype_decl -> LPAREN _st_operator RPAREN COLON COLON st_type_expr','nametype_decl',6,'p_nametype_decl_operators','__init__.py',974),
  ('datatype_definition -> _datatype_lhs EQ _data_rhs','datatype_definition',3,'p_datatype_definition','__init__.py',983),
  ('_datatype_lhs -> KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params','_datatype_lhs',4,'p_datatype_lhs','__init__.py',991),
  ('_cons_params -> SPACE LOWER_IDENTIFIER _cons_params','_cons_params',3,'p_datatype_cons_params','__init__.py',1000),
  ('_cons_params -> empty','_cons_params',1,'p_datatype_cons_params_empty','__init__.py',1009),
  ('_data_rhs -> data_cons _data_conses','_data_rhs',2,'p_datatype_body','__init__.py',1015),
  ('_data_conses -> _maybe_padding PIPE data_cons _data_conses','_data_conses',4,'p_datatype_body','__init__.py',1016),
  ('_data_conses -> empty','_data_conses',1,'p_datatype_conses_empty','__init__.py',1025),
  ('data_cons -> _data_cons','data_cons',1,'p_data_cons','__init__.py',1030),
  ('_data_cons -> UPPER_IDENTIFIER _cons_args','_data_cons',2,'p_bare_data_cons','__init__.py',1036),
  ('_cons_args -> SPACE cons_arg _cons_args','_cons_args',3,'p_data_cons_args','__init__.py',1041),
  ('_cons_args -> empty','_cons_args',1,'p_data_cons_args_empty','__init__.py',1050),
  ('cons_arg -> type_variable','cons_arg',1,'p_cons_arg','__init__.py',1056),
  ('cons_arg -> type_cons','cons_arg',1,'p_cons_arg','__init__.py',1057),
  ('cons_arg -> _cons_arg_factor','cons_arg',1,'p_cons_arg','__init__.py',1058),
  ('_cons_arg_factor -> LPAREN type_expr RPAREN','_cons_arg_factor',3,'p_cons_arg_factor','__init__.py',1064),
  ('_cons_arg_factor -> LBRACKET type_expr RBRACKET','_cons_arg_factor',3,'p_cons_arg_factor_list','__init__.py',1070),
]
