
# type_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'st_type_exprrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON COMMA DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FLOAT KEYWORD_CLASS KEYWORD_DATA KEYWORD_FORALL KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LOWER_IDENTIFIER LPAREN MINUS NEWLINE OPERATOR PADDING PERCENT PIPE PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATOR UNDER_IDENTIFIER UPPER_IDENTIFIERexpr_factor : expr_factor SPACE expr_factor\n    expr_term9 : expr_factor infixr_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infixl_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infixl_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infixl_operator_2 expr_term6\n               | expr_term6\n\n    expr_term1 : expr_term2 infixr_operator_2 expr_term1\n               | expr_term2\n\n    expr_term0 : expr infixl_operator_0 expr_term0\n               | expr_term1\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | letexpr\n                | where_expr\n                | lambda_expr\n                | simple_list_expr\n                | simple_tuple_expr\n\n    st_type_expr : type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    simple_tuple_expr : LPAREN _list_items RPAREN\n    simple_list_expr : LBRACKET _list_items RBRACKET\n    _list_items : expr _list_items_cont\n       _list_items_cont : COMMA expr _list_items_cont\n    _list_items : empty\n       _list_items_cont : empty\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    char : CHARstring : STRINGidentifier : _identifier\n\n    _identifier : UNDER_IDENTIFIER\n                   | UPPER_IDENTIFIER\n                   | LOWER_IDENTIFIER\n\n    enclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : _enclosed_operator\n    _enclosed_operator : LPAREN _st_operator RPAREN\n    infixr_operator_9 : DOT_OPERATOR\n\n    infixl_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infixl_operator_6 : PLUS\n                     | MINUS\n\n    infixr_operator_2 : COLON\n\n    infixl_operator_2 : OPERATOR\n                      | ARROW\n\n    infixl_operator_0 : TICK_OPERATOR\n\n    _st_operator : infixl_operator_2\n                 | infixr_operator_2\n                 | infixl_operator_6\n                 | infixl_operator_7\n                 | infixr_operator_9\n                 | COMMA\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH patterns ARROW expr\n    \n    pattern : identifier\n    pattern : literal\n    pattern : cons_pattern\n    pattern : list_cons_pattern\n    pattern : tuple_cons_pattern\n    pattern : empty_list_pattern\n    pattern : empty_tuple_pattern\n    list_cons_pattern : pattern COLON pattern\n    cons_pattern : LPAREN _identifier SPACE patterns RPARENempty_list_pattern : LBRACKET RBRACKETempty_tuple_pattern : LPAREN RPARENtuple_cons_pattern : LPAREN patterns_comma_sep RPAREN\n    patterns : pattern _patterns\n       patterns_comma_sep : pattern _patterns_comma\n       _patterns : SPACE pattern _patterns\n       _patterns_comma : COMMA pattern _patterns_comma\n    _patterns : empty\n       _patterns_comma : empty\n    equation : _identifier _patterns EQ expr\n       equation : _enclosed_operator _patterns EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    type_expr : type_scheme type_function_expr\n                 | type_scheme type_termtype_scheme : emptytype_scheme : KEYWORD_FORALL SPACE _type_scheme_generics_type_scheme_generics : _identifier SPACE _type_scheme_generics_type_scheme_generics : _identifier DOT_OPERATORtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_variable : LOWER_IDENTIFIERtype_cons : UPPER_IDENTIFIERtype_factor : type_variable\n                   | type_cons\n\n    type_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET_maybe_padding : PADDING\n                      | empty\n    program : definitions\n    definitions : definition _definition_set\n    _definition_set : NEWLINE definition _definition_set\n    _definition_set : empty\n    definition : nametype_decl\n                  | valuedef\n                  | datatype_definition\n    valuedef : equation\n    nametype_decl : _identifier COLON COLON st_type_expr\n    nametype_decl : LPAREN _st_operator RPAREN COLON COLON st_type_expr\n    datatype_definition : _datatype_lhs EQ _data_rhs\n    _datatype_lhs : KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params\n    _cons_params : SPACE LOWER_IDENTIFIER _cons_params\n    _cons_params : empty\n    _data_rhs : data_cons _data_conses\n       _data_conses : _maybe_padding PIPE data_cons _data_conses\n    _data_conses : emptydata_cons : _data_cons_data_cons : UPPER_IDENTIFIER _cons_args_cons_args : SPACE cons_arg _cons_args\n    _cons_args : empty\n    cons_arg : type_variable\n       cons_arg : type_cons\n       cons_arg : _cons_arg_factor\n    _cons_arg_factor : LPAREN type_expr RPAREN\n    _cons_arg_factor : LBRACKET type_expr RBRACKET\n    '
    
_lr_action_items = {'KEYWORD_FORALL':([0,12,13,20,21,22,23,],[5,-79,-79,5,-127,-128,5,]),'LPAREN':([0,3,4,12,13,17,19,20,21,22,23,24,29,34,37,42,],[-79,12,-109,-79,-79,-79,12,-79,-127,-128,-79,-110,12,-112,12,-111,]),'LBRACKET':([0,3,4,12,13,17,19,20,21,22,23,24,29,34,37,42,],[-79,13,-109,-79,-79,-79,13,-79,-127,-128,-79,-110,13,-112,13,-111,]),'LOWER_IDENTIFIER':([0,3,4,12,13,16,17,19,20,21,22,23,24,29,33,34,37,42,],[-79,14,-109,-79,-79,28,-79,14,-79,-127,-128,-79,-110,14,28,-112,14,-111,]),'UPPER_IDENTIFIER':([0,3,4,12,13,16,17,19,20,21,22,23,24,29,33,34,37,42,],[-79,15,-109,-79,-79,27,-79,15,-79,-127,-128,-79,-110,15,27,-112,15,-111,]),'$end':([1,2,6,7,8,9,10,11,14,15,18,30,35,36,38,39,43,44,45,46,],[0,-24,-107,-108,-115,-116,-123,-124,-121,-122,-117,-79,-114,-113,-119,-120,-79,-125,-126,-118,]),'SPACE':([5,9,10,11,14,15,25,26,27,28,30,43,44,45,],[16,19,-123,-124,-121,-122,33,-46,-47,-48,37,37,-125,-126,]),'PADDING':([6,7,8,9,10,11,12,13,14,15,17,18,30,31,32,35,36,38,39,43,44,45,46,],[-107,-108,-115,-116,-123,-124,21,21,-121,-122,21,-117,-79,21,21,-114,-113,-119,-120,-79,-125,-126,-118,]),'RPAREN':([6,7,8,9,10,11,14,15,18,21,22,30,31,35,36,38,39,40,43,44,45,46,],[-107,-108,-115,-116,-123,-124,-121,-122,-117,-127,-128,-79,-79,-114,-113,-119,-120,44,-79,-125,-126,-118,]),'RBRACKET':([6,7,8,9,10,11,14,15,18,21,22,30,32,35,36,38,39,41,43,44,45,46,],[-107,-108,-115,-116,-123,-124,-121,-122,-117,-127,-128,-79,-79,-114,-113,-119,-120,45,-79,-125,-126,-118,]),'ARROW':([7,8,9,10,11,14,15,18,30,35,38,39,43,44,45,46,],[17,-115,-116,-123,-124,-121,-122,-117,-79,17,-119,-120,-79,-125,-126,-118,]),'UNDER_IDENTIFIER':([16,33,],[26,26,]),'DOT_OPERATOR':([25,26,27,28,],[34,-46,-47,-48,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'st_type_expr':([0,],[1,]),'type_expr':([0,20,23,],[2,31,32,]),'type_scheme':([0,20,23,],[3,3,3,]),'empty':([0,12,13,17,20,23,30,31,32,43,],[4,22,22,22,4,4,39,22,22,39,]),'type_function_expr':([3,29,],[6,36,]),'type_term':([3,29,],[7,35,]),'type_app_expression':([3,29,],[8,8,]),'type_factor':([3,19,29,37,],[9,30,9,43,]),'type_variable':([3,19,29,37,],[10,10,10,10,]),'type_cons':([3,19,29,37,],[11,11,11,11,]),'_app_args_non_empty':([9,],[18,]),'_maybe_padding':([12,13,17,31,32,],[20,23,29,40,41,]),'_type_scheme_generics':([16,33,],[24,42,]),'_identifier':([16,33,],[25,25,]),'_app_args':([30,43,],[38,46,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> st_type_expr","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','__init__.py',433),
  ('expr_term9 -> expr_factor infixr_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','__init__.py',440),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','__init__.py',441),
  ('expr_term7 -> expr_term7 infixl_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','__init__.py',443),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','__init__.py',444),
  ('expr_term6 -> expr_term6 infixl_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','__init__.py',446),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','__init__.py',447),
  ('expr_term2 -> expr_term2 infixl_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','__init__.py',449),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','__init__.py',450),
  ('expr_term1 -> expr_term2 infixr_operator_2 expr_term1','expr_term1',3,'p_expressions_precedence_rules','__init__.py',452),
  ('expr_term1 -> expr_term2','expr_term1',1,'p_expressions_precedence_rules','__init__.py',453),
  ('expr_term0 -> expr infixl_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','__init__.py',455),
  ('expr_term0 -> expr_term1','expr_term0',1,'p_expressions_precedence_rules','__init__.py',456),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','__init__.py',469),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','__init__.py',471),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','__init__.py',473),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','__init__.py',474),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','__init__.py',475),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','__init__.py',476),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','__init__.py',477),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','__init__.py',478),
  ('expr_factor -> simple_list_expr','expr_factor',1,'p_standalone_definitions','__init__.py',479),
  ('expr_factor -> simple_tuple_expr','expr_factor',1,'p_standalone_definitions','__init__.py',480),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','__init__.py',482),
  ('literal -> number','literal',1,'p_literals','__init__.py',490),
  ('literal -> concrete_number','literal',1,'p_literals','__init__.py',491),
  ('literal -> string','literal',1,'p_literals','__init__.py',492),
  ('literal -> char','literal',1,'p_literals','__init__.py',493),
  ('literal -> date','literal',1,'p_literals','__init__.py',494),
  ('literal -> datetime','literal',1,'p_literals','__init__.py',495),
  ('literal -> date_interval','literal',1,'p_literals','__init__.py',496),
  ('literal -> datetime_interval','literal',1,'p_literals','__init__.py',497),
  ('simple_tuple_expr -> LPAREN _list_items RPAREN','simple_tuple_expr',3,'p_tuple_expr','__init__.py',503),
  ('simple_list_expr -> LBRACKET _list_items RBRACKET','simple_list_expr',3,'p_list_expr','__init__.py',518),
  ('_list_items -> expr _list_items_cont','_list_items',2,'p_list_items','__init__.py',528),
  ('_list_items_cont -> COMMA expr _list_items_cont','_list_items_cont',3,'p_list_items','__init__.py',529),
  ('_list_items -> empty','_list_items',1,'p_list_items_empty','__init__.py',538),
  ('_list_items_cont -> empty','_list_items_cont',1,'p_list_items_empty','__init__.py',539),
  ('date -> DATE','date',1,'p_date','__init__.py',545),
  ('datetime -> DATETIME','datetime',1,'p_datetime','__init__.py',551),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','__init__.py',557),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','__init__.py',563),
  ('char -> CHAR','char',1,'p_char','__init__.py',569),
  ('string -> STRING','string',1,'p_string','__init__.py',574),
  ('identifier -> _identifier','identifier',1,'p_variable','__init__.py',579),
  ('_identifier -> UNDER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',586),
  ('_identifier -> UPPER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',587),
  ('_identifier -> LOWER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',588),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','__init__.py',595),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','__init__.py',600),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','__init__.py',601),
  ('enclosed_expr -> _enclosed_operator','enclosed_expr',1,'p_operators_as_expressios','__init__.py',607),
  ('_enclosed_operator -> LPAREN _st_operator RPAREN','_enclosed_operator',3,'p_enclosed_operator','__init__.py',613),
  ('infixr_operator_9 -> DOT_OPERATOR','infixr_operator_9',1,'p_operator','__init__.py',623),
  ('infixl_operator_7 -> STAR','infixl_operator_7',1,'p_operator','__init__.py',625),
  ('infixl_operator_7 -> SLASH','infixl_operator_7',1,'p_operator','__init__.py',626),
  ('infixl_operator_7 -> DOUBLESLASH','infixl_operator_7',1,'p_operator','__init__.py',627),
  ('infixl_operator_7 -> PERCENT','infixl_operator_7',1,'p_operator','__init__.py',628),
  ('infixl_operator_6 -> PLUS','infixl_operator_6',1,'p_operator','__init__.py',630),
  ('infixl_operator_6 -> MINUS','infixl_operator_6',1,'p_operator','__init__.py',631),
  ('infixr_operator_2 -> COLON','infixr_operator_2',1,'p_operator','__init__.py',633),
  ('infixl_operator_2 -> OPERATOR','infixl_operator_2',1,'p_operator','__init__.py',635),
  ('infixl_operator_2 -> ARROW','infixl_operator_2',1,'p_operator','__init__.py',636),
  ('infixl_operator_0 -> TICK_OPERATOR','infixl_operator_0',1,'p_operator','__init__.py',638),
  ('_st_operator -> infixl_operator_2','_st_operator',1,'p_operator','__init__.py',640),
  ('_st_operator -> infixr_operator_2','_st_operator',1,'p_operator','__init__.py',641),
  ('_st_operator -> infixl_operator_6','_st_operator',1,'p_operator','__init__.py',642),
  ('_st_operator -> infixl_operator_7','_st_operator',1,'p_operator','__init__.py',643),
  ('_st_operator -> infixr_operator_9','_st_operator',1,'p_operator','__init__.py',644),
  ('_st_operator -> COMMA','_st_operator',1,'p_operator','__init__.py',645),
  ('number -> BASE10_INTEGER','number',1,'p_integer','__init__.py',652),
  ('number -> BASE16_INTEGER','number',1,'p_integer','__init__.py',653),
  ('number -> BASE8_INTEGER','number',1,'p_integer','__init__.py',654),
  ('number -> BASE2_INTEGER','number',1,'p_integer','__init__.py',655),
  ('number -> FLOAT','number',1,'p_float','__init__.py',684),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','__init__.py',689),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','__init__.py',690),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','__init__.py',691),
  ('empty -> <empty>','empty',0,'p_empty','__init__.py',700),
  ('lambda_expr -> BACKSLASH patterns ARROW expr','lambda_expr',4,'p_lambda_definition','__init__.py',705),
  ('pattern -> identifier','pattern',1,'p_pattern','__init__.py',714),
  ('pattern -> literal','pattern',1,'p_pattern','__init__.py',715),
  ('pattern -> cons_pattern','pattern',1,'p_pattern','__init__.py',716),
  ('pattern -> list_cons_pattern','pattern',1,'p_pattern','__init__.py',717),
  ('pattern -> tuple_cons_pattern','pattern',1,'p_pattern','__init__.py',718),
  ('pattern -> empty_list_pattern','pattern',1,'p_pattern','__init__.py',719),
  ('pattern -> empty_tuple_pattern','pattern',1,'p_pattern','__init__.py',720),
  ('list_cons_pattern -> pattern COLON pattern','list_cons_pattern',3,'p_list_cons_for_param','__init__.py',726),
  ('cons_pattern -> LPAREN _identifier SPACE patterns RPAREN','cons_pattern',5,'p_param_pattern','__init__.py',732),
  ('empty_list_pattern -> LBRACKET RBRACKET','empty_list_pattern',2,'p_empty_list_as_pattern','__init__.py',737),
  ('empty_tuple_pattern -> LPAREN RPAREN','empty_tuple_pattern',2,'p_unit_value_as_pattern','__init__.py',743),
  ('tuple_cons_pattern -> LPAREN patterns_comma_sep RPAREN','tuple_cons_pattern',3,'p_tuple_cons_pattern','__init__.py',749),
  ('patterns -> pattern _patterns','patterns',2,'p_patterns','__init__.py',757),
  ('patterns_comma_sep -> pattern _patterns_comma','patterns_comma_sep',2,'p_patterns','__init__.py',758),
  ('_patterns -> SPACE pattern _patterns','_patterns',3,'p_patterns','__init__.py',759),
  ('_patterns_comma -> COMMA pattern _patterns_comma','_patterns_comma',3,'p_patterns','__init__.py',760),
  ('_patterns -> empty','_patterns',1,'p_patterns_empty','__init__.py',770),
  ('_patterns_comma -> empty','_patterns_comma',1,'p_patterns_empty','__init__.py',771),
  ('equation -> _identifier _patterns EQ expr','equation',4,'p_equation','__init__.py',777),
  ('equation -> _enclosed_operator _patterns EQ expr','equation',4,'p_equation','__init__.py',778),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','__init__.py',788),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','__init__.py',797),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','__init__.py',806),
  ('letexpr -> KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','__init__.py',816),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','__init__.py',824),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','__init__.py',825),
  ('type_expr -> type_scheme type_function_expr','type_expr',2,'p_type_expr','__init__.py',835),
  ('type_expr -> type_scheme type_term','type_expr',2,'p_type_expr','__init__.py',836),
  ('type_scheme -> empty','type_scheme',1,'p_type_scheme_empty','__init__.py',845),
  ('type_scheme -> KEYWORD_FORALL SPACE _type_scheme_generics','type_scheme',3,'p_type_scheme','__init__.py',849),
  ('_type_scheme_generics -> _identifier SPACE _type_scheme_generics','_type_scheme_generics',3,'p_type_scheme_generics','__init__.py',856),
  ('_type_scheme_generics -> _identifier DOT_OPERATOR','_type_scheme_generics',2,'p_last_type_scheme_generic','__init__.py',863),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','__init__.py',868),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','__init__.py',869),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','__init__.py',879),
  ('type_term -> type_factor','type_term',1,'p_type_term','__init__.py',880),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','__init__.py',885),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','__init__.py',897),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','__init__.py',898),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','__init__.py',906),
  ('type_variable -> LOWER_IDENTIFIER','type_variable',1,'p_type_variable','__init__.py',911),
  ('type_cons -> UPPER_IDENTIFIER','type_cons',1,'p_type_cons','__init__.py',916),
  ('type_factor -> type_variable','type_factor',1,'p_type_factor_identifier','__init__.py',921),
  ('type_factor -> type_cons','type_factor',1,'p_type_factor_identifier','__init__.py',922),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','__init__.py',929),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','__init__.py',934),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','__init__.py',939),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','__init__.py',940),
  ('program -> definitions','program',1,'p_program','__init__.py',946),
  ('definitions -> definition _definition_set','definitions',2,'p_definitions','__init__.py',962),
  ('_definition_set -> NEWLINE definition _definition_set','_definition_set',3,'p_definition_set','__init__.py',970),
  ('_definition_set -> empty','_definition_set',1,'p_definition_set2','__init__.py',978),
  ('definition -> nametype_decl','definition',1,'p_definition','__init__.py',984),
  ('definition -> valuedef','definition',1,'p_definition','__init__.py',985),
  ('definition -> datatype_definition','definition',1,'p_definition','__init__.py',986),
  ('valuedef -> equation','valuedef',1,'p_valuedef','__init__.py',992),
  ('nametype_decl -> _identifier COLON COLON st_type_expr','nametype_decl',4,'p_nametype_decl','__init__.py',998),
  ('nametype_decl -> LPAREN _st_operator RPAREN COLON COLON st_type_expr','nametype_decl',6,'p_nametype_decl_operators','__init__.py',1007),
  ('datatype_definition -> _datatype_lhs EQ _data_rhs','datatype_definition',3,'p_datatype_definition','__init__.py',1016),
  ('_datatype_lhs -> KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params','_datatype_lhs',4,'p_datatype_lhs','__init__.py',1024),
  ('_cons_params -> SPACE LOWER_IDENTIFIER _cons_params','_cons_params',3,'p_datatype_cons_params','__init__.py',1033),
  ('_cons_params -> empty','_cons_params',1,'p_datatype_cons_params_empty','__init__.py',1042),
  ('_data_rhs -> data_cons _data_conses','_data_rhs',2,'p_datatype_body','__init__.py',1048),
  ('_data_conses -> _maybe_padding PIPE data_cons _data_conses','_data_conses',4,'p_datatype_body','__init__.py',1049),
  ('_data_conses -> empty','_data_conses',1,'p_datatype_conses_empty','__init__.py',1058),
  ('data_cons -> _data_cons','data_cons',1,'p_data_cons','__init__.py',1063),
  ('_data_cons -> UPPER_IDENTIFIER _cons_args','_data_cons',2,'p_bare_data_cons','__init__.py',1069),
  ('_cons_args -> SPACE cons_arg _cons_args','_cons_args',3,'p_data_cons_args','__init__.py',1074),
  ('_cons_args -> empty','_cons_args',1,'p_data_cons_args_empty','__init__.py',1083),
  ('cons_arg -> type_variable','cons_arg',1,'p_cons_arg','__init__.py',1089),
  ('cons_arg -> type_cons','cons_arg',1,'p_cons_arg','__init__.py',1090),
  ('cons_arg -> _cons_arg_factor','cons_arg',1,'p_cons_arg','__init__.py',1091),
  ('_cons_arg_factor -> LPAREN type_expr RPAREN','_cons_arg_factor',3,'p_cons_arg_factor','__init__.py',1097),
  ('_cons_arg_factor -> LBRACKET type_expr RBRACKET','_cons_arg_factor',3,'p_cons_arg_factor_list','__init__.py',1103),
]
