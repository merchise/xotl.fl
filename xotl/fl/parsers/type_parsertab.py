
# type_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'st_type_exprrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON COMMA DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FLOAT KEYWORD_CLASS KEYWORD_DATA KEYWORD_FORALL KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LOWER_IDENTIFIER LPAREN MINUS NEWLINE OPERATOR PADDING PERCENT PIPE PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATOR UNDER_IDENTIFIER UPPER_IDENTIFIERexpr_factor : expr_factor SPACE expr_factor\n    expr_term9 : expr_factor infixr_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infixl_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infixl_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infixl_operator_2 expr_term6\n               | expr_term6\n\n    expr_term1 : expr_term2 infixr_operator_2 expr_term1\n               | expr_term2\n\n    expr_term0 : expr infixl_operator_0 expr_term0\n               | expr_term1\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | letexpr\n                | where_expr\n                | lambda_expr\n                | simple_list_expr\n                | simple_tuple_expr\n\n    st_type_expr : type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    simple_tuple_expr : LPAREN _list_items RPAREN\n    simple_list_expr : LBRACKET _list_items RBRACKET\n    _list_items : expr _list_items_cont\n       _list_items_cont : COMMA expr _list_items_cont\n    _list_items : empty\n       _list_items_cont : empty\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    char : CHARstring : STRINGidentifier : _identifier\n\n    _identifier : UNDER_IDENTIFIER\n                   | UPPER_IDENTIFIER\n                   | LOWER_IDENTIFIER\n\n    enclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : _enclosed_operator\n    _enclosed_operator : LPAREN _st_operator RPAREN\n    infixr_operator_9 : DOT_OPERATOR\n\n    infixl_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infixl_operator_6 : PLUS\n                     | MINUS\n\n    infixr_operator_2 : COLON\n\n    infixl_operator_2 : OPERATOR\n                      | ARROW\n\n    infixl_operator_0 : TICK_OPERATOR\n\n    _st_operator : infixl_operator_2\n                 | infixr_operator_2\n                 | infixl_operator_6\n                 | infixl_operator_7\n                 | infixr_operator_9\n                 | COMMA\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH patterns ARROW expr\n    \n    pattern : identifier\n    pattern : literal\n    pattern : cons_pattern\n    pattern : list_cons_pattern\n    pattern : tuple_cons_pattern\n    pattern : empty_list_pattern\n    pattern : empty_tuple_pattern\n    list_cons_pattern : pattern COLON pattern\n    cons_pattern : LPAREN _identifier SPACE patterns RPARENempty_list_pattern : LBRACKET RBRACKETempty_tuple_pattern : LPAREN RPARENtuple_cons_pattern : LPAREN patterns_comma_sep RPAREN\n    patterns : pattern _patterns\n       patterns_comma_sep : pattern _patterns_comma\n       _patterns : SPACE pattern _patterns\n       _patterns_comma : COMMA pattern _patterns_comma\n    _patterns : empty\n       _patterns_comma : empty\n    equation : _identifier _patterns EQ expr\n       equation : _enclosed_operator _patterns EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    type_expr : type_scheme type_function_expr\n                 | type_scheme type_termtype_scheme : emptytype_scheme : KEYWORD_FORALL SPACE _type_scheme_generics_type_scheme_generics : _identifier SPACE _type_scheme_generics_type_scheme_generics : _identifier DOT_OPERATORtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_variable : LOWER_IDENTIFIERtype_cons : UPPER_IDENTIFIERtype_factor : type_variable\n                   | type_cons\n\n    type_factor : LPAREN _maybe_padding _type_expr_list _maybe_padding RPARENtype_factor : LPAREN RPAREN_type_expr_list : type_expr COMMA _type_expr_list_trail\n       _type_expr_list_trail : type_expr COMMA _type_expr_list_trail\n    _type_expr_list_trail : type_expr\n       _type_expr_list_trail : type_expr COMMA\n    type_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET_maybe_padding : PADDING\n                      | empty\n    program : definitions\n    definitions : definition _definition_set\n    _definition_set : NEWLINE definition _definition_set\n    _definition_set : empty\n    definition : nametype_decl\n                  | valuedef\n                  | datatype_definition\n    valuedef : equation\n    nametype_decl : _identifier COLON COLON st_type_expr\n    nametype_decl : LPAREN _st_operator RPAREN COLON COLON st_type_expr\n    datatype_definition : _datatype_lhs EQ _data_rhs\n    _datatype_lhs : KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params\n    _cons_params : SPACE LOWER_IDENTIFIER _cons_params\n    _cons_params : empty\n    _data_rhs : data_cons _data_conses\n       _data_conses : _maybe_padding PIPE data_cons _data_conses\n    _data_conses : emptydata_cons : _data_cons_data_cons : UPPER_IDENTIFIER _cons_args_cons_args : SPACE cons_arg _cons_args\n    _cons_args : empty\n    cons_arg : type_variable\n       cons_arg : type_cons\n       cons_arg : _cons_arg_factor\n    _cons_arg_factor : LPAREN type_expr RPAREN\n    _cons_arg_factor : LBRACKET type_expr RBRACKET\n    '
    
_lr_action_items = {'KEYWORD_FORALL':([0,12,13,20,22,23,24,44,54,],[5,-79,-79,5,-133,-134,5,5,5,]),'LPAREN':([0,3,4,12,13,17,19,20,22,23,24,25,30,36,39,44,46,54,],[-79,12,-109,-79,-79,-79,12,-79,-133,-134,-79,-110,12,-112,12,-79,-111,-79,]),'LBRACKET':([0,3,4,12,13,17,19,20,22,23,24,25,30,36,39,44,46,54,],[-79,13,-109,-79,-79,-79,13,-79,-133,-134,-79,-110,13,-112,13,-79,-111,-79,]),'LOWER_IDENTIFIER':([0,3,4,12,13,16,17,19,20,22,23,24,25,30,35,36,39,44,46,54,],[-79,14,-109,-79,-79,29,-79,14,-79,-133,-134,-79,-110,14,29,-112,14,-79,-111,-79,]),'UPPER_IDENTIFIER':([0,3,4,12,13,16,17,19,20,22,23,24,25,30,35,36,39,44,46,54,],[-79,15,-109,-79,-79,28,-79,15,-79,-133,-134,-79,-110,15,28,-112,15,-79,-111,-79,]),'$end':([1,2,6,7,8,9,10,11,14,15,18,21,31,37,38,40,41,47,48,49,52,53,],[0,-24,-107,-108,-115,-116,-123,-124,-121,-122,-117,-126,-79,-114,-113,-119,-120,-79,-125,-131,-132,-118,]),'SPACE':([5,9,10,11,14,15,21,26,27,28,29,31,47,48,49,52,],[16,19,-123,-124,-121,-122,-126,35,-46,-47,-48,39,39,-125,-131,-132,]),'COMMA':([6,7,8,9,10,11,14,15,18,21,31,33,37,38,40,41,47,48,49,50,52,53,],[-107,-108,-115,-116,-123,-124,-121,-122,-117,-126,-79,44,-114,-113,-119,-120,-79,-125,-131,54,-132,-118,]),'PADDING':([6,7,8,9,10,11,12,13,14,15,17,18,21,31,32,33,34,37,38,40,41,47,48,49,50,51,52,53,54,55,],[-107,-108,-115,-116,-123,-124,22,22,-121,-122,22,-117,-126,-79,22,22,22,-114,-113,-119,-120,-79,-125,-131,-129,-127,-132,-118,-130,-128,]),'RPAREN':([6,7,8,9,10,11,12,14,15,18,21,22,23,31,32,33,37,38,40,41,42,43,47,48,49,50,51,52,53,54,55,],[-107,-108,-115,-116,-123,-124,21,-121,-122,-117,-126,-133,-134,-79,-79,-79,-114,-113,-119,-120,48,49,-79,-125,-131,-129,-127,-132,-118,-130,-128,]),'RBRACKET':([6,7,8,9,10,11,14,15,18,21,22,23,31,34,37,38,40,41,45,47,48,49,52,53,],[-107,-108,-115,-116,-123,-124,-121,-122,-117,-126,-133,-134,-79,-79,-114,-113,-119,-120,52,-79,-125,-131,-132,-118,]),'ARROW':([7,8,9,10,11,14,15,18,21,31,37,40,41,47,48,49,52,53,],[17,-115,-116,-123,-124,-121,-122,-117,-126,-79,17,-119,-120,-79,-125,-131,-132,-118,]),'UNDER_IDENTIFIER':([16,35,],[27,27,]),'DOT_OPERATOR':([26,27,28,29,],[36,-46,-47,-48,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'st_type_expr':([0,],[1,]),'type_expr':([0,20,24,44,54,],[2,33,34,50,50,]),'type_scheme':([0,20,24,44,54,],[3,3,3,3,3,]),'empty':([0,12,13,17,20,24,31,32,33,34,44,47,54,],[4,23,23,23,4,4,41,23,23,23,4,41,4,]),'type_function_expr':([3,30,],[6,38,]),'type_term':([3,30,],[7,37,]),'type_app_expression':([3,30,],[8,8,]),'type_factor':([3,19,30,39,],[9,31,9,47,]),'type_variable':([3,19,30,39,],[10,10,10,10,]),'type_cons':([3,19,30,39,],[11,11,11,11,]),'_app_args_non_empty':([9,],[18,]),'_maybe_padding':([12,13,17,32,33,34,],[20,24,30,42,43,45,]),'_type_scheme_generics':([16,35,],[25,46,]),'_identifier':([16,35,],[26,26,]),'_type_expr_list':([20,],[32,]),'_app_args':([31,47,],[40,53,]),'_type_expr_list_trail':([44,54,],[51,55,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> st_type_expr","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','__init__.py',438),
  ('expr_term9 -> expr_factor infixr_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','__init__.py',445),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','__init__.py',446),
  ('expr_term7 -> expr_term7 infixl_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','__init__.py',448),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','__init__.py',449),
  ('expr_term6 -> expr_term6 infixl_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','__init__.py',451),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','__init__.py',452),
  ('expr_term2 -> expr_term2 infixl_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','__init__.py',454),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','__init__.py',455),
  ('expr_term1 -> expr_term2 infixr_operator_2 expr_term1','expr_term1',3,'p_expressions_precedence_rules','__init__.py',457),
  ('expr_term1 -> expr_term2','expr_term1',1,'p_expressions_precedence_rules','__init__.py',458),
  ('expr_term0 -> expr infixl_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','__init__.py',460),
  ('expr_term0 -> expr_term1','expr_term0',1,'p_expressions_precedence_rules','__init__.py',461),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','__init__.py',474),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','__init__.py',476),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','__init__.py',478),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','__init__.py',479),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','__init__.py',480),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','__init__.py',481),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','__init__.py',482),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','__init__.py',483),
  ('expr_factor -> simple_list_expr','expr_factor',1,'p_standalone_definitions','__init__.py',484),
  ('expr_factor -> simple_tuple_expr','expr_factor',1,'p_standalone_definitions','__init__.py',485),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','__init__.py',487),
  ('literal -> number','literal',1,'p_literals','__init__.py',495),
  ('literal -> concrete_number','literal',1,'p_literals','__init__.py',496),
  ('literal -> string','literal',1,'p_literals','__init__.py',497),
  ('literal -> char','literal',1,'p_literals','__init__.py',498),
  ('literal -> date','literal',1,'p_literals','__init__.py',499),
  ('literal -> datetime','literal',1,'p_literals','__init__.py',500),
  ('literal -> date_interval','literal',1,'p_literals','__init__.py',501),
  ('literal -> datetime_interval','literal',1,'p_literals','__init__.py',502),
  ('simple_tuple_expr -> LPAREN _list_items RPAREN','simple_tuple_expr',3,'p_tuple_expr','__init__.py',508),
  ('simple_list_expr -> LBRACKET _list_items RBRACKET','simple_list_expr',3,'p_list_expr','__init__.py',515),
  ('_list_items -> expr _list_items_cont','_list_items',2,'p_list_items','__init__.py',522),
  ('_list_items_cont -> COMMA expr _list_items_cont','_list_items_cont',3,'p_list_items','__init__.py',523),
  ('_list_items -> empty','_list_items',1,'p_list_items_empty','__init__.py',529),
  ('_list_items_cont -> empty','_list_items_cont',1,'p_list_items_empty','__init__.py',530),
  ('date -> DATE','date',1,'p_date','__init__.py',536),
  ('datetime -> DATETIME','datetime',1,'p_datetime','__init__.py',542),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','__init__.py',548),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','__init__.py',554),
  ('char -> CHAR','char',1,'p_char','__init__.py',560),
  ('string -> STRING','string',1,'p_string','__init__.py',565),
  ('identifier -> _identifier','identifier',1,'p_variable','__init__.py',570),
  ('_identifier -> UNDER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',577),
  ('_identifier -> UPPER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',578),
  ('_identifier -> LOWER_IDENTIFIER','_identifier',1,'p_bare_identifier','__init__.py',579),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','__init__.py',586),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','__init__.py',591),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','__init__.py',592),
  ('enclosed_expr -> _enclosed_operator','enclosed_expr',1,'p_operators_as_expressios','__init__.py',598),
  ('_enclosed_operator -> LPAREN _st_operator RPAREN','_enclosed_operator',3,'p_enclosed_operator','__init__.py',604),
  ('infixr_operator_9 -> DOT_OPERATOR','infixr_operator_9',1,'p_operator','__init__.py',614),
  ('infixl_operator_7 -> STAR','infixl_operator_7',1,'p_operator','__init__.py',616),
  ('infixl_operator_7 -> SLASH','infixl_operator_7',1,'p_operator','__init__.py',617),
  ('infixl_operator_7 -> DOUBLESLASH','infixl_operator_7',1,'p_operator','__init__.py',618),
  ('infixl_operator_7 -> PERCENT','infixl_operator_7',1,'p_operator','__init__.py',619),
  ('infixl_operator_6 -> PLUS','infixl_operator_6',1,'p_operator','__init__.py',621),
  ('infixl_operator_6 -> MINUS','infixl_operator_6',1,'p_operator','__init__.py',622),
  ('infixr_operator_2 -> COLON','infixr_operator_2',1,'p_operator','__init__.py',624),
  ('infixl_operator_2 -> OPERATOR','infixl_operator_2',1,'p_operator','__init__.py',626),
  ('infixl_operator_2 -> ARROW','infixl_operator_2',1,'p_operator','__init__.py',627),
  ('infixl_operator_0 -> TICK_OPERATOR','infixl_operator_0',1,'p_operator','__init__.py',629),
  ('_st_operator -> infixl_operator_2','_st_operator',1,'p_operator','__init__.py',631),
  ('_st_operator -> infixr_operator_2','_st_operator',1,'p_operator','__init__.py',632),
  ('_st_operator -> infixl_operator_6','_st_operator',1,'p_operator','__init__.py',633),
  ('_st_operator -> infixl_operator_7','_st_operator',1,'p_operator','__init__.py',634),
  ('_st_operator -> infixr_operator_9','_st_operator',1,'p_operator','__init__.py',635),
  ('_st_operator -> COMMA','_st_operator',1,'p_operator','__init__.py',636),
  ('number -> BASE10_INTEGER','number',1,'p_integer','__init__.py',643),
  ('number -> BASE16_INTEGER','number',1,'p_integer','__init__.py',644),
  ('number -> BASE8_INTEGER','number',1,'p_integer','__init__.py',645),
  ('number -> BASE2_INTEGER','number',1,'p_integer','__init__.py',646),
  ('number -> FLOAT','number',1,'p_float','__init__.py',675),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','__init__.py',680),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','__init__.py',681),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','__init__.py',682),
  ('empty -> <empty>','empty',0,'p_empty','__init__.py',691),
  ('lambda_expr -> BACKSLASH patterns ARROW expr','lambda_expr',4,'p_lambda_definition','__init__.py',696),
  ('pattern -> identifier','pattern',1,'p_pattern','__init__.py',705),
  ('pattern -> literal','pattern',1,'p_pattern','__init__.py',706),
  ('pattern -> cons_pattern','pattern',1,'p_pattern','__init__.py',707),
  ('pattern -> list_cons_pattern','pattern',1,'p_pattern','__init__.py',708),
  ('pattern -> tuple_cons_pattern','pattern',1,'p_pattern','__init__.py',709),
  ('pattern -> empty_list_pattern','pattern',1,'p_pattern','__init__.py',710),
  ('pattern -> empty_tuple_pattern','pattern',1,'p_pattern','__init__.py',711),
  ('list_cons_pattern -> pattern COLON pattern','list_cons_pattern',3,'p_list_cons_for_param','__init__.py',717),
  ('cons_pattern -> LPAREN _identifier SPACE patterns RPAREN','cons_pattern',5,'p_param_pattern','__init__.py',723),
  ('empty_list_pattern -> LBRACKET RBRACKET','empty_list_pattern',2,'p_empty_list_as_pattern','__init__.py',728),
  ('empty_tuple_pattern -> LPAREN RPAREN','empty_tuple_pattern',2,'p_unit_value_as_pattern','__init__.py',734),
  ('tuple_cons_pattern -> LPAREN patterns_comma_sep RPAREN','tuple_cons_pattern',3,'p_tuple_cons_pattern','__init__.py',740),
  ('patterns -> pattern _patterns','patterns',2,'p_patterns','__init__.py',748),
  ('patterns_comma_sep -> pattern _patterns_comma','patterns_comma_sep',2,'p_patterns','__init__.py',749),
  ('_patterns -> SPACE pattern _patterns','_patterns',3,'p_patterns','__init__.py',750),
  ('_patterns_comma -> COMMA pattern _patterns_comma','_patterns_comma',3,'p_patterns','__init__.py',751),
  ('_patterns -> empty','_patterns',1,'p_patterns_empty','__init__.py',757),
  ('_patterns_comma -> empty','_patterns_comma',1,'p_patterns_empty','__init__.py',758),
  ('equation -> _identifier _patterns EQ expr','equation',4,'p_equation','__init__.py',764),
  ('equation -> _enclosed_operator _patterns EQ expr','equation',4,'p_equation','__init__.py',765),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','__init__.py',775),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','__init__.py',784),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','__init__.py',793),
  ('letexpr -> KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','__init__.py',803),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','__init__.py',811),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','__init__.py',812),
  ('type_expr -> type_scheme type_function_expr','type_expr',2,'p_type_expr','__init__.py',822),
  ('type_expr -> type_scheme type_term','type_expr',2,'p_type_expr','__init__.py',823),
  ('type_scheme -> empty','type_scheme',1,'p_type_scheme_empty','__init__.py',832),
  ('type_scheme -> KEYWORD_FORALL SPACE _type_scheme_generics','type_scheme',3,'p_type_scheme','__init__.py',836),
  ('_type_scheme_generics -> _identifier SPACE _type_scheme_generics','_type_scheme_generics',3,'p_type_scheme_generics','__init__.py',843),
  ('_type_scheme_generics -> _identifier DOT_OPERATOR','_type_scheme_generics',2,'p_last_type_scheme_generic','__init__.py',848),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','__init__.py',853),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','__init__.py',854),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','__init__.py',864),
  ('type_term -> type_factor','type_term',1,'p_type_term','__init__.py',865),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','__init__.py',870),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','__init__.py',882),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','__init__.py',883),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','__init__.py',889),
  ('type_variable -> LOWER_IDENTIFIER','type_variable',1,'p_type_variable','__init__.py',894),
  ('type_cons -> UPPER_IDENTIFIER','type_cons',1,'p_type_cons','__init__.py',899),
  ('type_factor -> type_variable','type_factor',1,'p_type_factor_identifier','__init__.py',904),
  ('type_factor -> type_cons','type_factor',1,'p_type_factor_identifier','__init__.py',905),
  ('type_factor -> LPAREN _maybe_padding _type_expr_list _maybe_padding RPAREN','type_factor',5,'p_type_factor_tuple','__init__.py',912),
  ('type_factor -> LPAREN RPAREN','type_factor',2,'p_type_factor_unit_type','__init__.py',918),
  ('_type_expr_list -> type_expr COMMA _type_expr_list_trail','_type_expr_list',3,'p_type_expr_list','__init__.py',923),
  ('_type_expr_list_trail -> type_expr COMMA _type_expr_list_trail','_type_expr_list_trail',3,'p_type_expr_list','__init__.py',924),
  ('_type_expr_list_trail -> type_expr','_type_expr_list_trail',1,'p_type_expr_list_last_item','__init__.py',930),
  ('_type_expr_list_trail -> type_expr COMMA','_type_expr_list_trail',2,'p_type_expr_list_last_item','__init__.py',931),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','__init__.py',937),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','__init__.py',942),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','__init__.py',947),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','__init__.py',948),
  ('program -> definitions','program',1,'p_program','__init__.py',954),
  ('definitions -> definition _definition_set','definitions',2,'p_definitions','__init__.py',970),
  ('_definition_set -> NEWLINE definition _definition_set','_definition_set',3,'p_definition_set','__init__.py',976),
  ('_definition_set -> empty','_definition_set',1,'p_definition_set2','__init__.py',982),
  ('definition -> nametype_decl','definition',1,'p_definition','__init__.py',988),
  ('definition -> valuedef','definition',1,'p_definition','__init__.py',989),
  ('definition -> datatype_definition','definition',1,'p_definition','__init__.py',990),
  ('valuedef -> equation','valuedef',1,'p_valuedef','__init__.py',996),
  ('nametype_decl -> _identifier COLON COLON st_type_expr','nametype_decl',4,'p_nametype_decl','__init__.py',1002),
  ('nametype_decl -> LPAREN _st_operator RPAREN COLON COLON st_type_expr','nametype_decl',6,'p_nametype_decl_operators','__init__.py',1011),
  ('datatype_definition -> _datatype_lhs EQ _data_rhs','datatype_definition',3,'p_datatype_definition','__init__.py',1020),
  ('_datatype_lhs -> KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params','_datatype_lhs',4,'p_datatype_lhs','__init__.py',1028),
  ('_cons_params -> SPACE LOWER_IDENTIFIER _cons_params','_cons_params',3,'p_datatype_cons_params','__init__.py',1037),
  ('_cons_params -> empty','_cons_params',1,'p_datatype_cons_params_empty','__init__.py',1043),
  ('_data_rhs -> data_cons _data_conses','_data_rhs',2,'p_datatype_body','__init__.py',1049),
  ('_data_conses -> _maybe_padding PIPE data_cons _data_conses','_data_conses',4,'p_datatype_body','__init__.py',1050),
  ('_data_conses -> empty','_data_conses',1,'p_datatype_conses_empty','__init__.py',1056),
  ('data_cons -> _data_cons','data_cons',1,'p_data_cons','__init__.py',1061),
  ('_data_cons -> UPPER_IDENTIFIER _cons_args','_data_cons',2,'p_bare_data_cons','__init__.py',1067),
  ('_cons_args -> SPACE cons_arg _cons_args','_cons_args',3,'p_data_cons_args','__init__.py',1072),
  ('_cons_args -> empty','_cons_args',1,'p_data_cons_args_empty','__init__.py',1078),
  ('cons_arg -> type_variable','cons_arg',1,'p_cons_arg','__init__.py',1084),
  ('cons_arg -> type_cons','cons_arg',1,'p_cons_arg','__init__.py',1085),
  ('cons_arg -> _cons_arg_factor','cons_arg',1,'p_cons_arg','__init__.py',1086),
  ('_cons_arg_factor -> LPAREN type_expr RPAREN','_cons_arg_factor',3,'p_cons_arg_factor','__init__.py',1092),
  ('_cons_arg_factor -> LBRACKET type_expr RBRACKET','_cons_arg_factor',3,'p_cons_arg_factor_list','__init__.py',1098),
]
