
# program_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW ATTR_ACCESS BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FLOAT KEYWORD_CLASS KEYWORD_DATA KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LOWER_IDENTIFIER LPAREN MINUS NEWLINE OPERATOR PADDING PERCENT PIPE PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATOR UNDER_IDENTIFIER UPPER_IDENTIFIERexpr_factor : expr_factor SPACE expr_factorexpr_factor : ATTR_ACCESS\n    expr_term9 : expr_factor infix_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infix_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infix_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infix_operator_2 expr_term6\n               | expr_term6\n\n    expr_term0 : expr infix_operator_0 expr_term0\n               | expr_term2\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | unit_value\n                | letexpr\n                | where_expr\n                | lambda_expr\n\n    st_type_expr : type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    unit_value : LPAREN RPAREN\n    char : CHARstring : STRINGidentifier : _identifier\n\n    _identifier : UNDER_IDENTIFIER\n                   | UPPER_IDENTIFIER\n                   | LOWER_IDENTIFIER\n\n    enclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : LPAREN DOT_OPERATOR RPAREN\n                     | LPAREN operator RPAREN\n    \n    infix_operator_9 : DOT_OPERATOR\n\n    infix_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infix_operator_6 : PLUS\n                     | MINUS\n\n    infix_operator_2 : OPERATOR\n                     | ARROW\n\n    infix_operator_0 : TICK_OPERATOR\n\n    operator : infix_operator_0\n             | infix_operator_2\n             | infix_operator_6\n             | infix_operator_7\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH parameters ARROW expr\n    parameters : _identifier _parameters\n       _parameters : SPACE _identifier _parameters\n    _parameters : empty\n    pattern : parametersequation : pattern EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    type_expr : type_function_expr\n                 | type_termtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_variable : LOWER_IDENTIFIERtype_cons : UPPER_IDENTIFIERtype_factor : type_variable\n                   | type_cons\n\n    type_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET_maybe_padding : PADDING\n                      | empty\n    program : definitions\n    definitions : definition _definition_set\n    _definition_set : NEWLINE definition _definition_set\n    _definition_set : empty\n    definition : nametype_decl\n                  | valuedef\n                  | datatype_definition\n    valuedef : equation\n    nametype_decl : _identifier COLON COLON st_type_expr\n    datatype_definition : _datatype_lhs EQ _data_rhs\n    _datatype_lhs : KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params\n    _cons_params : SPACE LOWER_IDENTIFIER _cons_params\n    _cons_params : empty\n    _data_rhs : data_cons _data_conses\n       _data_conses : _maybe_padding PIPE data_cons _data_conses\n    _data_conses : emptydata_cons : _data_cons_data_cons : UPPER_IDENTIFIER _cons_args_cons_args : SPACE cons_arg _cons_args\n    _cons_args : empty\n    cons_arg : type_variable\n       cons_arg : type_cons\n       cons_arg : _cons_arg_factor\n    _cons_arg_factor : LPAREN type_expr RPAREN\n    _cons_arg_factor : LBRACKET type_expr RBRACKET\n    '
    
_lr_action_items = {'UNDER_IDENTIFIER':([0,17,21,24,43,57,59,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,114,123,144,145,154,155,156,159,173,187,],[10,10,10,10,10,10,10,10,-56,10,-54,-55,10,-52,-53,10,-48,-49,-50,-51,10,10,-47,10,10,10,10,10,-42,-45,-46,10,10,10,]),'UPPER_IDENTIFIER':([0,17,21,23,24,25,27,43,57,59,81,82,89,91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,114,123,129,131,132,133,134,135,140,141,144,145,154,155,156,159,161,173,179,187,],[11,11,11,32,11,71,84,11,11,11,-69,-69,-98,84,11,-56,11,-54,-55,11,-52,-53,11,-48,-49,-50,-51,11,11,-47,11,11,11,-69,84,84,-99,84,32,84,84,11,11,-42,-45,-46,11,84,11,84,11,]),'LOWER_IDENTIFIER':([0,17,21,24,27,43,57,59,81,82,89,91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,114,123,126,129,131,132,133,134,140,141,144,145,154,155,156,159,161,173,179,187,],[12,12,12,12,83,12,12,12,-69,-69,-98,83,12,-56,12,-54,-55,12,-52,-53,12,-48,-49,-50,-51,12,12,-47,12,12,12,160,-69,83,83,-99,83,83,83,12,12,-42,-45,-46,12,83,12,83,12,]),'KEYWORD_DATA':([0,17,],[14,14,]),'$end':([1,2,3,4,5,6,8,10,11,12,16,18,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,83,84,86,88,90,92,109,112,116,130,136,137,138,139,143,146,147,148,149,150,151,152,153,154,155,156,158,162,165,166,169,170,172,174,175,177,178,180,181,184,185,186,188,189,190,191,192,193,194,195,],[0,-100,-69,-104,-105,-106,-107,-39,-40,-41,-101,-103,-69,-109,-69,-116,-69,-75,-14,-12,-10,-8,-6,-4,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-102,-108,-22,-82,-83,-86,-87,-94,-95,-92,-93,-113,-115,-117,-119,-44,-43,-35,-88,-69,-120,-121,-122,-11,-9,-7,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,-69,-69,-118,-80,-81,-76,-78,-70,-85,-84,-90,-91,-114,-123,-124,-69,-69,-96,-97,-79,-13,-77,-89,]),'NEWLINE':([3,4,5,6,8,10,11,12,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,73,74,75,76,77,78,79,80,83,84,86,88,90,92,109,112,116,130,136,137,138,139,143,146,147,148,149,150,151,152,153,154,155,156,158,162,165,166,169,170,172,174,175,177,178,180,181,184,185,186,188,189,190,191,192,193,194,195,],[17,-104,-105,-106,-107,-39,-40,-41,17,-109,-69,-116,-69,-75,-14,-12,-10,-8,-6,-4,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-108,-22,-82,-83,-86,-87,-94,-95,-92,-93,-113,-115,-117,-119,-44,-43,-35,-88,-69,-120,-121,-122,-11,-9,-7,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,-69,-69,-118,-80,-81,-76,-78,-70,-85,-84,-90,-91,-114,-123,-124,-69,-69,-96,-97,-79,-13,-77,-89,]),'COLON':([7,10,11,12,19,],[19,-39,-40,-41,27,]),'SPACE':([7,10,11,12,14,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,83,84,94,109,112,116,125,136,137,138,139,143,146,147,148,149,150,151,152,153,154,155,156,158,160,162,169,170,171,172,174,175,185,186,188,189,190,191,192,193,194,],[21,-39,-40,-41,25,21,91,-75,-14,-12,-10,-8,-6,108,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,123,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,126,131,-94,-95,-92,-93,144,-44,108,-35,21,91,-120,-121,-122,-11,-9,-7,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,126,179,-80,-81,187,-76,-78,-70,-123,-124,-69,179,-96,-97,-79,-13,-77,]),'EQ':([7,9,10,11,12,13,15,20,22,28,71,85,125,127,128,160,176,],[-69,23,-39,-40,-41,24,-74,-71,-73,-69,-69,-72,-69,-110,-112,-69,-111,]),'ARROW':([10,11,12,20,22,28,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,76,77,78,79,80,83,84,85,109,111,112,116,124,125,130,143,146,147,148,149,150,151,152,153,154,155,156,158,162,169,170,172,174,175,177,180,181,188,189,190,191,192,193,194,195,],[-39,-40,-41,-71,-73,-69,-75,-14,98,-10,-8,-6,-4,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,98,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,129,-86,-87,-94,-95,-92,-93,-72,-44,98,-4,-35,159,-69,-88,-11,-9,-7,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,-69,-80,-81,-76,-78,-70,129,-90,-91,-69,-69,-96,-97,-79,-13,-77,-89,]),'KEYWORD_WHERE':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,109,112,113,115,116,142,143,146,147,148,149,150,151,152,153,154,155,156,158,169,170,172,174,175,188,192,193,194,],[-39,-40,-41,94,-14,-12,-10,-8,-6,-4,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-44,-4,94,94,-35,94,-11,-9,-7,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,94,-69,-79,94,-77,]),'TICK_OPERATOR':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,109,111,112,113,115,116,142,143,146,147,148,149,150,151,152,153,154,155,156,158,169,170,172,174,175,188,192,193,194,],[-39,-40,-41,95,-14,-12,-10,-8,-6,-4,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,95,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-44,95,-4,95,95,-35,95,-11,-9,-7,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,95,-69,-79,95,-77,]),'PADDING':([10,11,12,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,75,76,77,78,79,80,81,82,83,84,90,92,94,109,112,116,129,130,136,137,138,139,143,146,147,148,149,150,151,152,153,154,155,156,158,162,163,164,165,166,169,170,172,174,175,177,178,180,181,185,186,188,189,190,191,192,193,194,195,],[-39,-40,-41,89,-116,-69,-75,-14,-12,-10,-8,-6,-4,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-82,-83,-86,-87,-94,-95,89,89,-92,-93,-117,-119,145,-44,-43,-35,89,-88,-69,-120,-121,-122,-11,-9,-7,-5,-3,-1,-66,-67,-68,-42,-45,-46,173,-69,89,89,89,-118,-80,-81,-76,-78,-70,-85,-84,-90,-91,-123,-124,173,-69,-96,-97,-79,-13,-77,-89,]),'KEYWORD_IN':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,109,112,116,143,146,147,148,149,150,151,152,153,154,155,156,157,158,169,170,172,174,175,188,192,193,194,],[-39,-40,-41,-75,-14,-12,-10,-8,-6,-4,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-44,-43,-35,-11,-9,-7,-5,-3,-1,-66,-67,-68,-42,-45,-46,171,-69,-80,-81,-76,-78,-70,-69,-79,-13,-77,]),'DOT_OPERATOR':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,109,111,112,116,143,146,147,148,149,150,151,152,153,154,155,156,158,169,170,172,174,175,188,192,193,194,],[-39,-40,-41,-75,-14,-12,-10,-8,-6,110,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,117,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-44,117,110,-35,-11,-9,-7,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,-70,-69,-79,-13,-77,]),'LPAREN':([10,11,12,24,27,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,81,82,89,91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,116,129,131,132,133,134,140,141,143,146,147,148,149,150,151,152,153,154,155,156,158,159,161,169,170,172,174,175,179,187,188,192,193,194,],[-39,-40,-41,57,81,-75,-14,-12,-10,-8,-6,111,-2,-15,-16,57,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,57,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-69,-69,-98,140,57,-56,57,-54,-55,57,-52,-53,57,-48,-49,-50,-51,57,57,-44,-47,57,111,-35,-69,81,81,-99,81,81,81,-11,-9,-7,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,57,81,-80,-81,-76,-78,-70,81,57,-69,-79,-13,-77,]),'STAR':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,109,111,112,116,143,146,147,148,149,150,151,152,153,154,155,156,158,169,170,172,174,175,188,192,193,194,],[-39,-40,-41,-75,-14,-12,-10,103,-6,-4,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,103,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-44,103,-4,-35,-11,-9,103,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,-70,-69,-79,-13,-77,]),'SLASH':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,109,111,112,116,143,146,147,148,149,150,151,152,153,154,155,156,158,169,170,172,174,175,188,192,193,194,],[-39,-40,-41,-75,-14,-12,-10,104,-6,-4,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,104,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-44,104,-4,-35,-11,-9,104,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,-70,-69,-79,-13,-77,]),'DOUBLESLASH':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,109,111,112,116,143,146,147,148,149,150,151,152,153,154,155,156,158,169,170,172,174,175,188,192,193,194,],[-39,-40,-41,-75,-14,-12,-10,105,-6,-4,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,105,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-44,105,-4,-35,-11,-9,105,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,-70,-69,-79,-13,-77,]),'PERCENT':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,109,111,112,116,143,146,147,148,149,150,151,152,153,154,155,156,158,169,170,172,174,175,188,192,193,194,],[-39,-40,-41,-75,-14,-12,-10,106,-6,-4,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,106,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-44,106,-4,-35,-11,-9,106,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,-70,-69,-79,-13,-77,]),'PLUS':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,109,111,112,116,143,146,147,148,149,150,151,152,153,154,155,156,158,169,170,172,174,175,188,192,193,194,],[-39,-40,-41,-75,-14,-12,100,-8,-6,-4,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,100,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-44,100,-4,-35,-11,100,-7,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,-70,-69,-79,-13,-77,]),'MINUS':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,109,111,112,116,143,146,147,148,149,150,151,152,153,154,155,156,158,169,170,172,174,175,188,192,193,194,],[-39,-40,-41,-75,-14,-12,101,-8,-6,-4,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,101,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-44,101,-4,-35,-11,101,-7,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,-70,-69,-79,-13,-77,]),'OPERATOR':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,109,111,112,116,143,146,147,148,149,150,151,152,153,154,155,156,158,169,170,172,174,175,188,192,193,194,],[-39,-40,-41,-75,-14,97,-10,-8,-6,-4,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,97,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-44,97,-4,-35,-11,-9,-7,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,-80,-81,-76,-78,-70,-69,-79,-13,-77,]),'RPAREN':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,75,76,77,78,79,80,83,84,89,95,97,98,100,101,103,104,105,106,109,112,115,116,117,118,119,120,121,122,130,133,143,146,147,148,149,150,151,152,153,154,155,156,158,162,163,167,169,170,172,174,175,177,178,180,181,182,188,189,190,191,192,193,194,195,],[-39,-40,-41,-75,-14,-12,-10,-8,-6,-4,-2,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-28,-29,-30,-38,116,-61,-62,-63,-64,-65,-37,-36,-31,-32,-33,-34,-82,-83,-86,-87,-94,-95,-92,-93,-98,-56,-54,-55,-52,-53,-48,-49,-50,-51,-44,-43,154,-35,155,156,-57,-58,-59,-60,-88,-99,-11,-9,-7,-5,-3,-1,-66,-67,-68,-42,-45,-46,-69,-69,-69,185,-80,-81,-76,-78,-70,-85,-84,-90,-91,190,-69,-69,-96,-97,-79,-13,-77,-89,]),'ATTR_ACCESS':([24,43,57,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,154,155,156,159,187,],[40,40,40,40,-56,40,-54,-55,40,-52,-53,40,-48,-49,-50,-51,40,40,-47,40,-42,-45,-46,40,40,]),'KEYWORD_LET':([24,43,57,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,154,155,156,159,187,],[58,58,58,58,-56,58,-54,-55,58,-52,-53,58,-48,-49,-50,-51,58,58,-47,58,-42,-45,-46,58,58,]),'BACKSLASH':([24,43,57,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,154,155,156,159,187,],[59,59,59,59,-56,59,-54,-55,59,-52,-53,59,-48,-49,-50,-51,59,59,-47,59,-42,-45,-46,59,59,]),'BASE10_INTEGER':([24,43,57,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,154,155,156,159,187,],[60,60,60,60,-56,60,-54,-55,60,-52,-53,60,-48,-49,-50,-51,60,60,-47,60,-42,-45,-46,60,60,]),'BASE16_INTEGER':([24,43,57,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,154,155,156,159,187,],[61,61,61,61,-56,61,-54,-55,61,-52,-53,61,-48,-49,-50,-51,61,61,-47,61,-42,-45,-46,61,61,]),'BASE8_INTEGER':([24,43,57,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,154,155,156,159,187,],[62,62,62,62,-56,62,-54,-55,62,-52,-53,62,-48,-49,-50,-51,62,62,-47,62,-42,-45,-46,62,62,]),'BASE2_INTEGER':([24,43,57,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,154,155,156,159,187,],[63,63,63,63,-56,63,-54,-55,63,-52,-53,63,-48,-49,-50,-51,63,63,-47,63,-42,-45,-46,63,63,]),'FLOAT':([24,43,57,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,154,155,156,159,187,],[64,64,64,64,-56,64,-54,-55,64,-52,-53,64,-48,-49,-50,-51,64,64,-47,64,-42,-45,-46,64,64,]),'STRING':([24,43,57,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,114,154,155,156,159,187,],[65,65,65,65,-56,65,-54,-55,65,-52,-53,65,-48,-49,-50,-51,65,65,-47,65,65,-42,-45,-46,65,65,]),'CHAR':([24,43,57,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,114,154,155,156,159,187,],[66,66,66,66,-56,66,-54,-55,66,-52,-53,66,-48,-49,-50,-51,66,66,-47,66,66,-42,-45,-46,66,66,]),'DATE':([24,43,57,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,154,155,156,159,187,],[67,67,67,67,-56,67,-54,-55,67,-52,-53,67,-48,-49,-50,-51,67,67,-47,67,-42,-45,-46,67,67,]),'DATETIME':([24,43,57,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,154,155,156,159,187,],[68,68,68,68,-56,68,-54,-55,68,-52,-53,68,-48,-49,-50,-51,68,68,-47,68,-42,-45,-46,68,68,]),'DATE_INTERVAL':([24,43,57,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,154,155,156,159,187,],[69,69,69,69,-56,69,-54,-55,69,-52,-53,69,-48,-49,-50,-51,69,69,-47,69,-42,-45,-46,69,69,]),'DATETIME_INTERVAL':([24,43,57,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,154,155,156,159,187,],[70,70,70,70,-56,70,-54,-55,70,-52,-53,70,-48,-49,-50,-51,70,70,-47,70,-42,-45,-46,70,70,]),'LBRACKET':([27,81,82,89,91,129,131,132,133,134,140,141,161,179,],[82,-69,-69,-98,141,-69,82,82,-99,82,82,82,82,82,]),'PIPE':([30,31,32,83,84,87,88,89,90,92,136,137,138,139,165,166,185,186,],[-69,-116,-69,-92,-93,135,-99,-98,-117,-119,-69,-120,-121,-122,-69,-118,-123,-124,]),'ANNOTATION':([48,60,61,62,63,64,],[114,-61,-62,-63,-64,-65,]),'RBRACKET':([75,76,77,78,79,80,83,84,89,130,133,162,164,168,177,178,180,181,183,189,190,191,195,],[-82,-83,-86,-87,-94,-95,-92,-93,-98,-88,-99,-69,-69,186,-85,-84,-90,-91,191,-69,-96,-97,-89,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'definitions':([0,],[2,]),'definition':([0,17,],[3,26,]),'nametype_decl':([0,17,],[4,4,]),'valuedef':([0,17,],[5,5,]),'datatype_definition':([0,17,],[6,6,]),'_identifier':([0,17,21,24,43,57,59,93,96,99,102,107,108,111,114,123,144,145,159,173,187,],[7,7,28,56,56,56,125,56,56,56,56,56,56,56,56,125,125,125,56,125,56,]),'equation':([0,17,123,144,145,173,],[8,8,158,158,158,188,]),'_datatype_lhs':([0,17,],[9,9,]),'pattern':([0,17,123,144,145,173,],[13,13,13,13,13,13,]),'parameters':([0,17,59,123,144,145,173,],[15,15,124,15,15,15,15,]),'_definition_set':([3,26,],[16,72,]),'empty':([3,7,26,28,30,32,71,81,82,125,129,136,158,160,162,163,164,165,188,189,],[18,22,18,22,88,92,128,133,133,22,133,92,174,128,181,133,133,88,174,181,]),'_parameters':([7,28,125,],[20,85,20,]),'_data_rhs':([23,],[29,]),'data_cons':([23,135,],[30,165,]),'_data_cons':([23,135,],[31,31,]),'expr':([24,43,57,93,96,99,102,107,108,111,159,187,],[33,113,115,142,113,113,113,113,113,115,175,193,]),'expr_term0':([24,43,57,93,96,99,102,107,108,111,159,187,],[34,34,34,143,34,34,34,34,34,34,34,34,]),'expr_term2':([24,43,57,93,96,99,102,107,108,111,159,187,],[35,35,35,35,35,35,35,35,35,35,35,35,]),'expr_term6':([24,43,57,93,96,99,102,107,108,111,159,187,],[36,36,36,36,146,36,36,36,36,36,36,36,]),'expr_term7':([24,43,57,93,96,99,102,107,108,111,159,187,],[37,37,37,37,37,147,37,37,37,37,37,37,]),'expr_term9':([24,43,57,93,96,99,102,107,108,111,159,187,],[38,38,38,38,38,38,148,149,38,38,38,38,]),'expr_factor':([24,43,57,93,96,99,102,107,108,111,159,187,],[39,112,39,39,39,39,39,39,150,39,39,39,]),'literal':([24,43,57,93,96,99,102,107,108,111,159,187,],[41,41,41,41,41,41,41,41,41,41,41,41,]),'identifier':([24,43,57,93,96,99,102,107,108,111,114,159,187,],[42,42,42,42,42,42,42,42,42,42,153,42,42,]),'enclosed_expr':([24,39,43,57,93,96,99,102,107,108,111,112,150,159,187,],[43,109,43,43,43,43,43,43,43,43,43,109,109,43,43,]),'unit_value':([24,43,57,93,96,99,102,107,108,111,159,187,],[44,44,44,44,44,44,44,44,44,44,44,44,]),'letexpr':([24,43,57,93,96,99,102,107,108,111,159,187,],[45,45,45,45,45,45,45,45,45,45,45,45,]),'where_expr':([24,43,57,93,96,99,102,107,108,111,159,187,],[46,46,46,46,46,46,46,46,46,46,46,46,]),'lambda_expr':([24,43,57,93,96,99,102,107,108,111,159,187,],[47,47,47,47,47,47,47,47,47,47,47,47,]),'number':([24,43,57,93,96,99,102,107,108,111,159,187,],[48,48,48,48,48,48,48,48,48,48,48,48,]),'concrete_number':([24,43,57,93,96,99,102,107,108,111,159,187,],[49,49,49,49,49,49,49,49,49,49,49,49,]),'string':([24,43,57,93,96,99,102,107,108,111,114,159,187,],[50,50,50,50,50,50,50,50,50,50,151,50,50,]),'char':([24,43,57,93,96,99,102,107,108,111,114,159,187,],[51,51,51,51,51,51,51,51,51,51,152,51,51,]),'date':([24,43,57,93,96,99,102,107,108,111,159,187,],[52,52,52,52,52,52,52,52,52,52,52,52,]),'datetime':([24,43,57,93,96,99,102,107,108,111,159,187,],[53,53,53,53,53,53,53,53,53,53,53,53,]),'date_interval':([24,43,57,93,96,99,102,107,108,111,159,187,],[54,54,54,54,54,54,54,54,54,54,54,54,]),'datetime_interval':([24,43,57,93,96,99,102,107,108,111,159,187,],[55,55,55,55,55,55,55,55,55,55,55,55,]),'st_type_expr':([27,],[73,]),'type_expr':([27,132,134,140,141,],[74,163,164,167,168,]),'type_function_expr':([27,132,134,140,141,161,],[75,75,75,75,75,178,]),'type_term':([27,132,134,140,141,161,],[76,76,76,76,76,177,]),'type_app_expression':([27,132,134,140,141,161,],[77,77,77,77,77,77,]),'type_factor':([27,131,132,134,140,141,161,179,],[78,162,78,78,78,78,78,189,]),'type_variable':([27,91,131,132,134,140,141,161,179,],[79,137,79,79,79,79,79,79,79,]),'type_cons':([27,91,131,132,134,140,141,161,179,],[80,138,80,80,80,80,80,80,80,]),'_data_conses':([30,165,],[86,184,]),'_maybe_padding':([30,81,82,129,163,164,165,],[87,132,134,161,182,183,87,]),'_cons_args':([32,136,],[90,166,]),'infix_operator_0':([33,57,111,113,115,142,175,193,],[93,119,119,93,93,93,93,93,]),'infix_operator_2':([35,57,111,],[96,120,120,]),'infix_operator_6':([36,57,111,146,],[99,121,121,99,]),'infix_operator_7':([37,57,111,147,],[102,122,122,102,]),'infix_operator_9':([39,112,150,],[107,107,107,]),'operator':([57,111,],[118,118,]),'_cons_params':([71,160,],[127,176,]),'_app_args_non_empty':([78,],[130,]),'cons_arg':([91,],[136,]),'_cons_arg_factor':([91,],[139,]),'equations':([123,144,145,],[157,169,170,]),'_equation_set':([158,188,],[172,194,]),'_app_args':([162,189,],[180,195,]),'st_expr':([187,],[192,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','parsers.py',481),
  ('expr_factor -> ATTR_ACCESS','expr_factor',1,'p_attr_access','parsers.py',486),
  ('expr_term9 -> expr_factor infix_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','parsers.py',498),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','parsers.py',499),
  ('expr_term7 -> expr_term7 infix_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','parsers.py',501),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','parsers.py',502),
  ('expr_term6 -> expr_term6 infix_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','parsers.py',504),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','parsers.py',505),
  ('expr_term2 -> expr_term2 infix_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','parsers.py',507),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','parsers.py',508),
  ('expr_term0 -> expr infix_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','parsers.py',510),
  ('expr_term0 -> expr_term2','expr_term0',1,'p_expressions_precedence_rules','parsers.py',511),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','parsers.py',524),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','parsers.py',526),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','parsers.py',528),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','parsers.py',529),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','parsers.py',530),
  ('expr_factor -> unit_value','expr_factor',1,'p_standalone_definitions','parsers.py',531),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','parsers.py',532),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','parsers.py',533),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','parsers.py',534),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','parsers.py',536),
  ('literal -> number','literal',1,'p_literals','parsers.py',544),
  ('literal -> concrete_number','literal',1,'p_literals','parsers.py',545),
  ('literal -> string','literal',1,'p_literals','parsers.py',546),
  ('literal -> char','literal',1,'p_literals','parsers.py',547),
  ('literal -> date','literal',1,'p_literals','parsers.py',548),
  ('literal -> datetime','literal',1,'p_literals','parsers.py',549),
  ('literal -> date_interval','literal',1,'p_literals','parsers.py',550),
  ('literal -> datetime_interval','literal',1,'p_literals','parsers.py',551),
  ('date -> DATE','date',1,'p_date','parsers.py',557),
  ('datetime -> DATETIME','datetime',1,'p_datetime','parsers.py',563),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','parsers.py',569),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','parsers.py',575),
  ('unit_value -> LPAREN RPAREN','unit_value',2,'p_unit_value','parsers.py',581),
  ('char -> CHAR','char',1,'p_char','parsers.py',587),
  ('string -> STRING','string',1,'p_string','parsers.py',592),
  ('identifier -> _identifier','identifier',1,'p_variable','parsers.py',597),
  ('_identifier -> UNDER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',604),
  ('_identifier -> UPPER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',605),
  ('_identifier -> LOWER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',606),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','parsers.py',613),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','parsers.py',618),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','parsers.py',619),
  ('enclosed_expr -> LPAREN DOT_OPERATOR RPAREN','enclosed_expr',3,'p_operators_as_expressios','parsers.py',625),
  ('enclosed_expr -> LPAREN operator RPAREN','enclosed_expr',3,'p_operators_as_expressios','parsers.py',626),
  ('infix_operator_9 -> DOT_OPERATOR','infix_operator_9',1,'p_operator','parsers.py',636),
  ('infix_operator_7 -> STAR','infix_operator_7',1,'p_operator','parsers.py',638),
  ('infix_operator_7 -> SLASH','infix_operator_7',1,'p_operator','parsers.py',639),
  ('infix_operator_7 -> DOUBLESLASH','infix_operator_7',1,'p_operator','parsers.py',640),
  ('infix_operator_7 -> PERCENT','infix_operator_7',1,'p_operator','parsers.py',641),
  ('infix_operator_6 -> PLUS','infix_operator_6',1,'p_operator','parsers.py',643),
  ('infix_operator_6 -> MINUS','infix_operator_6',1,'p_operator','parsers.py',644),
  ('infix_operator_2 -> OPERATOR','infix_operator_2',1,'p_operator','parsers.py',646),
  ('infix_operator_2 -> ARROW','infix_operator_2',1,'p_operator','parsers.py',647),
  ('infix_operator_0 -> TICK_OPERATOR','infix_operator_0',1,'p_operator','parsers.py',649),
  ('operator -> infix_operator_0','operator',1,'p_operator','parsers.py',651),
  ('operator -> infix_operator_2','operator',1,'p_operator','parsers.py',652),
  ('operator -> infix_operator_6','operator',1,'p_operator','parsers.py',653),
  ('operator -> infix_operator_7','operator',1,'p_operator','parsers.py',654),
  ('number -> BASE10_INTEGER','number',1,'p_integer','parsers.py',661),
  ('number -> BASE16_INTEGER','number',1,'p_integer','parsers.py',662),
  ('number -> BASE8_INTEGER','number',1,'p_integer','parsers.py',663),
  ('number -> BASE2_INTEGER','number',1,'p_integer','parsers.py',664),
  ('number -> FLOAT','number',1,'p_float','parsers.py',693),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','parsers.py',698),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','parsers.py',699),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','parsers.py',700),
  ('empty -> <empty>','empty',0,'p_empty','parsers.py',709),
  ('lambda_expr -> BACKSLASH parameters ARROW expr','lambda_expr',4,'p_lambda_definition','parsers.py',714),
  ('parameters -> _identifier _parameters','parameters',2,'p_parameters','parsers.py',722),
  ('_parameters -> SPACE _identifier _parameters','_parameters',3,'p_parameters','parsers.py',723),
  ('_parameters -> empty','_parameters',1,'p_empty__parameters','parsers.py',732),
  ('pattern -> parameters','pattern',1,'p_pattern','parsers.py',738),
  ('equation -> pattern EQ expr','equation',3,'p_equation','parsers.py',744),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','parsers.py',754),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','parsers.py',763),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','parsers.py',772),
  ('letexpr -> KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','parsers.py',782),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','parsers.py',790),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','parsers.py',791),
  ('type_expr -> type_function_expr','type_expr',1,'p_type_expr','parsers.py',801),
  ('type_expr -> type_term','type_expr',1,'p_type_expr','parsers.py',802),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','parsers.py',807),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','parsers.py',808),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','parsers.py',818),
  ('type_term -> type_factor','type_term',1,'p_type_term','parsers.py',819),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','parsers.py',824),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','parsers.py',836),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','parsers.py',837),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','parsers.py',845),
  ('type_variable -> LOWER_IDENTIFIER','type_variable',1,'p_type_variable','parsers.py',850),
  ('type_cons -> UPPER_IDENTIFIER','type_cons',1,'p_type_cons','parsers.py',855),
  ('type_factor -> type_variable','type_factor',1,'p_type_factor_identifier','parsers.py',860),
  ('type_factor -> type_cons','type_factor',1,'p_type_factor_identifier','parsers.py',861),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','parsers.py',868),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','parsers.py',873),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','parsers.py',878),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','parsers.py',879),
  ('program -> definitions','program',1,'p_program','parsers.py',885),
  ('definitions -> definition _definition_set','definitions',2,'p_definitions','parsers.py',901),
  ('_definition_set -> NEWLINE definition _definition_set','_definition_set',3,'p_definition_set','parsers.py',909),
  ('_definition_set -> empty','_definition_set',1,'p_definition_set2','parsers.py',917),
  ('definition -> nametype_decl','definition',1,'p_definition','parsers.py',923),
  ('definition -> valuedef','definition',1,'p_definition','parsers.py',924),
  ('definition -> datatype_definition','definition',1,'p_definition','parsers.py',925),
  ('valuedef -> equation','valuedef',1,'p_valuedef','parsers.py',931),
  ('nametype_decl -> _identifier COLON COLON st_type_expr','nametype_decl',4,'p_nametype_decl','parsers.py',937),
  ('datatype_definition -> _datatype_lhs EQ _data_rhs','datatype_definition',3,'p_datatype_definition','parsers.py',946),
  ('_datatype_lhs -> KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params','_datatype_lhs',4,'p_datatype_lhs','parsers.py',954),
  ('_cons_params -> SPACE LOWER_IDENTIFIER _cons_params','_cons_params',3,'p_datatype_cons_params','parsers.py',963),
  ('_cons_params -> empty','_cons_params',1,'p_datatype_cons_params_empty','parsers.py',972),
  ('_data_rhs -> data_cons _data_conses','_data_rhs',2,'p_datatype_body','parsers.py',978),
  ('_data_conses -> _maybe_padding PIPE data_cons _data_conses','_data_conses',4,'p_datatype_body','parsers.py',979),
  ('_data_conses -> empty','_data_conses',1,'p_datatype_conses_empty','parsers.py',988),
  ('data_cons -> _data_cons','data_cons',1,'p_data_cons','parsers.py',993),
  ('_data_cons -> UPPER_IDENTIFIER _cons_args','_data_cons',2,'p_bare_data_cons','parsers.py',999),
  ('_cons_args -> SPACE cons_arg _cons_args','_cons_args',3,'p_data_cons_args','parsers.py',1004),
  ('_cons_args -> empty','_cons_args',1,'p_data_cons_args_empty','parsers.py',1013),
  ('cons_arg -> type_variable','cons_arg',1,'p_cons_arg','parsers.py',1019),
  ('cons_arg -> type_cons','cons_arg',1,'p_cons_arg','parsers.py',1020),
  ('cons_arg -> _cons_arg_factor','cons_arg',1,'p_cons_arg','parsers.py',1021),
  ('_cons_arg_factor -> LPAREN type_expr RPAREN','_cons_arg_factor',3,'p_cons_arg_factor','parsers.py',1027),
  ('_cons_arg_factor -> LBRACKET type_expr RBRACKET','_cons_arg_factor',3,'p_cons_arg_factor_list','parsers.py',1033),
]
