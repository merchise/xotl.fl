
# program_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON COMMA DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FLOAT KEYWORD_CLASS KEYWORD_DATA KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LOWER_IDENTIFIER LPAREN MINUS NEWLINE OPERATOR PADDING PERCENT PIPE PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATOR UNDER_IDENTIFIER UPPER_IDENTIFIERexpr_factor : expr_factor SPACE expr_factor\n    expr_term9 : expr_factor infixr_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infixl_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infixl_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infixl_operator_2 expr_term6\n               | expr_term6\n\n    expr_term1 : expr_term2 infixr_operator_2 expr_term1\n               | expr_term2\n\n    expr_term0 : expr infixl_operator_0 expr_term0\n               | expr_term1\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | unit_value\n                | letexpr\n                | where_expr\n                | lambda_expr\n\n    st_type_expr : type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    unit_value : LPAREN RPAREN\n    char : CHARstring : STRINGidentifier : _identifier\n\n    _identifier : UNDER_IDENTIFIER\n                   | UPPER_IDENTIFIER\n                   | LOWER_IDENTIFIER\n\n    enclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : LPAREN operator RPAREN\n    \n    infixr_operator_9 : DOT_OPERATOR\n\n    infixl_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infixl_operator_6 : PLUS\n                     | MINUS\n\n    infixr_operator_2 : COLON\n\n    infixl_operator_2 : OPERATOR\n                      | ARROW\n                      | COMMA\n\n    infixl_operator_0 : TICK_OPERATOR\n\n    _st_operator : infixl_operator_2\n                 | infixr_operator_2\n                 | infixl_operator_6\n                 | infixl_operator_7\n                 | infixr_operator_9\n\n    operator : infixl_operator_0\n             | _st_operator\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH parameters ARROW expr\n    parameters : _param _parameters\n       _parameters : SPACE _param _parameters\n    _parameters : empty\n    _param : _identifier_param : LPAREN pattern RPARENpattern : parametersequation : pattern EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    type_expr : type_function_expr\n                 | type_termtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_variable : LOWER_IDENTIFIERtype_cons : UPPER_IDENTIFIERtype_factor : type_variable\n                   | type_cons\n\n    type_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET_maybe_padding : PADDING\n                      | empty\n    program : definitions\n    definitions : definition _definition_set\n    _definition_set : NEWLINE definition _definition_set\n    _definition_set : empty\n    definition : nametype_decl\n                  | valuedef\n                  | datatype_definition\n    valuedef : equation\n    nametype_decl : _identifier COLON COLON st_type_expr\n    nametype_decl : LPAREN _st_operator RPAREN COLON COLON st_type_expr\n    datatype_definition : _datatype_lhs EQ _data_rhs\n    _datatype_lhs : KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params\n    _cons_params : SPACE LOWER_IDENTIFIER _cons_params\n    _cons_params : empty\n    _data_rhs : data_cons _data_conses\n       _data_conses : _maybe_padding PIPE data_cons _data_conses\n    _data_conses : emptydata_cons : _data_cons_data_cons : UPPER_IDENTIFIER _cons_args_cons_args : SPACE cons_arg _cons_args\n    _cons_args : empty\n    cons_arg : type_variable\n       cons_arg : type_cons\n       cons_arg : _cons_arg_factor\n    _cons_arg_factor : LPAREN type_expr RPAREN\n    _cons_arg_factor : LBRACKET type_expr RBRACKET\n    '
    
_lr_action_items = {'LPAREN':([0,8,11,12,13,19,22,24,31,32,33,34,35,36,37,38,39,40,43,46,49,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,105,106,113,115,117,119,120,121,122,123,124,125,126,127,128,132,136,142,144,145,146,147,148,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,175,184,185,187,188,189,190,194,202,203,207,208,209,],[8,22,-40,-41,-42,8,22,-54,-55,-56,-57,-52,-53,-48,-49,-50,-51,-47,80,22,105,-82,-15,-13,-11,-9,-7,-5,127,-16,-17,80,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,80,22,-66,-67,-68,-69,-70,-38,-37,-32,-33,-34,-35,-74,-74,-105,154,80,-58,80,80,80,80,80,80,-45,80,127,-36,22,-74,105,105,-106,105,105,105,105,-12,22,22,-10,-8,-6,-4,-2,-1,-71,-72,-73,-43,-46,-74,80,105,-87,-88,-83,22,-85,-75,105,80,-74,-86,-14,-84,]),'UNDER_IDENTIFIER':([0,8,19,22,24,31,32,33,34,35,36,37,38,39,40,43,46,66,80,82,117,119,120,121,122,123,124,125,127,130,136,158,159,169,170,173,188,202,],[11,11,11,11,-54,-55,-56,-57,-52,-53,-48,-49,-50,-51,-47,11,11,11,11,11,11,-58,11,11,11,11,11,11,11,11,11,11,11,-43,-46,11,11,11,]),'UPPER_IDENTIFIER':([0,8,19,22,24,31,32,33,34,35,36,37,38,39,40,42,43,44,46,49,66,80,82,105,106,113,115,117,119,120,121,122,123,124,125,127,130,136,142,144,145,146,147,148,149,154,155,158,159,169,170,173,175,188,194,202,],[12,12,12,12,-54,-55,-56,-57,-52,-53,-48,-49,-50,-51,-47,55,12,94,12,108,12,12,12,-74,-74,-105,108,12,-58,12,12,12,12,12,12,12,12,12,-74,108,108,-106,108,108,55,108,108,12,12,-43,-46,12,108,12,108,12,]),'LOWER_IDENTIFIER':([0,8,19,22,24,31,32,33,34,35,36,37,38,39,40,43,46,49,66,80,82,105,106,113,115,117,119,120,121,122,123,124,125,127,130,136,138,142,144,145,146,147,148,154,155,158,159,169,170,173,175,188,194,202,],[13,13,13,13,-54,-55,-56,-57,-52,-53,-48,-49,-50,-51,-47,13,13,107,13,13,13,-74,-74,-105,107,13,-58,13,13,13,13,13,13,13,13,13,174,-74,107,107,-106,107,107,107,107,13,13,-43,-46,13,107,13,107,13,]),'KEYWORD_DATA':([0,19,],[15,15,]),'$end':([1,2,3,4,5,6,9,11,12,13,18,20,48,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,84,85,86,87,88,89,90,91,92,93,96,97,98,99,100,101,102,103,104,107,108,110,112,114,116,126,128,132,143,150,151,152,153,157,160,161,162,163,164,165,166,167,168,169,170,172,176,179,180,181,184,185,187,189,190,192,193,195,196,199,200,201,203,204,205,206,207,208,209,210,],[0,-107,-74,-111,-112,-113,-114,-40,-41,-42,-108,-110,-74,-117,-74,-124,-74,-82,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,-66,-67,-68,-69,-70,-38,-37,-32,-33,-34,-35,-109,-115,-23,-89,-90,-93,-94,-101,-102,-99,-100,-121,-123,-125,-127,-45,-44,-36,-95,-74,-128,-129,-130,-12,-10,-8,-6,-4,-2,-1,-71,-72,-73,-43,-46,-74,-74,-116,-74,-126,-87,-88,-83,-85,-75,-92,-91,-97,-98,-122,-131,-132,-74,-74,-103,-104,-86,-14,-84,-96,]),'NEWLINE':([3,4,5,6,9,11,12,13,48,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,84,85,86,87,88,89,90,91,92,93,97,98,99,100,101,102,103,104,107,108,110,112,114,116,126,128,132,143,150,151,152,153,157,160,161,162,163,164,165,166,167,168,169,170,172,176,179,180,181,184,185,187,189,190,192,193,195,196,199,200,201,203,204,205,206,207,208,209,210,],[19,-111,-112,-113,-114,-40,-41,-42,19,-117,-74,-124,-74,-82,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,-66,-67,-68,-69,-70,-38,-37,-32,-33,-34,-35,-115,-23,-89,-90,-93,-94,-101,-102,-99,-100,-121,-123,-125,-127,-45,-44,-36,-95,-74,-128,-129,-130,-12,-10,-8,-6,-4,-2,-1,-71,-72,-73,-43,-46,-74,-74,-116,-74,-126,-87,-88,-83,-85,-75,-92,-91,-97,-98,-122,-131,-132,-74,-74,-103,-104,-86,-14,-84,-96,]),'COLON':([7,8,11,12,13,21,50,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,109,126,127,128,132,157,160,161,162,163,164,165,166,167,168,169,170,172,184,185,187,189,190,203,207,208,209,],[21,24,-40,-41,-42,49,109,-82,-15,-13,24,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,24,-66,-67,-68,-69,-70,-38,-37,-32,-33,-34,-35,148,-45,24,-3,-36,-12,-10,-8,-6,-4,-2,-1,-71,-72,-73,-43,-46,-74,-87,-88,-83,-85,-75,-74,-86,-14,-84,]),'SPACE':([7,11,12,13,15,17,41,51,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,84,85,86,87,88,89,90,91,92,93,94,95,102,103,104,107,108,118,126,128,132,150,151,152,153,157,160,161,162,163,164,165,166,167,168,169,170,172,174,176,184,185,186,187,189,190,200,201,203,204,205,206,207,208,209,],[-79,-40,-41,-42,44,46,-79,-80,115,-82,-15,-13,-11,-9,-7,-5,125,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,136,-66,-67,-68,-69,-70,-38,-37,-32,-33,-34,-35,138,46,144,-101,-102,-99,-100,158,-45,125,-36,115,-128,-129,-130,-12,-10,-8,-6,-4,-2,-1,-71,-72,-73,-43,-46,-74,138,194,-87,-88,202,-83,-85,-75,-131,-132,-74,194,-103,-104,-86,-14,-84,]),'EQ':([7,10,11,12,13,14,16,17,41,45,47,51,94,95,139,140,141,174,191,],[-79,42,-40,-41,-42,43,-81,-74,-79,-76,-78,-80,-74,-74,-118,-120,-77,-74,-119,]),'OPERATOR':([8,11,12,13,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,126,127,128,132,157,160,161,162,163,164,165,166,167,168,169,170,172,184,185,187,189,190,203,207,208,209,],[31,-40,-41,-42,-82,-15,-13,31,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,31,-66,-67,-68,-69,-70,-38,-37,-32,-33,-34,-35,-45,31,-3,-36,-12,-10,-8,-6,-4,-2,-1,-71,-72,-73,-43,-46,-74,-87,-88,-83,-85,-75,-74,-86,-14,-84,]),'ARROW':([8,11,12,13,17,41,45,47,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,95,100,101,102,103,104,107,108,126,127,128,132,137,141,143,157,160,161,162,163,164,165,166,167,168,169,170,172,176,184,185,187,189,190,192,195,196,203,204,205,206,207,208,209,210,],[32,-40,-41,-42,-74,-79,-76,-78,-80,-82,-15,-13,32,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,32,-66,-67,-68,-69,-70,-38,-37,-32,-33,-34,-35,-74,142,-93,-94,-101,-102,-99,-100,-45,32,-3,-36,173,-77,-95,-12,-10,-8,-6,-4,-2,-1,-71,-72,-73,-43,-46,-74,-74,-87,-88,-83,-85,-75,142,-97,-98,-74,-74,-103,-104,-86,-14,-84,-96,]),'COMMA':([8,11,12,13,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,126,127,128,132,157,160,161,162,163,164,165,166,167,168,169,170,172,184,185,187,189,190,203,207,208,209,],[33,-40,-41,-42,-82,-15,-13,33,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,33,-66,-67,-68,-69,-70,-38,-37,-32,-33,-34,-35,-45,33,-3,-36,-12,-10,-8,-6,-4,-2,-1,-71,-72,-73,-43,-46,-74,-87,-88,-83,-85,-75,-74,-86,-14,-84,]),'PLUS':([8,11,12,13,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,126,127,128,132,157,160,161,162,163,164,165,166,167,168,169,170,172,184,185,187,189,190,203,207,208,209,],[34,-40,-41,-42,-82,-15,-13,-11,34,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,34,-66,-67,-68,-69,-70,-38,-37,-32,-33,-34,-35,-45,34,-3,-36,-12,-10,34,-6,-4,-2,-1,-71,-72,-73,-43,-46,-74,-87,-88,-83,-85,-75,-74,-86,-14,-84,]),'MINUS':([8,11,12,13,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,126,127,128,132,157,160,161,162,163,164,165,166,167,168,169,170,172,184,185,187,189,190,203,207,208,209,],[35,-40,-41,-42,-82,-15,-13,-11,35,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,35,-66,-67,-68,-69,-70,-38,-37,-32,-33,-34,-35,-45,35,-3,-36,-12,-10,35,-6,-4,-2,-1,-71,-72,-73,-43,-46,-74,-87,-88,-83,-85,-75,-74,-86,-14,-84,]),'STAR':([8,11,12,13,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,126,127,128,132,157,160,161,162,163,164,165,166,167,168,169,170,172,184,185,187,189,190,203,207,208,209,],[36,-40,-41,-42,-82,-15,-13,-11,-9,36,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,36,-66,-67,-68,-69,-70,-38,-37,-32,-33,-34,-35,-45,36,-3,-36,-12,-10,-8,36,-4,-2,-1,-71,-72,-73,-43,-46,-74,-87,-88,-83,-85,-75,-74,-86,-14,-84,]),'SLASH':([8,11,12,13,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,126,127,128,132,157,160,161,162,163,164,165,166,167,168,169,170,172,184,185,187,189,190,203,207,208,209,],[37,-40,-41,-42,-82,-15,-13,-11,-9,37,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,37,-66,-67,-68,-69,-70,-38,-37,-32,-33,-34,-35,-45,37,-3,-36,-12,-10,-8,37,-4,-2,-1,-71,-72,-73,-43,-46,-74,-87,-88,-83,-85,-75,-74,-86,-14,-84,]),'DOUBLESLASH':([8,11,12,13,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,126,127,128,132,157,160,161,162,163,164,165,166,167,168,169,170,172,184,185,187,189,190,203,207,208,209,],[38,-40,-41,-42,-82,-15,-13,-11,-9,38,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,38,-66,-67,-68,-69,-70,-38,-37,-32,-33,-34,-35,-45,38,-3,-36,-12,-10,-8,38,-4,-2,-1,-71,-72,-73,-43,-46,-74,-87,-88,-83,-85,-75,-74,-86,-14,-84,]),'PERCENT':([8,11,12,13,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,126,127,128,132,157,160,161,162,163,164,165,166,167,168,169,170,172,184,185,187,189,190,203,207,208,209,],[39,-40,-41,-42,-82,-15,-13,-11,-9,39,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,39,-66,-67,-68,-69,-70,-38,-37,-32,-33,-34,-35,-45,39,-3,-36,-12,-10,-8,39,-4,-2,-1,-71,-72,-73,-43,-46,-74,-87,-88,-83,-85,-75,-74,-86,-14,-84,]),'DOT_OPERATOR':([8,11,12,13,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,126,127,128,132,157,160,161,162,163,164,165,166,167,168,169,170,172,184,185,187,189,190,203,207,208,209,],[40,-40,-41,-42,-82,-15,-13,-11,-9,-7,-5,40,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,40,-66,-67,-68,-69,-70,-38,-37,-32,-33,-34,-35,-45,40,40,-36,-12,-10,-8,-6,-4,-2,-1,-71,-72,-73,-43,-46,-74,-87,-88,-83,-85,-75,-74,-86,-14,-84,]),'RPAREN':([11,12,13,16,17,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,47,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,95,99,100,101,102,103,104,107,108,113,119,126,128,131,132,133,134,135,141,143,146,157,160,161,162,163,164,165,166,167,168,169,170,172,176,177,182,184,185,187,189,190,192,193,195,196,197,203,204,205,206,207,208,209,210,],[-40,-41,-42,-81,-74,50,-54,51,-59,-60,-61,-62,-63,-55,-56,-57,-52,-53,-48,-49,-50,-51,-47,-79,-76,-78,-80,-82,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,132,-66,-67,-68,-69,-70,-38,-37,-32,-33,-34,-35,-74,-89,-90,-93,-94,-101,-102,-99,-100,-105,-58,-45,-44,169,-36,170,-64,-65,-77,-95,-106,-12,-10,-8,-6,-4,-2,-1,-71,-72,-73,-43,-46,-74,-74,-74,200,-87,-88,-83,-85,-75,-92,-91,-97,-98,205,-74,-74,-103,-104,-86,-14,-84,-96,]),'KEYWORD_WHERE':([11,12,13,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,84,85,86,87,88,89,90,91,92,93,126,128,129,131,132,156,157,160,161,162,163,164,165,166,167,168,169,170,172,184,185,187,189,190,203,207,208,209,],[-40,-41,-42,118,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,-66,-67,-68,-69,-70,-38,-37,-32,-33,-34,-35,-45,-3,118,118,-36,118,-12,-10,-8,-6,-4,-2,-1,-71,-72,-73,-43,-46,-74,-87,-88,-83,-85,118,-74,-86,118,-84,]),'TICK_OPERATOR':([11,12,13,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,126,127,128,129,131,132,156,157,160,161,162,163,164,165,166,167,168,169,170,172,184,185,187,189,190,203,207,208,209,],[-40,-41,-42,119,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,119,-66,-67,-68,-69,-70,-38,-37,-32,-33,-34,-35,-45,119,-3,119,119,-36,119,-12,-10,-8,-6,-4,-2,-1,-71,-72,-73,-43,-46,-74,-87,-88,-83,-85,119,-74,-86,119,-84,]),'PADDING':([11,12,13,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,84,85,86,87,88,89,90,91,92,93,99,100,101,102,103,104,105,106,107,108,114,116,118,126,128,132,142,143,150,151,152,153,157,160,161,162,163,164,165,166,167,168,169,170,172,176,177,178,180,181,184,185,187,189,190,192,193,195,196,200,201,203,204,205,206,207,208,209,210,],[-40,-41,-42,113,-124,-74,-82,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,-66,-67,-68,-69,-70,-38,-37,-32,-33,-34,-35,-89,-90,-93,-94,-101,-102,113,113,-99,-100,-125,-127,159,-45,-44,-36,113,-95,-74,-128,-129,-130,-12,-10,-8,-6,-4,-2,-1,-71,-72,-73,-43,-46,188,-74,113,113,113,-126,-87,-88,-83,-85,-75,-92,-91,-97,-98,-131,-132,188,-74,-103,-104,-86,-14,-84,-96,]),'KEYWORD_IN':([11,12,13,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,84,85,86,87,88,89,90,91,92,93,126,128,132,157,160,161,162,163,164,165,166,167,168,169,170,171,172,184,185,187,189,190,203,207,208,209,],[-40,-41,-42,-82,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,-66,-67,-68,-69,-70,-38,-37,-32,-33,-34,-35,-45,-44,-36,-12,-10,-8,-6,-4,-2,-1,-71,-72,-73,-43,-46,186,-74,-87,-88,-83,-85,-75,-74,-86,-14,-84,]),'KEYWORD_LET':([24,31,32,33,34,35,36,37,38,39,40,43,66,80,117,119,120,121,122,123,124,125,127,169,170,173,202,],[-54,-55,-56,-57,-52,-53,-48,-49,-50,-51,-47,81,81,81,81,-58,81,81,81,81,81,81,81,-43,-46,81,81,]),'BACKSLASH':([24,31,32,33,34,35,36,37,38,39,40,43,66,80,117,119,120,121,122,123,124,125,127,169,170,173,202,],[-54,-55,-56,-57,-52,-53,-48,-49,-50,-51,-47,82,82,82,82,-58,82,82,82,82,82,82,82,-43,-46,82,82,]),'BASE10_INTEGER':([24,31,32,33,34,35,36,37,38,39,40,43,66,80,117,119,120,121,122,123,124,125,127,169,170,173,202,],[-54,-55,-56,-57,-52,-53,-48,-49,-50,-51,-47,83,83,83,83,-58,83,83,83,83,83,83,83,-43,-46,83,83,]),'BASE16_INTEGER':([24,31,32,33,34,35,36,37,38,39,40,43,66,80,117,119,120,121,122,123,124,125,127,169,170,173,202,],[-54,-55,-56,-57,-52,-53,-48,-49,-50,-51,-47,84,84,84,84,-58,84,84,84,84,84,84,84,-43,-46,84,84,]),'BASE8_INTEGER':([24,31,32,33,34,35,36,37,38,39,40,43,66,80,117,119,120,121,122,123,124,125,127,169,170,173,202,],[-54,-55,-56,-57,-52,-53,-48,-49,-50,-51,-47,85,85,85,85,-58,85,85,85,85,85,85,85,-43,-46,85,85,]),'BASE2_INTEGER':([24,31,32,33,34,35,36,37,38,39,40,43,66,80,117,119,120,121,122,123,124,125,127,169,170,173,202,],[-54,-55,-56,-57,-52,-53,-48,-49,-50,-51,-47,86,86,86,86,-58,86,86,86,86,86,86,86,-43,-46,86,86,]),'FLOAT':([24,31,32,33,34,35,36,37,38,39,40,43,66,80,117,119,120,121,122,123,124,125,127,169,170,173,202,],[-54,-55,-56,-57,-52,-53,-48,-49,-50,-51,-47,87,87,87,87,-58,87,87,87,87,87,87,87,-43,-46,87,87,]),'STRING':([24,31,32,33,34,35,36,37,38,39,40,43,66,80,117,119,120,121,122,123,124,125,127,130,169,170,173,202,],[-54,-55,-56,-57,-52,-53,-48,-49,-50,-51,-47,88,88,88,88,-58,88,88,88,88,88,88,88,88,-43,-46,88,88,]),'CHAR':([24,31,32,33,34,35,36,37,38,39,40,43,66,80,117,119,120,121,122,123,124,125,127,130,169,170,173,202,],[-54,-55,-56,-57,-52,-53,-48,-49,-50,-51,-47,89,89,89,89,-58,89,89,89,89,89,89,89,89,-43,-46,89,89,]),'DATE':([24,31,32,33,34,35,36,37,38,39,40,43,66,80,117,119,120,121,122,123,124,125,127,169,170,173,202,],[-54,-55,-56,-57,-52,-53,-48,-49,-50,-51,-47,90,90,90,90,-58,90,90,90,90,90,90,90,-43,-46,90,90,]),'DATETIME':([24,31,32,33,34,35,36,37,38,39,40,43,66,80,117,119,120,121,122,123,124,125,127,169,170,173,202,],[-54,-55,-56,-57,-52,-53,-48,-49,-50,-51,-47,91,91,91,91,-58,91,91,91,91,91,91,91,-43,-46,91,91,]),'DATE_INTERVAL':([24,31,32,33,34,35,36,37,38,39,40,43,66,80,117,119,120,121,122,123,124,125,127,169,170,173,202,],[-54,-55,-56,-57,-52,-53,-48,-49,-50,-51,-47,92,92,92,92,-58,92,92,92,92,92,92,92,-43,-46,92,92,]),'DATETIME_INTERVAL':([24,31,32,33,34,35,36,37,38,39,40,43,66,80,117,119,120,121,122,123,124,125,127,169,170,173,202,],[-54,-55,-56,-57,-52,-53,-48,-49,-50,-51,-47,93,93,93,93,-58,93,93,93,93,93,93,93,-43,-46,93,93,]),'LBRACKET':([49,105,106,113,115,142,144,145,146,147,148,154,155,175,194,],[106,-74,-74,-105,155,-74,106,106,-106,106,106,106,106,106,106,]),'PIPE':([53,54,55,107,108,111,112,113,114,116,150,151,152,153,180,181,200,201,],[-74,-124,-74,-99,-100,149,-106,-105,-125,-127,-74,-128,-129,-130,-74,-126,-131,-132,]),'ANNOTATION':([71,83,84,85,86,87,],[130,-66,-67,-68,-69,-70,]),'RBRACKET':([99,100,101,102,103,104,107,108,113,143,146,176,178,183,192,193,195,196,198,204,205,206,210,],[-89,-90,-93,-94,-101,-102,-99,-100,-105,-95,-106,-74,-74,201,-92,-91,-97,-98,206,-74,-103,-104,-96,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'definitions':([0,],[2,]),'definition':([0,19,],[3,48,]),'nametype_decl':([0,19,],[4,4,]),'valuedef':([0,19,],[5,5,]),'datatype_definition':([0,19,],[6,6,]),'_identifier':([0,8,19,22,43,46,66,80,82,117,120,121,122,123,124,125,127,130,136,158,159,173,188,202,],[7,41,7,41,79,41,79,79,41,79,79,79,79,79,79,79,79,79,41,41,41,79,41,79,]),'equation':([0,19,136,158,159,188,],[9,9,172,172,172,203,]),'_datatype_lhs':([0,19,],[10,10,]),'pattern':([0,8,19,22,136,158,159,188,],[14,25,14,25,14,14,14,14,]),'parameters':([0,8,19,22,82,136,158,159,188,],[16,16,16,16,137,16,16,16,16,]),'_param':([0,8,19,22,46,82,136,158,159,188,],[17,17,17,17,95,17,17,17,17,17,]),'_definition_set':([3,48,],[18,96,]),'empty':([3,17,48,53,55,94,95,105,106,142,150,172,174,176,177,178,180,203,204,],[20,47,20,112,116,140,47,146,146,146,116,189,140,196,146,146,112,189,196,]),'_st_operator':([8,80,127,],[23,135,135,]),'infixl_operator_2':([8,59,80,127,],[26,121,26,26,]),'infixr_operator_2':([8,59,80,127,],[27,120,27,27,]),'infixl_operator_6':([8,60,80,127,161,],[28,122,28,28,122,]),'infixl_operator_7':([8,61,80,127,162,],[29,123,29,29,123,]),'infixr_operator_9':([8,63,80,127,128,165,],[30,124,30,30,124,124,]),'_parameters':([17,95,],[45,141,]),'_data_rhs':([42,],[52,]),'data_cons':([42,149,],[53,180,]),'_data_cons':([42,149,],[54,54,]),'expr':([43,66,80,117,120,121,122,123,124,125,127,173,202,],[56,129,131,156,129,129,129,129,129,129,131,190,208,]),'expr_term0':([43,66,80,117,120,121,122,123,124,125,127,173,202,],[57,57,57,157,57,57,57,57,57,57,57,57,57,]),'expr_term1':([43,66,80,117,120,121,122,123,124,125,127,173,202,],[58,58,58,58,160,58,58,58,58,58,58,58,58,]),'expr_term2':([43,66,80,117,120,121,122,123,124,125,127,173,202,],[59,59,59,59,59,59,59,59,59,59,59,59,59,]),'expr_term6':([43,66,80,117,120,121,122,123,124,125,127,173,202,],[60,60,60,60,60,161,60,60,60,60,60,60,60,]),'expr_term7':([43,66,80,117,120,121,122,123,124,125,127,173,202,],[61,61,61,61,61,61,162,61,61,61,61,61,61,]),'expr_term9':([43,66,80,117,120,121,122,123,124,125,127,173,202,],[62,62,62,62,62,62,62,163,164,62,62,62,62,]),'expr_factor':([43,66,80,117,120,121,122,123,124,125,127,173,202,],[63,128,63,63,63,63,63,63,63,165,63,63,63,]),'literal':([43,66,80,117,120,121,122,123,124,125,127,173,202,],[64,64,64,64,64,64,64,64,64,64,64,64,64,]),'identifier':([43,66,80,117,120,121,122,123,124,125,127,130,173,202,],[65,65,65,65,65,65,65,65,65,65,65,168,65,65,]),'enclosed_expr':([43,63,66,80,117,120,121,122,123,124,125,127,128,165,173,202,],[66,126,66,66,66,66,66,66,66,66,66,66,126,126,66,66,]),'unit_value':([43,66,80,117,120,121,122,123,124,125,127,173,202,],[67,67,67,67,67,67,67,67,67,67,67,67,67,]),'letexpr':([43,66,80,117,120,121,122,123,124,125,127,173,202,],[68,68,68,68,68,68,68,68,68,68,68,68,68,]),'where_expr':([43,66,80,117,120,121,122,123,124,125,127,173,202,],[69,69,69,69,69,69,69,69,69,69,69,69,69,]),'lambda_expr':([43,66,80,117,120,121,122,123,124,125,127,173,202,],[70,70,70,70,70,70,70,70,70,70,70,70,70,]),'number':([43,66,80,117,120,121,122,123,124,125,127,173,202,],[71,71,71,71,71,71,71,71,71,71,71,71,71,]),'concrete_number':([43,66,80,117,120,121,122,123,124,125,127,173,202,],[72,72,72,72,72,72,72,72,72,72,72,72,72,]),'string':([43,66,80,117,120,121,122,123,124,125,127,130,173,202,],[73,73,73,73,73,73,73,73,73,73,73,166,73,73,]),'char':([43,66,80,117,120,121,122,123,124,125,127,130,173,202,],[74,74,74,74,74,74,74,74,74,74,74,167,74,74,]),'date':([43,66,80,117,120,121,122,123,124,125,127,173,202,],[75,75,75,75,75,75,75,75,75,75,75,75,75,]),'datetime':([43,66,80,117,120,121,122,123,124,125,127,173,202,],[76,76,76,76,76,76,76,76,76,76,76,76,76,]),'date_interval':([43,66,80,117,120,121,122,123,124,125,127,173,202,],[77,77,77,77,77,77,77,77,77,77,77,77,77,]),'datetime_interval':([43,66,80,117,120,121,122,123,124,125,127,173,202,],[78,78,78,78,78,78,78,78,78,78,78,78,78,]),'st_type_expr':([49,148,],[97,179,]),'type_expr':([49,145,147,148,154,155,],[98,177,178,98,182,183,]),'type_function_expr':([49,145,147,148,154,155,175,],[99,99,99,99,99,99,193,]),'type_term':([49,145,147,148,154,155,175,],[100,100,100,100,100,100,192,]),'type_app_expression':([49,145,147,148,154,155,175,],[101,101,101,101,101,101,101,]),'type_factor':([49,144,145,147,148,154,155,175,194,],[102,176,102,102,102,102,102,102,204,]),'type_variable':([49,115,144,145,147,148,154,155,175,194,],[103,151,103,103,103,103,103,103,103,103,]),'type_cons':([49,115,144,145,147,148,154,155,175,194,],[104,152,104,104,104,104,104,104,104,104,]),'_data_conses':([53,180,],[110,199,]),'_maybe_padding':([53,105,106,142,177,178,180,],[111,145,147,175,197,198,111,]),'_cons_args':([55,150,],[114,181,]),'infixl_operator_0':([56,80,127,129,131,156,190,208,],[117,134,134,117,117,117,117,117,]),'operator':([80,127,],[133,133,]),'_cons_params':([94,174,],[139,191,]),'_app_args_non_empty':([102,],[143,]),'cons_arg':([115,],[150,]),'_cons_arg_factor':([115,],[153,]),'equations':([136,158,159,],[171,184,185,]),'_equation_set':([172,203,],[187,209,]),'_app_args':([176,204,],[195,210,]),'st_expr':([202,],[207,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','parsers.py',433),
  ('expr_term9 -> expr_factor infixr_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','parsers.py',440),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','parsers.py',441),
  ('expr_term7 -> expr_term7 infixl_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','parsers.py',443),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','parsers.py',444),
  ('expr_term6 -> expr_term6 infixl_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','parsers.py',446),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','parsers.py',447),
  ('expr_term2 -> expr_term2 infixl_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','parsers.py',449),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','parsers.py',450),
  ('expr_term1 -> expr_term2 infixr_operator_2 expr_term1','expr_term1',3,'p_expressions_precedence_rules','parsers.py',452),
  ('expr_term1 -> expr_term2','expr_term1',1,'p_expressions_precedence_rules','parsers.py',453),
  ('expr_term0 -> expr infixl_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','parsers.py',455),
  ('expr_term0 -> expr_term1','expr_term0',1,'p_expressions_precedence_rules','parsers.py',456),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','parsers.py',469),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','parsers.py',471),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','parsers.py',473),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','parsers.py',474),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','parsers.py',475),
  ('expr_factor -> unit_value','expr_factor',1,'p_standalone_definitions','parsers.py',476),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','parsers.py',477),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','parsers.py',478),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','parsers.py',479),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','parsers.py',481),
  ('literal -> number','literal',1,'p_literals','parsers.py',489),
  ('literal -> concrete_number','literal',1,'p_literals','parsers.py',490),
  ('literal -> string','literal',1,'p_literals','parsers.py',491),
  ('literal -> char','literal',1,'p_literals','parsers.py',492),
  ('literal -> date','literal',1,'p_literals','parsers.py',493),
  ('literal -> datetime','literal',1,'p_literals','parsers.py',494),
  ('literal -> date_interval','literal',1,'p_literals','parsers.py',495),
  ('literal -> datetime_interval','literal',1,'p_literals','parsers.py',496),
  ('date -> DATE','date',1,'p_date','parsers.py',502),
  ('datetime -> DATETIME','datetime',1,'p_datetime','parsers.py',508),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','parsers.py',514),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','parsers.py',520),
  ('unit_value -> LPAREN RPAREN','unit_value',2,'p_unit_value','parsers.py',526),
  ('char -> CHAR','char',1,'p_char','parsers.py',532),
  ('string -> STRING','string',1,'p_string','parsers.py',537),
  ('identifier -> _identifier','identifier',1,'p_variable','parsers.py',542),
  ('_identifier -> UNDER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',549),
  ('_identifier -> UPPER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',550),
  ('_identifier -> LOWER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',551),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','parsers.py',558),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','parsers.py',563),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','parsers.py',564),
  ('enclosed_expr -> LPAREN operator RPAREN','enclosed_expr',3,'p_operators_as_expressios','parsers.py',570),
  ('infixr_operator_9 -> DOT_OPERATOR','infixr_operator_9',1,'p_operator','parsers.py',582),
  ('infixl_operator_7 -> STAR','infixl_operator_7',1,'p_operator','parsers.py',584),
  ('infixl_operator_7 -> SLASH','infixl_operator_7',1,'p_operator','parsers.py',585),
  ('infixl_operator_7 -> DOUBLESLASH','infixl_operator_7',1,'p_operator','parsers.py',586),
  ('infixl_operator_7 -> PERCENT','infixl_operator_7',1,'p_operator','parsers.py',587),
  ('infixl_operator_6 -> PLUS','infixl_operator_6',1,'p_operator','parsers.py',589),
  ('infixl_operator_6 -> MINUS','infixl_operator_6',1,'p_operator','parsers.py',590),
  ('infixr_operator_2 -> COLON','infixr_operator_2',1,'p_operator','parsers.py',592),
  ('infixl_operator_2 -> OPERATOR','infixl_operator_2',1,'p_operator','parsers.py',594),
  ('infixl_operator_2 -> ARROW','infixl_operator_2',1,'p_operator','parsers.py',595),
  ('infixl_operator_2 -> COMMA','infixl_operator_2',1,'p_operator','parsers.py',596),
  ('infixl_operator_0 -> TICK_OPERATOR','infixl_operator_0',1,'p_operator','parsers.py',598),
  ('_st_operator -> infixl_operator_2','_st_operator',1,'p_operator','parsers.py',600),
  ('_st_operator -> infixr_operator_2','_st_operator',1,'p_operator','parsers.py',601),
  ('_st_operator -> infixl_operator_6','_st_operator',1,'p_operator','parsers.py',602),
  ('_st_operator -> infixl_operator_7','_st_operator',1,'p_operator','parsers.py',603),
  ('_st_operator -> infixr_operator_9','_st_operator',1,'p_operator','parsers.py',604),
  ('operator -> infixl_operator_0','operator',1,'p_operator','parsers.py',606),
  ('operator -> _st_operator','operator',1,'p_operator','parsers.py',607),
  ('number -> BASE10_INTEGER','number',1,'p_integer','parsers.py',614),
  ('number -> BASE16_INTEGER','number',1,'p_integer','parsers.py',615),
  ('number -> BASE8_INTEGER','number',1,'p_integer','parsers.py',616),
  ('number -> BASE2_INTEGER','number',1,'p_integer','parsers.py',617),
  ('number -> FLOAT','number',1,'p_float','parsers.py',646),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','parsers.py',651),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','parsers.py',652),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','parsers.py',653),
  ('empty -> <empty>','empty',0,'p_empty','parsers.py',662),
  ('lambda_expr -> BACKSLASH parameters ARROW expr','lambda_expr',4,'p_lambda_definition','parsers.py',667),
  ('parameters -> _param _parameters','parameters',2,'p_parameters','parsers.py',675),
  ('_parameters -> SPACE _param _parameters','_parameters',3,'p_parameters','parsers.py',676),
  ('_parameters -> empty','_parameters',1,'p_empty__parameters','parsers.py',685),
  ('_param -> _identifier','_param',1,'p_param_identitifier','parsers.py',691),
  ('_param -> LPAREN pattern RPAREN','_param',3,'p_param_pattern','parsers.py',696),
  ('pattern -> parameters','pattern',1,'p_pattern','parsers.py',701),
  ('equation -> pattern EQ expr','equation',3,'p_equation','parsers.py',707),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','parsers.py',717),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','parsers.py',726),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','parsers.py',735),
  ('letexpr -> KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','parsers.py',745),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','parsers.py',753),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','parsers.py',754),
  ('type_expr -> type_function_expr','type_expr',1,'p_type_expr','parsers.py',764),
  ('type_expr -> type_term','type_expr',1,'p_type_expr','parsers.py',765),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','parsers.py',770),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','parsers.py',771),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','parsers.py',781),
  ('type_term -> type_factor','type_term',1,'p_type_term','parsers.py',782),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','parsers.py',787),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','parsers.py',799),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','parsers.py',800),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','parsers.py',808),
  ('type_variable -> LOWER_IDENTIFIER','type_variable',1,'p_type_variable','parsers.py',813),
  ('type_cons -> UPPER_IDENTIFIER','type_cons',1,'p_type_cons','parsers.py',818),
  ('type_factor -> type_variable','type_factor',1,'p_type_factor_identifier','parsers.py',823),
  ('type_factor -> type_cons','type_factor',1,'p_type_factor_identifier','parsers.py',824),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','parsers.py',831),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','parsers.py',836),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','parsers.py',841),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','parsers.py',842),
  ('program -> definitions','program',1,'p_program','parsers.py',848),
  ('definitions -> definition _definition_set','definitions',2,'p_definitions','parsers.py',864),
  ('_definition_set -> NEWLINE definition _definition_set','_definition_set',3,'p_definition_set','parsers.py',872),
  ('_definition_set -> empty','_definition_set',1,'p_definition_set2','parsers.py',880),
  ('definition -> nametype_decl','definition',1,'p_definition','parsers.py',886),
  ('definition -> valuedef','definition',1,'p_definition','parsers.py',887),
  ('definition -> datatype_definition','definition',1,'p_definition','parsers.py',888),
  ('valuedef -> equation','valuedef',1,'p_valuedef','parsers.py',894),
  ('nametype_decl -> _identifier COLON COLON st_type_expr','nametype_decl',4,'p_nametype_decl','parsers.py',900),
  ('nametype_decl -> LPAREN _st_operator RPAREN COLON COLON st_type_expr','nametype_decl',6,'p_nametype_decl_operators','parsers.py',909),
  ('datatype_definition -> _datatype_lhs EQ _data_rhs','datatype_definition',3,'p_datatype_definition','parsers.py',918),
  ('_datatype_lhs -> KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params','_datatype_lhs',4,'p_datatype_lhs','parsers.py',926),
  ('_cons_params -> SPACE LOWER_IDENTIFIER _cons_params','_cons_params',3,'p_datatype_cons_params','parsers.py',935),
  ('_cons_params -> empty','_cons_params',1,'p_datatype_cons_params_empty','parsers.py',944),
  ('_data_rhs -> data_cons _data_conses','_data_rhs',2,'p_datatype_body','parsers.py',950),
  ('_data_conses -> _maybe_padding PIPE data_cons _data_conses','_data_conses',4,'p_datatype_body','parsers.py',951),
  ('_data_conses -> empty','_data_conses',1,'p_datatype_conses_empty','parsers.py',960),
  ('data_cons -> _data_cons','data_cons',1,'p_data_cons','parsers.py',965),
  ('_data_cons -> UPPER_IDENTIFIER _cons_args','_data_cons',2,'p_bare_data_cons','parsers.py',971),
  ('_cons_args -> SPACE cons_arg _cons_args','_cons_args',3,'p_data_cons_args','parsers.py',976),
  ('_cons_args -> empty','_cons_args',1,'p_data_cons_args_empty','parsers.py',985),
  ('cons_arg -> type_variable','cons_arg',1,'p_cons_arg','parsers.py',991),
  ('cons_arg -> type_cons','cons_arg',1,'p_cons_arg','parsers.py',992),
  ('cons_arg -> _cons_arg_factor','cons_arg',1,'p_cons_arg','parsers.py',993),
  ('_cons_arg_factor -> LPAREN type_expr RPAREN','_cons_arg_factor',3,'p_cons_arg_factor','parsers.py',999),
  ('_cons_arg_factor -> LBRACKET type_expr RBRACKET','_cons_arg_factor',3,'p_cons_arg_factor_list','parsers.py',1005),
]
