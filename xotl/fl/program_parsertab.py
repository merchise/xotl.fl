
# program_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON COMMA DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FLOAT KEYWORD_CLASS KEYWORD_DATA KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LOWER_IDENTIFIER LPAREN MINUS NEWLINE OPERATOR PADDING PERCENT PIPE PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATOR UNDER_IDENTIFIER UPPER_IDENTIFIERexpr_factor : expr_factor SPACE expr_factor\n    expr_term9 : expr_factor infixr_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infixl_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infixl_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infixl_operator_2 expr_term6\n               | expr_term6\n\n    expr_term1 : expr_term2 infixr_operator_2 expr_term1\n               | expr_term2\n\n    expr_term0 : expr infixl_operator_0 expr_term0\n               | expr_term1\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | unit_value\n                | letexpr\n                | where_expr\n                | lambda_expr\n\n    st_type_expr : type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    unit_value : LPAREN RPAREN\n    char : CHARstring : STRINGidentifier : _identifier\n\n    _identifier : UNDER_IDENTIFIER\n                   | UPPER_IDENTIFIER\n                   | LOWER_IDENTIFIER\n\n    enclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : _enclosed_operator\n    _enclosed_operator : LPAREN _st_operator RPAREN\n    infixr_operator_9 : DOT_OPERATOR\n\n    infixl_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infixl_operator_6 : PLUS\n                     | MINUS\n\n    infixr_operator_2 : COLON\n\n    infixl_operator_2 : OPERATOR\n                      | ARROW\n                      | COMMA\n\n    infixl_operator_0 : TICK_OPERATOR\n\n    _st_operator : infixl_operator_2\n                 | infixr_operator_2\n                 | infixl_operator_6\n                 | infixl_operator_7\n                 | infixr_operator_9\n\n    operator : infixl_operator_0\n             | _st_operator\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH parameters ARROW expr\n    parameters : _param _parameters\n       _parameters : SPACE _param _parameters\n    _parameters : empty\n    _param : _identifier_param : _enclosed_operator_param : LPAREN pattern RPARENpattern : parametersequation : pattern EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    type_expr : type_function_expr\n                 | type_termtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_variable : LOWER_IDENTIFIERtype_cons : UPPER_IDENTIFIERtype_factor : type_variable\n                   | type_cons\n\n    type_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET_maybe_padding : PADDING\n                      | empty\n    program : definitions\n    definitions : definition _definition_set\n    _definition_set : NEWLINE definition _definition_set\n    _definition_set : empty\n    definition : nametype_decl\n                  | valuedef\n                  | datatype_definition\n    valuedef : equation\n    nametype_decl : _identifier COLON COLON st_type_expr\n    nametype_decl : LPAREN _st_operator RPAREN COLON COLON st_type_expr\n    datatype_definition : _datatype_lhs EQ _data_rhs\n    _datatype_lhs : KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params\n    _cons_params : SPACE LOWER_IDENTIFIER _cons_params\n    _cons_params : empty\n    _data_rhs : data_cons _data_conses\n       _data_conses : _maybe_padding PIPE data_cons _data_conses\n    _data_conses : emptydata_cons : _data_cons_data_cons : UPPER_IDENTIFIER _cons_args_cons_args : SPACE cons_arg _cons_args\n    _cons_args : empty\n    cons_arg : type_variable\n       cons_arg : type_cons\n       cons_arg : _cons_arg_factor\n    _cons_arg_factor : LPAREN type_expr RPAREN\n    _cons_arg_factor : LBRACKET type_expr RBRACKET\n    '
    
_lr_action_items = {'LPAREN':([0,8,11,12,13,20,23,25,32,33,34,35,36,37,38,39,40,41,44,47,50,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,108,109,112,117,119,121,123,124,125,126,127,128,129,130,131,132,136,137,143,145,146,147,148,149,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,175,184,185,187,188,189,190,194,202,203,207,208,209,],[8,23,-40,-41,-42,8,23,-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,82,23,108,-84,-15,-13,-11,-9,-7,-5,131,-16,-17,82,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,82,-46,23,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-75,-75,-47,-107,155,82,-59,82,82,82,82,82,82,-45,82,131,-36,23,-75,108,108,-108,108,108,108,108,-12,23,23,-10,-8,-6,-4,-2,-1,-72,-73,-74,-43,-75,82,108,-89,-90,-85,23,-87,-76,108,82,-75,-88,-14,-86,]),'UNDER_IDENTIFIER':([0,8,20,23,25,32,33,34,35,36,37,38,39,40,41,44,47,68,82,83,85,112,121,123,124,125,126,127,128,129,131,134,137,159,160,170,173,188,202,],[11,11,11,11,-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,11,11,11,11,-46,11,-47,11,-59,11,11,11,11,11,11,11,11,11,11,11,-43,11,11,11,]),'UPPER_IDENTIFIER':([0,8,20,23,25,32,33,34,35,36,37,38,39,40,41,43,44,45,47,50,68,82,83,85,108,109,112,117,119,121,123,124,125,126,127,128,129,131,134,137,143,145,146,147,148,149,150,155,156,159,160,170,173,175,188,194,202,],[12,12,12,12,-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,57,12,97,12,111,12,12,-46,12,-75,-75,-47,-107,111,12,-59,12,12,12,12,12,12,12,12,12,-75,111,111,-108,111,111,57,111,111,12,12,-43,12,111,12,111,12,]),'LOWER_IDENTIFIER':([0,8,20,23,25,32,33,34,35,36,37,38,39,40,41,44,47,50,68,82,83,85,108,109,112,117,119,121,123,124,125,126,127,128,129,131,134,137,139,143,145,146,147,148,149,155,156,159,160,170,173,175,188,194,202,],[13,13,13,13,-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,13,13,110,13,13,-46,13,-75,-75,-47,-107,110,13,-59,13,13,13,13,13,13,13,13,13,174,-75,110,110,-108,110,110,110,110,13,13,-43,13,110,13,110,13,]),'KEYWORD_DATA':([0,20,],[15,15,]),'$end':([1,2,3,4,5,6,9,11,12,13,19,21,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,86,87,88,89,90,91,92,93,94,95,96,99,100,101,102,103,104,105,106,107,110,111,112,114,116,118,120,130,132,136,144,151,152,153,154,158,161,162,163,164,165,166,167,168,169,170,172,176,179,180,181,184,185,187,189,190,192,193,195,196,199,200,201,203,204,205,206,207,208,209,210,],[0,-109,-75,-113,-114,-115,-116,-40,-41,-42,-110,-112,-75,-119,-75,-126,-75,-84,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-111,-117,-23,-91,-92,-95,-96,-103,-104,-101,-102,-47,-123,-125,-127,-129,-45,-44,-36,-97,-75,-130,-131,-132,-12,-10,-8,-6,-4,-2,-1,-72,-73,-74,-43,-75,-75,-118,-75,-128,-89,-90,-85,-87,-76,-94,-93,-99,-100,-124,-133,-134,-75,-75,-105,-106,-88,-14,-86,-98,]),'NEWLINE':([3,4,5,6,9,11,12,13,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,86,87,88,89,90,91,92,93,94,95,96,100,101,102,103,104,105,106,107,110,111,112,114,116,118,120,130,132,136,144,151,152,153,154,158,161,162,163,164,165,166,167,168,169,170,172,176,179,180,181,184,185,187,189,190,192,193,195,196,199,200,201,203,204,205,206,207,208,209,210,],[20,-113,-114,-115,-116,-40,-41,-42,20,-119,-75,-126,-75,-84,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-117,-23,-91,-92,-95,-96,-103,-104,-101,-102,-47,-123,-125,-127,-129,-45,-44,-36,-97,-75,-130,-131,-132,-12,-10,-8,-6,-4,-2,-1,-72,-73,-74,-43,-75,-75,-118,-75,-128,-89,-90,-85,-87,-76,-94,-93,-99,-100,-124,-133,-134,-75,-75,-105,-106,-88,-14,-86,-98,]),'COLON':([7,8,11,12,13,22,23,52,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,88,89,90,91,92,93,94,95,96,112,113,130,131,132,136,158,161,162,163,164,165,166,167,168,169,170,172,184,185,187,189,190,203,207,208,209,],[22,25,-40,-41,-42,50,25,113,-84,-15,-13,25,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,25,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-47,149,-45,25,-3,-36,-12,-10,-8,-6,-4,-2,-1,-72,-73,-74,-43,-75,-89,-90,-85,-87,-76,-75,-88,-14,-86,]),'SPACE':([7,11,12,13,15,17,18,42,52,53,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,105,106,107,110,111,112,122,130,132,136,151,152,153,154,158,161,162,163,164,165,166,167,168,169,170,172,174,176,184,185,186,187,189,190,200,201,203,204,205,206,207,208,209,],[-80,-40,-41,-42,45,47,-81,-80,-47,-82,119,-84,-15,-13,-11,-9,-7,-5,129,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,-46,137,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,139,47,145,-103,-104,-101,-102,-47,159,-45,129,-36,119,-130,-131,-132,-12,-10,-8,-6,-4,-2,-1,-72,-73,-74,-43,-75,139,194,-89,-90,202,-85,-87,-76,-133,-134,-75,194,-105,-106,-88,-14,-86,]),'EQ':([7,10,11,12,13,14,16,17,18,42,46,48,52,53,97,98,112,140,141,142,174,191,],[-80,43,-40,-41,-42,44,-83,-75,-81,-80,-77,-79,-47,-82,-75,-75,-47,-120,-122,-78,-75,-121,]),'OPERATOR':([8,11,12,13,23,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,88,89,90,91,92,93,94,95,96,112,130,131,132,136,158,161,162,163,164,165,166,167,168,169,170,172,184,185,187,189,190,203,207,208,209,],[32,-40,-41,-42,32,-84,-15,-13,32,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,32,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-47,-45,32,-3,-36,-12,-10,-8,-6,-4,-2,-1,-72,-73,-74,-43,-75,-89,-90,-85,-87,-76,-75,-88,-14,-86,]),'ARROW':([8,11,12,13,17,18,23,42,46,48,53,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,88,89,90,91,92,93,94,95,96,98,103,104,105,106,107,110,111,112,130,131,132,136,138,142,144,158,161,162,163,164,165,166,167,168,169,170,172,176,184,185,187,189,190,192,195,196,203,204,205,206,207,208,209,210,],[33,-40,-41,-42,-75,-81,33,-80,-77,-79,-82,-84,-15,-13,33,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,33,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-75,143,-95,-96,-103,-104,-101,-102,-47,-45,33,-3,-36,173,-78,-97,-12,-10,-8,-6,-4,-2,-1,-72,-73,-74,-43,-75,-75,-89,-90,-85,-87,-76,143,-99,-100,-75,-75,-105,-106,-88,-14,-86,-98,]),'COMMA':([8,11,12,13,23,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,88,89,90,91,92,93,94,95,96,112,130,131,132,136,158,161,162,163,164,165,166,167,168,169,170,172,184,185,187,189,190,203,207,208,209,],[34,-40,-41,-42,34,-84,-15,-13,34,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,34,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-47,-45,34,-3,-36,-12,-10,-8,-6,-4,-2,-1,-72,-73,-74,-43,-75,-89,-90,-85,-87,-76,-75,-88,-14,-86,]),'PLUS':([8,11,12,13,23,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,88,89,90,91,92,93,94,95,96,112,130,131,132,136,158,161,162,163,164,165,166,167,168,169,170,172,184,185,187,189,190,203,207,208,209,],[35,-40,-41,-42,35,-84,-15,-13,-11,35,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,35,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-47,-45,35,-3,-36,-12,-10,35,-6,-4,-2,-1,-72,-73,-74,-43,-75,-89,-90,-85,-87,-76,-75,-88,-14,-86,]),'MINUS':([8,11,12,13,23,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,88,89,90,91,92,93,94,95,96,112,130,131,132,136,158,161,162,163,164,165,166,167,168,169,170,172,184,185,187,189,190,203,207,208,209,],[36,-40,-41,-42,36,-84,-15,-13,-11,36,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,36,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-47,-45,36,-3,-36,-12,-10,36,-6,-4,-2,-1,-72,-73,-74,-43,-75,-89,-90,-85,-87,-76,-75,-88,-14,-86,]),'STAR':([8,11,12,13,23,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,88,89,90,91,92,93,94,95,96,112,130,131,132,136,158,161,162,163,164,165,166,167,168,169,170,172,184,185,187,189,190,203,207,208,209,],[37,-40,-41,-42,37,-84,-15,-13,-11,-9,37,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,37,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-47,-45,37,-3,-36,-12,-10,-8,37,-4,-2,-1,-72,-73,-74,-43,-75,-89,-90,-85,-87,-76,-75,-88,-14,-86,]),'SLASH':([8,11,12,13,23,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,88,89,90,91,92,93,94,95,96,112,130,131,132,136,158,161,162,163,164,165,166,167,168,169,170,172,184,185,187,189,190,203,207,208,209,],[38,-40,-41,-42,38,-84,-15,-13,-11,-9,38,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,38,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-47,-45,38,-3,-36,-12,-10,-8,38,-4,-2,-1,-72,-73,-74,-43,-75,-89,-90,-85,-87,-76,-75,-88,-14,-86,]),'DOUBLESLASH':([8,11,12,13,23,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,88,89,90,91,92,93,94,95,96,112,130,131,132,136,158,161,162,163,164,165,166,167,168,169,170,172,184,185,187,189,190,203,207,208,209,],[39,-40,-41,-42,39,-84,-15,-13,-11,-9,39,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,39,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-47,-45,39,-3,-36,-12,-10,-8,39,-4,-2,-1,-72,-73,-74,-43,-75,-89,-90,-85,-87,-76,-75,-88,-14,-86,]),'PERCENT':([8,11,12,13,23,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,88,89,90,91,92,93,94,95,96,112,130,131,132,136,158,161,162,163,164,165,166,167,168,169,170,172,184,185,187,189,190,203,207,208,209,],[40,-40,-41,-42,40,-84,-15,-13,-11,-9,40,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,40,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-47,-45,40,-3,-36,-12,-10,-8,40,-4,-2,-1,-72,-73,-74,-43,-75,-89,-90,-85,-87,-76,-75,-88,-14,-86,]),'DOT_OPERATOR':([8,11,12,13,23,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,88,89,90,91,92,93,94,95,96,112,130,131,132,136,158,161,162,163,164,165,166,167,168,169,170,172,184,185,187,189,190,203,207,208,209,],[41,-40,-41,-42,41,-84,-15,-13,-11,-9,-7,-5,41,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,41,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-47,-45,41,41,-36,-12,-10,-8,-6,-4,-2,-1,-72,-73,-74,-43,-75,-89,-90,-85,-87,-76,-75,-88,-14,-86,]),'RPAREN':([11,12,13,16,17,18,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,46,48,51,53,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,88,89,90,91,92,93,94,95,96,98,102,103,104,105,106,107,110,111,112,117,130,132,135,136,142,144,147,158,161,162,163,164,165,166,167,168,169,170,172,176,177,182,184,185,187,189,190,192,193,195,196,197,203,204,205,206,207,208,209,210,],[-40,-41,-42,-83,-75,-81,52,-55,53,-60,-61,-62,-63,-64,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,-80,-77,-79,112,-82,-84,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,136,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-75,-91,-92,-95,-96,-103,-104,-101,-102,-47,-107,-45,-44,170,-36,-78,-97,-108,-12,-10,-8,-6,-4,-2,-1,-72,-73,-74,-43,-75,-75,-75,200,-89,-90,-85,-87,-76,-94,-93,-99,-100,205,-75,-75,-105,-106,-88,-14,-86,-98,]),'KEYWORD_WHERE':([11,12,13,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,86,87,88,89,90,91,92,93,94,95,96,112,130,132,133,135,136,157,158,161,162,163,164,165,166,167,168,169,170,172,184,185,187,189,190,203,207,208,209,],[-40,-41,-42,122,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-47,-45,-3,122,122,-36,122,-12,-10,-8,-6,-4,-2,-1,-72,-73,-74,-43,-75,-89,-90,-85,-87,122,-75,-88,122,-86,]),'TICK_OPERATOR':([11,12,13,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,86,87,88,89,90,91,92,93,94,95,96,112,130,132,133,135,136,157,158,161,162,163,164,165,166,167,168,169,170,172,184,185,187,189,190,203,207,208,209,],[-40,-41,-42,123,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-47,-45,-3,123,123,-36,123,-12,-10,-8,-6,-4,-2,-1,-72,-73,-74,-43,-75,-89,-90,-85,-87,123,-75,-88,123,-86,]),'PADDING':([11,12,13,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,86,87,88,89,90,91,92,93,94,95,96,102,103,104,105,106,107,108,109,110,111,112,118,120,122,130,132,136,143,144,151,152,153,154,158,161,162,163,164,165,166,167,168,169,170,172,176,177,178,180,181,184,185,187,189,190,192,193,195,196,200,201,203,204,205,206,207,208,209,210,],[-40,-41,-42,117,-126,-75,-84,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-91,-92,-95,-96,-103,-104,117,117,-101,-102,-47,-127,-129,160,-45,-44,-36,117,-97,-75,-130,-131,-132,-12,-10,-8,-6,-4,-2,-1,-72,-73,-74,-43,188,-75,117,117,117,-128,-89,-90,-85,-87,-76,-94,-93,-99,-100,-133,-134,188,-75,-105,-106,-88,-14,-86,-98,]),'KEYWORD_IN':([11,12,13,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,86,87,88,89,90,91,92,93,94,95,96,112,130,132,136,158,161,162,163,164,165,166,167,168,169,170,171,172,184,185,187,189,190,203,207,208,209,],[-40,-41,-42,-84,-15,-13,-11,-9,-7,-5,-3,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,-46,-67,-68,-69,-70,-71,-38,-37,-32,-33,-34,-35,-47,-45,-44,-36,-12,-10,-8,-6,-4,-2,-1,-72,-73,-74,-43,186,-75,-89,-90,-85,-87,-76,-75,-88,-14,-86,]),'KEYWORD_LET':([25,32,33,34,35,36,37,38,39,40,41,44,68,82,83,112,121,123,124,125,126,127,128,129,131,170,173,202,],[-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,84,84,84,-46,-47,84,-59,84,84,84,84,84,84,84,-43,84,84,]),'BACKSLASH':([25,32,33,34,35,36,37,38,39,40,41,44,68,82,83,112,121,123,124,125,126,127,128,129,131,170,173,202,],[-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,85,85,85,-46,-47,85,-59,85,85,85,85,85,85,85,-43,85,85,]),'BASE10_INTEGER':([25,32,33,34,35,36,37,38,39,40,41,44,68,82,83,112,121,123,124,125,126,127,128,129,131,170,173,202,],[-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,86,86,86,-46,-47,86,-59,86,86,86,86,86,86,86,-43,86,86,]),'BASE16_INTEGER':([25,32,33,34,35,36,37,38,39,40,41,44,68,82,83,112,121,123,124,125,126,127,128,129,131,170,173,202,],[-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,87,87,87,-46,-47,87,-59,87,87,87,87,87,87,87,-43,87,87,]),'BASE8_INTEGER':([25,32,33,34,35,36,37,38,39,40,41,44,68,82,83,112,121,123,124,125,126,127,128,129,131,170,173,202,],[-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,88,88,88,-46,-47,88,-59,88,88,88,88,88,88,88,-43,88,88,]),'BASE2_INTEGER':([25,32,33,34,35,36,37,38,39,40,41,44,68,82,83,112,121,123,124,125,126,127,128,129,131,170,173,202,],[-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,89,89,89,-46,-47,89,-59,89,89,89,89,89,89,89,-43,89,89,]),'FLOAT':([25,32,33,34,35,36,37,38,39,40,41,44,68,82,83,112,121,123,124,125,126,127,128,129,131,170,173,202,],[-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,90,90,90,-46,-47,90,-59,90,90,90,90,90,90,90,-43,90,90,]),'STRING':([25,32,33,34,35,36,37,38,39,40,41,44,68,82,83,112,121,123,124,125,126,127,128,129,131,134,170,173,202,],[-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,91,91,91,-46,-47,91,-59,91,91,91,91,91,91,91,91,-43,91,91,]),'CHAR':([25,32,33,34,35,36,37,38,39,40,41,44,68,82,83,112,121,123,124,125,126,127,128,129,131,134,170,173,202,],[-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,92,92,92,-46,-47,92,-59,92,92,92,92,92,92,92,92,-43,92,92,]),'DATE':([25,32,33,34,35,36,37,38,39,40,41,44,68,82,83,112,121,123,124,125,126,127,128,129,131,170,173,202,],[-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,93,93,93,-46,-47,93,-59,93,93,93,93,93,93,93,-43,93,93,]),'DATETIME':([25,32,33,34,35,36,37,38,39,40,41,44,68,82,83,112,121,123,124,125,126,127,128,129,131,170,173,202,],[-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,94,94,94,-46,-47,94,-59,94,94,94,94,94,94,94,-43,94,94,]),'DATE_INTERVAL':([25,32,33,34,35,36,37,38,39,40,41,44,68,82,83,112,121,123,124,125,126,127,128,129,131,170,173,202,],[-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,95,95,95,-46,-47,95,-59,95,95,95,95,95,95,95,-43,95,95,]),'DATETIME_INTERVAL':([25,32,33,34,35,36,37,38,39,40,41,44,68,82,83,112,121,123,124,125,126,127,128,129,131,170,173,202,],[-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,96,96,96,-46,-47,96,-59,96,96,96,96,96,96,96,-43,96,96,]),'LBRACKET':([50,108,109,117,119,143,145,146,147,148,149,155,156,175,194,],[109,-75,-75,-107,156,-75,109,109,-108,109,109,109,109,109,109,]),'PIPE':([55,56,57,110,111,115,116,117,118,120,151,152,153,154,180,181,200,201,],[-75,-126,-75,-101,-102,150,-108,-107,-127,-129,-75,-130,-131,-132,-75,-128,-133,-134,]),'ANNOTATION':([73,86,87,88,89,90,],[134,-67,-68,-69,-70,-71,]),'RBRACKET':([102,103,104,105,106,107,110,111,117,144,147,176,178,183,192,193,195,196,198,204,205,206,210,],[-91,-92,-95,-96,-103,-104,-101,-102,-107,-97,-108,-75,-75,201,-94,-93,-99,-100,206,-75,-105,-106,-98,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'definitions':([0,],[2,]),'definition':([0,20,],[3,49,]),'nametype_decl':([0,20,],[4,4,]),'valuedef':([0,20,],[5,5,]),'datatype_definition':([0,20,],[6,6,]),'_identifier':([0,8,20,23,44,47,68,82,85,121,124,125,126,127,128,129,131,134,137,159,160,173,188,202,],[7,42,7,42,81,42,81,81,42,81,81,81,81,81,81,81,81,81,42,42,42,81,42,81,]),'equation':([0,20,137,159,160,188,],[9,9,172,172,172,203,]),'_datatype_lhs':([0,20,],[10,10,]),'pattern':([0,8,20,23,137,159,160,188,],[14,26,14,26,14,14,14,14,]),'parameters':([0,8,20,23,85,137,159,160,188,],[16,16,16,16,138,16,16,16,16,]),'_param':([0,8,20,23,47,85,137,159,160,188,],[17,17,17,17,98,17,17,17,17,17,]),'_enclosed_operator':([0,8,20,23,44,47,65,68,82,85,121,124,125,126,127,128,129,131,132,137,159,160,166,173,188,202,],[18,18,18,18,83,18,83,83,83,18,83,83,83,83,83,83,83,83,83,18,18,18,83,83,18,83,]),'_definition_set':([3,49,],[19,99,]),'empty':([3,17,49,55,57,97,98,108,109,143,151,172,174,176,177,178,180,203,204,],[21,48,21,116,120,141,48,147,147,147,120,189,141,196,147,147,116,189,196,]),'_st_operator':([8,23,82,131,],[24,51,51,51,]),'infixl_operator_2':([8,23,61,82,131,],[27,27,125,27,27,]),'infixr_operator_2':([8,23,61,82,131,],[28,28,124,28,28,]),'infixl_operator_6':([8,23,62,82,131,162,],[29,29,126,29,29,126,]),'infixl_operator_7':([8,23,63,82,131,163,],[30,30,127,30,30,127,]),'infixr_operator_9':([8,23,65,82,131,132,166,],[31,31,128,31,31,128,128,]),'_parameters':([17,98,],[46,142,]),'_data_rhs':([43,],[54,]),'data_cons':([43,150,],[55,180,]),'_data_cons':([43,150,],[56,56,]),'expr':([44,68,82,121,124,125,126,127,128,129,131,173,202,],[58,133,135,157,133,133,133,133,133,133,135,190,208,]),'expr_term0':([44,68,82,121,124,125,126,127,128,129,131,173,202,],[59,59,59,158,59,59,59,59,59,59,59,59,59,]),'expr_term1':([44,68,82,121,124,125,126,127,128,129,131,173,202,],[60,60,60,60,161,60,60,60,60,60,60,60,60,]),'expr_term2':([44,68,82,121,124,125,126,127,128,129,131,173,202,],[61,61,61,61,61,61,61,61,61,61,61,61,61,]),'expr_term6':([44,68,82,121,124,125,126,127,128,129,131,173,202,],[62,62,62,62,62,162,62,62,62,62,62,62,62,]),'expr_term7':([44,68,82,121,124,125,126,127,128,129,131,173,202,],[63,63,63,63,63,63,163,63,63,63,63,63,63,]),'expr_term9':([44,68,82,121,124,125,126,127,128,129,131,173,202,],[64,64,64,64,64,64,64,164,165,64,64,64,64,]),'expr_factor':([44,68,82,121,124,125,126,127,128,129,131,173,202,],[65,132,65,65,65,65,65,65,65,166,65,65,65,]),'literal':([44,68,82,121,124,125,126,127,128,129,131,173,202,],[66,66,66,66,66,66,66,66,66,66,66,66,66,]),'identifier':([44,68,82,121,124,125,126,127,128,129,131,134,173,202,],[67,67,67,67,67,67,67,67,67,67,67,169,67,67,]),'enclosed_expr':([44,65,68,82,121,124,125,126,127,128,129,131,132,166,173,202,],[68,130,68,68,68,68,68,68,68,68,68,68,130,130,68,68,]),'unit_value':([44,68,82,121,124,125,126,127,128,129,131,173,202,],[69,69,69,69,69,69,69,69,69,69,69,69,69,]),'letexpr':([44,68,82,121,124,125,126,127,128,129,131,173,202,],[70,70,70,70,70,70,70,70,70,70,70,70,70,]),'where_expr':([44,68,82,121,124,125,126,127,128,129,131,173,202,],[71,71,71,71,71,71,71,71,71,71,71,71,71,]),'lambda_expr':([44,68,82,121,124,125,126,127,128,129,131,173,202,],[72,72,72,72,72,72,72,72,72,72,72,72,72,]),'number':([44,68,82,121,124,125,126,127,128,129,131,173,202,],[73,73,73,73,73,73,73,73,73,73,73,73,73,]),'concrete_number':([44,68,82,121,124,125,126,127,128,129,131,173,202,],[74,74,74,74,74,74,74,74,74,74,74,74,74,]),'string':([44,68,82,121,124,125,126,127,128,129,131,134,173,202,],[75,75,75,75,75,75,75,75,75,75,75,167,75,75,]),'char':([44,68,82,121,124,125,126,127,128,129,131,134,173,202,],[76,76,76,76,76,76,76,76,76,76,76,168,76,76,]),'date':([44,68,82,121,124,125,126,127,128,129,131,173,202,],[77,77,77,77,77,77,77,77,77,77,77,77,77,]),'datetime':([44,68,82,121,124,125,126,127,128,129,131,173,202,],[78,78,78,78,78,78,78,78,78,78,78,78,78,]),'date_interval':([44,68,82,121,124,125,126,127,128,129,131,173,202,],[79,79,79,79,79,79,79,79,79,79,79,79,79,]),'datetime_interval':([44,68,82,121,124,125,126,127,128,129,131,173,202,],[80,80,80,80,80,80,80,80,80,80,80,80,80,]),'st_type_expr':([50,149,],[100,179,]),'type_expr':([50,146,148,149,155,156,],[101,177,178,101,182,183,]),'type_function_expr':([50,146,148,149,155,156,175,],[102,102,102,102,102,102,193,]),'type_term':([50,146,148,149,155,156,175,],[103,103,103,103,103,103,192,]),'type_app_expression':([50,146,148,149,155,156,175,],[104,104,104,104,104,104,104,]),'type_factor':([50,145,146,148,149,155,156,175,194,],[105,176,105,105,105,105,105,105,204,]),'type_variable':([50,119,145,146,148,149,155,156,175,194,],[106,152,106,106,106,106,106,106,106,106,]),'type_cons':([50,119,145,146,148,149,155,156,175,194,],[107,153,107,107,107,107,107,107,107,107,]),'_data_conses':([55,180,],[114,199,]),'_maybe_padding':([55,108,109,143,177,178,180,],[115,146,148,175,197,198,115,]),'_cons_args':([57,151,],[118,181,]),'infixl_operator_0':([58,133,135,157,190,208,],[121,121,121,121,121,121,]),'_cons_params':([97,174,],[140,191,]),'_app_args_non_empty':([105,],[144,]),'cons_arg':([119,],[151,]),'_cons_arg_factor':([119,],[154,]),'equations':([137,159,160,],[171,184,185,]),'_equation_set':([172,203,],[187,209,]),'_app_args':([176,204,],[195,210,]),'st_expr':([202,],[207,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','parsers.py',434),
  ('expr_term9 -> expr_factor infixr_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','parsers.py',441),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','parsers.py',442),
  ('expr_term7 -> expr_term7 infixl_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','parsers.py',444),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','parsers.py',445),
  ('expr_term6 -> expr_term6 infixl_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','parsers.py',447),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','parsers.py',448),
  ('expr_term2 -> expr_term2 infixl_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','parsers.py',450),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','parsers.py',451),
  ('expr_term1 -> expr_term2 infixr_operator_2 expr_term1','expr_term1',3,'p_expressions_precedence_rules','parsers.py',453),
  ('expr_term1 -> expr_term2','expr_term1',1,'p_expressions_precedence_rules','parsers.py',454),
  ('expr_term0 -> expr infixl_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','parsers.py',456),
  ('expr_term0 -> expr_term1','expr_term0',1,'p_expressions_precedence_rules','parsers.py',457),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','parsers.py',470),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','parsers.py',472),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','parsers.py',474),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','parsers.py',475),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','parsers.py',476),
  ('expr_factor -> unit_value','expr_factor',1,'p_standalone_definitions','parsers.py',477),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','parsers.py',478),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','parsers.py',479),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','parsers.py',480),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','parsers.py',482),
  ('literal -> number','literal',1,'p_literals','parsers.py',490),
  ('literal -> concrete_number','literal',1,'p_literals','parsers.py',491),
  ('literal -> string','literal',1,'p_literals','parsers.py',492),
  ('literal -> char','literal',1,'p_literals','parsers.py',493),
  ('literal -> date','literal',1,'p_literals','parsers.py',494),
  ('literal -> datetime','literal',1,'p_literals','parsers.py',495),
  ('literal -> date_interval','literal',1,'p_literals','parsers.py',496),
  ('literal -> datetime_interval','literal',1,'p_literals','parsers.py',497),
  ('date -> DATE','date',1,'p_date','parsers.py',503),
  ('datetime -> DATETIME','datetime',1,'p_datetime','parsers.py',509),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','parsers.py',515),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','parsers.py',521),
  ('unit_value -> LPAREN RPAREN','unit_value',2,'p_unit_value','parsers.py',527),
  ('char -> CHAR','char',1,'p_char','parsers.py',533),
  ('string -> STRING','string',1,'p_string','parsers.py',538),
  ('identifier -> _identifier','identifier',1,'p_variable','parsers.py',543),
  ('_identifier -> UNDER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',550),
  ('_identifier -> UPPER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',551),
  ('_identifier -> LOWER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',552),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','parsers.py',559),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','parsers.py',564),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','parsers.py',565),
  ('enclosed_expr -> _enclosed_operator','enclosed_expr',1,'p_operators_as_expressios','parsers.py',571),
  ('_enclosed_operator -> LPAREN _st_operator RPAREN','_enclosed_operator',3,'p_enclosed_operator','parsers.py',577),
  ('infixr_operator_9 -> DOT_OPERATOR','infixr_operator_9',1,'p_operator','parsers.py',587),
  ('infixl_operator_7 -> STAR','infixl_operator_7',1,'p_operator','parsers.py',589),
  ('infixl_operator_7 -> SLASH','infixl_operator_7',1,'p_operator','parsers.py',590),
  ('infixl_operator_7 -> DOUBLESLASH','infixl_operator_7',1,'p_operator','parsers.py',591),
  ('infixl_operator_7 -> PERCENT','infixl_operator_7',1,'p_operator','parsers.py',592),
  ('infixl_operator_6 -> PLUS','infixl_operator_6',1,'p_operator','parsers.py',594),
  ('infixl_operator_6 -> MINUS','infixl_operator_6',1,'p_operator','parsers.py',595),
  ('infixr_operator_2 -> COLON','infixr_operator_2',1,'p_operator','parsers.py',597),
  ('infixl_operator_2 -> OPERATOR','infixl_operator_2',1,'p_operator','parsers.py',599),
  ('infixl_operator_2 -> ARROW','infixl_operator_2',1,'p_operator','parsers.py',600),
  ('infixl_operator_2 -> COMMA','infixl_operator_2',1,'p_operator','parsers.py',601),
  ('infixl_operator_0 -> TICK_OPERATOR','infixl_operator_0',1,'p_operator','parsers.py',603),
  ('_st_operator -> infixl_operator_2','_st_operator',1,'p_operator','parsers.py',605),
  ('_st_operator -> infixr_operator_2','_st_operator',1,'p_operator','parsers.py',606),
  ('_st_operator -> infixl_operator_6','_st_operator',1,'p_operator','parsers.py',607),
  ('_st_operator -> infixl_operator_7','_st_operator',1,'p_operator','parsers.py',608),
  ('_st_operator -> infixr_operator_9','_st_operator',1,'p_operator','parsers.py',609),
  ('operator -> infixl_operator_0','operator',1,'p_operator','parsers.py',611),
  ('operator -> _st_operator','operator',1,'p_operator','parsers.py',612),
  ('number -> BASE10_INTEGER','number',1,'p_integer','parsers.py',619),
  ('number -> BASE16_INTEGER','number',1,'p_integer','parsers.py',620),
  ('number -> BASE8_INTEGER','number',1,'p_integer','parsers.py',621),
  ('number -> BASE2_INTEGER','number',1,'p_integer','parsers.py',622),
  ('number -> FLOAT','number',1,'p_float','parsers.py',651),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','parsers.py',656),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','parsers.py',657),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','parsers.py',658),
  ('empty -> <empty>','empty',0,'p_empty','parsers.py',667),
  ('lambda_expr -> BACKSLASH parameters ARROW expr','lambda_expr',4,'p_lambda_definition','parsers.py',672),
  ('parameters -> _param _parameters','parameters',2,'p_parameters','parsers.py',680),
  ('_parameters -> SPACE _param _parameters','_parameters',3,'p_parameters','parsers.py',681),
  ('_parameters -> empty','_parameters',1,'p_empty__parameters','parsers.py',690),
  ('_param -> _identifier','_param',1,'p_param_identitifier','parsers.py',696),
  ('_param -> _enclosed_operator','_param',1,'p_param_operator','parsers.py',701),
  ('_param -> LPAREN pattern RPAREN','_param',3,'p_param_pattern','parsers.py',706),
  ('pattern -> parameters','pattern',1,'p_pattern','parsers.py',711),
  ('equation -> pattern EQ expr','equation',3,'p_equation','parsers.py',717),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','parsers.py',727),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','parsers.py',736),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','parsers.py',745),
  ('letexpr -> KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','parsers.py',755),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','parsers.py',763),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','parsers.py',764),
  ('type_expr -> type_function_expr','type_expr',1,'p_type_expr','parsers.py',774),
  ('type_expr -> type_term','type_expr',1,'p_type_expr','parsers.py',775),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','parsers.py',780),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','parsers.py',781),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','parsers.py',791),
  ('type_term -> type_factor','type_term',1,'p_type_term','parsers.py',792),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','parsers.py',797),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','parsers.py',809),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','parsers.py',810),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','parsers.py',818),
  ('type_variable -> LOWER_IDENTIFIER','type_variable',1,'p_type_variable','parsers.py',823),
  ('type_cons -> UPPER_IDENTIFIER','type_cons',1,'p_type_cons','parsers.py',828),
  ('type_factor -> type_variable','type_factor',1,'p_type_factor_identifier','parsers.py',833),
  ('type_factor -> type_cons','type_factor',1,'p_type_factor_identifier','parsers.py',834),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','parsers.py',841),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','parsers.py',846),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','parsers.py',851),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','parsers.py',852),
  ('program -> definitions','program',1,'p_program','parsers.py',858),
  ('definitions -> definition _definition_set','definitions',2,'p_definitions','parsers.py',874),
  ('_definition_set -> NEWLINE definition _definition_set','_definition_set',3,'p_definition_set','parsers.py',882),
  ('_definition_set -> empty','_definition_set',1,'p_definition_set2','parsers.py',890),
  ('definition -> nametype_decl','definition',1,'p_definition','parsers.py',896),
  ('definition -> valuedef','definition',1,'p_definition','parsers.py',897),
  ('definition -> datatype_definition','definition',1,'p_definition','parsers.py',898),
  ('valuedef -> equation','valuedef',1,'p_valuedef','parsers.py',904),
  ('nametype_decl -> _identifier COLON COLON st_type_expr','nametype_decl',4,'p_nametype_decl','parsers.py',910),
  ('nametype_decl -> LPAREN _st_operator RPAREN COLON COLON st_type_expr','nametype_decl',6,'p_nametype_decl_operators','parsers.py',919),
  ('datatype_definition -> _datatype_lhs EQ _data_rhs','datatype_definition',3,'p_datatype_definition','parsers.py',928),
  ('_datatype_lhs -> KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params','_datatype_lhs',4,'p_datatype_lhs','parsers.py',936),
  ('_cons_params -> SPACE LOWER_IDENTIFIER _cons_params','_cons_params',3,'p_datatype_cons_params','parsers.py',945),
  ('_cons_params -> empty','_cons_params',1,'p_datatype_cons_params_empty','parsers.py',954),
  ('_data_rhs -> data_cons _data_conses','_data_rhs',2,'p_datatype_body','parsers.py',960),
  ('_data_conses -> _maybe_padding PIPE data_cons _data_conses','_data_conses',4,'p_datatype_body','parsers.py',961),
  ('_data_conses -> empty','_data_conses',1,'p_datatype_conses_empty','parsers.py',970),
  ('data_cons -> _data_cons','data_cons',1,'p_data_cons','parsers.py',975),
  ('_data_cons -> UPPER_IDENTIFIER _cons_args','_data_cons',2,'p_bare_data_cons','parsers.py',981),
  ('_cons_args -> SPACE cons_arg _cons_args','_cons_args',3,'p_data_cons_args','parsers.py',986),
  ('_cons_args -> empty','_cons_args',1,'p_data_cons_args_empty','parsers.py',995),
  ('cons_arg -> type_variable','cons_arg',1,'p_cons_arg','parsers.py',1001),
  ('cons_arg -> type_cons','cons_arg',1,'p_cons_arg','parsers.py',1002),
  ('cons_arg -> _cons_arg_factor','cons_arg',1,'p_cons_arg','parsers.py',1003),
  ('_cons_arg_factor -> LPAREN type_expr RPAREN','_cons_arg_factor',3,'p_cons_arg_factor','parsers.py',1009),
  ('_cons_arg_factor -> LBRACKET type_expr RBRACKET','_cons_arg_factor',3,'p_cons_arg_factor_list','parsers.py',1015),
]
