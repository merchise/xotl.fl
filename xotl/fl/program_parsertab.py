
# program_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW ATTR_ACCESS BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON COMMA DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FLOAT KEYWORD_CLASS KEYWORD_DATA KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LOWER_IDENTIFIER LPAREN MINUS NEWLINE OPERATOR PADDING PERCENT PIPE PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATOR UNDER_IDENTIFIER UPPER_IDENTIFIERexpr_factor : expr_factor SPACE expr_factorexpr_factor : ATTR_ACCESS\n    expr_term9 : expr_factor infixr_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infixl_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infixl_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infixl_operator_2 expr_term6\n               | expr_term6\n\n    expr_term1 : expr_term2 infixr_operator_2 expr_term1\n               | expr_term2\n\n    expr_term0 : expr infixl_operator_0 expr_term0\n               | expr_term1\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | unit_value\n                | letexpr\n                | where_expr\n                | lambda_expr\n\n    st_type_expr : type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    unit_value : LPAREN RPAREN\n    char : CHARstring : STRINGidentifier : _identifier\n\n    _identifier : UNDER_IDENTIFIER\n                   | UPPER_IDENTIFIER\n                   | LOWER_IDENTIFIER\n\n    enclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : LPAREN operator RPAREN\n    \n    infixr_operator_9 : DOT_OPERATOR\n\n    infixl_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infixl_operator_6 : PLUS\n                     | MINUS\n\n    infixr_operator_2 : COLON\n\n    infixl_operator_2 : OPERATOR\n                      | ARROW\n                      | COMMA\n\n    infixl_operator_0 : TICK_OPERATOR\n\n    _st_operator : infixl_operator_2\n                 | infixr_operator_2\n                 | infixl_operator_6\n                 | infixl_operator_7\n                 | infixr_operator_9\n\n    operator : infixl_operator_0\n             | _st_operator\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH parameters ARROW expr\n    parameters : _identifier _parameters\n       _parameters : SPACE _identifier _parameters\n    _parameters : empty\n    pattern : parametersequation : pattern EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    type_expr : type_function_expr\n                 | type_termtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_variable : LOWER_IDENTIFIERtype_cons : UPPER_IDENTIFIERtype_factor : type_variable\n                   | type_cons\n\n    type_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET_maybe_padding : PADDING\n                      | empty\n    program : definitions\n    definitions : definition _definition_set\n    _definition_set : NEWLINE definition _definition_set\n    _definition_set : empty\n    definition : nametype_decl\n                  | valuedef\n                  | datatype_definition\n    valuedef : equation\n    nametype_decl : _identifier COLON COLON st_type_expr\n    nametype_decl : LPAREN _st_operator RPAREN COLON COLON st_type_expr\n    datatype_definition : _datatype_lhs EQ _data_rhs\n    _datatype_lhs : KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params\n    _cons_params : SPACE LOWER_IDENTIFIER _cons_params\n    _cons_params : empty\n    _data_rhs : data_cons _data_conses\n       _data_conses : _maybe_padding PIPE data_cons _data_conses\n    _data_conses : emptydata_cons : _data_cons_data_cons : UPPER_IDENTIFIER _cons_args_cons_args : SPACE cons_arg _cons_args\n    _cons_args : empty\n    cons_arg : type_variable\n       cons_arg : type_cons\n       cons_arg : _cons_arg_factor\n    _cons_arg_factor : LPAREN type_expr RPAREN\n    _cons_arg_factor : LBRACKET type_expr RBRACKET\n    '
    
_lr_action_items = {'LPAREN':([0,11,12,13,18,25,31,32,33,34,35,36,37,38,39,40,42,45,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,83,84,85,86,87,88,89,90,101,102,110,112,114,116,117,118,119,120,121,122,123,124,125,129,139,141,142,143,144,145,151,152,154,157,158,159,160,161,162,163,164,165,166,167,169,170,172,181,182,184,186,187,191,199,200,204,205,206,],[8,-41,-42,-43,8,-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,77,101,-81,-16,-14,-12,-10,-8,-6,124,-2,-17,-18,77,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,77,-67,-68,-69,-70,-71,-39,-38,-33,-34,-35,-36,-75,-75,-104,151,77,-59,77,77,77,77,77,77,-46,77,124,-37,-75,101,101,-105,101,101,101,101,-13,-11,-9,-7,-5,-3,-1,-72,-73,-74,-44,-47,-75,77,101,-86,-87,-82,-84,-76,101,77,-75,-85,-15,-83,]),'UNDER_IDENTIFIER':([0,18,22,25,31,32,33,34,35,36,37,38,39,40,42,63,77,79,114,116,117,118,119,120,121,122,124,127,133,155,156,166,167,170,185,199,],[11,11,11,-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,11,11,11,11,11,-59,11,11,11,11,11,11,11,11,11,11,11,-44,-47,11,11,11,]),'UPPER_IDENTIFIER':([0,18,22,25,31,32,33,34,35,36,37,38,39,40,41,42,43,45,63,77,79,101,102,110,112,114,116,117,118,119,120,121,122,124,127,133,139,141,142,143,144,145,146,151,152,155,156,166,167,170,172,185,191,199,],[12,12,12,-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,51,12,91,104,12,12,12,-75,-75,-104,104,12,-59,12,12,12,12,12,12,12,12,12,-75,104,104,-105,104,104,51,104,104,12,12,-44,-47,12,104,12,104,12,]),'LOWER_IDENTIFIER':([0,18,22,25,31,32,33,34,35,36,37,38,39,40,42,45,63,77,79,101,102,110,112,114,116,117,118,119,120,121,122,124,127,133,136,139,141,142,143,144,145,151,152,155,156,166,167,170,172,185,191,199,],[13,13,13,-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,13,103,13,13,13,-75,-75,-104,103,13,-59,13,13,13,13,13,13,13,13,13,171,-75,103,103,-105,103,103,103,103,13,13,-44,-47,13,103,13,103,13,]),'KEYWORD_DATA':([0,18,],[15,15,]),'$end':([1,2,3,4,5,6,9,11,12,13,17,19,44,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,103,104,107,109,111,113,123,125,129,140,147,148,149,150,154,157,158,159,160,161,162,163,164,165,166,167,169,173,176,177,178,181,182,184,186,187,189,190,192,193,196,197,198,200,201,202,203,204,205,206,207,],[0,-106,-75,-110,-111,-112,-113,-41,-42,-43,-107,-109,-75,-116,-75,-123,-75,-81,-16,-14,-12,-10,-8,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,-67,-68,-69,-70,-71,-39,-38,-33,-34,-35,-36,-108,-114,-24,-88,-89,-92,-93,-100,-101,-98,-99,-120,-122,-124,-126,-46,-45,-37,-94,-75,-127,-128,-129,-13,-11,-9,-7,-5,-3,-1,-72,-73,-74,-44,-47,-75,-75,-115,-75,-125,-86,-87,-82,-84,-76,-91,-90,-96,-97,-121,-130,-131,-75,-75,-102,-103,-85,-15,-83,-95,]),'NEWLINE':([3,4,5,6,9,11,12,13,44,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,82,83,84,85,86,87,88,89,90,93,94,95,96,97,98,99,100,103,104,107,109,111,113,123,125,129,140,147,148,149,150,154,157,158,159,160,161,162,163,164,165,166,167,169,173,176,177,178,181,182,184,186,187,189,190,192,193,196,197,198,200,201,202,203,204,205,206,207,],[18,-110,-111,-112,-113,-41,-42,-43,18,-116,-75,-123,-75,-81,-16,-14,-12,-10,-8,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,-67,-68,-69,-70,-71,-39,-38,-33,-34,-35,-36,-114,-24,-88,-89,-92,-93,-100,-101,-98,-99,-120,-122,-124,-126,-46,-45,-37,-94,-75,-127,-128,-129,-13,-11,-9,-7,-5,-3,-1,-72,-73,-74,-44,-47,-75,-75,-115,-75,-125,-86,-87,-82,-84,-76,-91,-90,-96,-97,-121,-130,-131,-75,-75,-102,-103,-85,-15,-83,-95,]),'COLON':([7,8,11,12,13,20,47,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,83,84,85,86,87,88,89,90,106,123,124,125,129,154,157,158,159,160,161,162,163,164,165,166,167,169,181,182,184,186,187,200,204,205,206,],[20,25,-41,-42,-43,45,106,-81,-16,-14,25,-10,-8,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,25,-67,-68,-69,-70,-71,-39,-38,-33,-34,-35,-36,145,-46,25,-4,-37,-13,-11,-9,-7,-5,-3,-1,-72,-73,-74,-44,-47,-75,-86,-87,-82,-84,-76,-75,-85,-15,-83,]),'SPACE':([7,11,12,13,15,46,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,80,81,82,83,84,85,86,87,88,89,90,91,98,99,100,103,104,115,123,125,129,135,147,148,149,150,154,157,158,159,160,161,162,163,164,165,166,167,169,171,173,181,182,183,184,186,187,197,198,200,201,202,203,204,205,206,],[22,-41,-42,-43,43,22,112,-81,-16,-14,-12,-10,-8,-6,122,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,133,-67,-68,-69,-70,-71,-39,-38,-33,-34,-35,-36,136,141,-100,-101,-98,-99,155,-46,122,-37,22,112,-127,-128,-129,-13,-11,-9,-7,-5,-3,-1,-72,-73,-74,-44,-47,-75,136,191,-86,-87,199,-82,-84,-76,-130,-131,-75,191,-102,-103,-85,-15,-83,]),'EQ':([7,10,11,12,13,14,16,21,23,46,91,105,135,137,138,171,188,],[-75,41,-41,-42,-43,42,-80,-77,-79,-75,-75,-78,-75,-117,-119,-75,-118,]),'OPERATOR':([8,11,12,13,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,83,84,85,86,87,88,89,90,123,124,125,129,154,157,158,159,160,161,162,163,164,165,166,167,169,181,182,184,186,187,200,204,205,206,],[31,-41,-42,-43,-81,-16,-14,31,-10,-8,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,31,-67,-68,-69,-70,-71,-39,-38,-33,-34,-35,-36,-46,31,-4,-37,-13,-11,-9,-7,-5,-3,-1,-72,-73,-74,-44,-47,-75,-86,-87,-82,-84,-76,-75,-85,-15,-83,]),'ARROW':([8,11,12,13,21,23,46,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,83,84,85,86,87,88,89,90,96,97,98,99,100,103,104,105,123,124,125,129,134,135,140,154,157,158,159,160,161,162,163,164,165,166,167,169,173,181,182,184,186,187,189,192,193,200,201,202,203,204,205,206,207,],[32,-41,-42,-43,-77,-79,-75,-81,-16,-14,32,-10,-8,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,32,-67,-68,-69,-70,-71,-39,-38,-33,-34,-35,-36,139,-92,-93,-100,-101,-98,-99,-78,-46,32,-4,-37,170,-75,-94,-13,-11,-9,-7,-5,-3,-1,-72,-73,-74,-44,-47,-75,-75,-86,-87,-82,-84,-76,139,-96,-97,-75,-75,-102,-103,-85,-15,-83,-95,]),'COMMA':([8,11,12,13,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,83,84,85,86,87,88,89,90,123,124,125,129,154,157,158,159,160,161,162,163,164,165,166,167,169,181,182,184,186,187,200,204,205,206,],[33,-41,-42,-43,-81,-16,-14,33,-10,-8,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,33,-67,-68,-69,-70,-71,-39,-38,-33,-34,-35,-36,-46,33,-4,-37,-13,-11,-9,-7,-5,-3,-1,-72,-73,-74,-44,-47,-75,-86,-87,-82,-84,-76,-75,-85,-15,-83,]),'PLUS':([8,11,12,13,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,83,84,85,86,87,88,89,90,123,124,125,129,154,157,158,159,160,161,162,163,164,165,166,167,169,181,182,184,186,187,200,204,205,206,],[34,-41,-42,-43,-81,-16,-14,-12,34,-8,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,34,-67,-68,-69,-70,-71,-39,-38,-33,-34,-35,-36,-46,34,-4,-37,-13,-11,34,-7,-5,-3,-1,-72,-73,-74,-44,-47,-75,-86,-87,-82,-84,-76,-75,-85,-15,-83,]),'MINUS':([8,11,12,13,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,83,84,85,86,87,88,89,90,123,124,125,129,154,157,158,159,160,161,162,163,164,165,166,167,169,181,182,184,186,187,200,204,205,206,],[35,-41,-42,-43,-81,-16,-14,-12,35,-8,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,35,-67,-68,-69,-70,-71,-39,-38,-33,-34,-35,-36,-46,35,-4,-37,-13,-11,35,-7,-5,-3,-1,-72,-73,-74,-44,-47,-75,-86,-87,-82,-84,-76,-75,-85,-15,-83,]),'STAR':([8,11,12,13,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,83,84,85,86,87,88,89,90,123,124,125,129,154,157,158,159,160,161,162,163,164,165,166,167,169,181,182,184,186,187,200,204,205,206,],[36,-41,-42,-43,-81,-16,-14,-12,-10,36,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,36,-67,-68,-69,-70,-71,-39,-38,-33,-34,-35,-36,-46,36,-4,-37,-13,-11,-9,36,-5,-3,-1,-72,-73,-74,-44,-47,-75,-86,-87,-82,-84,-76,-75,-85,-15,-83,]),'SLASH':([8,11,12,13,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,83,84,85,86,87,88,89,90,123,124,125,129,154,157,158,159,160,161,162,163,164,165,166,167,169,181,182,184,186,187,200,204,205,206,],[37,-41,-42,-43,-81,-16,-14,-12,-10,37,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,37,-67,-68,-69,-70,-71,-39,-38,-33,-34,-35,-36,-46,37,-4,-37,-13,-11,-9,37,-5,-3,-1,-72,-73,-74,-44,-47,-75,-86,-87,-82,-84,-76,-75,-85,-15,-83,]),'DOUBLESLASH':([8,11,12,13,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,83,84,85,86,87,88,89,90,123,124,125,129,154,157,158,159,160,161,162,163,164,165,166,167,169,181,182,184,186,187,200,204,205,206,],[38,-41,-42,-43,-81,-16,-14,-12,-10,38,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,38,-67,-68,-69,-70,-71,-39,-38,-33,-34,-35,-36,-46,38,-4,-37,-13,-11,-9,38,-5,-3,-1,-72,-73,-74,-44,-47,-75,-86,-87,-82,-84,-76,-75,-85,-15,-83,]),'PERCENT':([8,11,12,13,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,83,84,85,86,87,88,89,90,123,124,125,129,154,157,158,159,160,161,162,163,164,165,166,167,169,181,182,184,186,187,200,204,205,206,],[39,-41,-42,-43,-81,-16,-14,-12,-10,39,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,39,-67,-68,-69,-70,-71,-39,-38,-33,-34,-35,-36,-46,39,-4,-37,-13,-11,-9,39,-5,-3,-1,-72,-73,-74,-44,-47,-75,-86,-87,-82,-84,-76,-75,-85,-15,-83,]),'DOT_OPERATOR':([8,11,12,13,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,83,84,85,86,87,88,89,90,123,124,125,129,154,157,158,159,160,161,162,163,164,165,166,167,169,181,182,184,186,187,200,204,205,206,],[40,-41,-42,-43,-81,-16,-14,-12,-10,-8,-6,40,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,40,-67,-68,-69,-70,-71,-39,-38,-33,-34,-35,-36,-46,40,40,-37,-13,-11,-9,-7,-5,-3,-1,-72,-73,-74,-44,-47,-75,-86,-87,-82,-84,-76,-75,-85,-15,-83,]),'KEYWORD_WHERE':([11,12,13,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,82,83,84,85,86,87,88,89,90,123,125,126,128,129,153,154,157,158,159,160,161,162,163,164,165,166,167,169,181,182,184,186,187,200,204,205,206,],[-41,-42,-43,115,-16,-14,-12,-10,-8,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,-67,-68,-69,-70,-71,-39,-38,-33,-34,-35,-36,-46,-4,115,115,-37,115,-13,-11,-9,-7,-5,-3,-1,-72,-73,-74,-44,-47,-75,-86,-87,-82,-84,115,-75,-85,115,-83,]),'TICK_OPERATOR':([11,12,13,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,83,84,85,86,87,88,89,90,123,124,125,126,128,129,153,154,157,158,159,160,161,162,163,164,165,166,167,169,181,182,184,186,187,200,204,205,206,],[-41,-42,-43,116,-16,-14,-12,-10,-8,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,116,-67,-68,-69,-70,-71,-39,-38,-33,-34,-35,-36,-46,116,-4,116,116,-37,116,-13,-11,-9,-7,-5,-3,-1,-72,-73,-74,-44,-47,-75,-86,-87,-82,-84,116,-75,-85,116,-83,]),'PADDING':([11,12,13,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,82,83,84,85,86,87,88,89,90,95,96,97,98,99,100,101,102,103,104,111,113,115,123,125,129,139,140,147,148,149,150,154,157,158,159,160,161,162,163,164,165,166,167,169,173,174,175,177,178,181,182,184,186,187,189,190,192,193,197,198,200,201,202,203,204,205,206,207,],[-41,-42,-43,110,-123,-75,-81,-16,-14,-12,-10,-8,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,-67,-68,-69,-70,-71,-39,-38,-33,-34,-35,-36,-88,-89,-92,-93,-100,-101,110,110,-98,-99,-124,-126,156,-46,-45,-37,110,-94,-75,-127,-128,-129,-13,-11,-9,-7,-5,-3,-1,-72,-73,-74,-44,-47,185,-75,110,110,110,-125,-86,-87,-82,-84,-76,-91,-90,-96,-97,-130,-131,185,-75,-102,-103,-85,-15,-83,-95,]),'KEYWORD_IN':([11,12,13,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,82,83,84,85,86,87,88,89,90,123,125,129,154,157,158,159,160,161,162,163,164,165,166,167,168,169,181,182,184,186,187,200,204,205,206,],[-41,-42,-43,-81,-16,-14,-12,-10,-8,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,-67,-68,-69,-70,-71,-39,-38,-33,-34,-35,-36,-46,-45,-37,-13,-11,-9,-7,-5,-3,-1,-72,-73,-74,-44,-47,183,-75,-86,-87,-82,-84,-76,-75,-85,-15,-83,]),'RPAREN':([11,12,13,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,83,84,85,86,87,88,89,90,95,96,97,98,99,100,103,104,110,116,123,125,128,129,130,131,132,140,143,154,157,158,159,160,161,162,163,164,165,166,167,169,173,174,179,181,182,184,186,187,189,190,192,193,194,200,201,202,203,204,205,206,207,],[-41,-42,-43,47,-55,-60,-61,-62,-63,-64,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,-81,-16,-14,-12,-10,-8,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,129,-67,-68,-69,-70,-71,-39,-38,-33,-34,-35,-36,-88,-89,-92,-93,-100,-101,-98,-99,-104,-59,-46,-45,166,-37,167,-65,-66,-94,-105,-13,-11,-9,-7,-5,-3,-1,-72,-73,-74,-44,-47,-75,-75,-75,197,-86,-87,-82,-84,-76,-91,-90,-96,-97,202,-75,-75,-102,-103,-85,-15,-83,-95,]),'ATTR_ACCESS':([25,31,32,33,34,35,36,37,38,39,40,42,63,77,114,116,117,118,119,120,121,122,124,166,167,170,199,],[-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,60,60,60,60,-59,60,60,60,60,60,60,60,-44,-47,60,60,]),'KEYWORD_LET':([25,31,32,33,34,35,36,37,38,39,40,42,63,77,114,116,117,118,119,120,121,122,124,166,167,170,199,],[-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,78,78,78,78,-59,78,78,78,78,78,78,78,-44,-47,78,78,]),'BACKSLASH':([25,31,32,33,34,35,36,37,38,39,40,42,63,77,114,116,117,118,119,120,121,122,124,166,167,170,199,],[-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,79,79,79,79,-59,79,79,79,79,79,79,79,-44,-47,79,79,]),'BASE10_INTEGER':([25,31,32,33,34,35,36,37,38,39,40,42,63,77,114,116,117,118,119,120,121,122,124,166,167,170,199,],[-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,80,80,80,80,-59,80,80,80,80,80,80,80,-44,-47,80,80,]),'BASE16_INTEGER':([25,31,32,33,34,35,36,37,38,39,40,42,63,77,114,116,117,118,119,120,121,122,124,166,167,170,199,],[-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,81,81,81,81,-59,81,81,81,81,81,81,81,-44,-47,81,81,]),'BASE8_INTEGER':([25,31,32,33,34,35,36,37,38,39,40,42,63,77,114,116,117,118,119,120,121,122,124,166,167,170,199,],[-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,82,82,82,82,-59,82,82,82,82,82,82,82,-44,-47,82,82,]),'BASE2_INTEGER':([25,31,32,33,34,35,36,37,38,39,40,42,63,77,114,116,117,118,119,120,121,122,124,166,167,170,199,],[-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,83,83,83,83,-59,83,83,83,83,83,83,83,-44,-47,83,83,]),'FLOAT':([25,31,32,33,34,35,36,37,38,39,40,42,63,77,114,116,117,118,119,120,121,122,124,166,167,170,199,],[-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,84,84,84,84,-59,84,84,84,84,84,84,84,-44,-47,84,84,]),'STRING':([25,31,32,33,34,35,36,37,38,39,40,42,63,77,114,116,117,118,119,120,121,122,124,127,166,167,170,199,],[-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,85,85,85,85,-59,85,85,85,85,85,85,85,85,-44,-47,85,85,]),'CHAR':([25,31,32,33,34,35,36,37,38,39,40,42,63,77,114,116,117,118,119,120,121,122,124,127,166,167,170,199,],[-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,86,86,86,86,-59,86,86,86,86,86,86,86,86,-44,-47,86,86,]),'DATE':([25,31,32,33,34,35,36,37,38,39,40,42,63,77,114,116,117,118,119,120,121,122,124,166,167,170,199,],[-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,87,87,87,87,-59,87,87,87,87,87,87,87,-44,-47,87,87,]),'DATETIME':([25,31,32,33,34,35,36,37,38,39,40,42,63,77,114,116,117,118,119,120,121,122,124,166,167,170,199,],[-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,88,88,88,88,-59,88,88,88,88,88,88,88,-44,-47,88,88,]),'DATE_INTERVAL':([25,31,32,33,34,35,36,37,38,39,40,42,63,77,114,116,117,118,119,120,121,122,124,166,167,170,199,],[-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,89,89,89,89,-59,89,89,89,89,89,89,89,-44,-47,89,89,]),'DATETIME_INTERVAL':([25,31,32,33,34,35,36,37,38,39,40,42,63,77,114,116,117,118,119,120,121,122,124,166,167,170,199,],[-55,-56,-57,-58,-53,-54,-49,-50,-51,-52,-48,90,90,90,90,-59,90,90,90,90,90,90,90,-44,-47,90,90,]),'LBRACKET':([45,101,102,110,112,139,141,142,143,144,145,151,152,172,191,],[102,-75,-75,-104,152,-75,102,102,-105,102,102,102,102,102,102,]),'PIPE':([49,50,51,103,104,108,109,110,111,113,147,148,149,150,177,178,197,198,],[-75,-123,-75,-98,-99,146,-105,-104,-124,-126,-75,-127,-128,-129,-75,-125,-130,-131,]),'ANNOTATION':([68,80,81,82,83,84,],[127,-67,-68,-69,-70,-71,]),'RBRACKET':([95,96,97,98,99,100,103,104,110,140,143,173,175,180,189,190,192,193,195,201,202,203,207,],[-88,-89,-92,-93,-100,-101,-98,-99,-104,-94,-105,-75,-75,198,-91,-90,-96,-97,203,-75,-102,-103,-95,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'definitions':([0,],[2,]),'definition':([0,18,],[3,44,]),'nametype_decl':([0,18,],[4,4,]),'valuedef':([0,18,],[5,5,]),'datatype_definition':([0,18,],[6,6,]),'_identifier':([0,18,22,42,63,77,79,114,117,118,119,120,121,122,124,127,133,155,156,170,185,199,],[7,7,46,76,76,76,135,76,76,76,76,76,76,76,76,76,135,135,135,76,135,76,]),'equation':([0,18,133,155,156,185,],[9,9,169,169,169,200,]),'_datatype_lhs':([0,18,],[10,10,]),'pattern':([0,18,133,155,156,185,],[14,14,14,14,14,14,]),'parameters':([0,18,79,133,155,156,185,],[16,16,134,16,16,16,16,]),'_definition_set':([3,44,],[17,92,]),'empty':([3,7,44,46,49,51,91,101,102,135,139,147,169,171,173,174,175,177,200,201,],[19,23,19,23,109,113,138,143,143,23,143,113,186,138,193,143,143,109,186,193,]),'_parameters':([7,46,135,],[21,105,21,]),'_st_operator':([8,77,124,],[24,132,132,]),'infixl_operator_2':([8,55,77,124,],[26,118,26,26,]),'infixr_operator_2':([8,55,77,124,],[27,117,27,27,]),'infixl_operator_6':([8,56,77,124,158,],[28,119,28,28,119,]),'infixl_operator_7':([8,57,77,124,159,],[29,120,29,29,120,]),'infixr_operator_9':([8,59,77,124,125,162,],[30,121,30,30,121,121,]),'_data_rhs':([41,],[48,]),'data_cons':([41,146,],[49,177,]),'_data_cons':([41,146,],[50,50,]),'expr':([42,63,77,114,117,118,119,120,121,122,124,170,199,],[52,126,128,153,126,126,126,126,126,126,128,187,205,]),'expr_term0':([42,63,77,114,117,118,119,120,121,122,124,170,199,],[53,53,53,154,53,53,53,53,53,53,53,53,53,]),'expr_term1':([42,63,77,114,117,118,119,120,121,122,124,170,199,],[54,54,54,54,157,54,54,54,54,54,54,54,54,]),'expr_term2':([42,63,77,114,117,118,119,120,121,122,124,170,199,],[55,55,55,55,55,55,55,55,55,55,55,55,55,]),'expr_term6':([42,63,77,114,117,118,119,120,121,122,124,170,199,],[56,56,56,56,56,158,56,56,56,56,56,56,56,]),'expr_term7':([42,63,77,114,117,118,119,120,121,122,124,170,199,],[57,57,57,57,57,57,159,57,57,57,57,57,57,]),'expr_term9':([42,63,77,114,117,118,119,120,121,122,124,170,199,],[58,58,58,58,58,58,58,160,161,58,58,58,58,]),'expr_factor':([42,63,77,114,117,118,119,120,121,122,124,170,199,],[59,125,59,59,59,59,59,59,59,162,59,59,59,]),'literal':([42,63,77,114,117,118,119,120,121,122,124,170,199,],[61,61,61,61,61,61,61,61,61,61,61,61,61,]),'identifier':([42,63,77,114,117,118,119,120,121,122,124,127,170,199,],[62,62,62,62,62,62,62,62,62,62,62,165,62,62,]),'enclosed_expr':([42,59,63,77,114,117,118,119,120,121,122,124,125,162,170,199,],[63,123,63,63,63,63,63,63,63,63,63,63,123,123,63,63,]),'unit_value':([42,63,77,114,117,118,119,120,121,122,124,170,199,],[64,64,64,64,64,64,64,64,64,64,64,64,64,]),'letexpr':([42,63,77,114,117,118,119,120,121,122,124,170,199,],[65,65,65,65,65,65,65,65,65,65,65,65,65,]),'where_expr':([42,63,77,114,117,118,119,120,121,122,124,170,199,],[66,66,66,66,66,66,66,66,66,66,66,66,66,]),'lambda_expr':([42,63,77,114,117,118,119,120,121,122,124,170,199,],[67,67,67,67,67,67,67,67,67,67,67,67,67,]),'number':([42,63,77,114,117,118,119,120,121,122,124,170,199,],[68,68,68,68,68,68,68,68,68,68,68,68,68,]),'concrete_number':([42,63,77,114,117,118,119,120,121,122,124,170,199,],[69,69,69,69,69,69,69,69,69,69,69,69,69,]),'string':([42,63,77,114,117,118,119,120,121,122,124,127,170,199,],[70,70,70,70,70,70,70,70,70,70,70,163,70,70,]),'char':([42,63,77,114,117,118,119,120,121,122,124,127,170,199,],[71,71,71,71,71,71,71,71,71,71,71,164,71,71,]),'date':([42,63,77,114,117,118,119,120,121,122,124,170,199,],[72,72,72,72,72,72,72,72,72,72,72,72,72,]),'datetime':([42,63,77,114,117,118,119,120,121,122,124,170,199,],[73,73,73,73,73,73,73,73,73,73,73,73,73,]),'date_interval':([42,63,77,114,117,118,119,120,121,122,124,170,199,],[74,74,74,74,74,74,74,74,74,74,74,74,74,]),'datetime_interval':([42,63,77,114,117,118,119,120,121,122,124,170,199,],[75,75,75,75,75,75,75,75,75,75,75,75,75,]),'st_type_expr':([45,145,],[93,176,]),'type_expr':([45,142,144,145,151,152,],[94,174,175,94,179,180,]),'type_function_expr':([45,142,144,145,151,152,172,],[95,95,95,95,95,95,190,]),'type_term':([45,142,144,145,151,152,172,],[96,96,96,96,96,96,189,]),'type_app_expression':([45,142,144,145,151,152,172,],[97,97,97,97,97,97,97,]),'type_factor':([45,141,142,144,145,151,152,172,191,],[98,173,98,98,98,98,98,98,201,]),'type_variable':([45,112,141,142,144,145,151,152,172,191,],[99,148,99,99,99,99,99,99,99,99,]),'type_cons':([45,112,141,142,144,145,151,152,172,191,],[100,149,100,100,100,100,100,100,100,100,]),'_data_conses':([49,177,],[107,196,]),'_maybe_padding':([49,101,102,139,174,175,177,],[108,142,144,172,194,195,108,]),'_cons_args':([51,147,],[111,178,]),'infixl_operator_0':([52,77,124,126,128,153,187,205,],[114,131,131,114,114,114,114,114,]),'operator':([77,124,],[130,130,]),'_cons_params':([91,171,],[137,188,]),'_app_args_non_empty':([98,],[140,]),'cons_arg':([112,],[147,]),'_cons_arg_factor':([112,],[150,]),'equations':([133,155,156,],[168,181,182,]),'_equation_set':([169,200,],[184,206,]),'_app_args':([173,201,],[192,207,]),'st_expr':([199,],[204,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','parsers.py',440),
  ('expr_factor -> ATTR_ACCESS','expr_factor',1,'p_attr_access','parsers.py',445),
  ('expr_term9 -> expr_factor infixr_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','parsers.py',457),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','parsers.py',458),
  ('expr_term7 -> expr_term7 infixl_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','parsers.py',460),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','parsers.py',461),
  ('expr_term6 -> expr_term6 infixl_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','parsers.py',463),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','parsers.py',464),
  ('expr_term2 -> expr_term2 infixl_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','parsers.py',466),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','parsers.py',467),
  ('expr_term1 -> expr_term2 infixr_operator_2 expr_term1','expr_term1',3,'p_expressions_precedence_rules','parsers.py',469),
  ('expr_term1 -> expr_term2','expr_term1',1,'p_expressions_precedence_rules','parsers.py',470),
  ('expr_term0 -> expr infixl_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','parsers.py',472),
  ('expr_term0 -> expr_term1','expr_term0',1,'p_expressions_precedence_rules','parsers.py',473),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','parsers.py',486),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','parsers.py',488),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','parsers.py',490),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','parsers.py',491),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','parsers.py',492),
  ('expr_factor -> unit_value','expr_factor',1,'p_standalone_definitions','parsers.py',493),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','parsers.py',494),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','parsers.py',495),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','parsers.py',496),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','parsers.py',498),
  ('literal -> number','literal',1,'p_literals','parsers.py',506),
  ('literal -> concrete_number','literal',1,'p_literals','parsers.py',507),
  ('literal -> string','literal',1,'p_literals','parsers.py',508),
  ('literal -> char','literal',1,'p_literals','parsers.py',509),
  ('literal -> date','literal',1,'p_literals','parsers.py',510),
  ('literal -> datetime','literal',1,'p_literals','parsers.py',511),
  ('literal -> date_interval','literal',1,'p_literals','parsers.py',512),
  ('literal -> datetime_interval','literal',1,'p_literals','parsers.py',513),
  ('date -> DATE','date',1,'p_date','parsers.py',519),
  ('datetime -> DATETIME','datetime',1,'p_datetime','parsers.py',525),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','parsers.py',531),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','parsers.py',537),
  ('unit_value -> LPAREN RPAREN','unit_value',2,'p_unit_value','parsers.py',543),
  ('char -> CHAR','char',1,'p_char','parsers.py',549),
  ('string -> STRING','string',1,'p_string','parsers.py',554),
  ('identifier -> _identifier','identifier',1,'p_variable','parsers.py',559),
  ('_identifier -> UNDER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',566),
  ('_identifier -> UPPER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',567),
  ('_identifier -> LOWER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',568),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','parsers.py',575),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','parsers.py',580),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','parsers.py',581),
  ('enclosed_expr -> LPAREN operator RPAREN','enclosed_expr',3,'p_operators_as_expressios','parsers.py',587),
  ('infixr_operator_9 -> DOT_OPERATOR','infixr_operator_9',1,'p_operator','parsers.py',599),
  ('infixl_operator_7 -> STAR','infixl_operator_7',1,'p_operator','parsers.py',601),
  ('infixl_operator_7 -> SLASH','infixl_operator_7',1,'p_operator','parsers.py',602),
  ('infixl_operator_7 -> DOUBLESLASH','infixl_operator_7',1,'p_operator','parsers.py',603),
  ('infixl_operator_7 -> PERCENT','infixl_operator_7',1,'p_operator','parsers.py',604),
  ('infixl_operator_6 -> PLUS','infixl_operator_6',1,'p_operator','parsers.py',606),
  ('infixl_operator_6 -> MINUS','infixl_operator_6',1,'p_operator','parsers.py',607),
  ('infixr_operator_2 -> COLON','infixr_operator_2',1,'p_operator','parsers.py',609),
  ('infixl_operator_2 -> OPERATOR','infixl_operator_2',1,'p_operator','parsers.py',611),
  ('infixl_operator_2 -> ARROW','infixl_operator_2',1,'p_operator','parsers.py',612),
  ('infixl_operator_2 -> COMMA','infixl_operator_2',1,'p_operator','parsers.py',613),
  ('infixl_operator_0 -> TICK_OPERATOR','infixl_operator_0',1,'p_operator','parsers.py',615),
  ('_st_operator -> infixl_operator_2','_st_operator',1,'p_operator','parsers.py',617),
  ('_st_operator -> infixr_operator_2','_st_operator',1,'p_operator','parsers.py',618),
  ('_st_operator -> infixl_operator_6','_st_operator',1,'p_operator','parsers.py',619),
  ('_st_operator -> infixl_operator_7','_st_operator',1,'p_operator','parsers.py',620),
  ('_st_operator -> infixr_operator_9','_st_operator',1,'p_operator','parsers.py',621),
  ('operator -> infixl_operator_0','operator',1,'p_operator','parsers.py',623),
  ('operator -> _st_operator','operator',1,'p_operator','parsers.py',624),
  ('number -> BASE10_INTEGER','number',1,'p_integer','parsers.py',631),
  ('number -> BASE16_INTEGER','number',1,'p_integer','parsers.py',632),
  ('number -> BASE8_INTEGER','number',1,'p_integer','parsers.py',633),
  ('number -> BASE2_INTEGER','number',1,'p_integer','parsers.py',634),
  ('number -> FLOAT','number',1,'p_float','parsers.py',663),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','parsers.py',668),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','parsers.py',669),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','parsers.py',670),
  ('empty -> <empty>','empty',0,'p_empty','parsers.py',679),
  ('lambda_expr -> BACKSLASH parameters ARROW expr','lambda_expr',4,'p_lambda_definition','parsers.py',684),
  ('parameters -> _identifier _parameters','parameters',2,'p_parameters','parsers.py',692),
  ('_parameters -> SPACE _identifier _parameters','_parameters',3,'p_parameters','parsers.py',693),
  ('_parameters -> empty','_parameters',1,'p_empty__parameters','parsers.py',702),
  ('pattern -> parameters','pattern',1,'p_pattern','parsers.py',708),
  ('equation -> pattern EQ expr','equation',3,'p_equation','parsers.py',714),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','parsers.py',724),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','parsers.py',733),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','parsers.py',742),
  ('letexpr -> KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','parsers.py',752),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','parsers.py',760),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','parsers.py',761),
  ('type_expr -> type_function_expr','type_expr',1,'p_type_expr','parsers.py',771),
  ('type_expr -> type_term','type_expr',1,'p_type_expr','parsers.py',772),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','parsers.py',777),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','parsers.py',778),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','parsers.py',788),
  ('type_term -> type_factor','type_term',1,'p_type_term','parsers.py',789),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','parsers.py',794),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','parsers.py',806),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','parsers.py',807),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','parsers.py',815),
  ('type_variable -> LOWER_IDENTIFIER','type_variable',1,'p_type_variable','parsers.py',820),
  ('type_cons -> UPPER_IDENTIFIER','type_cons',1,'p_type_cons','parsers.py',825),
  ('type_factor -> type_variable','type_factor',1,'p_type_factor_identifier','parsers.py',830),
  ('type_factor -> type_cons','type_factor',1,'p_type_factor_identifier','parsers.py',831),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','parsers.py',838),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','parsers.py',843),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','parsers.py',848),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','parsers.py',849),
  ('program -> definitions','program',1,'p_program','parsers.py',855),
  ('definitions -> definition _definition_set','definitions',2,'p_definitions','parsers.py',871),
  ('_definition_set -> NEWLINE definition _definition_set','_definition_set',3,'p_definition_set','parsers.py',879),
  ('_definition_set -> empty','_definition_set',1,'p_definition_set2','parsers.py',887),
  ('definition -> nametype_decl','definition',1,'p_definition','parsers.py',893),
  ('definition -> valuedef','definition',1,'p_definition','parsers.py',894),
  ('definition -> datatype_definition','definition',1,'p_definition','parsers.py',895),
  ('valuedef -> equation','valuedef',1,'p_valuedef','parsers.py',901),
  ('nametype_decl -> _identifier COLON COLON st_type_expr','nametype_decl',4,'p_nametype_decl','parsers.py',907),
  ('nametype_decl -> LPAREN _st_operator RPAREN COLON COLON st_type_expr','nametype_decl',6,'p_nametype_decl_operators','parsers.py',916),
  ('datatype_definition -> _datatype_lhs EQ _data_rhs','datatype_definition',3,'p_datatype_definition','parsers.py',925),
  ('_datatype_lhs -> KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params','_datatype_lhs',4,'p_datatype_lhs','parsers.py',933),
  ('_cons_params -> SPACE LOWER_IDENTIFIER _cons_params','_cons_params',3,'p_datatype_cons_params','parsers.py',942),
  ('_cons_params -> empty','_cons_params',1,'p_datatype_cons_params_empty','parsers.py',951),
  ('_data_rhs -> data_cons _data_conses','_data_rhs',2,'p_datatype_body','parsers.py',957),
  ('_data_conses -> _maybe_padding PIPE data_cons _data_conses','_data_conses',4,'p_datatype_body','parsers.py',958),
  ('_data_conses -> empty','_data_conses',1,'p_datatype_conses_empty','parsers.py',967),
  ('data_cons -> _data_cons','data_cons',1,'p_data_cons','parsers.py',972),
  ('_data_cons -> UPPER_IDENTIFIER _cons_args','_data_cons',2,'p_bare_data_cons','parsers.py',978),
  ('_cons_args -> SPACE cons_arg _cons_args','_cons_args',3,'p_data_cons_args','parsers.py',983),
  ('_cons_args -> empty','_cons_args',1,'p_data_cons_args_empty','parsers.py',992),
  ('cons_arg -> type_variable','cons_arg',1,'p_cons_arg','parsers.py',998),
  ('cons_arg -> type_cons','cons_arg',1,'p_cons_arg','parsers.py',999),
  ('cons_arg -> _cons_arg_factor','cons_arg',1,'p_cons_arg','parsers.py',1000),
  ('_cons_arg_factor -> LPAREN type_expr RPAREN','_cons_arg_factor',3,'p_cons_arg_factor','parsers.py',1006),
  ('_cons_arg_factor -> LBRACKET type_expr RBRACKET','_cons_arg_factor',3,'p_cons_arg_factor_list','parsers.py',1012),
]
