
# program_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW ATTR_ACCESS BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FLOAT KEYWORD_CLASS KEYWORD_DATA KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LOWER_IDENTIFIER LPAREN MINUS NEWLINE OPERATOR PADDING PERCENT PIPE PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATOR UNDER_IDENTIFIER UPPER_IDENTIFIERexpr_factor : expr_factor SPACE expr_factorexpr_factor : ATTR_ACCESS\n    expr_term9 : expr_factor infixr_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infixl_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infixl_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infixl_operator_2 expr_term6\n               | expr_term6\n\n    expr_term1 : expr_term2 infixr_operator_2 expr_term1\n               | expr_term2\n\n    expr_term0 : expr infixl_operator_0 expr_term0\n               | expr_term1\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | unit_value\n                | letexpr\n                | where_expr\n                | lambda_expr\n\n    st_type_expr : type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    unit_value : LPAREN RPAREN\n    char : CHARstring : STRINGidentifier : _identifier\n\n    _identifier : UNDER_IDENTIFIER\n                   | UPPER_IDENTIFIER\n                   | LOWER_IDENTIFIER\n\n    enclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : LPAREN DOT_OPERATOR RPAREN\n                     | LPAREN operator RPAREN\n    \n    infixr_operator_9 : DOT_OPERATOR\n\n    infixl_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infixl_operator_6 : PLUS\n                     | MINUS\n\n    infixr_operator_2 : COLON\n\n    infixl_operator_2 : OPERATOR\n                     | ARROW\n\n    infixl_operator_0 : TICK_OPERATOR\n\n    operator : infixl_operator_0\n             | infixl_operator_2\n             | infixr_operator_2\n             | infixl_operator_6\n             | infixl_operator_7\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH parameters ARROW expr\n    parameters : _identifier _parameters\n       _parameters : SPACE _identifier _parameters\n    _parameters : empty\n    pattern : parametersequation : pattern EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    type_expr : type_function_expr\n                 | type_termtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_variable : LOWER_IDENTIFIERtype_cons : UPPER_IDENTIFIERtype_factor : type_variable\n                   | type_cons\n\n    type_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET_maybe_padding : PADDING\n                      | empty\n    program : definitions\n    definitions : definition _definition_set\n    _definition_set : NEWLINE definition _definition_set\n    _definition_set : empty\n    definition : nametype_decl\n                  | valuedef\n                  | datatype_definition\n    valuedef : equation\n    nametype_decl : _identifier COLON COLON st_type_expr\n    datatype_definition : _datatype_lhs EQ _data_rhs\n    _datatype_lhs : KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params\n    _cons_params : SPACE LOWER_IDENTIFIER _cons_params\n    _cons_params : empty\n    _data_rhs : data_cons _data_conses\n       _data_conses : _maybe_padding PIPE data_cons _data_conses\n    _data_conses : emptydata_cons : _data_cons_data_cons : UPPER_IDENTIFIER _cons_args_cons_args : SPACE cons_arg _cons_args\n    _cons_args : empty\n    cons_arg : type_variable\n       cons_arg : type_cons\n       cons_arg : _cons_arg_factor\n    _cons_arg_factor : LPAREN type_expr RPAREN\n    _cons_arg_factor : LBRACKET type_expr RBRACKET\n    '
    
_lr_action_items = {'UNDER_IDENTIFIER':([0,17,21,24,44,58,60,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,117,127,148,149,159,160,161,164,178,192,],[10,10,10,10,10,10,10,10,-59,10,10,-56,-57,-58,10,-54,-55,10,-50,-51,-52,-53,10,10,-49,10,10,10,10,10,-44,-47,-48,10,10,10,]),'UPPER_IDENTIFIER':([0,17,21,23,24,25,27,44,58,60,82,83,90,92,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,117,127,133,135,136,137,138,139,144,145,148,149,159,160,161,164,166,178,184,192,],[11,11,11,32,11,72,85,11,11,11,-73,-73,-102,85,11,-59,11,11,-56,-57,-58,11,-54,-55,11,-50,-51,-52,-53,11,11,-49,11,11,11,-73,85,85,-103,85,32,85,85,11,11,-44,-47,-48,11,85,11,85,11,]),'LOWER_IDENTIFIER':([0,17,21,24,27,44,58,60,82,83,90,92,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,117,127,130,133,135,136,137,138,144,145,148,149,159,160,161,164,166,178,184,192,],[12,12,12,12,84,12,12,12,-73,-73,-102,84,12,-59,12,12,-56,-57,-58,12,-54,-55,12,-50,-51,-52,-53,12,12,-49,12,12,12,165,-73,84,84,-103,84,84,84,12,12,-44,-47,-48,12,84,12,84,12,]),'KEYWORD_DATA':([0,17,],[14,14,]),'$end':([1,2,3,4,5,6,8,10,11,12,16,18,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,84,85,87,89,91,93,112,115,119,134,140,141,142,143,147,150,151,152,153,154,155,156,157,158,159,160,161,163,167,170,171,174,175,177,179,180,182,183,185,186,189,190,191,193,194,195,196,197,198,199,200,],[0,-104,-73,-108,-109,-110,-111,-41,-42,-43,-105,-107,-73,-113,-73,-120,-73,-79,-16,-14,-12,-10,-8,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,-65,-66,-67,-68,-69,-39,-38,-33,-34,-35,-36,-106,-112,-24,-86,-87,-90,-91,-98,-99,-96,-97,-117,-119,-121,-123,-46,-45,-37,-92,-73,-124,-125,-126,-13,-11,-9,-7,-5,-3,-1,-70,-71,-72,-44,-47,-48,-73,-73,-73,-122,-84,-85,-80,-82,-74,-89,-88,-94,-95,-118,-127,-128,-73,-73,-100,-101,-83,-15,-81,-93,]),'NEWLINE':([3,4,5,6,8,10,11,12,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,84,85,87,89,91,93,112,115,119,134,140,141,142,143,147,150,151,152,153,154,155,156,157,158,159,160,161,163,167,170,171,174,175,177,179,180,182,183,185,186,189,190,191,193,194,195,196,197,198,199,200,],[17,-108,-109,-110,-111,-41,-42,-43,17,-113,-73,-120,-73,-79,-16,-14,-12,-10,-8,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,-65,-66,-67,-68,-69,-39,-38,-33,-34,-35,-36,-112,-24,-86,-87,-90,-91,-98,-99,-96,-97,-117,-119,-121,-123,-46,-45,-37,-92,-73,-124,-125,-126,-13,-11,-9,-7,-5,-3,-1,-70,-71,-72,-44,-47,-48,-73,-73,-73,-122,-84,-85,-80,-82,-74,-89,-88,-94,-95,-118,-127,-128,-73,-73,-100,-101,-83,-15,-81,-93,]),'COLON':([7,10,11,12,19,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,64,65,66,67,68,69,70,71,112,114,115,119,147,150,151,152,153,154,155,156,157,158,159,160,161,163,174,175,177,179,180,193,197,198,199,],[19,-41,-42,-43,27,-79,-16,-14,99,-10,-8,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,99,-65,-66,-67,-68,-69,-39,-38,-33,-34,-35,-36,-46,99,-4,-37,-13,-11,-9,-7,-5,-3,-1,-70,-71,-72,-44,-47,-48,-73,-84,-85,-80,-82,-74,-73,-83,-15,-81,]),'SPACE':([7,10,11,12,14,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,61,62,63,64,65,66,67,68,69,70,71,72,79,80,81,84,85,95,112,115,119,129,140,141,142,143,147,150,151,152,153,154,155,156,157,158,159,160,161,163,165,167,174,175,176,177,179,180,190,191,193,194,195,196,197,198,199,],[21,-41,-42,-43,25,21,92,-79,-16,-14,-12,-10,-8,-6,111,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,127,-65,-66,-67,-68,-69,-39,-38,-33,-34,-35,-36,130,135,-98,-99,-96,-97,148,-46,111,-37,21,92,-124,-125,-126,-13,-11,-9,-7,-5,-3,-1,-70,-71,-72,-44,-47,-48,-73,130,184,-84,-85,192,-80,-82,-74,-127,-128,-73,184,-100,-101,-83,-15,-81,]),'EQ':([7,9,10,11,12,13,15,20,22,28,72,86,129,131,132,165,181,],[-73,23,-41,-42,-43,24,-78,-75,-77,-73,-73,-76,-73,-114,-116,-73,-115,]),'ARROW':([10,11,12,20,22,28,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,64,65,66,67,68,69,70,71,77,78,79,80,81,84,85,86,112,114,115,119,128,129,134,147,150,151,152,153,154,155,156,157,158,159,160,161,163,167,174,175,177,179,180,182,185,186,193,194,195,196,197,198,199,200,],[-41,-42,-43,-75,-77,-73,-79,-16,-14,101,-10,-8,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,101,-65,-66,-67,-68,-69,-39,-38,-33,-34,-35,-36,133,-90,-91,-98,-99,-96,-97,-76,-46,101,-4,-37,164,-73,-92,-13,-11,-9,-7,-5,-3,-1,-70,-71,-72,-44,-47,-48,-73,-73,-84,-85,-80,-82,-74,133,-94,-95,-73,-73,-100,-101,-83,-15,-81,-93,]),'KEYWORD_WHERE':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,69,70,71,112,115,116,118,119,146,147,150,151,152,153,154,155,156,157,158,159,160,161,163,174,175,177,179,180,193,197,198,199,],[-41,-42,-43,95,-16,-14,-12,-10,-8,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,-65,-66,-67,-68,-69,-39,-38,-33,-34,-35,-36,-46,-4,95,95,-37,95,-13,-11,-9,-7,-5,-3,-1,-70,-71,-72,-44,-47,-48,-73,-84,-85,-80,-82,95,-73,-83,95,-81,]),'TICK_OPERATOR':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,64,65,66,67,68,69,70,71,112,114,115,116,118,119,146,147,150,151,152,153,154,155,156,157,158,159,160,161,163,174,175,177,179,180,193,197,198,199,],[-41,-42,-43,96,-16,-14,-12,-10,-8,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,96,-65,-66,-67,-68,-69,-39,-38,-33,-34,-35,-36,-46,96,-4,96,96,-37,96,-13,-11,-9,-7,-5,-3,-1,-70,-71,-72,-44,-47,-48,-73,-84,-85,-80,-82,96,-73,-83,96,-81,]),'PADDING':([10,11,12,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,80,81,82,83,84,85,91,93,95,112,115,119,133,134,140,141,142,143,147,150,151,152,153,154,155,156,157,158,159,160,161,163,167,168,169,170,171,174,175,177,179,180,182,183,185,186,190,191,193,194,195,196,197,198,199,200,],[-41,-42,-43,90,-120,-73,-79,-16,-14,-12,-10,-8,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,-65,-66,-67,-68,-69,-39,-38,-33,-34,-35,-36,-86,-87,-90,-91,-98,-99,90,90,-96,-97,-121,-123,149,-46,-45,-37,90,-92,-73,-124,-125,-126,-13,-11,-9,-7,-5,-3,-1,-70,-71,-72,-44,-47,-48,178,-73,90,90,90,-122,-84,-85,-80,-82,-74,-89,-88,-94,-95,-127,-128,178,-73,-100,-101,-83,-15,-81,-93,]),'KEYWORD_IN':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,69,70,71,112,115,119,147,150,151,152,153,154,155,156,157,158,159,160,161,162,163,174,175,177,179,180,193,197,198,199,],[-41,-42,-43,-79,-16,-14,-12,-10,-8,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,-65,-66,-67,-68,-69,-39,-38,-33,-34,-35,-36,-46,-45,-37,-13,-11,-9,-7,-5,-3,-1,-70,-71,-72,-44,-47,-48,176,-73,-84,-85,-80,-82,-74,-73,-83,-15,-81,]),'DOT_OPERATOR':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,64,65,66,67,68,69,70,71,112,114,115,119,147,150,151,152,153,154,155,156,157,158,159,160,161,163,174,175,177,179,180,193,197,198,199,],[-41,-42,-43,-79,-16,-14,-12,-10,-8,-6,113,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,120,-65,-66,-67,-68,-69,-39,-38,-33,-34,-35,-36,-46,120,113,-37,-13,-11,-9,-7,-5,-3,-1,-70,-71,-72,-44,-47,-48,-73,-84,-85,-80,-82,-74,-73,-83,-15,-81,]),'LPAREN':([10,11,12,24,27,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,64,65,66,67,68,69,70,71,82,83,90,92,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,119,133,135,136,137,138,144,145,147,150,151,152,153,154,155,156,157,158,159,160,161,163,164,166,174,175,177,179,180,184,192,193,197,198,199,],[-41,-42,-43,58,82,-79,-16,-14,-12,-10,-8,-6,114,-2,-17,-18,58,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,58,-65,-66,-67,-68,-69,-39,-38,-33,-34,-35,-36,-73,-73,-102,144,58,-59,58,58,-56,-57,-58,58,-54,-55,58,-50,-51,-52,-53,58,58,-46,-49,58,114,-37,-73,82,82,-103,82,82,82,-13,-11,-9,-7,-5,-3,-1,-70,-71,-72,-44,-47,-48,-73,58,82,-84,-85,-80,-82,-74,82,58,-73,-83,-15,-81,]),'STAR':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,64,65,66,67,68,69,70,71,112,114,115,119,147,150,151,152,153,154,155,156,157,158,159,160,161,163,174,175,177,179,180,193,197,198,199,],[-41,-42,-43,-79,-16,-14,-12,-10,106,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,106,-65,-66,-67,-68,-69,-39,-38,-33,-34,-35,-36,-46,106,-4,-37,-13,-11,-9,106,-5,-3,-1,-70,-71,-72,-44,-47,-48,-73,-84,-85,-80,-82,-74,-73,-83,-15,-81,]),'SLASH':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,64,65,66,67,68,69,70,71,112,114,115,119,147,150,151,152,153,154,155,156,157,158,159,160,161,163,174,175,177,179,180,193,197,198,199,],[-41,-42,-43,-79,-16,-14,-12,-10,107,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,107,-65,-66,-67,-68,-69,-39,-38,-33,-34,-35,-36,-46,107,-4,-37,-13,-11,-9,107,-5,-3,-1,-70,-71,-72,-44,-47,-48,-73,-84,-85,-80,-82,-74,-73,-83,-15,-81,]),'DOUBLESLASH':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,64,65,66,67,68,69,70,71,112,114,115,119,147,150,151,152,153,154,155,156,157,158,159,160,161,163,174,175,177,179,180,193,197,198,199,],[-41,-42,-43,-79,-16,-14,-12,-10,108,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,108,-65,-66,-67,-68,-69,-39,-38,-33,-34,-35,-36,-46,108,-4,-37,-13,-11,-9,108,-5,-3,-1,-70,-71,-72,-44,-47,-48,-73,-84,-85,-80,-82,-74,-73,-83,-15,-81,]),'PERCENT':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,64,65,66,67,68,69,70,71,112,114,115,119,147,150,151,152,153,154,155,156,157,158,159,160,161,163,174,175,177,179,180,193,197,198,199,],[-41,-42,-43,-79,-16,-14,-12,-10,109,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,109,-65,-66,-67,-68,-69,-39,-38,-33,-34,-35,-36,-46,109,-4,-37,-13,-11,-9,109,-5,-3,-1,-70,-71,-72,-44,-47,-48,-73,-84,-85,-80,-82,-74,-73,-83,-15,-81,]),'PLUS':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,64,65,66,67,68,69,70,71,112,114,115,119,147,150,151,152,153,154,155,156,157,158,159,160,161,163,174,175,177,179,180,193,197,198,199,],[-41,-42,-43,-79,-16,-14,-12,103,-8,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,103,-65,-66,-67,-68,-69,-39,-38,-33,-34,-35,-36,-46,103,-4,-37,-13,-11,103,-7,-5,-3,-1,-70,-71,-72,-44,-47,-48,-73,-84,-85,-80,-82,-74,-73,-83,-15,-81,]),'MINUS':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,64,65,66,67,68,69,70,71,112,114,115,119,147,150,151,152,153,154,155,156,157,158,159,160,161,163,174,175,177,179,180,193,197,198,199,],[-41,-42,-43,-79,-16,-14,-12,104,-8,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,104,-65,-66,-67,-68,-69,-39,-38,-33,-34,-35,-36,-46,104,-4,-37,-13,-11,104,-7,-5,-3,-1,-70,-71,-72,-44,-47,-48,-73,-84,-85,-80,-82,-74,-73,-83,-15,-81,]),'OPERATOR':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,64,65,66,67,68,69,70,71,112,114,115,119,147,150,151,152,153,154,155,156,157,158,159,160,161,163,174,175,177,179,180,193,197,198,199,],[-41,-42,-43,-79,-16,-14,100,-10,-8,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,100,-65,-66,-67,-68,-69,-39,-38,-33,-34,-35,-36,-46,100,-4,-37,-13,-11,-9,-7,-5,-3,-1,-70,-71,-72,-44,-47,-48,-73,-84,-85,-80,-82,-74,-73,-83,-15,-81,]),'RPAREN':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,80,81,84,85,90,96,99,100,101,103,104,106,107,108,109,112,115,118,119,120,121,122,123,124,125,126,134,137,147,150,151,152,153,154,155,156,157,158,159,160,161,163,167,168,172,174,175,177,179,180,182,183,185,186,187,193,194,195,196,197,198,199,200,],[-41,-42,-43,-79,-16,-14,-12,-10,-8,-6,-4,-2,-17,-18,-19,-20,-21,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-40,119,-65,-66,-67,-68,-69,-39,-38,-33,-34,-35,-36,-86,-87,-90,-91,-98,-99,-96,-97,-102,-59,-56,-57,-58,-54,-55,-50,-51,-52,-53,-46,-45,159,-37,160,161,-60,-61,-62,-63,-64,-92,-103,-13,-11,-9,-7,-5,-3,-1,-70,-71,-72,-44,-47,-48,-73,-73,-73,190,-84,-85,-80,-82,-74,-89,-88,-94,-95,195,-73,-73,-100,-101,-83,-15,-81,-93,]),'ATTR_ACCESS':([24,44,58,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,159,160,161,164,192,],[41,41,41,41,-59,41,41,-56,-57,-58,41,-54,-55,41,-50,-51,-52,-53,41,41,-49,41,-44,-47,-48,41,41,]),'KEYWORD_LET':([24,44,58,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,159,160,161,164,192,],[59,59,59,59,-59,59,59,-56,-57,-58,59,-54,-55,59,-50,-51,-52,-53,59,59,-49,59,-44,-47,-48,59,59,]),'BACKSLASH':([24,44,58,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,159,160,161,164,192,],[60,60,60,60,-59,60,60,-56,-57,-58,60,-54,-55,60,-50,-51,-52,-53,60,60,-49,60,-44,-47,-48,60,60,]),'BASE10_INTEGER':([24,44,58,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,159,160,161,164,192,],[61,61,61,61,-59,61,61,-56,-57,-58,61,-54,-55,61,-50,-51,-52,-53,61,61,-49,61,-44,-47,-48,61,61,]),'BASE16_INTEGER':([24,44,58,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,159,160,161,164,192,],[62,62,62,62,-59,62,62,-56,-57,-58,62,-54,-55,62,-50,-51,-52,-53,62,62,-49,62,-44,-47,-48,62,62,]),'BASE8_INTEGER':([24,44,58,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,159,160,161,164,192,],[63,63,63,63,-59,63,63,-56,-57,-58,63,-54,-55,63,-50,-51,-52,-53,63,63,-49,63,-44,-47,-48,63,63,]),'BASE2_INTEGER':([24,44,58,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,159,160,161,164,192,],[64,64,64,64,-59,64,64,-56,-57,-58,64,-54,-55,64,-50,-51,-52,-53,64,64,-49,64,-44,-47,-48,64,64,]),'FLOAT':([24,44,58,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,159,160,161,164,192,],[65,65,65,65,-59,65,65,-56,-57,-58,65,-54,-55,65,-50,-51,-52,-53,65,65,-49,65,-44,-47,-48,65,65,]),'STRING':([24,44,58,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,117,159,160,161,164,192,],[66,66,66,66,-59,66,66,-56,-57,-58,66,-54,-55,66,-50,-51,-52,-53,66,66,-49,66,66,-44,-47,-48,66,66,]),'CHAR':([24,44,58,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,117,159,160,161,164,192,],[67,67,67,67,-59,67,67,-56,-57,-58,67,-54,-55,67,-50,-51,-52,-53,67,67,-49,67,67,-44,-47,-48,67,67,]),'DATE':([24,44,58,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,159,160,161,164,192,],[68,68,68,68,-59,68,68,-56,-57,-58,68,-54,-55,68,-50,-51,-52,-53,68,68,-49,68,-44,-47,-48,68,68,]),'DATETIME':([24,44,58,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,159,160,161,164,192,],[69,69,69,69,-59,69,69,-56,-57,-58,69,-54,-55,69,-50,-51,-52,-53,69,69,-49,69,-44,-47,-48,69,69,]),'DATE_INTERVAL':([24,44,58,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,159,160,161,164,192,],[70,70,70,70,-59,70,70,-56,-57,-58,70,-54,-55,70,-50,-51,-52,-53,70,70,-49,70,-44,-47,-48,70,70,]),'DATETIME_INTERVAL':([24,44,58,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,159,160,161,164,192,],[71,71,71,71,-59,71,71,-56,-57,-58,71,-54,-55,71,-50,-51,-52,-53,71,71,-49,71,-44,-47,-48,71,71,]),'LBRACKET':([27,82,83,90,92,133,135,136,137,138,144,145,166,184,],[83,-73,-73,-102,145,-73,83,83,-103,83,83,83,83,83,]),'PIPE':([30,31,32,84,85,88,89,90,91,93,140,141,142,143,170,171,190,191,],[-73,-120,-73,-96,-97,139,-103,-102,-121,-123,-73,-124,-125,-126,-73,-122,-127,-128,]),'ANNOTATION':([49,61,62,63,64,65,],[117,-65,-66,-67,-68,-69,]),'RBRACKET':([76,77,78,79,80,81,84,85,90,134,137,167,169,173,182,183,185,186,188,194,195,196,200,],[-86,-87,-90,-91,-98,-99,-96,-97,-102,-92,-103,-73,-73,191,-89,-88,-94,-95,196,-73,-100,-101,-93,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'definitions':([0,],[2,]),'definition':([0,17,],[3,26,]),'nametype_decl':([0,17,],[4,4,]),'valuedef':([0,17,],[5,5,]),'datatype_definition':([0,17,],[6,6,]),'_identifier':([0,17,21,24,44,58,60,94,97,98,102,105,110,111,114,117,127,148,149,164,178,192,],[7,7,28,57,57,57,129,57,57,57,57,57,57,57,57,57,129,129,129,57,129,57,]),'equation':([0,17,127,148,149,178,],[8,8,163,163,163,193,]),'_datatype_lhs':([0,17,],[9,9,]),'pattern':([0,17,127,148,149,178,],[13,13,13,13,13,13,]),'parameters':([0,17,60,127,148,149,178,],[15,15,128,15,15,15,15,]),'_definition_set':([3,26,],[16,73,]),'empty':([3,7,26,28,30,32,72,82,83,129,133,140,163,165,167,168,169,170,193,194,],[18,22,18,22,89,93,132,137,137,22,137,93,179,132,186,137,137,89,179,186,]),'_parameters':([7,28,129,],[20,86,20,]),'_data_rhs':([23,],[29,]),'data_cons':([23,139,],[30,170,]),'_data_cons':([23,139,],[31,31,]),'expr':([24,44,58,94,97,98,102,105,110,111,114,164,192,],[33,116,118,146,116,116,116,116,116,116,118,180,198,]),'expr_term0':([24,44,58,94,97,98,102,105,110,111,114,164,192,],[34,34,34,147,34,34,34,34,34,34,34,34,34,]),'expr_term1':([24,44,58,94,97,98,102,105,110,111,114,164,192,],[35,35,35,35,150,35,35,35,35,35,35,35,35,]),'expr_term2':([24,44,58,94,97,98,102,105,110,111,114,164,192,],[36,36,36,36,36,36,36,36,36,36,36,36,36,]),'expr_term6':([24,44,58,94,97,98,102,105,110,111,114,164,192,],[37,37,37,37,37,151,37,37,37,37,37,37,37,]),'expr_term7':([24,44,58,94,97,98,102,105,110,111,114,164,192,],[38,38,38,38,38,38,152,38,38,38,38,38,38,]),'expr_term9':([24,44,58,94,97,98,102,105,110,111,114,164,192,],[39,39,39,39,39,39,39,153,154,39,39,39,39,]),'expr_factor':([24,44,58,94,97,98,102,105,110,111,114,164,192,],[40,115,40,40,40,40,40,40,40,155,40,40,40,]),'literal':([24,44,58,94,97,98,102,105,110,111,114,164,192,],[42,42,42,42,42,42,42,42,42,42,42,42,42,]),'identifier':([24,44,58,94,97,98,102,105,110,111,114,117,164,192,],[43,43,43,43,43,43,43,43,43,43,43,158,43,43,]),'enclosed_expr':([24,40,44,58,94,97,98,102,105,110,111,114,115,155,164,192,],[44,112,44,44,44,44,44,44,44,44,44,44,112,112,44,44,]),'unit_value':([24,44,58,94,97,98,102,105,110,111,114,164,192,],[45,45,45,45,45,45,45,45,45,45,45,45,45,]),'letexpr':([24,44,58,94,97,98,102,105,110,111,114,164,192,],[46,46,46,46,46,46,46,46,46,46,46,46,46,]),'where_expr':([24,44,58,94,97,98,102,105,110,111,114,164,192,],[47,47,47,47,47,47,47,47,47,47,47,47,47,]),'lambda_expr':([24,44,58,94,97,98,102,105,110,111,114,164,192,],[48,48,48,48,48,48,48,48,48,48,48,48,48,]),'number':([24,44,58,94,97,98,102,105,110,111,114,164,192,],[49,49,49,49,49,49,49,49,49,49,49,49,49,]),'concrete_number':([24,44,58,94,97,98,102,105,110,111,114,164,192,],[50,50,50,50,50,50,50,50,50,50,50,50,50,]),'string':([24,44,58,94,97,98,102,105,110,111,114,117,164,192,],[51,51,51,51,51,51,51,51,51,51,51,156,51,51,]),'char':([24,44,58,94,97,98,102,105,110,111,114,117,164,192,],[52,52,52,52,52,52,52,52,52,52,52,157,52,52,]),'date':([24,44,58,94,97,98,102,105,110,111,114,164,192,],[53,53,53,53,53,53,53,53,53,53,53,53,53,]),'datetime':([24,44,58,94,97,98,102,105,110,111,114,164,192,],[54,54,54,54,54,54,54,54,54,54,54,54,54,]),'date_interval':([24,44,58,94,97,98,102,105,110,111,114,164,192,],[55,55,55,55,55,55,55,55,55,55,55,55,55,]),'datetime_interval':([24,44,58,94,97,98,102,105,110,111,114,164,192,],[56,56,56,56,56,56,56,56,56,56,56,56,56,]),'st_type_expr':([27,],[74,]),'type_expr':([27,136,138,144,145,],[75,168,169,172,173,]),'type_function_expr':([27,136,138,144,145,166,],[76,76,76,76,76,183,]),'type_term':([27,136,138,144,145,166,],[77,77,77,77,77,182,]),'type_app_expression':([27,136,138,144,145,166,],[78,78,78,78,78,78,]),'type_factor':([27,135,136,138,144,145,166,184,],[79,167,79,79,79,79,79,194,]),'type_variable':([27,92,135,136,138,144,145,166,184,],[80,141,80,80,80,80,80,80,80,]),'type_cons':([27,92,135,136,138,144,145,166,184,],[81,142,81,81,81,81,81,81,81,]),'_data_conses':([30,170,],[87,189,]),'_maybe_padding':([30,82,83,133,168,169,170,],[88,136,138,166,187,188,88,]),'_cons_args':([32,140,],[91,171,]),'infixl_operator_0':([33,58,114,116,118,146,180,198,],[94,122,122,94,94,94,94,94,]),'infixr_operator_2':([36,58,114,],[97,124,124,]),'infixl_operator_2':([36,58,114,],[98,123,123,]),'infixl_operator_6':([37,58,114,151,],[102,125,125,102,]),'infixl_operator_7':([38,58,114,152,],[105,126,126,105,]),'infixr_operator_9':([40,115,155,],[110,110,110,]),'operator':([58,114,],[121,121,]),'_cons_params':([72,165,],[131,181,]),'_app_args_non_empty':([79,],[134,]),'cons_arg':([92,],[140,]),'_cons_arg_factor':([92,],[143,]),'equations':([127,148,149,],[162,174,175,]),'_equation_set':([163,193,],[177,199,]),'_app_args':([167,194,],[185,200,]),'st_expr':([192,],[197,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','parsers.py',481),
  ('expr_factor -> ATTR_ACCESS','expr_factor',1,'p_attr_access','parsers.py',486),
  ('expr_term9 -> expr_factor infixr_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','parsers.py',498),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','parsers.py',499),
  ('expr_term7 -> expr_term7 infixl_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','parsers.py',501),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','parsers.py',502),
  ('expr_term6 -> expr_term6 infixl_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','parsers.py',504),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','parsers.py',505),
  ('expr_term2 -> expr_term2 infixl_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','parsers.py',507),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','parsers.py',508),
  ('expr_term1 -> expr_term2 infixr_operator_2 expr_term1','expr_term1',3,'p_expressions_precedence_rules','parsers.py',510),
  ('expr_term1 -> expr_term2','expr_term1',1,'p_expressions_precedence_rules','parsers.py',511),
  ('expr_term0 -> expr infixl_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','parsers.py',513),
  ('expr_term0 -> expr_term1','expr_term0',1,'p_expressions_precedence_rules','parsers.py',514),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','parsers.py',527),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','parsers.py',529),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','parsers.py',531),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','parsers.py',532),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','parsers.py',533),
  ('expr_factor -> unit_value','expr_factor',1,'p_standalone_definitions','parsers.py',534),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','parsers.py',535),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','parsers.py',536),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','parsers.py',537),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','parsers.py',539),
  ('literal -> number','literal',1,'p_literals','parsers.py',547),
  ('literal -> concrete_number','literal',1,'p_literals','parsers.py',548),
  ('literal -> string','literal',1,'p_literals','parsers.py',549),
  ('literal -> char','literal',1,'p_literals','parsers.py',550),
  ('literal -> date','literal',1,'p_literals','parsers.py',551),
  ('literal -> datetime','literal',1,'p_literals','parsers.py',552),
  ('literal -> date_interval','literal',1,'p_literals','parsers.py',553),
  ('literal -> datetime_interval','literal',1,'p_literals','parsers.py',554),
  ('date -> DATE','date',1,'p_date','parsers.py',560),
  ('datetime -> DATETIME','datetime',1,'p_datetime','parsers.py',566),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','parsers.py',572),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','parsers.py',578),
  ('unit_value -> LPAREN RPAREN','unit_value',2,'p_unit_value','parsers.py',584),
  ('char -> CHAR','char',1,'p_char','parsers.py',590),
  ('string -> STRING','string',1,'p_string','parsers.py',595),
  ('identifier -> _identifier','identifier',1,'p_variable','parsers.py',600),
  ('_identifier -> UNDER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',607),
  ('_identifier -> UPPER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',608),
  ('_identifier -> LOWER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',609),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','parsers.py',616),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','parsers.py',621),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','parsers.py',622),
  ('enclosed_expr -> LPAREN DOT_OPERATOR RPAREN','enclosed_expr',3,'p_operators_as_expressios','parsers.py',628),
  ('enclosed_expr -> LPAREN operator RPAREN','enclosed_expr',3,'p_operators_as_expressios','parsers.py',629),
  ('infixr_operator_9 -> DOT_OPERATOR','infixr_operator_9',1,'p_operator','parsers.py',639),
  ('infixl_operator_7 -> STAR','infixl_operator_7',1,'p_operator','parsers.py',641),
  ('infixl_operator_7 -> SLASH','infixl_operator_7',1,'p_operator','parsers.py',642),
  ('infixl_operator_7 -> DOUBLESLASH','infixl_operator_7',1,'p_operator','parsers.py',643),
  ('infixl_operator_7 -> PERCENT','infixl_operator_7',1,'p_operator','parsers.py',644),
  ('infixl_operator_6 -> PLUS','infixl_operator_6',1,'p_operator','parsers.py',646),
  ('infixl_operator_6 -> MINUS','infixl_operator_6',1,'p_operator','parsers.py',647),
  ('infixr_operator_2 -> COLON','infixr_operator_2',1,'p_operator','parsers.py',649),
  ('infixl_operator_2 -> OPERATOR','infixl_operator_2',1,'p_operator','parsers.py',651),
  ('infixl_operator_2 -> ARROW','infixl_operator_2',1,'p_operator','parsers.py',652),
  ('infixl_operator_0 -> TICK_OPERATOR','infixl_operator_0',1,'p_operator','parsers.py',654),
  ('operator -> infixl_operator_0','operator',1,'p_operator','parsers.py',656),
  ('operator -> infixl_operator_2','operator',1,'p_operator','parsers.py',657),
  ('operator -> infixr_operator_2','operator',1,'p_operator','parsers.py',658),
  ('operator -> infixl_operator_6','operator',1,'p_operator','parsers.py',659),
  ('operator -> infixl_operator_7','operator',1,'p_operator','parsers.py',660),
  ('number -> BASE10_INTEGER','number',1,'p_integer','parsers.py',667),
  ('number -> BASE16_INTEGER','number',1,'p_integer','parsers.py',668),
  ('number -> BASE8_INTEGER','number',1,'p_integer','parsers.py',669),
  ('number -> BASE2_INTEGER','number',1,'p_integer','parsers.py',670),
  ('number -> FLOAT','number',1,'p_float','parsers.py',699),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','parsers.py',704),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','parsers.py',705),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','parsers.py',706),
  ('empty -> <empty>','empty',0,'p_empty','parsers.py',715),
  ('lambda_expr -> BACKSLASH parameters ARROW expr','lambda_expr',4,'p_lambda_definition','parsers.py',720),
  ('parameters -> _identifier _parameters','parameters',2,'p_parameters','parsers.py',728),
  ('_parameters -> SPACE _identifier _parameters','_parameters',3,'p_parameters','parsers.py',729),
  ('_parameters -> empty','_parameters',1,'p_empty__parameters','parsers.py',738),
  ('pattern -> parameters','pattern',1,'p_pattern','parsers.py',744),
  ('equation -> pattern EQ expr','equation',3,'p_equation','parsers.py',750),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','parsers.py',760),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','parsers.py',769),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','parsers.py',778),
  ('letexpr -> KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','parsers.py',788),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','parsers.py',796),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','parsers.py',797),
  ('type_expr -> type_function_expr','type_expr',1,'p_type_expr','parsers.py',807),
  ('type_expr -> type_term','type_expr',1,'p_type_expr','parsers.py',808),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','parsers.py',813),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','parsers.py',814),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','parsers.py',824),
  ('type_term -> type_factor','type_term',1,'p_type_term','parsers.py',825),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','parsers.py',830),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','parsers.py',842),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','parsers.py',843),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','parsers.py',851),
  ('type_variable -> LOWER_IDENTIFIER','type_variable',1,'p_type_variable','parsers.py',856),
  ('type_cons -> UPPER_IDENTIFIER','type_cons',1,'p_type_cons','parsers.py',861),
  ('type_factor -> type_variable','type_factor',1,'p_type_factor_identifier','parsers.py',866),
  ('type_factor -> type_cons','type_factor',1,'p_type_factor_identifier','parsers.py',867),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','parsers.py',874),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','parsers.py',879),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','parsers.py',884),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','parsers.py',885),
  ('program -> definitions','program',1,'p_program','parsers.py',891),
  ('definitions -> definition _definition_set','definitions',2,'p_definitions','parsers.py',907),
  ('_definition_set -> NEWLINE definition _definition_set','_definition_set',3,'p_definition_set','parsers.py',915),
  ('_definition_set -> empty','_definition_set',1,'p_definition_set2','parsers.py',923),
  ('definition -> nametype_decl','definition',1,'p_definition','parsers.py',929),
  ('definition -> valuedef','definition',1,'p_definition','parsers.py',930),
  ('definition -> datatype_definition','definition',1,'p_definition','parsers.py',931),
  ('valuedef -> equation','valuedef',1,'p_valuedef','parsers.py',937),
  ('nametype_decl -> _identifier COLON COLON st_type_expr','nametype_decl',4,'p_nametype_decl','parsers.py',943),
  ('datatype_definition -> _datatype_lhs EQ _data_rhs','datatype_definition',3,'p_datatype_definition','parsers.py',952),
  ('_datatype_lhs -> KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params','_datatype_lhs',4,'p_datatype_lhs','parsers.py',960),
  ('_cons_params -> SPACE LOWER_IDENTIFIER _cons_params','_cons_params',3,'p_datatype_cons_params','parsers.py',969),
  ('_cons_params -> empty','_cons_params',1,'p_datatype_cons_params_empty','parsers.py',978),
  ('_data_rhs -> data_cons _data_conses','_data_rhs',2,'p_datatype_body','parsers.py',984),
  ('_data_conses -> _maybe_padding PIPE data_cons _data_conses','_data_conses',4,'p_datatype_body','parsers.py',985),
  ('_data_conses -> empty','_data_conses',1,'p_datatype_conses_empty','parsers.py',994),
  ('data_cons -> _data_cons','data_cons',1,'p_data_cons','parsers.py',999),
  ('_data_cons -> UPPER_IDENTIFIER _cons_args','_data_cons',2,'p_bare_data_cons','parsers.py',1005),
  ('_cons_args -> SPACE cons_arg _cons_args','_cons_args',3,'p_data_cons_args','parsers.py',1010),
  ('_cons_args -> empty','_cons_args',1,'p_data_cons_args_empty','parsers.py',1019),
  ('cons_arg -> type_variable','cons_arg',1,'p_cons_arg','parsers.py',1025),
  ('cons_arg -> type_cons','cons_arg',1,'p_cons_arg','parsers.py',1026),
  ('cons_arg -> _cons_arg_factor','cons_arg',1,'p_cons_arg','parsers.py',1027),
  ('_cons_arg_factor -> LPAREN type_expr RPAREN','_cons_arg_factor',3,'p_cons_arg_factor','parsers.py',1033),
  ('_cons_arg_factor -> LBRACKET type_expr RBRACKET','_cons_arg_factor',3,'p_cons_arg_factor_list','parsers.py',1039),
]
