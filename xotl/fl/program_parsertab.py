
# program_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# type: ignore
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightARROWleftKEYWORD_LETleftKEYWORD_INleftKEYWORD_WHEREleftTICK_OPERATORleftOPERATORleftPLUSMINUSleftSTARSLASHDOUBLESLASHPERCENTrightDOT_OPERATORleftSPACEANNOTATION ARROW ATTR_ACCESS BACKSLASH BASE10_INTEGER BASE16_INTEGER BASE2_INTEGER BASE8_INTEGER CHAR COLON DATE DATETIME DATETIME_INTERVAL DATE_INTERVAL DOT_OPERATOR DOUBLESLASH EQ FLOAT KEYWORD_CLASS KEYWORD_DATA KEYWORD_IN KEYWORD_INSTANCE KEYWORD_LET KEYWORD_WHERE LBRACKET LOWER_IDENTIFIER LPAREN MINUS NEWLINE OPERATOR PADDING PERCENT PIPE PLUS RBRACKET RPAREN SLASH SPACE STAR STRING TICK_OPERATOR UNDER_IDENTIFIER UPPER_IDENTIFIERexpr_factor : expr_factor SPACE expr_factorexpr_factor : ATTR_ACCESS\n    expr_term9 : expr_factor infixr_operator_9 expr_term9\n               | expr_factor\n\n    expr_term7 : expr_term7 infixl_operator_7 expr_term9\n               | expr_term9\n\n    expr_term6 : expr_term6 infixl_operator_6 expr_term7\n               | expr_term7\n\n    expr_term2 : expr_term2 infixl_operator_2 expr_term6\n               | expr_term6 infixr_operator_2 expr_term2\n               | expr_term6\n\n    expr_term0 : expr infixl_operator_0 expr_term0\n               | expr_term2\n\n    \n    st_expr : expr\n\n    expr : expr_term0\n\n    expr_factor : literal\n                | identifier\n                | enclosed_expr\n                | unit_value\n                | letexpr\n                | where_expr\n                | lambda_expr\n\n    st_type_expr : type_expr\n\n    literal : number\n             | concrete_number\n             | string\n             | char\n             | date\n             | datetime\n             | date_interval\n             | datetime_interval\n    date : DATE\n    datetime : DATETIME\n    date_interval : DATE_INTERVAL\n    datetime_interval : DATETIME_INTERVAL\n    unit_value : LPAREN RPAREN\n    char : CHARstring : STRINGidentifier : _identifier\n\n    _identifier : UNDER_IDENTIFIER\n                   | UPPER_IDENTIFIER\n                   | LOWER_IDENTIFIER\n\n    enclosed_expr : LPAREN expr RPARENexpr_factor : enclosed_expr expr_factor\n                   | expr_factor enclosed_expr\n    enclosed_expr : LPAREN DOT_OPERATOR RPAREN\n                     | LPAREN operator RPAREN\n    \n    infixr_operator_9 : DOT_OPERATOR\n\n    infixl_operator_7 : STAR\n                     | SLASH\n                     | DOUBLESLASH\n                     | PERCENT\n\n    infixl_operator_6 : PLUS\n                     | MINUS\n\n    infixr_operator_2 : COLON\n\n    infixl_operator_2 : OPERATOR\n                     | ARROW\n\n    infixl_operator_0 : TICK_OPERATOR\n\n    operator : infixl_operator_0\n             | infixl_operator_2\n             | infixr_operator_2\n             | infixl_operator_6\n             | infixl_operator_7\n\n    number : BASE10_INTEGER\n              | BASE16_INTEGER\n              | BASE8_INTEGER\n              | BASE2_INTEGER\n    number : FLOATconcrete_number :  number ANNOTATION string\n                        | number ANNOTATION char\n                        | number ANNOTATION identifier\n    empty : lambda_expr : BACKSLASH parameters ARROW expr\n    parameters : _identifier _parameters\n       _parameters : SPACE _identifier _parameters\n    _parameters : empty\n    pattern : parametersequation : pattern EQ expr\n    equations : equation _equation_set\n    \n    _equation_set : PADDING equation _equation_set\n    \n    _equation_set : empty\n    \n    letexpr : KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr\n\n    \n    where_expr : expr KEYWORD_WHERE SPACE equations\n    where_expr : expr KEYWORD_WHERE PADDING equations\n    type_expr : type_function_expr\n                 | type_termtype_function_expr : type_term ARROW _maybe_padding type_function_expr\n                          | type_term\n    type_term : type_app_expression\n                 | type_factortype_app_expression : type_factor _app_args_non_empty_app_args : SPACE type_factor _app_args\n       _app_args_non_empty : SPACE type_factor _app_args\n    _app_args : emptytype_variable : LOWER_IDENTIFIERtype_cons : UPPER_IDENTIFIERtype_factor : type_variable\n                   | type_cons\n\n    type_factor : LPAREN _maybe_padding type_expr _maybe_padding RPARENtype_factor : LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET_maybe_padding : PADDING\n                      | empty\n    program : definitions\n    definitions : definition _definition_set\n    _definition_set : NEWLINE definition _definition_set\n    _definition_set : empty\n    definition : nametype_decl\n                  | valuedef\n                  | datatype_definition\n    valuedef : equation\n    nametype_decl : _identifier COLON COLON st_type_expr\n    datatype_definition : _datatype_lhs EQ _data_rhs\n    _datatype_lhs : KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params\n    _cons_params : SPACE LOWER_IDENTIFIER _cons_params\n    _cons_params : empty\n    _data_rhs : data_cons _data_conses\n       _data_conses : _maybe_padding PIPE data_cons _data_conses\n    _data_conses : emptydata_cons : _data_cons_data_cons : UPPER_IDENTIFIER _cons_args_cons_args : SPACE cons_arg _cons_args\n    _cons_args : empty\n    cons_arg : type_variable\n       cons_arg : type_cons\n       cons_arg : _cons_arg_factor\n    _cons_arg_factor : LPAREN type_expr RPAREN\n    _cons_arg_factor : LBRACKET type_expr RBRACKET\n    '
    
_lr_action_items = {'UNDER_IDENTIFIER':([0,17,21,24,43,57,59,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,116,126,147,148,158,159,160,163,177,191,],[10,10,10,10,10,10,10,10,-58,10,-56,-57,10,10,-55,-53,-54,10,-49,-50,-51,-52,10,10,-48,10,10,10,10,10,-43,-46,-47,10,10,10,]),'UPPER_IDENTIFIER':([0,17,21,23,24,25,27,43,57,59,81,82,89,91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,116,126,132,134,135,136,137,138,143,144,147,148,158,159,160,163,165,177,183,191,],[11,11,11,32,11,71,84,11,11,11,-72,-72,-101,84,11,-58,11,-56,-57,11,11,-55,-53,-54,11,-49,-50,-51,-52,11,11,-48,11,11,11,-72,84,84,-102,84,32,84,84,11,11,-43,-46,-47,11,84,11,84,11,]),'LOWER_IDENTIFIER':([0,17,21,24,27,43,57,59,81,82,89,91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,116,126,129,132,134,135,136,137,143,144,147,148,158,159,160,163,165,177,183,191,],[12,12,12,12,83,12,12,12,-72,-72,-101,83,12,-58,12,-56,-57,12,12,-55,-53,-54,12,-49,-50,-51,-52,12,12,-48,12,12,12,164,-72,83,83,-102,83,83,83,12,12,-43,-46,-47,12,83,12,83,12,]),'KEYWORD_DATA':([0,17,],[14,14,]),'$end':([1,2,3,4,5,6,8,10,11,12,16,18,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,83,84,86,88,90,92,111,114,118,133,139,140,141,142,146,149,150,151,152,153,154,155,156,157,158,159,160,162,166,169,170,173,174,176,178,179,181,182,184,185,188,189,190,192,193,194,195,196,197,198,199,],[0,-103,-72,-107,-108,-109,-110,-40,-41,-42,-104,-106,-72,-112,-72,-119,-72,-78,-15,-13,-11,-8,-6,-4,-2,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,-64,-65,-66,-67,-68,-38,-37,-32,-33,-34,-35,-105,-111,-23,-85,-86,-89,-90,-97,-98,-95,-96,-116,-118,-120,-122,-45,-44,-36,-91,-72,-123,-124,-125,-12,-9,-10,-7,-5,-3,-1,-69,-70,-71,-43,-46,-47,-72,-72,-72,-121,-83,-84,-79,-81,-73,-88,-87,-93,-94,-117,-126,-127,-72,-72,-99,-100,-82,-14,-80,-92,]),'NEWLINE':([3,4,5,6,8,10,11,12,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,73,74,75,76,77,78,79,80,83,84,86,88,90,92,111,114,118,133,139,140,141,142,146,149,150,151,152,153,154,155,156,157,158,159,160,162,166,169,170,173,174,176,178,179,181,182,184,185,188,189,190,192,193,194,195,196,197,198,199,],[17,-107,-108,-109,-110,-40,-41,-42,17,-112,-72,-119,-72,-78,-15,-13,-11,-8,-6,-4,-2,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,-64,-65,-66,-67,-68,-38,-37,-32,-33,-34,-35,-111,-23,-85,-86,-89,-90,-97,-98,-95,-96,-116,-118,-120,-122,-45,-44,-36,-91,-72,-123,-124,-125,-12,-9,-10,-7,-5,-3,-1,-69,-70,-71,-43,-46,-47,-72,-72,-72,-121,-83,-84,-79,-81,-73,-88,-87,-93,-94,-117,-126,-127,-72,-72,-99,-100,-82,-14,-80,-92,]),'COLON':([7,10,11,12,19,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,111,113,114,118,146,149,150,151,152,153,154,155,156,157,158,159,160,162,173,174,176,178,179,192,196,197,198,],[19,-40,-41,-42,27,-78,-15,-13,101,-8,-6,-4,-2,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,101,-64,-65,-66,-67,-68,-38,-37,-32,-33,-34,-35,-45,101,-4,-36,-12,101,-10,-7,-5,-3,-1,-69,-70,-71,-43,-46,-47,-72,-83,-84,-79,-81,-73,-72,-82,-14,-80,]),'SPACE':([7,10,11,12,14,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,83,84,94,111,114,118,128,139,140,141,142,146,149,150,151,152,153,154,155,156,157,158,159,160,162,164,166,173,174,175,176,178,179,189,190,192,193,194,195,196,197,198,],[21,-40,-41,-42,25,21,91,-78,-15,-13,-11,-8,-6,110,-2,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,126,-64,-65,-66,-67,-68,-38,-37,-32,-33,-34,-35,129,134,-97,-98,-95,-96,147,-45,110,-36,21,91,-123,-124,-125,-12,-9,-10,-7,-5,-3,-1,-69,-70,-71,-43,-46,-47,-72,129,183,-83,-84,191,-79,-81,-73,-126,-127,-72,183,-99,-100,-82,-14,-80,]),'EQ':([7,9,10,11,12,13,15,20,22,28,71,85,128,130,131,164,180,],[-72,23,-40,-41,-42,24,-77,-74,-76,-72,-72,-75,-72,-113,-115,-72,-114,]),'ARROW':([10,11,12,20,22,28,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,76,77,78,79,80,83,84,85,111,113,114,118,127,128,133,146,149,150,151,152,153,154,155,156,157,158,159,160,162,166,173,174,176,178,179,181,184,185,192,193,194,195,196,197,198,199,],[-40,-41,-42,-74,-76,-72,-78,-15,98,-11,-8,-6,-4,-2,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,98,-64,-65,-66,-67,-68,-38,-37,-32,-33,-34,-35,132,-89,-90,-97,-98,-95,-96,-75,-45,98,-4,-36,163,-72,-91,-12,-9,98,-7,-5,-3,-1,-69,-70,-71,-43,-46,-47,-72,-72,-83,-84,-79,-81,-73,132,-93,-94,-72,-72,-99,-100,-82,-14,-80,-92,]),'KEYWORD_WHERE':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,111,114,115,117,118,145,146,149,150,151,152,153,154,155,156,157,158,159,160,162,173,174,176,178,179,192,196,197,198,],[-40,-41,-42,94,-15,-13,-11,-8,-6,-4,-2,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,-64,-65,-66,-67,-68,-38,-37,-32,-33,-34,-35,-45,-4,94,94,-36,94,-12,-9,-10,-7,-5,-3,-1,-69,-70,-71,-43,-46,-47,-72,-83,-84,-79,-81,94,-72,-82,94,-80,]),'TICK_OPERATOR':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,111,113,114,115,117,118,145,146,149,150,151,152,153,154,155,156,157,158,159,160,162,173,174,176,178,179,192,196,197,198,],[-40,-41,-42,95,-15,-13,-11,-8,-6,-4,-2,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,95,-64,-65,-66,-67,-68,-38,-37,-32,-33,-34,-35,-45,95,-4,95,95,-36,95,-12,-9,-10,-7,-5,-3,-1,-69,-70,-71,-43,-46,-47,-72,-83,-84,-79,-81,95,-72,-82,95,-80,]),'PADDING':([10,11,12,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,75,76,77,78,79,80,81,82,83,84,90,92,94,111,114,118,132,133,139,140,141,142,146,149,150,151,152,153,154,155,156,157,158,159,160,162,166,167,168,169,170,173,174,176,178,179,181,182,184,185,189,190,192,193,194,195,196,197,198,199,],[-40,-41,-42,89,-119,-72,-78,-15,-13,-11,-8,-6,-4,-2,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,-64,-65,-66,-67,-68,-38,-37,-32,-33,-34,-35,-85,-86,-89,-90,-97,-98,89,89,-95,-96,-120,-122,148,-45,-44,-36,89,-91,-72,-123,-124,-125,-12,-9,-10,-7,-5,-3,-1,-69,-70,-71,-43,-46,-47,177,-72,89,89,89,-121,-83,-84,-79,-81,-73,-88,-87,-93,-94,-126,-127,177,-72,-99,-100,-82,-14,-80,-92,]),'KEYWORD_IN':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,111,114,118,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,173,174,176,178,179,192,196,197,198,],[-40,-41,-42,-78,-15,-13,-11,-8,-6,-4,-2,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,-64,-65,-66,-67,-68,-38,-37,-32,-33,-34,-35,-45,-44,-36,-12,-9,-10,-7,-5,-3,-1,-69,-70,-71,-43,-46,-47,175,-72,-83,-84,-79,-81,-73,-72,-82,-14,-80,]),'DOT_OPERATOR':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,111,113,114,118,146,149,150,151,152,153,154,155,156,157,158,159,160,162,173,174,176,178,179,192,196,197,198,],[-40,-41,-42,-78,-15,-13,-11,-8,-6,112,-2,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,119,-64,-65,-66,-67,-68,-38,-37,-32,-33,-34,-35,-45,119,112,-36,-12,-9,-10,-7,-5,-3,-1,-69,-70,-71,-43,-46,-47,-72,-83,-84,-79,-81,-73,-72,-82,-14,-80,]),'LPAREN':([10,11,12,24,27,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,81,82,89,91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,132,134,135,136,137,143,144,146,149,150,151,152,153,154,155,156,157,158,159,160,162,163,165,173,174,176,178,179,183,191,192,196,197,198,],[-40,-41,-42,57,81,-78,-15,-13,-11,-8,-6,113,-2,-16,-17,57,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,57,-64,-65,-66,-67,-68,-38,-37,-32,-33,-34,-35,-72,-72,-101,143,57,-58,57,-56,-57,57,57,-55,-53,-54,57,-49,-50,-51,-52,57,57,-45,-48,57,113,-36,-72,81,81,-102,81,81,81,-12,-9,-10,-7,-5,-3,-1,-69,-70,-71,-43,-46,-47,-72,57,81,-83,-84,-79,-81,-73,81,57,-72,-82,-14,-80,]),'STAR':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,111,113,114,118,146,149,150,151,152,153,154,155,156,157,158,159,160,162,173,174,176,178,179,192,196,197,198,],[-40,-41,-42,-78,-15,-13,-11,105,-6,-4,-2,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,105,-64,-65,-66,-67,-68,-38,-37,-32,-33,-34,-35,-45,105,-4,-36,-12,-9,-10,105,-5,-3,-1,-69,-70,-71,-43,-46,-47,-72,-83,-84,-79,-81,-73,-72,-82,-14,-80,]),'SLASH':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,111,113,114,118,146,149,150,151,152,153,154,155,156,157,158,159,160,162,173,174,176,178,179,192,196,197,198,],[-40,-41,-42,-78,-15,-13,-11,106,-6,-4,-2,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,106,-64,-65,-66,-67,-68,-38,-37,-32,-33,-34,-35,-45,106,-4,-36,-12,-9,-10,106,-5,-3,-1,-69,-70,-71,-43,-46,-47,-72,-83,-84,-79,-81,-73,-72,-82,-14,-80,]),'DOUBLESLASH':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,111,113,114,118,146,149,150,151,152,153,154,155,156,157,158,159,160,162,173,174,176,178,179,192,196,197,198,],[-40,-41,-42,-78,-15,-13,-11,107,-6,-4,-2,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,107,-64,-65,-66,-67,-68,-38,-37,-32,-33,-34,-35,-45,107,-4,-36,-12,-9,-10,107,-5,-3,-1,-69,-70,-71,-43,-46,-47,-72,-83,-84,-79,-81,-73,-72,-82,-14,-80,]),'PERCENT':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,111,113,114,118,146,149,150,151,152,153,154,155,156,157,158,159,160,162,173,174,176,178,179,192,196,197,198,],[-40,-41,-42,-78,-15,-13,-11,108,-6,-4,-2,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,108,-64,-65,-66,-67,-68,-38,-37,-32,-33,-34,-35,-45,108,-4,-36,-12,-9,-10,108,-5,-3,-1,-69,-70,-71,-43,-46,-47,-72,-83,-84,-79,-81,-73,-72,-82,-14,-80,]),'PLUS':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,111,113,114,118,146,149,150,151,152,153,154,155,156,157,158,159,160,162,173,174,176,178,179,192,196,197,198,],[-40,-41,-42,-78,-15,-13,102,-8,-6,-4,-2,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,102,-64,-65,-66,-67,-68,-38,-37,-32,-33,-34,-35,-45,102,-4,-36,-12,102,-10,-7,-5,-3,-1,-69,-70,-71,-43,-46,-47,-72,-83,-84,-79,-81,-73,-72,-82,-14,-80,]),'MINUS':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,111,113,114,118,146,149,150,151,152,153,154,155,156,157,158,159,160,162,173,174,176,178,179,192,196,197,198,],[-40,-41,-42,-78,-15,-13,103,-8,-6,-4,-2,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,103,-64,-65,-66,-67,-68,-38,-37,-32,-33,-34,-35,-45,103,-4,-36,-12,103,-10,-7,-5,-3,-1,-69,-70,-71,-43,-46,-47,-72,-83,-84,-79,-81,-73,-72,-82,-14,-80,]),'OPERATOR':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,111,113,114,118,146,149,150,151,152,153,154,155,156,157,158,159,160,162,173,174,176,178,179,192,196,197,198,],[-40,-41,-42,-78,-15,97,-11,-8,-6,-4,-2,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,97,-64,-65,-66,-67,-68,-38,-37,-32,-33,-34,-35,-45,97,-4,-36,-12,-9,97,-7,-5,-3,-1,-69,-70,-71,-43,-46,-47,-72,-83,-84,-79,-81,-73,-72,-82,-14,-80,]),'RPAREN':([10,11,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,75,76,77,78,79,80,83,84,89,95,97,98,101,102,103,105,106,107,108,111,114,117,118,119,120,121,122,123,124,125,133,136,146,149,150,151,152,153,154,155,156,157,158,159,160,162,166,167,171,173,174,176,178,179,181,182,184,185,186,192,193,194,195,196,197,198,199,],[-40,-41,-42,-78,-15,-13,-11,-8,-6,-4,-2,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-30,-31,-39,118,-64,-65,-66,-67,-68,-38,-37,-32,-33,-34,-35,-85,-86,-89,-90,-97,-98,-95,-96,-101,-58,-56,-57,-55,-53,-54,-49,-50,-51,-52,-45,-44,158,-36,159,160,-59,-60,-61,-62,-63,-91,-102,-12,-9,-10,-7,-5,-3,-1,-69,-70,-71,-43,-46,-47,-72,-72,-72,189,-83,-84,-79,-81,-73,-88,-87,-93,-94,194,-72,-72,-99,-100,-82,-14,-80,-92,]),'ATTR_ACCESS':([24,43,57,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,158,159,160,163,191,],[40,40,40,40,-58,40,-56,-57,40,40,-55,-53,-54,40,-49,-50,-51,-52,40,40,-48,40,-43,-46,-47,40,40,]),'KEYWORD_LET':([24,43,57,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,158,159,160,163,191,],[58,58,58,58,-58,58,-56,-57,58,58,-55,-53,-54,58,-49,-50,-51,-52,58,58,-48,58,-43,-46,-47,58,58,]),'BACKSLASH':([24,43,57,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,158,159,160,163,191,],[59,59,59,59,-58,59,-56,-57,59,59,-55,-53,-54,59,-49,-50,-51,-52,59,59,-48,59,-43,-46,-47,59,59,]),'BASE10_INTEGER':([24,43,57,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,158,159,160,163,191,],[60,60,60,60,-58,60,-56,-57,60,60,-55,-53,-54,60,-49,-50,-51,-52,60,60,-48,60,-43,-46,-47,60,60,]),'BASE16_INTEGER':([24,43,57,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,158,159,160,163,191,],[61,61,61,61,-58,61,-56,-57,61,61,-55,-53,-54,61,-49,-50,-51,-52,61,61,-48,61,-43,-46,-47,61,61,]),'BASE8_INTEGER':([24,43,57,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,158,159,160,163,191,],[62,62,62,62,-58,62,-56,-57,62,62,-55,-53,-54,62,-49,-50,-51,-52,62,62,-48,62,-43,-46,-47,62,62,]),'BASE2_INTEGER':([24,43,57,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,158,159,160,163,191,],[63,63,63,63,-58,63,-56,-57,63,63,-55,-53,-54,63,-49,-50,-51,-52,63,63,-48,63,-43,-46,-47,63,63,]),'FLOAT':([24,43,57,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,158,159,160,163,191,],[64,64,64,64,-58,64,-56,-57,64,64,-55,-53,-54,64,-49,-50,-51,-52,64,64,-48,64,-43,-46,-47,64,64,]),'STRING':([24,43,57,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,116,158,159,160,163,191,],[65,65,65,65,-58,65,-56,-57,65,65,-55,-53,-54,65,-49,-50,-51,-52,65,65,-48,65,65,-43,-46,-47,65,65,]),'CHAR':([24,43,57,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,116,158,159,160,163,191,],[66,66,66,66,-58,66,-56,-57,66,66,-55,-53,-54,66,-49,-50,-51,-52,66,66,-48,66,66,-43,-46,-47,66,66,]),'DATE':([24,43,57,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,158,159,160,163,191,],[67,67,67,67,-58,67,-56,-57,67,67,-55,-53,-54,67,-49,-50,-51,-52,67,67,-48,67,-43,-46,-47,67,67,]),'DATETIME':([24,43,57,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,158,159,160,163,191,],[68,68,68,68,-58,68,-56,-57,68,68,-55,-53,-54,68,-49,-50,-51,-52,68,68,-48,68,-43,-46,-47,68,68,]),'DATE_INTERVAL':([24,43,57,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,158,159,160,163,191,],[69,69,69,69,-58,69,-56,-57,69,69,-55,-53,-54,69,-49,-50,-51,-52,69,69,-48,69,-43,-46,-47,69,69,]),'DATETIME_INTERVAL':([24,43,57,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,158,159,160,163,191,],[70,70,70,70,-58,70,-56,-57,70,70,-55,-53,-54,70,-49,-50,-51,-52,70,70,-48,70,-43,-46,-47,70,70,]),'LBRACKET':([27,81,82,89,91,132,134,135,136,137,143,144,165,183,],[82,-72,-72,-101,144,-72,82,82,-102,82,82,82,82,82,]),'PIPE':([30,31,32,83,84,87,88,89,90,92,139,140,141,142,169,170,189,190,],[-72,-119,-72,-95,-96,138,-102,-101,-120,-122,-72,-123,-124,-125,-72,-121,-126,-127,]),'ANNOTATION':([48,60,61,62,63,64,],[116,-64,-65,-66,-67,-68,]),'RBRACKET':([75,76,77,78,79,80,83,84,89,133,136,166,168,172,181,182,184,185,187,193,194,195,199,],[-85,-86,-89,-90,-97,-98,-95,-96,-101,-91,-102,-72,-72,190,-88,-87,-93,-94,195,-72,-99,-100,-92,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'definitions':([0,],[2,]),'definition':([0,17,],[3,26,]),'nametype_decl':([0,17,],[4,4,]),'valuedef':([0,17,],[5,5,]),'datatype_definition':([0,17,],[6,6,]),'_identifier':([0,17,21,24,43,57,59,93,96,99,100,104,109,110,113,116,126,147,148,163,177,191,],[7,7,28,56,56,56,128,56,56,56,56,56,56,56,56,56,128,128,128,56,128,56,]),'equation':([0,17,126,147,148,177,],[8,8,162,162,162,192,]),'_datatype_lhs':([0,17,],[9,9,]),'pattern':([0,17,126,147,148,177,],[13,13,13,13,13,13,]),'parameters':([0,17,59,126,147,148,177,],[15,15,127,15,15,15,15,]),'_definition_set':([3,26,],[16,72,]),'empty':([3,7,26,28,30,32,71,81,82,128,132,139,162,164,166,167,168,169,192,193,],[18,22,18,22,88,92,131,136,136,22,136,92,178,131,185,136,136,88,178,185,]),'_parameters':([7,28,128,],[20,85,20,]),'_data_rhs':([23,],[29,]),'data_cons':([23,138,],[30,169,]),'_data_cons':([23,138,],[31,31,]),'expr':([24,43,57,93,96,99,100,104,109,110,113,163,191,],[33,115,117,145,115,115,115,115,115,115,117,179,197,]),'expr_term0':([24,43,57,93,96,99,100,104,109,110,113,163,191,],[34,34,34,146,34,34,34,34,34,34,34,34,34,]),'expr_term2':([24,43,57,93,96,99,100,104,109,110,113,163,191,],[35,35,35,35,35,150,35,35,35,35,35,35,35,]),'expr_term6':([24,43,57,93,96,99,100,104,109,110,113,163,191,],[36,36,36,36,149,36,36,36,36,36,36,36,36,]),'expr_term7':([24,43,57,93,96,99,100,104,109,110,113,163,191,],[37,37,37,37,37,37,151,37,37,37,37,37,37,]),'expr_term9':([24,43,57,93,96,99,100,104,109,110,113,163,191,],[38,38,38,38,38,38,38,152,153,38,38,38,38,]),'expr_factor':([24,43,57,93,96,99,100,104,109,110,113,163,191,],[39,114,39,39,39,39,39,39,39,154,39,39,39,]),'literal':([24,43,57,93,96,99,100,104,109,110,113,163,191,],[41,41,41,41,41,41,41,41,41,41,41,41,41,]),'identifier':([24,43,57,93,96,99,100,104,109,110,113,116,163,191,],[42,42,42,42,42,42,42,42,42,42,42,157,42,42,]),'enclosed_expr':([24,39,43,57,93,96,99,100,104,109,110,113,114,154,163,191,],[43,111,43,43,43,43,43,43,43,43,43,43,111,111,43,43,]),'unit_value':([24,43,57,93,96,99,100,104,109,110,113,163,191,],[44,44,44,44,44,44,44,44,44,44,44,44,44,]),'letexpr':([24,43,57,93,96,99,100,104,109,110,113,163,191,],[45,45,45,45,45,45,45,45,45,45,45,45,45,]),'where_expr':([24,43,57,93,96,99,100,104,109,110,113,163,191,],[46,46,46,46,46,46,46,46,46,46,46,46,46,]),'lambda_expr':([24,43,57,93,96,99,100,104,109,110,113,163,191,],[47,47,47,47,47,47,47,47,47,47,47,47,47,]),'number':([24,43,57,93,96,99,100,104,109,110,113,163,191,],[48,48,48,48,48,48,48,48,48,48,48,48,48,]),'concrete_number':([24,43,57,93,96,99,100,104,109,110,113,163,191,],[49,49,49,49,49,49,49,49,49,49,49,49,49,]),'string':([24,43,57,93,96,99,100,104,109,110,113,116,163,191,],[50,50,50,50,50,50,50,50,50,50,50,155,50,50,]),'char':([24,43,57,93,96,99,100,104,109,110,113,116,163,191,],[51,51,51,51,51,51,51,51,51,51,51,156,51,51,]),'date':([24,43,57,93,96,99,100,104,109,110,113,163,191,],[52,52,52,52,52,52,52,52,52,52,52,52,52,]),'datetime':([24,43,57,93,96,99,100,104,109,110,113,163,191,],[53,53,53,53,53,53,53,53,53,53,53,53,53,]),'date_interval':([24,43,57,93,96,99,100,104,109,110,113,163,191,],[54,54,54,54,54,54,54,54,54,54,54,54,54,]),'datetime_interval':([24,43,57,93,96,99,100,104,109,110,113,163,191,],[55,55,55,55,55,55,55,55,55,55,55,55,55,]),'st_type_expr':([27,],[73,]),'type_expr':([27,135,137,143,144,],[74,167,168,171,172,]),'type_function_expr':([27,135,137,143,144,165,],[75,75,75,75,75,182,]),'type_term':([27,135,137,143,144,165,],[76,76,76,76,76,181,]),'type_app_expression':([27,135,137,143,144,165,],[77,77,77,77,77,77,]),'type_factor':([27,134,135,137,143,144,165,183,],[78,166,78,78,78,78,78,193,]),'type_variable':([27,91,134,135,137,143,144,165,183,],[79,140,79,79,79,79,79,79,79,]),'type_cons':([27,91,134,135,137,143,144,165,183,],[80,141,80,80,80,80,80,80,80,]),'_data_conses':([30,169,],[86,188,]),'_maybe_padding':([30,81,82,132,167,168,169,],[87,135,137,165,186,187,87,]),'_cons_args':([32,139,],[90,170,]),'infixl_operator_0':([33,57,113,115,117,145,179,197,],[93,121,121,93,93,93,93,93,]),'infixl_operator_2':([35,57,113,150,],[96,122,122,96,]),'infixr_operator_2':([36,57,113,149,],[99,123,123,99,]),'infixl_operator_6':([36,57,113,149,],[100,124,124,100,]),'infixl_operator_7':([37,57,113,151,],[104,125,125,104,]),'infixr_operator_9':([39,114,154,],[109,109,109,]),'operator':([57,113,],[120,120,]),'_cons_params':([71,164,],[130,180,]),'_app_args_non_empty':([78,],[133,]),'cons_arg':([91,],[139,]),'_cons_arg_factor':([91,],[142,]),'equations':([126,147,148,],[161,173,174,]),'_equation_set':([162,192,],[176,198,]),'_app_args':([166,193,],[184,199,]),'st_expr':([191,],[196,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('expr_factor -> expr_factor SPACE expr_factor','expr_factor',3,'p_application','parsers.py',481),
  ('expr_factor -> ATTR_ACCESS','expr_factor',1,'p_attr_access','parsers.py',486),
  ('expr_term9 -> expr_factor infixr_operator_9 expr_term9','expr_term9',3,'p_expressions_precedence_rules','parsers.py',498),
  ('expr_term9 -> expr_factor','expr_term9',1,'p_expressions_precedence_rules','parsers.py',499),
  ('expr_term7 -> expr_term7 infixl_operator_7 expr_term9','expr_term7',3,'p_expressions_precedence_rules','parsers.py',501),
  ('expr_term7 -> expr_term9','expr_term7',1,'p_expressions_precedence_rules','parsers.py',502),
  ('expr_term6 -> expr_term6 infixl_operator_6 expr_term7','expr_term6',3,'p_expressions_precedence_rules','parsers.py',504),
  ('expr_term6 -> expr_term7','expr_term6',1,'p_expressions_precedence_rules','parsers.py',505),
  ('expr_term2 -> expr_term2 infixl_operator_2 expr_term6','expr_term2',3,'p_expressions_precedence_rules','parsers.py',507),
  ('expr_term2 -> expr_term6 infixr_operator_2 expr_term2','expr_term2',3,'p_expressions_precedence_rules','parsers.py',508),
  ('expr_term2 -> expr_term6','expr_term2',1,'p_expressions_precedence_rules','parsers.py',509),
  ('expr_term0 -> expr infixl_operator_0 expr_term0','expr_term0',3,'p_expressions_precedence_rules','parsers.py',511),
  ('expr_term0 -> expr_term2','expr_term0',1,'p_expressions_precedence_rules','parsers.py',512),
  ('st_expr -> expr','st_expr',1,'p_standalone_definitions','parsers.py',525),
  ('expr -> expr_term0','expr',1,'p_standalone_definitions','parsers.py',527),
  ('expr_factor -> literal','expr_factor',1,'p_standalone_definitions','parsers.py',529),
  ('expr_factor -> identifier','expr_factor',1,'p_standalone_definitions','parsers.py',530),
  ('expr_factor -> enclosed_expr','expr_factor',1,'p_standalone_definitions','parsers.py',531),
  ('expr_factor -> unit_value','expr_factor',1,'p_standalone_definitions','parsers.py',532),
  ('expr_factor -> letexpr','expr_factor',1,'p_standalone_definitions','parsers.py',533),
  ('expr_factor -> where_expr','expr_factor',1,'p_standalone_definitions','parsers.py',534),
  ('expr_factor -> lambda_expr','expr_factor',1,'p_standalone_definitions','parsers.py',535),
  ('st_type_expr -> type_expr','st_type_expr',1,'p_standalone_definitions','parsers.py',537),
  ('literal -> number','literal',1,'p_literals','parsers.py',545),
  ('literal -> concrete_number','literal',1,'p_literals','parsers.py',546),
  ('literal -> string','literal',1,'p_literals','parsers.py',547),
  ('literal -> char','literal',1,'p_literals','parsers.py',548),
  ('literal -> date','literal',1,'p_literals','parsers.py',549),
  ('literal -> datetime','literal',1,'p_literals','parsers.py',550),
  ('literal -> date_interval','literal',1,'p_literals','parsers.py',551),
  ('literal -> datetime_interval','literal',1,'p_literals','parsers.py',552),
  ('date -> DATE','date',1,'p_date','parsers.py',558),
  ('datetime -> DATETIME','datetime',1,'p_datetime','parsers.py',564),
  ('date_interval -> DATE_INTERVAL','date_interval',1,'p_date_interval','parsers.py',570),
  ('datetime_interval -> DATETIME_INTERVAL','datetime_interval',1,'p_datetime_interval','parsers.py',576),
  ('unit_value -> LPAREN RPAREN','unit_value',2,'p_unit_value','parsers.py',582),
  ('char -> CHAR','char',1,'p_char','parsers.py',588),
  ('string -> STRING','string',1,'p_string','parsers.py',593),
  ('identifier -> _identifier','identifier',1,'p_variable','parsers.py',598),
  ('_identifier -> UNDER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',605),
  ('_identifier -> UPPER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',606),
  ('_identifier -> LOWER_IDENTIFIER','_identifier',1,'p_bare_identifier','parsers.py',607),
  ('enclosed_expr -> LPAREN expr RPAREN','enclosed_expr',3,'p_paren_expr','parsers.py',614),
  ('expr_factor -> enclosed_expr expr_factor','expr_factor',2,'p_application_after_paren','parsers.py',619),
  ('expr_factor -> expr_factor enclosed_expr','expr_factor',2,'p_application_after_paren','parsers.py',620),
  ('enclosed_expr -> LPAREN DOT_OPERATOR RPAREN','enclosed_expr',3,'p_operators_as_expressios','parsers.py',626),
  ('enclosed_expr -> LPAREN operator RPAREN','enclosed_expr',3,'p_operators_as_expressios','parsers.py',627),
  ('infixr_operator_9 -> DOT_OPERATOR','infixr_operator_9',1,'p_operator','parsers.py',637),
  ('infixl_operator_7 -> STAR','infixl_operator_7',1,'p_operator','parsers.py',639),
  ('infixl_operator_7 -> SLASH','infixl_operator_7',1,'p_operator','parsers.py',640),
  ('infixl_operator_7 -> DOUBLESLASH','infixl_operator_7',1,'p_operator','parsers.py',641),
  ('infixl_operator_7 -> PERCENT','infixl_operator_7',1,'p_operator','parsers.py',642),
  ('infixl_operator_6 -> PLUS','infixl_operator_6',1,'p_operator','parsers.py',644),
  ('infixl_operator_6 -> MINUS','infixl_operator_6',1,'p_operator','parsers.py',645),
  ('infixr_operator_2 -> COLON','infixr_operator_2',1,'p_operator','parsers.py',647),
  ('infixl_operator_2 -> OPERATOR','infixl_operator_2',1,'p_operator','parsers.py',649),
  ('infixl_operator_2 -> ARROW','infixl_operator_2',1,'p_operator','parsers.py',650),
  ('infixl_operator_0 -> TICK_OPERATOR','infixl_operator_0',1,'p_operator','parsers.py',652),
  ('operator -> infixl_operator_0','operator',1,'p_operator','parsers.py',654),
  ('operator -> infixl_operator_2','operator',1,'p_operator','parsers.py',655),
  ('operator -> infixr_operator_2','operator',1,'p_operator','parsers.py',656),
  ('operator -> infixl_operator_6','operator',1,'p_operator','parsers.py',657),
  ('operator -> infixl_operator_7','operator',1,'p_operator','parsers.py',658),
  ('number -> BASE10_INTEGER','number',1,'p_integer','parsers.py',665),
  ('number -> BASE16_INTEGER','number',1,'p_integer','parsers.py',666),
  ('number -> BASE8_INTEGER','number',1,'p_integer','parsers.py',667),
  ('number -> BASE2_INTEGER','number',1,'p_integer','parsers.py',668),
  ('number -> FLOAT','number',1,'p_float','parsers.py',697),
  ('concrete_number -> number ANNOTATION string','concrete_number',3,'p_concrete_number','parsers.py',702),
  ('concrete_number -> number ANNOTATION char','concrete_number',3,'p_concrete_number','parsers.py',703),
  ('concrete_number -> number ANNOTATION identifier','concrete_number',3,'p_concrete_number','parsers.py',704),
  ('empty -> <empty>','empty',0,'p_empty','parsers.py',713),
  ('lambda_expr -> BACKSLASH parameters ARROW expr','lambda_expr',4,'p_lambda_definition','parsers.py',718),
  ('parameters -> _identifier _parameters','parameters',2,'p_parameters','parsers.py',726),
  ('_parameters -> SPACE _identifier _parameters','_parameters',3,'p_parameters','parsers.py',727),
  ('_parameters -> empty','_parameters',1,'p_empty__parameters','parsers.py',736),
  ('pattern -> parameters','pattern',1,'p_pattern','parsers.py',742),
  ('equation -> pattern EQ expr','equation',3,'p_equation','parsers.py',748),
  ('equations -> equation _equation_set','equations',2,'p_equation_set','parsers.py',758),
  ('_equation_set -> PADDING equation _equation_set','_equation_set',3,'p_equation_set2','parsers.py',767),
  ('_equation_set -> empty','_equation_set',1,'p_equation_set3','parsers.py',776),
  ('letexpr -> KEYWORD_LET SPACE equations KEYWORD_IN SPACE st_expr','letexpr',6,'p_let_expr','parsers.py',786),
  ('where_expr -> expr KEYWORD_WHERE SPACE equations','where_expr',4,'p_where_expr','parsers.py',794),
  ('where_expr -> expr KEYWORD_WHERE PADDING equations','where_expr',4,'p_where_expr','parsers.py',795),
  ('type_expr -> type_function_expr','type_expr',1,'p_type_expr','parsers.py',805),
  ('type_expr -> type_term','type_expr',1,'p_type_expr','parsers.py',806),
  ('type_function_expr -> type_term ARROW _maybe_padding type_function_expr','type_function_expr',4,'p_type_function_expr','parsers.py',811),
  ('type_function_expr -> type_term','type_function_expr',1,'p_type_function_expr','parsers.py',812),
  ('type_term -> type_app_expression','type_term',1,'p_type_term','parsers.py',822),
  ('type_term -> type_factor','type_term',1,'p_type_term','parsers.py',823),
  ('type_app_expression -> type_factor _app_args_non_empty','type_app_expression',2,'p_type_application_expr','parsers.py',828),
  ('_app_args -> SPACE type_factor _app_args','_app_args',3,'p_type_application_args','parsers.py',840),
  ('_app_args_non_empty -> SPACE type_factor _app_args','_app_args_non_empty',3,'p_type_application_args','parsers.py',841),
  ('_app_args -> empty','_app_args',1,'p_type_application_args_empty','parsers.py',849),
  ('type_variable -> LOWER_IDENTIFIER','type_variable',1,'p_type_variable','parsers.py',854),
  ('type_cons -> UPPER_IDENTIFIER','type_cons',1,'p_type_cons','parsers.py',859),
  ('type_factor -> type_variable','type_factor',1,'p_type_factor_identifier','parsers.py',864),
  ('type_factor -> type_cons','type_factor',1,'p_type_factor_identifier','parsers.py',865),
  ('type_factor -> LPAREN _maybe_padding type_expr _maybe_padding RPAREN','type_factor',5,'p_type_factor_paren','parsers.py',872),
  ('type_factor -> LBRACKET _maybe_padding type_expr _maybe_padding RBRACKET','type_factor',5,'p_type_factor_bracket','parsers.py',877),
  ('_maybe_padding -> PADDING','_maybe_padding',1,'p_maybe_padding','parsers.py',882),
  ('_maybe_padding -> empty','_maybe_padding',1,'p_maybe_padding','parsers.py',883),
  ('program -> definitions','program',1,'p_program','parsers.py',889),
  ('definitions -> definition _definition_set','definitions',2,'p_definitions','parsers.py',905),
  ('_definition_set -> NEWLINE definition _definition_set','_definition_set',3,'p_definition_set','parsers.py',913),
  ('_definition_set -> empty','_definition_set',1,'p_definition_set2','parsers.py',921),
  ('definition -> nametype_decl','definition',1,'p_definition','parsers.py',927),
  ('definition -> valuedef','definition',1,'p_definition','parsers.py',928),
  ('definition -> datatype_definition','definition',1,'p_definition','parsers.py',929),
  ('valuedef -> equation','valuedef',1,'p_valuedef','parsers.py',935),
  ('nametype_decl -> _identifier COLON COLON st_type_expr','nametype_decl',4,'p_nametype_decl','parsers.py',941),
  ('datatype_definition -> _datatype_lhs EQ _data_rhs','datatype_definition',3,'p_datatype_definition','parsers.py',950),
  ('_datatype_lhs -> KEYWORD_DATA SPACE UPPER_IDENTIFIER _cons_params','_datatype_lhs',4,'p_datatype_lhs','parsers.py',958),
  ('_cons_params -> SPACE LOWER_IDENTIFIER _cons_params','_cons_params',3,'p_datatype_cons_params','parsers.py',967),
  ('_cons_params -> empty','_cons_params',1,'p_datatype_cons_params_empty','parsers.py',976),
  ('_data_rhs -> data_cons _data_conses','_data_rhs',2,'p_datatype_body','parsers.py',982),
  ('_data_conses -> _maybe_padding PIPE data_cons _data_conses','_data_conses',4,'p_datatype_body','parsers.py',983),
  ('_data_conses -> empty','_data_conses',1,'p_datatype_conses_empty','parsers.py',992),
  ('data_cons -> _data_cons','data_cons',1,'p_data_cons','parsers.py',997),
  ('_data_cons -> UPPER_IDENTIFIER _cons_args','_data_cons',2,'p_bare_data_cons','parsers.py',1003),
  ('_cons_args -> SPACE cons_arg _cons_args','_cons_args',3,'p_data_cons_args','parsers.py',1008),
  ('_cons_args -> empty','_cons_args',1,'p_data_cons_args_empty','parsers.py',1017),
  ('cons_arg -> type_variable','cons_arg',1,'p_cons_arg','parsers.py',1023),
  ('cons_arg -> type_cons','cons_arg',1,'p_cons_arg','parsers.py',1024),
  ('cons_arg -> _cons_arg_factor','cons_arg',1,'p_cons_arg','parsers.py',1025),
  ('_cons_arg_factor -> LPAREN type_expr RPAREN','_cons_arg_factor',3,'p_cons_arg_factor','parsers.py',1031),
  ('_cons_arg_factor -> LBRACKET type_expr RBRACKET','_cons_arg_factor',3,'p_cons_arg_factor_list','parsers.py',1037),
]
